name: .NET Build

# Trigger the workflow on push or pull request
on:
  push:
    branches: ["master"]
    paths:
      - "**.cs"
      - "**.csproj"
      - "**.axaml"
      - "**.cpp"
      - "**.h"
      - "**.hpp"
      - ".github/workflows/dotnet.yaml"
      - "CMakeLists.txt"
      - "**.cmake"
      - "OpenSteamworks.Native.nativeproj"
      - "nuget.config"
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Download repo and submodules
      run: | 
        git submodule update --init --recursive
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Install build dependencies
      run: | 
        sudo apt-get update
        sudo apt-get install -y gcc-multilib g++-multilib gcc-aarch64-linux-gnu

    # This is terrible, but until GH updates their runners to ubuntu 23.04 this is the terribleness we need to do
    # Or we could self-host, but I don't have dedicated hardware for it (read: my PC is not available 24/7)
    - name: Install unsupported build dependencies from lunar repoes
      run: |
        sudo sh -c "echo 'deb http://azure.archive.ubuntu.com/ubuntu lunar main restricted universe multiverse' >> /etc/apt/sources.list.d/lunar-packages.list"
        echo "content of /etc/apt/sources.list.d/lunar-packages.list"
        cat /etc/apt/sources.list.d/lunar-packages.list
        echo "end of contents"
        sudo apt-get update
        sudo apt-get install -t "lunar*" -y gcc-mingw-w64-i686-posix g++-mingw-w64-i686-posix g++-mingw-w64-x86-64-posix gcc-mingw-w64-x86-64-posix

    - name: Build and pack release
      run: dotnet pack -c Release

    - name: Set version env
      run: echo "BuiltVersion=$(dotnet msbuild -getproperty:Version)" >> $GITHUB_ENV

    - name: Add .nupkg as artifact
      uses: actions/upload-artifact@v4
      with:
        name: Nuget .nupkg
        path: ${{ github.workspace }}/artifacts/package/release/OpenSteamworks.Native.${{ env.BuiltVersion }}.nupkg

    - name: Upload to nuget repo
      run: |
        git config --global user.name "Github Actions Bot"
        git config --global user.email "<>"
        git config --global credential.helper cache
        git clone https://${{secrets.ACCESS_TOKEN}}@github.com/OpenSteamClient/nuget
        mkdir -p nuget/flatcontainer/opensteamworks.native/${{ env.BuiltVersion }}
        cp ${{ github.workspace }}/artifacts/package/release/OpenSteamworks.Native.${{ env.BuiltVersion }}.nupkg nuget/flatcontainer/opensteamworks.native/${{ env.BuiltVersion }}/opensteamworks.native.${{ env.BuiltVersion }}.nupkg -f
        cd nuget
        cd updatetool
        node index.js OpenSteamworks.Native ${{ env.BuiltVersion }}
        cd ..
        git add flatcontainer/opensteamworks.native/index.json
        git add flatcontainer/opensteamworks.native/${{ env.BuiltVersion }}/opensteamworks.native.${{ env.BuiltVersion }}.nupkg
        git commit -m "$(date)"
        git push

    
