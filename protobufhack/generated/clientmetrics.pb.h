// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: clientmetrics.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_clientmetrics_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_clientmetrics_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_clientmetrics_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_clientmetrics_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_clientmetrics_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_clientmetrics_2eproto_metadata_getter(int index);
class CClientMetrics_ClientBootstrap_RequestInfo;
struct CClientMetrics_ClientBootstrap_RequestInfoDefaultTypeInternal;
extern CClientMetrics_ClientBootstrap_RequestInfoDefaultTypeInternal _CClientMetrics_ClientBootstrap_RequestInfo_default_instance_;
class CClientMetrics_ClientBootstrap_Summary;
struct CClientMetrics_ClientBootstrap_SummaryDefaultTypeInternal;
extern CClientMetrics_ClientBootstrap_SummaryDefaultTypeInternal _CClientMetrics_ClientBootstrap_Summary_default_instance_;
class CClientMetrics_ContentDownloadResponse_Counts;
struct CClientMetrics_ContentDownloadResponse_CountsDefaultTypeInternal;
extern CClientMetrics_ContentDownloadResponse_CountsDefaultTypeInternal _CClientMetrics_ContentDownloadResponse_Counts_default_instance_;
class CClientMetrics_ContentDownloadResponse_HostCounts;
struct CClientMetrics_ContentDownloadResponse_HostCountsDefaultTypeInternal;
extern CClientMetrics_ContentDownloadResponse_HostCountsDefaultTypeInternal _CClientMetrics_ContentDownloadResponse_HostCounts_default_instance_;
class CClientMetrics_ContentDownloadResponse_Hosts;
struct CClientMetrics_ContentDownloadResponse_HostsDefaultTypeInternal;
extern CClientMetrics_ContentDownloadResponse_HostsDefaultTypeInternal _CClientMetrics_ContentDownloadResponse_Hosts_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CClientMetrics_ClientBootstrap_RequestInfo* Arena::CreateMaybeMessage<::CClientMetrics_ClientBootstrap_RequestInfo>(Arena*);
template<> ::CClientMetrics_ClientBootstrap_Summary* Arena::CreateMaybeMessage<::CClientMetrics_ClientBootstrap_Summary>(Arena*);
template<> ::CClientMetrics_ContentDownloadResponse_Counts* Arena::CreateMaybeMessage<::CClientMetrics_ContentDownloadResponse_Counts>(Arena*);
template<> ::CClientMetrics_ContentDownloadResponse_HostCounts* Arena::CreateMaybeMessage<::CClientMetrics_ContentDownloadResponse_HostCounts>(Arena*);
template<> ::CClientMetrics_ContentDownloadResponse_Hosts* Arena::CreateMaybeMessage<::CClientMetrics_ContentDownloadResponse_Hosts>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class CClientMetrics_ClientBootstrap_RequestInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CClientMetrics_ClientBootstrap_RequestInfo) */ {
 public:
  inline CClientMetrics_ClientBootstrap_RequestInfo() : CClientMetrics_ClientBootstrap_RequestInfo(nullptr) {}
  virtual ~CClientMetrics_ClientBootstrap_RequestInfo();
  explicit constexpr CClientMetrics_ClientBootstrap_RequestInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CClientMetrics_ClientBootstrap_RequestInfo(const CClientMetrics_ClientBootstrap_RequestInfo& from);
  CClientMetrics_ClientBootstrap_RequestInfo(CClientMetrics_ClientBootstrap_RequestInfo&& from) noexcept
    : CClientMetrics_ClientBootstrap_RequestInfo() {
    *this = ::std::move(from);
  }

  inline CClientMetrics_ClientBootstrap_RequestInfo& operator=(const CClientMetrics_ClientBootstrap_RequestInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CClientMetrics_ClientBootstrap_RequestInfo& operator=(CClientMetrics_ClientBootstrap_RequestInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CClientMetrics_ClientBootstrap_RequestInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CClientMetrics_ClientBootstrap_RequestInfo* internal_default_instance() {
    return reinterpret_cast<const CClientMetrics_ClientBootstrap_RequestInfo*>(
               &_CClientMetrics_ClientBootstrap_RequestInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CClientMetrics_ClientBootstrap_RequestInfo& a, CClientMetrics_ClientBootstrap_RequestInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CClientMetrics_ClientBootstrap_RequestInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CClientMetrics_ClientBootstrap_RequestInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CClientMetrics_ClientBootstrap_RequestInfo* New() const final {
    return CreateMaybeMessage<CClientMetrics_ClientBootstrap_RequestInfo>(nullptr);
  }

  CClientMetrics_ClientBootstrap_RequestInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CClientMetrics_ClientBootstrap_RequestInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CClientMetrics_ClientBootstrap_RequestInfo& from);
  void MergeFrom(const CClientMetrics_ClientBootstrap_RequestInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CClientMetrics_ClientBootstrap_RequestInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CClientMetrics_ClientBootstrap_RequestInfo";
  }
  protected:
  explicit CClientMetrics_ClientBootstrap_RequestInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_clientmetrics_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOriginalHostnameFieldNumber = 1,
    kActualHostnameFieldNumber = 2,
    kPathFieldNumber = 3,
    kBaseNameFieldNumber = 4,
    kAddressOfRequestUrlFieldNumber = 7,
    kSuccessFieldNumber = 5,
    kStatusCodeFieldNumber = 6,
    kBytesReceivedFieldNumber = 9,
    kResponseTimeMsFieldNumber = 8,
    kNumRetriesFieldNumber = 10,
  };
  // optional string original_hostname = 1;
  bool has_original_hostname() const;
  private:
  bool _internal_has_original_hostname() const;
  public:
  void clear_original_hostname();
  const std::string& original_hostname() const;
  void set_original_hostname(const std::string& value);
  void set_original_hostname(std::string&& value);
  void set_original_hostname(const char* value);
  void set_original_hostname(const char* value, size_t size);
  std::string* mutable_original_hostname();
  std::string* release_original_hostname();
  void set_allocated_original_hostname(std::string* original_hostname);
  private:
  const std::string& _internal_original_hostname() const;
  void _internal_set_original_hostname(const std::string& value);
  std::string* _internal_mutable_original_hostname();
  public:

  // optional string actual_hostname = 2;
  bool has_actual_hostname() const;
  private:
  bool _internal_has_actual_hostname() const;
  public:
  void clear_actual_hostname();
  const std::string& actual_hostname() const;
  void set_actual_hostname(const std::string& value);
  void set_actual_hostname(std::string&& value);
  void set_actual_hostname(const char* value);
  void set_actual_hostname(const char* value, size_t size);
  std::string* mutable_actual_hostname();
  std::string* release_actual_hostname();
  void set_allocated_actual_hostname(std::string* actual_hostname);
  private:
  const std::string& _internal_actual_hostname() const;
  void _internal_set_actual_hostname(const std::string& value);
  std::string* _internal_mutable_actual_hostname();
  public:

  // optional string path = 3;
  bool has_path() const;
  private:
  bool _internal_has_path() const;
  public:
  void clear_path();
  const std::string& path() const;
  void set_path(const std::string& value);
  void set_path(std::string&& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  std::string* mutable_path();
  std::string* release_path();
  void set_allocated_path(std::string* path);
  private:
  const std::string& _internal_path() const;
  void _internal_set_path(const std::string& value);
  std::string* _internal_mutable_path();
  public:

  // optional string base_name = 4;
  bool has_base_name() const;
  private:
  bool _internal_has_base_name() const;
  public:
  void clear_base_name();
  const std::string& base_name() const;
  void set_base_name(const std::string& value);
  void set_base_name(std::string&& value);
  void set_base_name(const char* value);
  void set_base_name(const char* value, size_t size);
  std::string* mutable_base_name();
  std::string* release_base_name();
  void set_allocated_base_name(std::string* base_name);
  private:
  const std::string& _internal_base_name() const;
  void _internal_set_base_name(const std::string& value);
  std::string* _internal_mutable_base_name();
  public:

  // optional string address_of_request_url = 7;
  bool has_address_of_request_url() const;
  private:
  bool _internal_has_address_of_request_url() const;
  public:
  void clear_address_of_request_url();
  const std::string& address_of_request_url() const;
  void set_address_of_request_url(const std::string& value);
  void set_address_of_request_url(std::string&& value);
  void set_address_of_request_url(const char* value);
  void set_address_of_request_url(const char* value, size_t size);
  std::string* mutable_address_of_request_url();
  std::string* release_address_of_request_url();
  void set_allocated_address_of_request_url(std::string* address_of_request_url);
  private:
  const std::string& _internal_address_of_request_url() const;
  void _internal_set_address_of_request_url(const std::string& value);
  std::string* _internal_mutable_address_of_request_url();
  public:

  // optional bool success = 5;
  bool has_success() const;
  private:
  bool _internal_has_success() const;
  public:
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // optional uint32 status_code = 6;
  bool has_status_code() const;
  private:
  bool _internal_has_status_code() const;
  public:
  void clear_status_code();
  ::PROTOBUF_NAMESPACE_ID::uint32 status_code() const;
  void set_status_code(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_status_code() const;
  void _internal_set_status_code(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 bytes_received = 9;
  bool has_bytes_received() const;
  private:
  bool _internal_has_bytes_received() const;
  public:
  void clear_bytes_received();
  ::PROTOBUF_NAMESPACE_ID::uint64 bytes_received() const;
  void set_bytes_received(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_bytes_received() const;
  void _internal_set_bytes_received(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 response_time_ms = 8;
  bool has_response_time_ms() const;
  private:
  bool _internal_has_response_time_ms() const;
  public:
  void clear_response_time_ms();
  ::PROTOBUF_NAMESPACE_ID::uint32 response_time_ms() const;
  void set_response_time_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_response_time_ms() const;
  void _internal_set_response_time_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 num_retries = 10;
  bool has_num_retries() const;
  private:
  bool _internal_has_num_retries() const;
  public:
  void clear_num_retries();
  ::PROTOBUF_NAMESPACE_ID::uint32 num_retries() const;
  void set_num_retries(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num_retries() const;
  void _internal_set_num_retries(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CClientMetrics_ClientBootstrap_RequestInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr original_hostname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr actual_hostname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr path_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr base_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr address_of_request_url_;
  bool success_;
  ::PROTOBUF_NAMESPACE_ID::uint32 status_code_;
  ::PROTOBUF_NAMESPACE_ID::uint64 bytes_received_;
  ::PROTOBUF_NAMESPACE_ID::uint32 response_time_ms_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_retries_;
  friend struct ::TableStruct_clientmetrics_2eproto;
};
// -------------------------------------------------------------------

class CClientMetrics_ClientBootstrap_Summary PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CClientMetrics_ClientBootstrap_Summary) */ {
 public:
  inline CClientMetrics_ClientBootstrap_Summary() : CClientMetrics_ClientBootstrap_Summary(nullptr) {}
  virtual ~CClientMetrics_ClientBootstrap_Summary();
  explicit constexpr CClientMetrics_ClientBootstrap_Summary(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CClientMetrics_ClientBootstrap_Summary(const CClientMetrics_ClientBootstrap_Summary& from);
  CClientMetrics_ClientBootstrap_Summary(CClientMetrics_ClientBootstrap_Summary&& from) noexcept
    : CClientMetrics_ClientBootstrap_Summary() {
    *this = ::std::move(from);
  }

  inline CClientMetrics_ClientBootstrap_Summary& operator=(const CClientMetrics_ClientBootstrap_Summary& from) {
    CopyFrom(from);
    return *this;
  }
  inline CClientMetrics_ClientBootstrap_Summary& operator=(CClientMetrics_ClientBootstrap_Summary&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CClientMetrics_ClientBootstrap_Summary& default_instance() {
    return *internal_default_instance();
  }
  static inline const CClientMetrics_ClientBootstrap_Summary* internal_default_instance() {
    return reinterpret_cast<const CClientMetrics_ClientBootstrap_Summary*>(
               &_CClientMetrics_ClientBootstrap_Summary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CClientMetrics_ClientBootstrap_Summary& a, CClientMetrics_ClientBootstrap_Summary& b) {
    a.Swap(&b);
  }
  inline void Swap(CClientMetrics_ClientBootstrap_Summary* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CClientMetrics_ClientBootstrap_Summary* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CClientMetrics_ClientBootstrap_Summary* New() const final {
    return CreateMaybeMessage<CClientMetrics_ClientBootstrap_Summary>(nullptr);
  }

  CClientMetrics_ClientBootstrap_Summary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CClientMetrics_ClientBootstrap_Summary>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CClientMetrics_ClientBootstrap_Summary& from);
  void MergeFrom(const CClientMetrics_ClientBootstrap_Summary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CClientMetrics_ClientBootstrap_Summary* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CClientMetrics_ClientBootstrap_Summary";
  }
  protected:
  explicit CClientMetrics_ClientBootstrap_Summary(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_clientmetrics_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kManifestRequestsFieldNumber = 7,
    kPackageRequestsFieldNumber = 8,
    kBetaNameFieldNumber = 3,
    kLauncherTypeFieldNumber = 1,
    kSteamRealmFieldNumber = 2,
    kDownloadCompletedFieldNumber = 4,
    kTotalTimeMsFieldNumber = 6,
  };
  // repeated .CClientMetrics_ClientBootstrap_RequestInfo manifest_requests = 7;
  int manifest_requests_size() const;
  private:
  int _internal_manifest_requests_size() const;
  public:
  void clear_manifest_requests();
  ::CClientMetrics_ClientBootstrap_RequestInfo* mutable_manifest_requests(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CClientMetrics_ClientBootstrap_RequestInfo >*
      mutable_manifest_requests();
  private:
  const ::CClientMetrics_ClientBootstrap_RequestInfo& _internal_manifest_requests(int index) const;
  ::CClientMetrics_ClientBootstrap_RequestInfo* _internal_add_manifest_requests();
  public:
  const ::CClientMetrics_ClientBootstrap_RequestInfo& manifest_requests(int index) const;
  ::CClientMetrics_ClientBootstrap_RequestInfo* add_manifest_requests();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CClientMetrics_ClientBootstrap_RequestInfo >&
      manifest_requests() const;

  // repeated .CClientMetrics_ClientBootstrap_RequestInfo package_requests = 8;
  int package_requests_size() const;
  private:
  int _internal_package_requests_size() const;
  public:
  void clear_package_requests();
  ::CClientMetrics_ClientBootstrap_RequestInfo* mutable_package_requests(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CClientMetrics_ClientBootstrap_RequestInfo >*
      mutable_package_requests();
  private:
  const ::CClientMetrics_ClientBootstrap_RequestInfo& _internal_package_requests(int index) const;
  ::CClientMetrics_ClientBootstrap_RequestInfo* _internal_add_package_requests();
  public:
  const ::CClientMetrics_ClientBootstrap_RequestInfo& package_requests(int index) const;
  ::CClientMetrics_ClientBootstrap_RequestInfo* add_package_requests();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CClientMetrics_ClientBootstrap_RequestInfo >&
      package_requests() const;

  // optional string beta_name = 3;
  bool has_beta_name() const;
  private:
  bool _internal_has_beta_name() const;
  public:
  void clear_beta_name();
  const std::string& beta_name() const;
  void set_beta_name(const std::string& value);
  void set_beta_name(std::string&& value);
  void set_beta_name(const char* value);
  void set_beta_name(const char* value, size_t size);
  std::string* mutable_beta_name();
  std::string* release_beta_name();
  void set_allocated_beta_name(std::string* beta_name);
  private:
  const std::string& _internal_beta_name() const;
  void _internal_set_beta_name(const std::string& value);
  std::string* _internal_mutable_beta_name();
  public:

  // optional uint32 launcher_type = 1;
  bool has_launcher_type() const;
  private:
  bool _internal_has_launcher_type() const;
  public:
  void clear_launcher_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 launcher_type() const;
  void set_launcher_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_launcher_type() const;
  void _internal_set_launcher_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 steam_realm = 2;
  bool has_steam_realm() const;
  private:
  bool _internal_has_steam_realm() const;
  public:
  void clear_steam_realm();
  ::PROTOBUF_NAMESPACE_ID::uint32 steam_realm() const;
  void set_steam_realm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_steam_realm() const;
  void _internal_set_steam_realm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool download_completed = 4;
  bool has_download_completed() const;
  private:
  bool _internal_has_download_completed() const;
  public:
  void clear_download_completed();
  bool download_completed() const;
  void set_download_completed(bool value);
  private:
  bool _internal_download_completed() const;
  void _internal_set_download_completed(bool value);
  public:

  // optional uint32 total_time_ms = 6;
  bool has_total_time_ms() const;
  private:
  bool _internal_has_total_time_ms() const;
  public:
  void clear_total_time_ms();
  ::PROTOBUF_NAMESPACE_ID::uint32 total_time_ms() const;
  void set_total_time_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_time_ms() const;
  void _internal_set_total_time_ms(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CClientMetrics_ClientBootstrap_Summary)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CClientMetrics_ClientBootstrap_RequestInfo > manifest_requests_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CClientMetrics_ClientBootstrap_RequestInfo > package_requests_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr beta_name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 launcher_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 steam_realm_;
  bool download_completed_;
  ::PROTOBUF_NAMESPACE_ID::uint32 total_time_ms_;
  friend struct ::TableStruct_clientmetrics_2eproto;
};
// -------------------------------------------------------------------

class CClientMetrics_ContentDownloadResponse_Counts PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CClientMetrics_ContentDownloadResponse_Counts) */ {
 public:
  inline CClientMetrics_ContentDownloadResponse_Counts() : CClientMetrics_ContentDownloadResponse_Counts(nullptr) {}
  virtual ~CClientMetrics_ContentDownloadResponse_Counts();
  explicit constexpr CClientMetrics_ContentDownloadResponse_Counts(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CClientMetrics_ContentDownloadResponse_Counts(const CClientMetrics_ContentDownloadResponse_Counts& from);
  CClientMetrics_ContentDownloadResponse_Counts(CClientMetrics_ContentDownloadResponse_Counts&& from) noexcept
    : CClientMetrics_ContentDownloadResponse_Counts() {
    *this = ::std::move(from);
  }

  inline CClientMetrics_ContentDownloadResponse_Counts& operator=(const CClientMetrics_ContentDownloadResponse_Counts& from) {
    CopyFrom(from);
    return *this;
  }
  inline CClientMetrics_ContentDownloadResponse_Counts& operator=(CClientMetrics_ContentDownloadResponse_Counts&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CClientMetrics_ContentDownloadResponse_Counts& default_instance() {
    return *internal_default_instance();
  }
  static inline const CClientMetrics_ContentDownloadResponse_Counts* internal_default_instance() {
    return reinterpret_cast<const CClientMetrics_ContentDownloadResponse_Counts*>(
               &_CClientMetrics_ContentDownloadResponse_Counts_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CClientMetrics_ContentDownloadResponse_Counts& a, CClientMetrics_ContentDownloadResponse_Counts& b) {
    a.Swap(&b);
  }
  inline void Swap(CClientMetrics_ContentDownloadResponse_Counts* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CClientMetrics_ContentDownloadResponse_Counts* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CClientMetrics_ContentDownloadResponse_Counts* New() const final {
    return CreateMaybeMessage<CClientMetrics_ContentDownloadResponse_Counts>(nullptr);
  }

  CClientMetrics_ContentDownloadResponse_Counts* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CClientMetrics_ContentDownloadResponse_Counts>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CClientMetrics_ContentDownloadResponse_Counts& from);
  void MergeFrom(const CClientMetrics_ContentDownloadResponse_Counts& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CClientMetrics_ContentDownloadResponse_Counts* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CClientMetrics_ContentDownloadResponse_Counts";
  }
  protected:
  explicit CClientMetrics_ContentDownloadResponse_Counts(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_clientmetrics_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClass100FieldNumber = 1,
    kClass200FieldNumber = 2,
    kClass300FieldNumber = 3,
    kClass400FieldNumber = 4,
    kClass500FieldNumber = 5,
    kNoResponseFieldNumber = 6,
    kClassUnknownFieldNumber = 7,
  };
  // optional uint32 class_100 = 1;
  bool has_class_100() const;
  private:
  bool _internal_has_class_100() const;
  public:
  void clear_class_100();
  ::PROTOBUF_NAMESPACE_ID::uint32 class_100() const;
  void set_class_100(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_class_100() const;
  void _internal_set_class_100(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 class_200 = 2;
  bool has_class_200() const;
  private:
  bool _internal_has_class_200() const;
  public:
  void clear_class_200();
  ::PROTOBUF_NAMESPACE_ID::uint32 class_200() const;
  void set_class_200(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_class_200() const;
  void _internal_set_class_200(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 class_300 = 3;
  bool has_class_300() const;
  private:
  bool _internal_has_class_300() const;
  public:
  void clear_class_300();
  ::PROTOBUF_NAMESPACE_ID::uint32 class_300() const;
  void set_class_300(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_class_300() const;
  void _internal_set_class_300(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 class_400 = 4;
  bool has_class_400() const;
  private:
  bool _internal_has_class_400() const;
  public:
  void clear_class_400();
  ::PROTOBUF_NAMESPACE_ID::uint32 class_400() const;
  void set_class_400(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_class_400() const;
  void _internal_set_class_400(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 class_500 = 5;
  bool has_class_500() const;
  private:
  bool _internal_has_class_500() const;
  public:
  void clear_class_500();
  ::PROTOBUF_NAMESPACE_ID::uint32 class_500() const;
  void set_class_500(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_class_500() const;
  void _internal_set_class_500(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 no_response = 6;
  bool has_no_response() const;
  private:
  bool _internal_has_no_response() const;
  public:
  void clear_no_response();
  ::PROTOBUF_NAMESPACE_ID::uint32 no_response() const;
  void set_no_response(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_no_response() const;
  void _internal_set_no_response(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 class_unknown = 7;
  bool has_class_unknown() const;
  private:
  bool _internal_has_class_unknown() const;
  public:
  void clear_class_unknown();
  ::PROTOBUF_NAMESPACE_ID::uint32 class_unknown() const;
  void set_class_unknown(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_class_unknown() const;
  void _internal_set_class_unknown(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CClientMetrics_ContentDownloadResponse_Counts)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 class_100_;
  ::PROTOBUF_NAMESPACE_ID::uint32 class_200_;
  ::PROTOBUF_NAMESPACE_ID::uint32 class_300_;
  ::PROTOBUF_NAMESPACE_ID::uint32 class_400_;
  ::PROTOBUF_NAMESPACE_ID::uint32 class_500_;
  ::PROTOBUF_NAMESPACE_ID::uint32 no_response_;
  ::PROTOBUF_NAMESPACE_ID::uint32 class_unknown_;
  friend struct ::TableStruct_clientmetrics_2eproto;
};
// -------------------------------------------------------------------

class CClientMetrics_ContentDownloadResponse_HostCounts PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CClientMetrics_ContentDownloadResponse_HostCounts) */ {
 public:
  inline CClientMetrics_ContentDownloadResponse_HostCounts() : CClientMetrics_ContentDownloadResponse_HostCounts(nullptr) {}
  virtual ~CClientMetrics_ContentDownloadResponse_HostCounts();
  explicit constexpr CClientMetrics_ContentDownloadResponse_HostCounts(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CClientMetrics_ContentDownloadResponse_HostCounts(const CClientMetrics_ContentDownloadResponse_HostCounts& from);
  CClientMetrics_ContentDownloadResponse_HostCounts(CClientMetrics_ContentDownloadResponse_HostCounts&& from) noexcept
    : CClientMetrics_ContentDownloadResponse_HostCounts() {
    *this = ::std::move(from);
  }

  inline CClientMetrics_ContentDownloadResponse_HostCounts& operator=(const CClientMetrics_ContentDownloadResponse_HostCounts& from) {
    CopyFrom(from);
    return *this;
  }
  inline CClientMetrics_ContentDownloadResponse_HostCounts& operator=(CClientMetrics_ContentDownloadResponse_HostCounts&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CClientMetrics_ContentDownloadResponse_HostCounts& default_instance() {
    return *internal_default_instance();
  }
  static inline const CClientMetrics_ContentDownloadResponse_HostCounts* internal_default_instance() {
    return reinterpret_cast<const CClientMetrics_ContentDownloadResponse_HostCounts*>(
               &_CClientMetrics_ContentDownloadResponse_HostCounts_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CClientMetrics_ContentDownloadResponse_HostCounts& a, CClientMetrics_ContentDownloadResponse_HostCounts& b) {
    a.Swap(&b);
  }
  inline void Swap(CClientMetrics_ContentDownloadResponse_HostCounts* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CClientMetrics_ContentDownloadResponse_HostCounts* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CClientMetrics_ContentDownloadResponse_HostCounts* New() const final {
    return CreateMaybeMessage<CClientMetrics_ContentDownloadResponse_HostCounts>(nullptr);
  }

  CClientMetrics_ContentDownloadResponse_HostCounts* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CClientMetrics_ContentDownloadResponse_HostCounts>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CClientMetrics_ContentDownloadResponse_HostCounts& from);
  void MergeFrom(const CClientMetrics_ContentDownloadResponse_HostCounts& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CClientMetrics_ContentDownloadResponse_HostCounts* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CClientMetrics_ContentDownloadResponse_HostCounts";
  }
  protected:
  explicit CClientMetrics_ContentDownloadResponse_HostCounts(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_clientmetrics_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHostnameFieldNumber = 1,
    kCountsFieldNumber = 3,
    kSourceTypeFieldNumber = 2,
  };
  // optional string hostname = 1;
  bool has_hostname() const;
  private:
  bool _internal_has_hostname() const;
  public:
  void clear_hostname();
  const std::string& hostname() const;
  void set_hostname(const std::string& value);
  void set_hostname(std::string&& value);
  void set_hostname(const char* value);
  void set_hostname(const char* value, size_t size);
  std::string* mutable_hostname();
  std::string* release_hostname();
  void set_allocated_hostname(std::string* hostname);
  private:
  const std::string& _internal_hostname() const;
  void _internal_set_hostname(const std::string& value);
  std::string* _internal_mutable_hostname();
  public:

  // optional .CClientMetrics_ContentDownloadResponse_Counts counts = 3;
  bool has_counts() const;
  private:
  bool _internal_has_counts() const;
  public:
  void clear_counts();
  const ::CClientMetrics_ContentDownloadResponse_Counts& counts() const;
  ::CClientMetrics_ContentDownloadResponse_Counts* release_counts();
  ::CClientMetrics_ContentDownloadResponse_Counts* mutable_counts();
  void set_allocated_counts(::CClientMetrics_ContentDownloadResponse_Counts* counts);
  private:
  const ::CClientMetrics_ContentDownloadResponse_Counts& _internal_counts() const;
  ::CClientMetrics_ContentDownloadResponse_Counts* _internal_mutable_counts();
  public:
  void unsafe_arena_set_allocated_counts(
      ::CClientMetrics_ContentDownloadResponse_Counts* counts);
  ::CClientMetrics_ContentDownloadResponse_Counts* unsafe_arena_release_counts();

  // optional uint32 source_type = 2;
  bool has_source_type() const;
  private:
  bool _internal_has_source_type() const;
  public:
  void clear_source_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 source_type() const;
  void set_source_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_source_type() const;
  void _internal_set_source_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CClientMetrics_ContentDownloadResponse_HostCounts)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hostname_;
  ::CClientMetrics_ContentDownloadResponse_Counts* counts_;
  ::PROTOBUF_NAMESPACE_ID::uint32 source_type_;
  friend struct ::TableStruct_clientmetrics_2eproto;
};
// -------------------------------------------------------------------

class CClientMetrics_ContentDownloadResponse_Hosts PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CClientMetrics_ContentDownloadResponse_Hosts) */ {
 public:
  inline CClientMetrics_ContentDownloadResponse_Hosts() : CClientMetrics_ContentDownloadResponse_Hosts(nullptr) {}
  virtual ~CClientMetrics_ContentDownloadResponse_Hosts();
  explicit constexpr CClientMetrics_ContentDownloadResponse_Hosts(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CClientMetrics_ContentDownloadResponse_Hosts(const CClientMetrics_ContentDownloadResponse_Hosts& from);
  CClientMetrics_ContentDownloadResponse_Hosts(CClientMetrics_ContentDownloadResponse_Hosts&& from) noexcept
    : CClientMetrics_ContentDownloadResponse_Hosts() {
    *this = ::std::move(from);
  }

  inline CClientMetrics_ContentDownloadResponse_Hosts& operator=(const CClientMetrics_ContentDownloadResponse_Hosts& from) {
    CopyFrom(from);
    return *this;
  }
  inline CClientMetrics_ContentDownloadResponse_Hosts& operator=(CClientMetrics_ContentDownloadResponse_Hosts&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CClientMetrics_ContentDownloadResponse_Hosts& default_instance() {
    return *internal_default_instance();
  }
  static inline const CClientMetrics_ContentDownloadResponse_Hosts* internal_default_instance() {
    return reinterpret_cast<const CClientMetrics_ContentDownloadResponse_Hosts*>(
               &_CClientMetrics_ContentDownloadResponse_Hosts_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CClientMetrics_ContentDownloadResponse_Hosts& a, CClientMetrics_ContentDownloadResponse_Hosts& b) {
    a.Swap(&b);
  }
  inline void Swap(CClientMetrics_ContentDownloadResponse_Hosts* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CClientMetrics_ContentDownloadResponse_Hosts* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CClientMetrics_ContentDownloadResponse_Hosts* New() const final {
    return CreateMaybeMessage<CClientMetrics_ContentDownloadResponse_Hosts>(nullptr);
  }

  CClientMetrics_ContentDownloadResponse_Hosts* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CClientMetrics_ContentDownloadResponse_Hosts>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CClientMetrics_ContentDownloadResponse_Hosts& from);
  void MergeFrom(const CClientMetrics_ContentDownloadResponse_Hosts& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CClientMetrics_ContentDownloadResponse_Hosts* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CClientMetrics_ContentDownloadResponse_Hosts";
  }
  protected:
  explicit CClientMetrics_ContentDownloadResponse_Hosts(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_clientmetrics_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHostsFieldNumber = 1,
  };
  // repeated .CClientMetrics_ContentDownloadResponse_HostCounts hosts = 1;
  int hosts_size() const;
  private:
  int _internal_hosts_size() const;
  public:
  void clear_hosts();
  ::CClientMetrics_ContentDownloadResponse_HostCounts* mutable_hosts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CClientMetrics_ContentDownloadResponse_HostCounts >*
      mutable_hosts();
  private:
  const ::CClientMetrics_ContentDownloadResponse_HostCounts& _internal_hosts(int index) const;
  ::CClientMetrics_ContentDownloadResponse_HostCounts* _internal_add_hosts();
  public:
  const ::CClientMetrics_ContentDownloadResponse_HostCounts& hosts(int index) const;
  ::CClientMetrics_ContentDownloadResponse_HostCounts* add_hosts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CClientMetrics_ContentDownloadResponse_HostCounts >&
      hosts() const;

  // @@protoc_insertion_point(class_scope:CClientMetrics_ContentDownloadResponse_Hosts)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CClientMetrics_ContentDownloadResponse_HostCounts > hosts_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_clientmetrics_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CClientMetrics_ClientBootstrap_RequestInfo

// optional string original_hostname = 1;
inline bool CClientMetrics_ClientBootstrap_RequestInfo::_internal_has_original_hostname() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CClientMetrics_ClientBootstrap_RequestInfo::has_original_hostname() const {
  return _internal_has_original_hostname();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::clear_original_hostname() {
  original_hostname_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CClientMetrics_ClientBootstrap_RequestInfo::original_hostname() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ClientBootstrap_RequestInfo.original_hostname)
  return _internal_original_hostname();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_original_hostname(const std::string& value) {
  _internal_set_original_hostname(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ClientBootstrap_RequestInfo.original_hostname)
}
inline std::string* CClientMetrics_ClientBootstrap_RequestInfo::mutable_original_hostname() {
  // @@protoc_insertion_point(field_mutable:CClientMetrics_ClientBootstrap_RequestInfo.original_hostname)
  return _internal_mutable_original_hostname();
}
inline const std::string& CClientMetrics_ClientBootstrap_RequestInfo::_internal_original_hostname() const {
  return original_hostname_.Get();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::_internal_set_original_hostname(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  original_hostname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_original_hostname(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  original_hostname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CClientMetrics_ClientBootstrap_RequestInfo.original_hostname)
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_original_hostname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  original_hostname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CClientMetrics_ClientBootstrap_RequestInfo.original_hostname)
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_original_hostname(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  original_hostname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CClientMetrics_ClientBootstrap_RequestInfo.original_hostname)
}
inline std::string* CClientMetrics_ClientBootstrap_RequestInfo::_internal_mutable_original_hostname() {
  _has_bits_[0] |= 0x00000001u;
  return original_hostname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CClientMetrics_ClientBootstrap_RequestInfo::release_original_hostname() {
  // @@protoc_insertion_point(field_release:CClientMetrics_ClientBootstrap_RequestInfo.original_hostname)
  if (!_internal_has_original_hostname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return original_hostname_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_allocated_original_hostname(std::string* original_hostname) {
  if (original_hostname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  original_hostname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), original_hostname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CClientMetrics_ClientBootstrap_RequestInfo.original_hostname)
}

// optional string actual_hostname = 2;
inline bool CClientMetrics_ClientBootstrap_RequestInfo::_internal_has_actual_hostname() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CClientMetrics_ClientBootstrap_RequestInfo::has_actual_hostname() const {
  return _internal_has_actual_hostname();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::clear_actual_hostname() {
  actual_hostname_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CClientMetrics_ClientBootstrap_RequestInfo::actual_hostname() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ClientBootstrap_RequestInfo.actual_hostname)
  return _internal_actual_hostname();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_actual_hostname(const std::string& value) {
  _internal_set_actual_hostname(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ClientBootstrap_RequestInfo.actual_hostname)
}
inline std::string* CClientMetrics_ClientBootstrap_RequestInfo::mutable_actual_hostname() {
  // @@protoc_insertion_point(field_mutable:CClientMetrics_ClientBootstrap_RequestInfo.actual_hostname)
  return _internal_mutable_actual_hostname();
}
inline const std::string& CClientMetrics_ClientBootstrap_RequestInfo::_internal_actual_hostname() const {
  return actual_hostname_.Get();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::_internal_set_actual_hostname(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  actual_hostname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_actual_hostname(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  actual_hostname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CClientMetrics_ClientBootstrap_RequestInfo.actual_hostname)
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_actual_hostname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  actual_hostname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CClientMetrics_ClientBootstrap_RequestInfo.actual_hostname)
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_actual_hostname(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  actual_hostname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CClientMetrics_ClientBootstrap_RequestInfo.actual_hostname)
}
inline std::string* CClientMetrics_ClientBootstrap_RequestInfo::_internal_mutable_actual_hostname() {
  _has_bits_[0] |= 0x00000002u;
  return actual_hostname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CClientMetrics_ClientBootstrap_RequestInfo::release_actual_hostname() {
  // @@protoc_insertion_point(field_release:CClientMetrics_ClientBootstrap_RequestInfo.actual_hostname)
  if (!_internal_has_actual_hostname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return actual_hostname_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_allocated_actual_hostname(std::string* actual_hostname) {
  if (actual_hostname != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  actual_hostname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), actual_hostname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CClientMetrics_ClientBootstrap_RequestInfo.actual_hostname)
}

// optional string path = 3;
inline bool CClientMetrics_ClientBootstrap_RequestInfo::_internal_has_path() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CClientMetrics_ClientBootstrap_RequestInfo::has_path() const {
  return _internal_has_path();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::clear_path() {
  path_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CClientMetrics_ClientBootstrap_RequestInfo::path() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ClientBootstrap_RequestInfo.path)
  return _internal_path();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_path(const std::string& value) {
  _internal_set_path(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ClientBootstrap_RequestInfo.path)
}
inline std::string* CClientMetrics_ClientBootstrap_RequestInfo::mutable_path() {
  // @@protoc_insertion_point(field_mutable:CClientMetrics_ClientBootstrap_RequestInfo.path)
  return _internal_mutable_path();
}
inline const std::string& CClientMetrics_ClientBootstrap_RequestInfo::_internal_path() const {
  return path_.Get();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::_internal_set_path(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_path(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  path_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CClientMetrics_ClientBootstrap_RequestInfo.path)
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CClientMetrics_ClientBootstrap_RequestInfo.path)
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_path(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CClientMetrics_ClientBootstrap_RequestInfo.path)
}
inline std::string* CClientMetrics_ClientBootstrap_RequestInfo::_internal_mutable_path() {
  _has_bits_[0] |= 0x00000004u;
  return path_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CClientMetrics_ClientBootstrap_RequestInfo::release_path() {
  // @@protoc_insertion_point(field_release:CClientMetrics_ClientBootstrap_RequestInfo.path)
  if (!_internal_has_path()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return path_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_allocated_path(std::string* path) {
  if (path != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  path_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), path,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CClientMetrics_ClientBootstrap_RequestInfo.path)
}

// optional string base_name = 4;
inline bool CClientMetrics_ClientBootstrap_RequestInfo::_internal_has_base_name() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CClientMetrics_ClientBootstrap_RequestInfo::has_base_name() const {
  return _internal_has_base_name();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::clear_base_name() {
  base_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CClientMetrics_ClientBootstrap_RequestInfo::base_name() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ClientBootstrap_RequestInfo.base_name)
  return _internal_base_name();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_base_name(const std::string& value) {
  _internal_set_base_name(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ClientBootstrap_RequestInfo.base_name)
}
inline std::string* CClientMetrics_ClientBootstrap_RequestInfo::mutable_base_name() {
  // @@protoc_insertion_point(field_mutable:CClientMetrics_ClientBootstrap_RequestInfo.base_name)
  return _internal_mutable_base_name();
}
inline const std::string& CClientMetrics_ClientBootstrap_RequestInfo::_internal_base_name() const {
  return base_name_.Get();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::_internal_set_base_name(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  base_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_base_name(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  base_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CClientMetrics_ClientBootstrap_RequestInfo.base_name)
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_base_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  base_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CClientMetrics_ClientBootstrap_RequestInfo.base_name)
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_base_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  base_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CClientMetrics_ClientBootstrap_RequestInfo.base_name)
}
inline std::string* CClientMetrics_ClientBootstrap_RequestInfo::_internal_mutable_base_name() {
  _has_bits_[0] |= 0x00000008u;
  return base_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CClientMetrics_ClientBootstrap_RequestInfo::release_base_name() {
  // @@protoc_insertion_point(field_release:CClientMetrics_ClientBootstrap_RequestInfo.base_name)
  if (!_internal_has_base_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return base_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_allocated_base_name(std::string* base_name) {
  if (base_name != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  base_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), base_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CClientMetrics_ClientBootstrap_RequestInfo.base_name)
}

// optional bool success = 5;
inline bool CClientMetrics_ClientBootstrap_RequestInfo::_internal_has_success() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CClientMetrics_ClientBootstrap_RequestInfo::has_success() const {
  return _internal_has_success();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::clear_success() {
  success_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CClientMetrics_ClientBootstrap_RequestInfo::_internal_success() const {
  return success_;
}
inline bool CClientMetrics_ClientBootstrap_RequestInfo::success() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ClientBootstrap_RequestInfo.success)
  return _internal_success();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::_internal_set_success(bool value) {
  _has_bits_[0] |= 0x00000020u;
  success_ = value;
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ClientBootstrap_RequestInfo.success)
}

// optional uint32 status_code = 6;
inline bool CClientMetrics_ClientBootstrap_RequestInfo::_internal_has_status_code() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CClientMetrics_ClientBootstrap_RequestInfo::has_status_code() const {
  return _internal_has_status_code();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::clear_status_code() {
  status_code_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ClientBootstrap_RequestInfo::_internal_status_code() const {
  return status_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ClientBootstrap_RequestInfo::status_code() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ClientBootstrap_RequestInfo.status_code)
  return _internal_status_code();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::_internal_set_status_code(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  status_code_ = value;
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_status_code(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_status_code(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ClientBootstrap_RequestInfo.status_code)
}

// optional string address_of_request_url = 7;
inline bool CClientMetrics_ClientBootstrap_RequestInfo::_internal_has_address_of_request_url() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CClientMetrics_ClientBootstrap_RequestInfo::has_address_of_request_url() const {
  return _internal_has_address_of_request_url();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::clear_address_of_request_url() {
  address_of_request_url_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& CClientMetrics_ClientBootstrap_RequestInfo::address_of_request_url() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ClientBootstrap_RequestInfo.address_of_request_url)
  return _internal_address_of_request_url();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_address_of_request_url(const std::string& value) {
  _internal_set_address_of_request_url(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ClientBootstrap_RequestInfo.address_of_request_url)
}
inline std::string* CClientMetrics_ClientBootstrap_RequestInfo::mutable_address_of_request_url() {
  // @@protoc_insertion_point(field_mutable:CClientMetrics_ClientBootstrap_RequestInfo.address_of_request_url)
  return _internal_mutable_address_of_request_url();
}
inline const std::string& CClientMetrics_ClientBootstrap_RequestInfo::_internal_address_of_request_url() const {
  return address_of_request_url_.Get();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::_internal_set_address_of_request_url(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  address_of_request_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_address_of_request_url(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  address_of_request_url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CClientMetrics_ClientBootstrap_RequestInfo.address_of_request_url)
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_address_of_request_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  address_of_request_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CClientMetrics_ClientBootstrap_RequestInfo.address_of_request_url)
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_address_of_request_url(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000010u;
  address_of_request_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CClientMetrics_ClientBootstrap_RequestInfo.address_of_request_url)
}
inline std::string* CClientMetrics_ClientBootstrap_RequestInfo::_internal_mutable_address_of_request_url() {
  _has_bits_[0] |= 0x00000010u;
  return address_of_request_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CClientMetrics_ClientBootstrap_RequestInfo::release_address_of_request_url() {
  // @@protoc_insertion_point(field_release:CClientMetrics_ClientBootstrap_RequestInfo.address_of_request_url)
  if (!_internal_has_address_of_request_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return address_of_request_url_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_allocated_address_of_request_url(std::string* address_of_request_url) {
  if (address_of_request_url != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  address_of_request_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), address_of_request_url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CClientMetrics_ClientBootstrap_RequestInfo.address_of_request_url)
}

// optional uint32 response_time_ms = 8;
inline bool CClientMetrics_ClientBootstrap_RequestInfo::_internal_has_response_time_ms() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CClientMetrics_ClientBootstrap_RequestInfo::has_response_time_ms() const {
  return _internal_has_response_time_ms();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::clear_response_time_ms() {
  response_time_ms_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ClientBootstrap_RequestInfo::_internal_response_time_ms() const {
  return response_time_ms_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ClientBootstrap_RequestInfo::response_time_ms() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ClientBootstrap_RequestInfo.response_time_ms)
  return _internal_response_time_ms();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::_internal_set_response_time_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  response_time_ms_ = value;
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_response_time_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_response_time_ms(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ClientBootstrap_RequestInfo.response_time_ms)
}

// optional uint64 bytes_received = 9;
inline bool CClientMetrics_ClientBootstrap_RequestInfo::_internal_has_bytes_received() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CClientMetrics_ClientBootstrap_RequestInfo::has_bytes_received() const {
  return _internal_has_bytes_received();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::clear_bytes_received() {
  bytes_received_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CClientMetrics_ClientBootstrap_RequestInfo::_internal_bytes_received() const {
  return bytes_received_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CClientMetrics_ClientBootstrap_RequestInfo::bytes_received() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ClientBootstrap_RequestInfo.bytes_received)
  return _internal_bytes_received();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::_internal_set_bytes_received(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000080u;
  bytes_received_ = value;
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_bytes_received(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_bytes_received(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ClientBootstrap_RequestInfo.bytes_received)
}

// optional uint32 num_retries = 10;
inline bool CClientMetrics_ClientBootstrap_RequestInfo::_internal_has_num_retries() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CClientMetrics_ClientBootstrap_RequestInfo::has_num_retries() const {
  return _internal_has_num_retries();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::clear_num_retries() {
  num_retries_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ClientBootstrap_RequestInfo::_internal_num_retries() const {
  return num_retries_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ClientBootstrap_RequestInfo::num_retries() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ClientBootstrap_RequestInfo.num_retries)
  return _internal_num_retries();
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::_internal_set_num_retries(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  num_retries_ = value;
}
inline void CClientMetrics_ClientBootstrap_RequestInfo::set_num_retries(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num_retries(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ClientBootstrap_RequestInfo.num_retries)
}

// -------------------------------------------------------------------

// CClientMetrics_ClientBootstrap_Summary

// optional uint32 launcher_type = 1;
inline bool CClientMetrics_ClientBootstrap_Summary::_internal_has_launcher_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CClientMetrics_ClientBootstrap_Summary::has_launcher_type() const {
  return _internal_has_launcher_type();
}
inline void CClientMetrics_ClientBootstrap_Summary::clear_launcher_type() {
  launcher_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ClientBootstrap_Summary::_internal_launcher_type() const {
  return launcher_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ClientBootstrap_Summary::launcher_type() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ClientBootstrap_Summary.launcher_type)
  return _internal_launcher_type();
}
inline void CClientMetrics_ClientBootstrap_Summary::_internal_set_launcher_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  launcher_type_ = value;
}
inline void CClientMetrics_ClientBootstrap_Summary::set_launcher_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_launcher_type(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ClientBootstrap_Summary.launcher_type)
}

// optional uint32 steam_realm = 2;
inline bool CClientMetrics_ClientBootstrap_Summary::_internal_has_steam_realm() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CClientMetrics_ClientBootstrap_Summary::has_steam_realm() const {
  return _internal_has_steam_realm();
}
inline void CClientMetrics_ClientBootstrap_Summary::clear_steam_realm() {
  steam_realm_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ClientBootstrap_Summary::_internal_steam_realm() const {
  return steam_realm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ClientBootstrap_Summary::steam_realm() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ClientBootstrap_Summary.steam_realm)
  return _internal_steam_realm();
}
inline void CClientMetrics_ClientBootstrap_Summary::_internal_set_steam_realm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  steam_realm_ = value;
}
inline void CClientMetrics_ClientBootstrap_Summary::set_steam_realm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_steam_realm(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ClientBootstrap_Summary.steam_realm)
}

// optional string beta_name = 3;
inline bool CClientMetrics_ClientBootstrap_Summary::_internal_has_beta_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CClientMetrics_ClientBootstrap_Summary::has_beta_name() const {
  return _internal_has_beta_name();
}
inline void CClientMetrics_ClientBootstrap_Summary::clear_beta_name() {
  beta_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CClientMetrics_ClientBootstrap_Summary::beta_name() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ClientBootstrap_Summary.beta_name)
  return _internal_beta_name();
}
inline void CClientMetrics_ClientBootstrap_Summary::set_beta_name(const std::string& value) {
  _internal_set_beta_name(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ClientBootstrap_Summary.beta_name)
}
inline std::string* CClientMetrics_ClientBootstrap_Summary::mutable_beta_name() {
  // @@protoc_insertion_point(field_mutable:CClientMetrics_ClientBootstrap_Summary.beta_name)
  return _internal_mutable_beta_name();
}
inline const std::string& CClientMetrics_ClientBootstrap_Summary::_internal_beta_name() const {
  return beta_name_.Get();
}
inline void CClientMetrics_ClientBootstrap_Summary::_internal_set_beta_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  beta_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CClientMetrics_ClientBootstrap_Summary::set_beta_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  beta_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CClientMetrics_ClientBootstrap_Summary.beta_name)
}
inline void CClientMetrics_ClientBootstrap_Summary::set_beta_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  beta_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CClientMetrics_ClientBootstrap_Summary.beta_name)
}
inline void CClientMetrics_ClientBootstrap_Summary::set_beta_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  beta_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CClientMetrics_ClientBootstrap_Summary.beta_name)
}
inline std::string* CClientMetrics_ClientBootstrap_Summary::_internal_mutable_beta_name() {
  _has_bits_[0] |= 0x00000001u;
  return beta_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CClientMetrics_ClientBootstrap_Summary::release_beta_name() {
  // @@protoc_insertion_point(field_release:CClientMetrics_ClientBootstrap_Summary.beta_name)
  if (!_internal_has_beta_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return beta_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CClientMetrics_ClientBootstrap_Summary::set_allocated_beta_name(std::string* beta_name) {
  if (beta_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  beta_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), beta_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CClientMetrics_ClientBootstrap_Summary.beta_name)
}

// optional bool download_completed = 4;
inline bool CClientMetrics_ClientBootstrap_Summary::_internal_has_download_completed() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CClientMetrics_ClientBootstrap_Summary::has_download_completed() const {
  return _internal_has_download_completed();
}
inline void CClientMetrics_ClientBootstrap_Summary::clear_download_completed() {
  download_completed_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CClientMetrics_ClientBootstrap_Summary::_internal_download_completed() const {
  return download_completed_;
}
inline bool CClientMetrics_ClientBootstrap_Summary::download_completed() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ClientBootstrap_Summary.download_completed)
  return _internal_download_completed();
}
inline void CClientMetrics_ClientBootstrap_Summary::_internal_set_download_completed(bool value) {
  _has_bits_[0] |= 0x00000008u;
  download_completed_ = value;
}
inline void CClientMetrics_ClientBootstrap_Summary::set_download_completed(bool value) {
  _internal_set_download_completed(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ClientBootstrap_Summary.download_completed)
}

// optional uint32 total_time_ms = 6;
inline bool CClientMetrics_ClientBootstrap_Summary::_internal_has_total_time_ms() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CClientMetrics_ClientBootstrap_Summary::has_total_time_ms() const {
  return _internal_has_total_time_ms();
}
inline void CClientMetrics_ClientBootstrap_Summary::clear_total_time_ms() {
  total_time_ms_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ClientBootstrap_Summary::_internal_total_time_ms() const {
  return total_time_ms_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ClientBootstrap_Summary::total_time_ms() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ClientBootstrap_Summary.total_time_ms)
  return _internal_total_time_ms();
}
inline void CClientMetrics_ClientBootstrap_Summary::_internal_set_total_time_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  total_time_ms_ = value;
}
inline void CClientMetrics_ClientBootstrap_Summary::set_total_time_ms(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_total_time_ms(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ClientBootstrap_Summary.total_time_ms)
}

// repeated .CClientMetrics_ClientBootstrap_RequestInfo manifest_requests = 7;
inline int CClientMetrics_ClientBootstrap_Summary::_internal_manifest_requests_size() const {
  return manifest_requests_.size();
}
inline int CClientMetrics_ClientBootstrap_Summary::manifest_requests_size() const {
  return _internal_manifest_requests_size();
}
inline void CClientMetrics_ClientBootstrap_Summary::clear_manifest_requests() {
  manifest_requests_.Clear();
}
inline ::CClientMetrics_ClientBootstrap_RequestInfo* CClientMetrics_ClientBootstrap_Summary::mutable_manifest_requests(int index) {
  // @@protoc_insertion_point(field_mutable:CClientMetrics_ClientBootstrap_Summary.manifest_requests)
  return manifest_requests_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CClientMetrics_ClientBootstrap_RequestInfo >*
CClientMetrics_ClientBootstrap_Summary::mutable_manifest_requests() {
  // @@protoc_insertion_point(field_mutable_list:CClientMetrics_ClientBootstrap_Summary.manifest_requests)
  return &manifest_requests_;
}
inline const ::CClientMetrics_ClientBootstrap_RequestInfo& CClientMetrics_ClientBootstrap_Summary::_internal_manifest_requests(int index) const {
  return manifest_requests_.Get(index);
}
inline const ::CClientMetrics_ClientBootstrap_RequestInfo& CClientMetrics_ClientBootstrap_Summary::manifest_requests(int index) const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ClientBootstrap_Summary.manifest_requests)
  return _internal_manifest_requests(index);
}
inline ::CClientMetrics_ClientBootstrap_RequestInfo* CClientMetrics_ClientBootstrap_Summary::_internal_add_manifest_requests() {
  return manifest_requests_.Add();
}
inline ::CClientMetrics_ClientBootstrap_RequestInfo* CClientMetrics_ClientBootstrap_Summary::add_manifest_requests() {
  // @@protoc_insertion_point(field_add:CClientMetrics_ClientBootstrap_Summary.manifest_requests)
  return _internal_add_manifest_requests();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CClientMetrics_ClientBootstrap_RequestInfo >&
CClientMetrics_ClientBootstrap_Summary::manifest_requests() const {
  // @@protoc_insertion_point(field_list:CClientMetrics_ClientBootstrap_Summary.manifest_requests)
  return manifest_requests_;
}

// repeated .CClientMetrics_ClientBootstrap_RequestInfo package_requests = 8;
inline int CClientMetrics_ClientBootstrap_Summary::_internal_package_requests_size() const {
  return package_requests_.size();
}
inline int CClientMetrics_ClientBootstrap_Summary::package_requests_size() const {
  return _internal_package_requests_size();
}
inline void CClientMetrics_ClientBootstrap_Summary::clear_package_requests() {
  package_requests_.Clear();
}
inline ::CClientMetrics_ClientBootstrap_RequestInfo* CClientMetrics_ClientBootstrap_Summary::mutable_package_requests(int index) {
  // @@protoc_insertion_point(field_mutable:CClientMetrics_ClientBootstrap_Summary.package_requests)
  return package_requests_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CClientMetrics_ClientBootstrap_RequestInfo >*
CClientMetrics_ClientBootstrap_Summary::mutable_package_requests() {
  // @@protoc_insertion_point(field_mutable_list:CClientMetrics_ClientBootstrap_Summary.package_requests)
  return &package_requests_;
}
inline const ::CClientMetrics_ClientBootstrap_RequestInfo& CClientMetrics_ClientBootstrap_Summary::_internal_package_requests(int index) const {
  return package_requests_.Get(index);
}
inline const ::CClientMetrics_ClientBootstrap_RequestInfo& CClientMetrics_ClientBootstrap_Summary::package_requests(int index) const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ClientBootstrap_Summary.package_requests)
  return _internal_package_requests(index);
}
inline ::CClientMetrics_ClientBootstrap_RequestInfo* CClientMetrics_ClientBootstrap_Summary::_internal_add_package_requests() {
  return package_requests_.Add();
}
inline ::CClientMetrics_ClientBootstrap_RequestInfo* CClientMetrics_ClientBootstrap_Summary::add_package_requests() {
  // @@protoc_insertion_point(field_add:CClientMetrics_ClientBootstrap_Summary.package_requests)
  return _internal_add_package_requests();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CClientMetrics_ClientBootstrap_RequestInfo >&
CClientMetrics_ClientBootstrap_Summary::package_requests() const {
  // @@protoc_insertion_point(field_list:CClientMetrics_ClientBootstrap_Summary.package_requests)
  return package_requests_;
}

// -------------------------------------------------------------------

// CClientMetrics_ContentDownloadResponse_Counts

// optional uint32 class_100 = 1;
inline bool CClientMetrics_ContentDownloadResponse_Counts::_internal_has_class_100() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CClientMetrics_ContentDownloadResponse_Counts::has_class_100() const {
  return _internal_has_class_100();
}
inline void CClientMetrics_ContentDownloadResponse_Counts::clear_class_100() {
  class_100_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ContentDownloadResponse_Counts::_internal_class_100() const {
  return class_100_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ContentDownloadResponse_Counts::class_100() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ContentDownloadResponse_Counts.class_100)
  return _internal_class_100();
}
inline void CClientMetrics_ContentDownloadResponse_Counts::_internal_set_class_100(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  class_100_ = value;
}
inline void CClientMetrics_ContentDownloadResponse_Counts::set_class_100(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_class_100(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ContentDownloadResponse_Counts.class_100)
}

// optional uint32 class_200 = 2;
inline bool CClientMetrics_ContentDownloadResponse_Counts::_internal_has_class_200() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CClientMetrics_ContentDownloadResponse_Counts::has_class_200() const {
  return _internal_has_class_200();
}
inline void CClientMetrics_ContentDownloadResponse_Counts::clear_class_200() {
  class_200_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ContentDownloadResponse_Counts::_internal_class_200() const {
  return class_200_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ContentDownloadResponse_Counts::class_200() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ContentDownloadResponse_Counts.class_200)
  return _internal_class_200();
}
inline void CClientMetrics_ContentDownloadResponse_Counts::_internal_set_class_200(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  class_200_ = value;
}
inline void CClientMetrics_ContentDownloadResponse_Counts::set_class_200(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_class_200(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ContentDownloadResponse_Counts.class_200)
}

// optional uint32 class_300 = 3;
inline bool CClientMetrics_ContentDownloadResponse_Counts::_internal_has_class_300() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CClientMetrics_ContentDownloadResponse_Counts::has_class_300() const {
  return _internal_has_class_300();
}
inline void CClientMetrics_ContentDownloadResponse_Counts::clear_class_300() {
  class_300_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ContentDownloadResponse_Counts::_internal_class_300() const {
  return class_300_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ContentDownloadResponse_Counts::class_300() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ContentDownloadResponse_Counts.class_300)
  return _internal_class_300();
}
inline void CClientMetrics_ContentDownloadResponse_Counts::_internal_set_class_300(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  class_300_ = value;
}
inline void CClientMetrics_ContentDownloadResponse_Counts::set_class_300(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_class_300(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ContentDownloadResponse_Counts.class_300)
}

// optional uint32 class_400 = 4;
inline bool CClientMetrics_ContentDownloadResponse_Counts::_internal_has_class_400() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CClientMetrics_ContentDownloadResponse_Counts::has_class_400() const {
  return _internal_has_class_400();
}
inline void CClientMetrics_ContentDownloadResponse_Counts::clear_class_400() {
  class_400_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ContentDownloadResponse_Counts::_internal_class_400() const {
  return class_400_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ContentDownloadResponse_Counts::class_400() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ContentDownloadResponse_Counts.class_400)
  return _internal_class_400();
}
inline void CClientMetrics_ContentDownloadResponse_Counts::_internal_set_class_400(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  class_400_ = value;
}
inline void CClientMetrics_ContentDownloadResponse_Counts::set_class_400(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_class_400(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ContentDownloadResponse_Counts.class_400)
}

// optional uint32 class_500 = 5;
inline bool CClientMetrics_ContentDownloadResponse_Counts::_internal_has_class_500() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CClientMetrics_ContentDownloadResponse_Counts::has_class_500() const {
  return _internal_has_class_500();
}
inline void CClientMetrics_ContentDownloadResponse_Counts::clear_class_500() {
  class_500_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ContentDownloadResponse_Counts::_internal_class_500() const {
  return class_500_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ContentDownloadResponse_Counts::class_500() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ContentDownloadResponse_Counts.class_500)
  return _internal_class_500();
}
inline void CClientMetrics_ContentDownloadResponse_Counts::_internal_set_class_500(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  class_500_ = value;
}
inline void CClientMetrics_ContentDownloadResponse_Counts::set_class_500(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_class_500(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ContentDownloadResponse_Counts.class_500)
}

// optional uint32 no_response = 6;
inline bool CClientMetrics_ContentDownloadResponse_Counts::_internal_has_no_response() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CClientMetrics_ContentDownloadResponse_Counts::has_no_response() const {
  return _internal_has_no_response();
}
inline void CClientMetrics_ContentDownloadResponse_Counts::clear_no_response() {
  no_response_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ContentDownloadResponse_Counts::_internal_no_response() const {
  return no_response_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ContentDownloadResponse_Counts::no_response() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ContentDownloadResponse_Counts.no_response)
  return _internal_no_response();
}
inline void CClientMetrics_ContentDownloadResponse_Counts::_internal_set_no_response(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  no_response_ = value;
}
inline void CClientMetrics_ContentDownloadResponse_Counts::set_no_response(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_no_response(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ContentDownloadResponse_Counts.no_response)
}

// optional uint32 class_unknown = 7;
inline bool CClientMetrics_ContentDownloadResponse_Counts::_internal_has_class_unknown() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CClientMetrics_ContentDownloadResponse_Counts::has_class_unknown() const {
  return _internal_has_class_unknown();
}
inline void CClientMetrics_ContentDownloadResponse_Counts::clear_class_unknown() {
  class_unknown_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ContentDownloadResponse_Counts::_internal_class_unknown() const {
  return class_unknown_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ContentDownloadResponse_Counts::class_unknown() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ContentDownloadResponse_Counts.class_unknown)
  return _internal_class_unknown();
}
inline void CClientMetrics_ContentDownloadResponse_Counts::_internal_set_class_unknown(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  class_unknown_ = value;
}
inline void CClientMetrics_ContentDownloadResponse_Counts::set_class_unknown(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_class_unknown(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ContentDownloadResponse_Counts.class_unknown)
}

// -------------------------------------------------------------------

// CClientMetrics_ContentDownloadResponse_HostCounts

// optional string hostname = 1;
inline bool CClientMetrics_ContentDownloadResponse_HostCounts::_internal_has_hostname() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CClientMetrics_ContentDownloadResponse_HostCounts::has_hostname() const {
  return _internal_has_hostname();
}
inline void CClientMetrics_ContentDownloadResponse_HostCounts::clear_hostname() {
  hostname_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CClientMetrics_ContentDownloadResponse_HostCounts::hostname() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ContentDownloadResponse_HostCounts.hostname)
  return _internal_hostname();
}
inline void CClientMetrics_ContentDownloadResponse_HostCounts::set_hostname(const std::string& value) {
  _internal_set_hostname(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ContentDownloadResponse_HostCounts.hostname)
}
inline std::string* CClientMetrics_ContentDownloadResponse_HostCounts::mutable_hostname() {
  // @@protoc_insertion_point(field_mutable:CClientMetrics_ContentDownloadResponse_HostCounts.hostname)
  return _internal_mutable_hostname();
}
inline const std::string& CClientMetrics_ContentDownloadResponse_HostCounts::_internal_hostname() const {
  return hostname_.Get();
}
inline void CClientMetrics_ContentDownloadResponse_HostCounts::_internal_set_hostname(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  hostname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CClientMetrics_ContentDownloadResponse_HostCounts::set_hostname(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  hostname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CClientMetrics_ContentDownloadResponse_HostCounts.hostname)
}
inline void CClientMetrics_ContentDownloadResponse_HostCounts::set_hostname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  hostname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CClientMetrics_ContentDownloadResponse_HostCounts.hostname)
}
inline void CClientMetrics_ContentDownloadResponse_HostCounts::set_hostname(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  hostname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CClientMetrics_ContentDownloadResponse_HostCounts.hostname)
}
inline std::string* CClientMetrics_ContentDownloadResponse_HostCounts::_internal_mutable_hostname() {
  _has_bits_[0] |= 0x00000001u;
  return hostname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CClientMetrics_ContentDownloadResponse_HostCounts::release_hostname() {
  // @@protoc_insertion_point(field_release:CClientMetrics_ContentDownloadResponse_HostCounts.hostname)
  if (!_internal_has_hostname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return hostname_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CClientMetrics_ContentDownloadResponse_HostCounts::set_allocated_hostname(std::string* hostname) {
  if (hostname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  hostname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hostname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CClientMetrics_ContentDownloadResponse_HostCounts.hostname)
}

// optional uint32 source_type = 2;
inline bool CClientMetrics_ContentDownloadResponse_HostCounts::_internal_has_source_type() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CClientMetrics_ContentDownloadResponse_HostCounts::has_source_type() const {
  return _internal_has_source_type();
}
inline void CClientMetrics_ContentDownloadResponse_HostCounts::clear_source_type() {
  source_type_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ContentDownloadResponse_HostCounts::_internal_source_type() const {
  return source_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CClientMetrics_ContentDownloadResponse_HostCounts::source_type() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ContentDownloadResponse_HostCounts.source_type)
  return _internal_source_type();
}
inline void CClientMetrics_ContentDownloadResponse_HostCounts::_internal_set_source_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  source_type_ = value;
}
inline void CClientMetrics_ContentDownloadResponse_HostCounts::set_source_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_source_type(value);
  // @@protoc_insertion_point(field_set:CClientMetrics_ContentDownloadResponse_HostCounts.source_type)
}

// optional .CClientMetrics_ContentDownloadResponse_Counts counts = 3;
inline bool CClientMetrics_ContentDownloadResponse_HostCounts::_internal_has_counts() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || counts_ != nullptr);
  return value;
}
inline bool CClientMetrics_ContentDownloadResponse_HostCounts::has_counts() const {
  return _internal_has_counts();
}
inline void CClientMetrics_ContentDownloadResponse_HostCounts::clear_counts() {
  if (counts_ != nullptr) counts_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CClientMetrics_ContentDownloadResponse_Counts& CClientMetrics_ContentDownloadResponse_HostCounts::_internal_counts() const {
  const ::CClientMetrics_ContentDownloadResponse_Counts* p = counts_;
  return p != nullptr ? *p : reinterpret_cast<const ::CClientMetrics_ContentDownloadResponse_Counts&>(
      ::_CClientMetrics_ContentDownloadResponse_Counts_default_instance_);
}
inline const ::CClientMetrics_ContentDownloadResponse_Counts& CClientMetrics_ContentDownloadResponse_HostCounts::counts() const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ContentDownloadResponse_HostCounts.counts)
  return _internal_counts();
}
inline void CClientMetrics_ContentDownloadResponse_HostCounts::unsafe_arena_set_allocated_counts(
    ::CClientMetrics_ContentDownloadResponse_Counts* counts) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(counts_);
  }
  counts_ = counts;
  if (counts) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CClientMetrics_ContentDownloadResponse_HostCounts.counts)
}
inline ::CClientMetrics_ContentDownloadResponse_Counts* CClientMetrics_ContentDownloadResponse_HostCounts::release_counts() {
  _has_bits_[0] &= ~0x00000002u;
  ::CClientMetrics_ContentDownloadResponse_Counts* temp = counts_;
  counts_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CClientMetrics_ContentDownloadResponse_Counts* CClientMetrics_ContentDownloadResponse_HostCounts::unsafe_arena_release_counts() {
  // @@protoc_insertion_point(field_release:CClientMetrics_ContentDownloadResponse_HostCounts.counts)
  _has_bits_[0] &= ~0x00000002u;
  ::CClientMetrics_ContentDownloadResponse_Counts* temp = counts_;
  counts_ = nullptr;
  return temp;
}
inline ::CClientMetrics_ContentDownloadResponse_Counts* CClientMetrics_ContentDownloadResponse_HostCounts::_internal_mutable_counts() {
  _has_bits_[0] |= 0x00000002u;
  if (counts_ == nullptr) {
    auto* p = CreateMaybeMessage<::CClientMetrics_ContentDownloadResponse_Counts>(GetArena());
    counts_ = p;
  }
  return counts_;
}
inline ::CClientMetrics_ContentDownloadResponse_Counts* CClientMetrics_ContentDownloadResponse_HostCounts::mutable_counts() {
  // @@protoc_insertion_point(field_mutable:CClientMetrics_ContentDownloadResponse_HostCounts.counts)
  return _internal_mutable_counts();
}
inline void CClientMetrics_ContentDownloadResponse_HostCounts::set_allocated_counts(::CClientMetrics_ContentDownloadResponse_Counts* counts) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete counts_;
  }
  if (counts) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(counts);
    if (message_arena != submessage_arena) {
      counts = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, counts, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  counts_ = counts;
  // @@protoc_insertion_point(field_set_allocated:CClientMetrics_ContentDownloadResponse_HostCounts.counts)
}

// -------------------------------------------------------------------

// CClientMetrics_ContentDownloadResponse_Hosts

// repeated .CClientMetrics_ContentDownloadResponse_HostCounts hosts = 1;
inline int CClientMetrics_ContentDownloadResponse_Hosts::_internal_hosts_size() const {
  return hosts_.size();
}
inline int CClientMetrics_ContentDownloadResponse_Hosts::hosts_size() const {
  return _internal_hosts_size();
}
inline void CClientMetrics_ContentDownloadResponse_Hosts::clear_hosts() {
  hosts_.Clear();
}
inline ::CClientMetrics_ContentDownloadResponse_HostCounts* CClientMetrics_ContentDownloadResponse_Hosts::mutable_hosts(int index) {
  // @@protoc_insertion_point(field_mutable:CClientMetrics_ContentDownloadResponse_Hosts.hosts)
  return hosts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CClientMetrics_ContentDownloadResponse_HostCounts >*
CClientMetrics_ContentDownloadResponse_Hosts::mutable_hosts() {
  // @@protoc_insertion_point(field_mutable_list:CClientMetrics_ContentDownloadResponse_Hosts.hosts)
  return &hosts_;
}
inline const ::CClientMetrics_ContentDownloadResponse_HostCounts& CClientMetrics_ContentDownloadResponse_Hosts::_internal_hosts(int index) const {
  return hosts_.Get(index);
}
inline const ::CClientMetrics_ContentDownloadResponse_HostCounts& CClientMetrics_ContentDownloadResponse_Hosts::hosts(int index) const {
  // @@protoc_insertion_point(field_get:CClientMetrics_ContentDownloadResponse_Hosts.hosts)
  return _internal_hosts(index);
}
inline ::CClientMetrics_ContentDownloadResponse_HostCounts* CClientMetrics_ContentDownloadResponse_Hosts::_internal_add_hosts() {
  return hosts_.Add();
}
inline ::CClientMetrics_ContentDownloadResponse_HostCounts* CClientMetrics_ContentDownloadResponse_Hosts::add_hosts() {
  // @@protoc_insertion_point(field_add:CClientMetrics_ContentDownloadResponse_Hosts.hosts)
  return _internal_add_hosts();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CClientMetrics_ContentDownloadResponse_HostCounts >&
CClientMetrics_ContentDownloadResponse_Hosts::hosts() const {
  // @@protoc_insertion_point(field_list:CClientMetrics_ContentDownloadResponse_Hosts.hosts)
  return hosts_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_clientmetrics_2eproto
