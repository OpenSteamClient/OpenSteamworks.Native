// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums_clientserver.proto

#include "enums_clientserver.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_enums_5fclientserver_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_enums_5fclientserver_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_enums_5fclientserver_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_enums_5fclientserver_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_enums_5fclientserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030enums_clientserver.proto\032 google/proto"
  "buf/descriptor.proto*\200\374\002\n\004EMsg\022\017\n\013EMsgIn"
  "valid\020\000\022\r\n\tEMsgMulti\020\001\022\027\n\023EMsgProtobufWr"
  "apped\020\002\022\023\n\017EMsgBaseGeneral\020d\022\024\n\020EMsgGene"
  "ricReply\020d\022\025\n\021EMsgDestJobFailed\020q\022\r\n\tEMs"
  "gAlert\020s\022\023\n\017EMsgSCIDRequest\020x\022\024\n\020EMsgSCI"
  "DResponse\020y\022\024\n\020EMsgJobHeartbeat\020{\022\022\n\016EMs"
  "gHubConnect\020|\022\021\n\rEMsgSubscribe\020~\022\022\n\016EMRo"
  "uteMessage\020\177\022\022\n\rEMsgWGRequest\020\202\001\022\023\n\016EMsg"
  "WGResponse\020\203\001\022\022\n\rEMsgKeepAlive\020\204\001\022\031\n\024EMs"
  "gWebAPIJobRequest\020\205\001\022\032\n\025EMsgWebAPIJobRes"
  "ponse\020\206\001\022\033\n\026EMsgClientSessionStart\020\207\001\022\031\n"
  "\024EMsgClientSessionEnd\020\210\001\022\034\n\027EMsgClientSe"
  "ssionUpdate\020\211\001\022\030\n\023EMsgStatsDeprecated\020\212\001"
  "\022\r\n\010EMsgPing\020\213\001\022\025\n\020EMsgPingResponse\020\214\001\022\016"
  "\n\tEMsgStats\020\215\001\022\036\n\031EMsgRequestFullStatsBl"
  "ock\020\216\001\022\031\n\024EMsgLoadDBOCacheItem\020\217\001\022!\n\034EMs"
  "gLoadDBOCacheItemResponse\020\220\001\022 \n\033EMsgInva"
  "lidateDBOCacheItems\020\221\001\022\026\n\021EMsgServiceMet"
  "hod\020\222\001\022\036\n\031EMsgServiceMethodResponse\020\223\001\022\036"
  "\n\031EMsgClientPackageVersions\020\224\001\022\031\n\024EMsgTi"
  "mestampRequest\020\225\001\022\032\n\025EMsgTimestampRespon"
  "se\020\226\001\022$\n\037EMsgServiceMethodCallFromClient"
  "\020\227\001\022\"\n\035EMsgServiceMethodSendToClient\020\230\001\022"
  "\022\n\rEMsgBaseShell\020\310\001\022\024\n\017EMsgAssignSysID\020\310"
  "\001\022\r\n\010EMsgExit\020\311\001\022\023\n\016EMsgDirRequest\020\312\001\022\024\n"
  "\017EMsgDirResponse\020\313\001\022\023\n\016EMsgZipRequest\020\314\001"
  "\022\024\n\017EMsgZipResponse\020\315\001\022\035\n\030EMsgUpdateReco"
  "rdResponse\020\327\001\022 \n\033EMsgUpdateCreditCardReq"
  "uest\020\335\001\022\036\n\031EMsgUpdateUserBanResponse\020\341\001\022"
  "\026\n\021EMsgPrepareToExit\020\342\001\022!\n\034EMsgContentDe"
  "scriptionUpdate\020\343\001\022\030\n\023EMsgTestResetServe"
  "r\020\344\001\022\030\n\023EMsgUniverseChanged\020\345\001\022\036\n\031EMsgSh"
  "ellConfigInfoUpdate\020\346\001\022&\n!EMsgRequestWin"
  "dowsEventLogEntries\020\351\001\022&\n!EMsgProvideWin"
  "dowsEventLogEntries\020\352\001\022\030\n\023EMsgShellSearc"
  "hLogs\020\353\001\022 \n\033EMsgShellSearchLogsResponse\020"
  "\354\001\022!\n\034EMsgShellCheckWindowsUpdates\020\355\001\022)\n"
  "$EMsgShellCheckWindowsUpdatesResponse\020\356\001"
  "\022\034\n\027EMsgTestFlushDelayedSQL\020\360\001\022$\n\037EMsgTe"
  "stFlushDelayedSQLResponse\020\361\001\022&\n!EMsgEnsu"
  "reExecuteScheduledTasTEST\020\362\001\0220\n+EMsgEnsu"
  "reExecuteScheduledTaskResponse_TEST\020\363\001\022,"
  "\n\'EMsgUpdateScheduledTaskEnableState_TES"
  "T\020\364\001\0224\n/EMsgUpdateScheduledTaskEnableSta"
  "teResponse_TEST\020\365\001\022&\n!EMsgContentDescrip"
  "tionDeltaUpdate\020\366\001\022\'\n\"EMsgGMShellAndServ"
  "erAddressUpdates\020\367\001\022\017\n\nEMsgBaseGM\020\254\002\022\022\n\r"
  "EMsgHeartbeat\020\254\002\022\024\n\017EMsgShellFailed\020\255\002\022\023"
  "\n\016EMsgExitShells\020\263\002\022\022\n\rEMsgExitShell\020\264\002\022"
  "\032\n\025EMsgGracefulExitShell\020\265\002\022\"\n\035EMsgLicen"
  "seProcessingComplete\020\274\002\022\024\n\017EMsgSetTestFl"
  "ag\020\275\002\022\035\n\030EMsgQueuedEmailsComplete\020\276\002\022\022\n\r"
  "EMsgGMDRMSync\020\300\002\022\035\n\030EMsgPhysicalBoxInven"
  "tory\020\301\002\022\031\n\024EMsgUpdateConfigFile\020\302\002\022\023\n\016EM"
  "sgTestInitDB\020\303\002\022\033\n\026EMsgGMWriteConfigToSQ"
  "L\020\304\002\022\036\n\031EMsgGMLoadActivationCodes\020\305\002\022\026\n\021"
  "EMsgGMQueueForFBS\020\306\002\022\"\n\035EMsgGMSchemaConv"
  "ersionResults\020\307\002\022!\n\034EMsgGMWriteShellFail"
  "ureToSQL\020\311\002\022\"\n\035EMsgGMGetServiceMethodRou"
  "ting\020\313\002\022*\n%EMsgGMGetServiceMethodRouting"
  "Response\020\314\002\022(\n#EMsgGMTestNextBuildSchema"
  "Conversion\020\316\002\0220\n+EMsgGMTestNextBuildSche"
  "maConversionResponse\020\317\002\022\033\n\026EMsgExpectShe"
  "llRestart\020\320\002\022\027\n\022EMsgHotFixProgress\020\321\002\022)\n"
  "$EMsgGMStatsForwardToAdminConnections\020\322\002"
  "\022\035\n\030EMsgGMGetModifiedConVars\020\323\002\022%\n EMsgG"
  "MGetModifiedConVarsResponse\020\324\002\022\020\n\013EMsgBa"
  "seAIS\020\220\003\022%\n EMsgAISRequestContentDescrip"
  "tion\020\222\003\022\"\n\035EMsgAISGetPackageChangeNumber"
  "\020\225\003\022*\n%EMsgAISGetPackageChangeNumberResp"
  "onse\020\226\003\022\030\n\023EMsgAIGetAppGCFlags\020\247\003\022 \n\033EMs"
  "gAIGetAppGCFlagsResponse\020\250\003\022\025\n\020EMsgAIGet"
  "AppList\020\251\003\022\035\n\030EMsgAIGetAppListResponse\020\252"
  "\003\022\037\n\032EMsgAISGetCouponDefinition\020\255\003\022\'\n\"EM"
  "sgAISGetCouponDefinitionResponse\020\256\003\022/\n*E"
  "MsgAISUpdateSubordinateContentDescriptio"
  "n\020\257\003\0227\n2EMsgAISUpdateSubordinateContentD"
  "escriptionResponse\020\260\003\022\030\n\023EMsgAISTestEnab"
  "leGC\020\261\003\022\017\n\nEMsgBaseAM\020\364\003\022\037\n\032EMsgAMUpdate"
  "UserBanRequest\020\370\003\022\025\n\020EMsgAMAddLicense\020\371\003"
  "\022\035\n\030EMsgAMSendSystemIMToUser\020\374\003\022\030\n\023EMsgA"
  "MExtendLicense\020\375\003\022\036\n\031EMsgAMAddMinutesToL"
  "icense\020\376\003\022\030\n\023EMsgAMCancelLicense\020\377\003\022\027\n\022E"
  "MsgAMInitPurchase\020\200\004\022\033\n\026EMsgAMPurchaseRe"
  "sponse\020\201\004\022\033\n\026EMsgAMGetLegacyGameKey\020\204\004\022#"
  "\n\036EMsgAMGetLegacyGameKeyResponse\020\205\004\022\037\n\032E"
  "MsgAMFindHungTransactions\020\206\004\022#\n\036EMsgAMSe"
  "tAccountTrustedRequest\020\207\004\022\031\n\024EMsgAMCance"
  "lPurchase\020\212\004\022\027\n\022EMsgAMNewChallenge\020\213\004\022\035\n"
  "\030EMsgAMFixPendingPurchase\020\215\004\022%\n EMsgAMFi"
  "xPendingPurchaseResponse\020\216\004\022\027\n\022EMsgAMIsU"
  "serBanned\020\217\004\022\026\n\021EMsgAMRegisterKey\020\220\004\022\036\n\031"
  "EMsgAMLoadActivationCodes\020\221\004\022&\n!EMsgAMLo"
  "adActivationCodesResponse\020\222\004\022\034\n\027EMsgAMLo"
  "okupKeyResponse\020\223\004\022\024\n\017EMsgAMLookupKey\020\224\004"
  "\022\026\n\021EMsgAMChatCleanup\020\225\004\022\026\n\021EMsgAMClanCl"
  "eanup\020\226\004\022\033\n\026EMsgAMFixPendingRefund\020\227\004\022\034\n"
  "\027EMsgAMReverseChargeback\020\230\004\022$\n\037EMsgAMRev"
  "erseChargebackResponse\020\231\004\022\032\n\025EMsgAMClanC"
  "leanupList\020\232\004\022\035\n\030EMsgAMSendCartRepurchas"
  "e\020\235\004\022%\n EMsgAMSendCartRepurchaseResponse"
  "\020\236\004\022\035\n\030EMsgAllowUserToPlayQuery\020\246\004\022 \n\033EM"
  "sgAllowUserToPlayResponse\020\247\004\022\025\n\020EMsgAMVe"
  "rfiyUser\020\250\004\022\033\n\026EMsgAMClientNotPlaying\020\251\004"
  "\022\"\n\035EMsgAMClientRequestFriendship\020\252\004\022\035\n\030"
  "EMsgAMRelayPublishStatus\020\253\004\022\037\n\032EMsgAMIni"
  "tPurchaseResponse\020\260\004\022!\n\034EMsgAMRevokePurc"
  "haseResponse\020\261\004\022\035\n\030EMsgAMRefreshGuestPas"
  "ses\020\263\004\022\033\n\026EMsgAMGrantGuestPasses\020\266\004\022\032\n\025E"
  "MsgAMClanDataUpdated\020\267\004\022\030\n\023EMsgAMReloadA"
  "ccount\020\270\004\022\035\n\030EMsgAMClientChatMsgRelay\020\271\004"
  "\022\024\n\017EMsgAMChatMulti\020\272\004\022 \n\033EMsgAMClientCh"
  "atInviteRelay\020\273\004\022\025\n\020EMsgAMChatInvite\020\274\004\022"
  "\036\n\031EMsgAMClientJoinChatRelay\020\275\004\022$\n\037EMsgA"
  "MClientChatMemberInfoRelay\020\276\004\022 \n\033EMsgAMP"
  "ublishChatMemberInfo\020\277\004\022#\n\036EMsgAMClientA"
  "cceptFriendInvite\020\300\004\022\024\n\017EMsgAMChatEnter\020"
  "\301\004\022)\n$EMsgAMClientPublishRemovalFromSour"
  "ce\020\302\004\022\033\n\026EMsgAMChatActionResult\020\303\004\022\027\n\022EM"
  "sgAMFindAccounts\020\304\004\022\037\n\032EMsgAMFindAccount"
  "sResponse\020\305\004\022\035\n\030EMsgAMIsAccountNameInUse"
  "\020\306\004\022%\n EMsgAMIsAccountNameInUseResponse\020"
  "\307\004\022\032\n\025EMsgAMSetAccountFlags\020\310\004\022\025\n\020EMsgAM"
  "CreateClan\020\312\004\022\035\n\030EMsgAMCreateClanRespons"
  "e\020\313\004\022\031\n\024EMsgAMGetClanDetails\020\314\004\022!\n\034EMsgA"
  "MGetClanDetailsResponse\020\315\004\022\031\n\024EMsgAMSetP"
  "ersonaName\020\316\004\022\024\n\017EMsgAMSetAvatar\020\317\004\022\033\n\026E"
  "MsgAMAuthenticateUser\020\320\004\022#\n\036EMsgAMAuthen"
  "ticateUserResponse\020\321\004\022\037\n\032EMsgAMP2PIntrod"
  "ucerMessage\020\324\004\022\031\n\024EMsgClientChatAction\020\325"
  "\004\022 \n\033EMsgAMClientChatActionRelay\020\326\004\022\017\n\nE"
  "MsgBaseVS\020\330\004\022\025\n\020EMsgReqChallenge\020\330\004\022\024\n\017E"
  "MsgVACResponse\020\331\004\022\031\n\024EMsgReqChallengeTes"
  "t\020\332\004\022\024\n\017EMsgVSMarkCheat\020\334\004\022\023\n\016EMsgVSAddC"
  "heat\020\335\004\022\031\n\024EMsgVSPurgeCodeModDB\020\336\004\022\036\n\031EM"
  "sgVSGetChallengeResults\020\337\004\022\036\n\031EMsgVSChal"
  "lengeResultText\020\340\004\022\031\n\024EMsgVSReportLinger"
  "er\020\341\004\022\"\n\035EMsgVSRequestManagedChallenge\020\342"
  "\004\022\031\n\024EMsgVSLoadDBFinished\020\343\004\022\021\n\014EMsgBase"
  "DRMS\020\361\004\022\034\n\027EMsgDRMBuildBlobRequest\020\364\004\022\035\n"
  "\030EMsgDRMBuildBlobResponse\020\365\004\022\036\n\031EMsgDRMR"
  "esolveGuidRequest\020\366\004\022\037\n\032EMsgDRMResolveGu"
  "idResponse\020\367\004\022\035\n\030EMsgDRMVariabilityRepor"
  "t\020\371\004\022%\n EMsgDRMVariabilityReportResponse"
  "\020\372\004\022\033\n\026EMsgDRMStabilityReport\020\373\004\022#\n\036EMsg"
  "DRMStabilityReportResponse\020\374\004\022 \n\033EMsgDRM"
  "DetailsReportRequest\020\375\004\022!\n\034EMsgDRMDetail"
  "sReportResponse\020\376\004\022\027\n\022EMsgDRMProcessFile"
  "\020\377\004\022\027\n\022EMsgDRMAdminUpdate\020\200\005\022\037\n\032EMsgDRMA"
  "dminUpdateResponse\020\201\005\022\020\n\013EMsgDRMSync\020\202\005\022"
  "\030\n\023EMsgDRMSyncResponse\020\203\005\022\037\n\032EMsgDRMProc"
  "essFileResponse\020\204\005\022\032\n\025EMsgDRMEmptyGuidCa"
  "che\020\205\005\022\"\n\035EMsgDRMEmptyGuidCacheResponse\020"
  "\206\005\022\017\n\nEMsgBaseCS\020\212\005\022\023\n\016EMsgBaseClient\020\274\005"
  "\022\037\n\032EMsgClientLogOn_Deprecated\020\275\005\022#\n\036EMs"
  "gClientAnonLogOn_Deprecated\020\276\005\022\030\n\023EMsgCl"
  "ientHeartBeat\020\277\005\022\032\n\025EMsgClientVACRespons"
  "e\020\300\005\022#\n\036EMsgClientGamesPlayed_obsolete\020\301"
  "\005\022\025\n\020EMsgClientLogOff\020\302\005\022 \n\033EMsgClientNo"
  "UDPConnectivity\020\303\005\022\036\n\031EMsgClientConnecti"
  "onStats\020\306\005\022\033\n\026EMsgClientPingResponse\020\310\005\022"
  "\033\n\026EMsgClientRemoveFriend\020\312\005\022$\n\037EMsgClie"
  "ntGamesPlayedNoDataBlob\020\313\005\022\033\n\026EMsgClient"
  "ChangeStatus\020\314\005\022 \n\033EMsgClientVacStatusRe"
  "sponse\020\315\005\022\030\n\023EMsgClientFriendMsg\020\316\005\022#\n\036E"
  "MsgClientGameConnect_obsolete\020\317\005\022$\n\037EMsg"
  "ClientGamesPlayed2_obsolete\020\320\005\022!\n\034EMsgCl"
  "ientGameEnded_obsolete\020\321\005\022\027\n\022EMsgClientS"
  "ystemIM\020\326\005\022\032\n\025EMsgClientSystemIMAck\020\327\005\022\032"
  "\n\025EMsgClientGetLicenses\020\330\005\022\037\n\032EMsgClient"
  "GetLegacyGameKey\020\332\005\022,\n\'EMsgClientContent"
  "ServerLogOn_Deprecated\020\333\005\022\031\n\024EMsgClientA"
  "ckVACBan2\020\334\005\022\"\n\035EMsgClientGetPurchaseRec"
  "eipts\020\340\005\022$\n\037EMsgClientGamesPlayed3_obsol"
  "ete\020\342\005\022\033\n\026EMsgClientAckGuestPass\020\344\005\022\036\n\031E"
  "MsgClientRedeemGuestPass\020\345\005\022\032\n\025EMsgClien"
  "tGamesPlayed\020\346\005\022\032\n\025EMsgClientRegisterKey"
  "\020\347\005\022\037\n\032EMsgClientInviteUserToClan\020\350\005\022$\n\037"
  "EMsgClientAcknowledgeClanInvite\020\351\005\022$\n\037EM"
  "sgClientPurchaseWithMachineID\020\352\005\022\034\n\027EMsg"
  "ClientAppUsageEvent\020\353\005\022\034\n\027EMsgClientLogO"
  "nResponse\020\357\005\022\037\n\032EMsgClientSetHeartbeatRa"
  "te\020\363\005\022$\n\037EMsgClientNotLoggedOnDeprecated"
  "\020\364\005\022\030\n\023EMsgClientLoggedOff\020\365\005\022\022\n\rEMsgGSA"
  "pprove\020\366\005\022\017\n\nEMsgGSDeny\020\367\005\022\017\n\nEMsgGSKick"
  "\020\370\005\022\037\n\032EMsgClientPurchaseResponse\020\373\005\022\023\n\016"
  "EMsgClientPing\020\374\005\022\022\n\rEMsgClientNOP\020\375\005\022\033\n"
  "\026EMsgClientPersonaState\020\376\005\022\032\n\025EMsgClient"
  "FriendsList\020\377\005\022\032\n\025EMsgClientAccountInfo\020"
  "\200\006\022\031\n\024EMsgClientNewsUpdate\020\203\006\022\036\n\031EMsgCli"
  "entGameConnectDeny\020\205\006\022\026\n\021EMsgGSStatusRep"
  "ly\020\206\006\022 \n\033EMsgClientGameConnectTokens\020\213\006\022"
  "\032\n\025EMsgClientLicenseList\020\214\006\022\033\n\026EMsgClien"
  "tVACBanStatus\020\216\006\022\031\n\024EMsgClientEncryptPct"
  "\020\220\006\022\'\n\"EMsgClientGetLegacyGameKeyRespons"
  "e\020\221\006\022\030\n\023EMsgClientAddFriend\020\227\006\022 \n\033EMsgCl"
  "ientAddFriendResponse\020\230\006\022#\n\036EMsgClientAc"
  "kGuestPassResponse\020\234\006\022&\n!EMsgClientRedee"
  "mGuestPassResponse\020\235\006\022$\n\037EMsgClientUpdat"
  "eGuestPassesList\020\236\006\022\026\n\021EMsgClientChatMsg"
  "\020\237\006\022\031\n\024EMsgClientChatInvite\020\240\006\022\027\n\022EMsgCl"
  "ientJoinChat\020\241\006\022\035\n\030EMsgClientChatMemberI"
  "nfo\020\242\006\022.\n)EMsgClientLogOnWithCredentials"
  "_Deprecated\020\243\006\022%\n EMsgClientPasswordChan"
  "geResponse\020\245\006\022\030\n\023EMsgClientChatEnter\020\247\006\022"
  "&\n!EMsgClientFriendRemovedFromSource\020\250\006\022"
  "\031\n\024EMsgClientCreateChat\020\251\006\022!\n\034EMsgClient"
  "CreateChatResponse\020\252\006\022#\n\036EMsgClientP2PIn"
  "troducerMessage\020\255\006\022\037\n\032EMsgClientChatActi"
  "onResult\020\256\006\022 \n\033EMsgClientRequestFriendDa"
  "ta\020\257\006\022\033\n\026EMsgClientGetUserStats\020\262\006\022#\n\036EM"
  "sgClientGetUserStatsResponse\020\263\006\022\035\n\030EMsgC"
  "lientStoreUserStats\020\264\006\022%\n EMsgClientStor"
  "eUserStatsResponse\020\265\006\022\030\n\023EMsgClientClanS"
  "tate\020\266\006\022\034\n\027EMsgClientServiceModule\020\276\006\022\032\n"
  "\025EMsgClientServiceCall\020\277\006\022\"\n\035EMsgClientS"
  "erviceCallResponse\020\300\006\022$\n\037EMsgClientNatTr"
  "aversalStatEvent\020\307\006\022\036\n\031EMsgClientSteamUs"
  "ageEvent\020\312\006\022\034\n\027EMsgClientCheckPassword\020\315"
  "\006\022\034\n\027EMsgClientResetPassword\020\316\006\022$\n\037EMsgC"
  "lientCheckPasswordResponse\020\320\006\022$\n\037EMsgCli"
  "entResetPasswordResponse\020\321\006\022\033\n\026EMsgClien"
  "tSessionToken\020\322\006\022\037\n\032EMsgClientDRMProblem"
  "Report\020\323\006\022\036\n\031EMsgClientSetIgnoreFriend\020\327"
  "\006\022&\n!EMsgClientSetIgnoreFriendResponse\020\330"
  "\006\022$\n\037EMsgClientGetAppOwnershipTicket\020\331\006\022"
  ",\n\'EMsgClientGetAppOwnershipTicketRespon"
  "se\020\332\006\022#\n\036EMsgClientGetLobbyListResponse\020"
  "\334\006\022\031\n\024EMsgClientServerList\020\360\006\022\035\n\030EMsgCli"
  "entDRMBlobRequest\020\200\007\022\036\n\031EMsgClientDRMBlo"
  "bResponse\020\201\007\022\027\n\022EMsgBaseGameServer\020\204\007\022\033\n"
  "\026EMsgGSDisconnectNotice\020\205\007\022\021\n\014EMsgGSStat"
  "us\020\207\007\022\026\n\021EMsgGSUserPlaying\020\211\007\022\022\n\rEMsgGSS"
  "tatus2\020\212\007\022\036\n\031EMsgGSStatusUpdate_Unused\020\213"
  "\007\022\025\n\020EMsgGSServerType\020\214\007\022\025\n\020EMsgGSPlayer"
  "List\020\215\007\022#\n\036EMsgGSGetUserAchievementStatu"
  "s\020\216\007\022+\n&EMsgGSGetUserAchievementStatusRe"
  "sponse\020\217\007\022\027\n\022EMsgGSGetPlayStats\020\226\007\022\037\n\032EM"
  "sgGSGetPlayStatsResponse\020\227\007\022\035\n\030EMsgGSGet"
  "UserGroupStatus\020\230\007\022\035\n\030EMsgAMGetUserGroup"
  "Status\020\231\007\022%\n EMsgAMGetUserGroupStatusRes"
  "ponse\020\232\007\022%\n EMsgGSGetUserGroupStatusResp"
  "onse\020\233\007\022\030\n\023EMsgGSGetReputation\020\250\007\022 \n\033EMs"
  "gGSGetReputationResponse\020\251\007\022\034\n\027EMsgGSAss"
  "ociateWithClan\020\252\007\022$\n\037EMsgGSAssociateWith"
  "ClanResponse\020\253\007\022(\n#EMsgGSComputeNewPlaye"
  "rCompatibility\020\254\007\0220\n+EMsgGSComputeNewPla"
  "yerCompatibilityResponse\020\255\007\022\022\n\rEMsgBaseA"
  "dmin\020\350\007\022\021\n\014EMsgAdminCmd\020\350\007\022\031\n\024EMsgAdminC"
  "mdResponse\020\354\007\022\036\n\031EMsgAdminLogListenReque"
  "st\020\355\007\022\026\n\021EMsgAdminLogEvent\020\356\007\022\025\n\020EMsgUni"
  "verseData\020\362\007\022\022\n\rEMsgAdminSpew\020\373\007\022\032\n\025EMsg"
  "AdminConsoleTitle\020\374\007\022\024\n\017EMsgAdminGCSpew\020"
  "\377\007\022\027\n\022EMsgAdminGCCommand\020\200\010\022\036\n\031EMsgAdmin"
  "GCGetCommandList\020\201\010\022&\n!EMsgAdminGCGetCom"
  "mandListResponse\020\202\010\022\032\n\025EMsgFBSConnection"
  "Data\020\203\010\022\025\n\020EMsgAdminMsgSpew\020\204\010\022\020\n\013EMsgBa"
  "seFBS\020\314\010\022\026\n\021EMsgFBSReqVersion\020\314\010\022\027\n\022EMsg"
  "FBSVersionInfo\020\315\010\022\030\n\023EMsgFBSForceRefresh"
  "\020\316\010\022\027\n\022EMsgFBSForceBounce\020\317\010\022\031\n\024EMsgFBSD"
  "eployPackage\020\320\010\022\032\n\025EMsgFBSDeployResponse"
  "\020\321\010\022\036\n\031EMsgFBSUpdateBootstrapper\020\322\010\022\024\n\017E"
  "MsgFBSSetState\020\323\010\022\032\n\025EMsgFBSApplyOSUpdat"
  "es\020\324\010\022\030\n\023EMsgFBSRunCMDScript\020\325\010\022\025\n\020EMsgF"
  "BSRebootBox\020\326\010\022\035\n\030EMsgFBSSetBigBrotherMo"
  "de\020\327\010\022\032\n\025EMsgFBSMinidumpServer\020\330\010\022\037\n\032EMs"
  "gFBSDeployHotFixPackage\020\332\010\022 \n\033EMsgFBSDep"
  "loyHotFixResponse\020\333\010\022\032\n\025EMsgFBSDownloadH"
  "otFix\020\334\010\022\"\n\035EMsgFBSDownloadHotFixRespons"
  "e\020\335\010\022\"\n\035EMsgFBSUpdateTargetConfigFile\020\336\010"
  "\022\034\n\027EMsgFBSApplyAccountCred\020\337\010\022$\n\037EMsgFB"
  "SApplyAccountCredResponse\020\340\010\022\031\n\024EMsgFBSS"
  "etShellCount\020\341\010\022\032\n\025EMsgFBSTerminateShell"
  "\020\342\010\022\035\n\030EMsgFBSQueryGMForRequest\020\343\010\022\033\n\026EM"
  "sgFBSQueryGMResponse\020\344\010\022\034\n\027EMsgFBSTermin"
  "ateZombies\020\345\010\022 \n\033EMsgFBSInfoFromBootstra"
  "pper\020\346\010\022\035\n\030EMsgFBSRebootBoxResponse\020\347\010\022&"
  "\n!EMsgFBSBootstrapperPackageRequest\020\350\010\022\'"
  "\n\"EMsgFBSBootstrapperPackageResponse\020\351\010\022"
  "\'\n\"EMsgFBSBootstrapperGetPackageChunk\020\352\010"
  "\022/\n*EMsgFBSBootstrapperGetPackageChunkRe"
  "sponse\020\353\010\022/\n*EMsgFBSBootstrapperPackageT"
  "ransferProgress\020\354\010\022\037\n\032EMsgFBSRestartBoot"
  "strapper\020\355\010\022\034\n\027EMsgFBSPauseFrozenDumps\020\356"
  "\010\022\025\n\020EMsgBaseFileXfer\020\260\t\022\030\n\023EMsgFileXfer"
  "Request\020\260\t\022\031\n\024EMsgFileXferResponse\020\261\t\022\025\n"
  "\020EMsgFileXferData\020\262\t\022\024\n\017EMsgFileXferEnd\020"
  "\263\t\022\030\n\023EMsgFileXferDataAck\020\264\t\022\030\n\023EMsgBase"
  "ChannelAuth\020\224\n\022\035\n\030EMsgChannelAuthChallen"
  "ge\020\224\n\022\034\n\027EMsgChannelAuthResponse\020\225\n\022\032\n\025E"
  "MsgChannelAuthResult\020\226\n\022\036\n\031EMsgChannelEn"
  "cryptRequest\020\227\n\022\037\n\032EMsgChannelEncryptRes"
  "ponse\020\230\n\022\035\n\030EMsgChannelEncryptResult\020\231\n\022"
  "\017\n\nEMsgBaseBS\020\370\n\022\030\n\023EMsgBSPurchaseStart\020"
  "\371\n\022\033\n\026EMsgBSPurchaseResponse\020\372\n\022\036\n\031EMsgB"
  "SAuthenticateCCTrans\020\373\n\022&\n!EMsgBSAuthent"
  "icateCCTransResponse\020\374\n\022\031\n\024EMsgBSSettleC"
  "omplete\020\376\n\022\030\n\023EMsgBSInitPayPalTxn\020\200\013\022 \n\033"
  "EMsgBSInitPayPalTxnResponse\020\201\013\022\034\n\027EMsgBS"
  "GetPayPalUserInfo\020\202\013\022$\n\037EMsgBSGetPayPalU"
  "serInfoResponse\020\203\013\022\032\n\025EMsgBSPaymentInstr"
  "Ban\020\211\013\022\"\n\035EMsgBSPaymentInstrBanResponse\020"
  "\212\013\022\034\n\027EMsgBSInitGCBankXferTxn\020\215\013\022$\n\037EMsg"
  "BSInitGCBankXferTxnResponse\020\216\013\022\026\n\021EMsgBS"
  "CommitGCTxn\020\221\013\022!\n\034EMsgBSQueryTransaction"
  "Status\020\222\013\022)\n$EMsgBSQueryTransactionStatu"
  "sResponse\020\223\013\022\037\n\032EMsgBSQueryTxnExtendedIn"
  "fo\020\231\013\022\'\n\"EMsgBSQueryTxnExtendedInfoRespo"
  "nse\020\232\013\022 \n\033EMsgBSUpdateConversionRates\020\233\013"
  "\022!\n\034EMsgBSPurchaseRunFraudChecks\020\235\013\022)\n$E"
  "MsgBSPurchaseRunFraudChecksResponse\020\236\013\022\037"
  "\n\032EMsgBSQueryBankInformation\020\240\013\022\'\n\"EMsgB"
  "SQueryBankInformationResponse\020\241\013\022\"\n\035EMsg"
  "BSValidateXsollaSignature\020\245\013\022*\n%EMsgBSVa"
  "lidateXsollaSignatureResponse\020\246\013\022\034\n\027EMsg"
  "BSQiwiWalletInvoice\020\250\013\022$\n\037EMsgBSQiwiWall"
  "etInvoiceResponse\020\251\013\022%\n EMsgBSUpdateInve"
  "ntoryFromProPack\020\252\013\022-\n(EMsgBSUpdateInven"
  "toryFromProPackResponse\020\253\013\022\036\n\031EMsgBSSend"
  "ShippingRequest\020\254\013\022&\n!EMsgBSSendShipping"
  "RequestResponse\020\255\013\022 \n\033EMsgBSGetProPackOr"
  "derStatus\020\256\013\022(\n#EMsgBSGetProPackOrderSta"
  "tusResponse\020\257\013\022\032\n\025EMsgBSCheckJobRunning\020"
  "\260\013\022\"\n\035EMsgBSCheckJobRunningResponse\020\261\013\022("
  "\n#EMsgBSResetPackagePurchaseRateLimit\020\262\013"
  "\0220\n+EMsgBSResetPackagePurchaseRateLimitR"
  "esponse\020\263\013\022\034\n\027EMsgBSUpdatePaymentData\020\264\013"
  "\022$\n\037EMsgBSUpdatePaymentDataResponse\020\265\013\022\034"
  "\n\027EMsgBSGetBillingAddress\020\266\013\022$\n\037EMsgBSGe"
  "tBillingAddressResponse\020\267\013\022\034\n\027EMsgBSGetC"
  "reditCardInfo\020\270\013\022$\n\037EMsgBSGetCreditCardI"
  "nfoResponse\020\271\013\022#\n\036EMsgBSRemoveExpiredPay"
  "mentData\020\274\013\022+\n&EMsgBSRemoveExpiredPaymen"
  "tDataResponse\020\275\013\022\037\n\032EMsgBSConvertToCurre"
  "ntKeys\020\276\013\022\'\n\"EMsgBSConvertToCurrentKeysR"
  "esponse\020\277\013\022\027\n\022EMsgBSInitPurchase\020\300\013\022\037\n\032E"
  "MsgBSInitPurchaseResponse\020\301\013\022\033\n\026EMsgBSCo"
  "mpletePurchase\020\302\013\022#\n\036EMsgBSCompletePurch"
  "aseResponse\020\303\013\022\036\n\031EMsgBSPruneCardUsageSt"
  "ats\020\304\013\022&\n!EMsgBSPruneCardUsageStatsRespo"
  "nse\020\305\013\022\037\n\032EMsgBSStoreBankInformation\020\306\013\022"
  "\'\n\"EMsgBSStoreBankInformationResponse\020\307\013"
  "\022\030\n\023EMsgBSVerifyPOSAKey\020\310\013\022 \n\033EMsgBSVeri"
  "fyPOSAKeyResponse\020\311\013\022\037\n\032EMsgBSReverseRed"
  "eemPOSAKey\020\312\013\022\'\n\"EMsgBSReverseRedeemPOSA"
  "KeyResponse\020\313\013\022\036\n\031EMsgBSQueryFindCreditC"
  "ard\020\314\013\022&\n!EMsgBSQueryFindCreditCardRespo"
  "nse\020\315\013\022\037\n\032EMsgBSStatusInquiryPOSAKey\020\316\013\022"
  "\'\n\"EMsgBSStatusInquiryPOSAKeyResponse\020\317\013"
  "\022*\n%EMsgBSBoaCompraConfirmProductDeliver"
  "y\020\326\013\0222\n-EMsgBSBoaCompraConfirmProductDel"
  "iveryResponse\020\327\013\022\037\n\032EMsgBSGenerateBoaCom"
  "praMD5\020\330\013\022\'\n\"EMsgBSGenerateBoaCompraMD5R"
  "esponse\020\331\013\022\026\n\021EMsgBSCommitWPTxn\020\332\013\022\031\n\024EM"
  "sgBSCommitAdyenTxn\020\333\013\022\020\n\013EMsgBaseATS\020\334\013\022"
  "\033\n\026EMsgATSStartStressTest\020\335\013\022\032\n\025EMsgATSS"
  "topStressTest\020\336\013\022\035\n\030EMsgATSRunFailServer"
  "Test\020\337\013\022\033\n\026EMsgATSUFSPerfTestTask\020\340\013\022\037\n\032"
  "EMsgATSUFSPerfTestResponse\020\341\013\022\024\n\017EMsgATS"
  "CycleTCM\020\342\013\022\036\n\031EMsgATSInitDRMSStressTest"
  "\020\343\013\022\024\n\017EMsgATSCallTest\020\344\013\022\031\n\024EMsgATSCall"
  "TestReply\020\345\013\022\037\n\032EMsgATSStartExternalStre"
  "ss\020\346\013\022\"\n\035EMsgATSExternalStressJobStart\020\347"
  "\013\022#\n\036EMsgATSExternalStressJobQueued\020\350\013\022$"
  "\n\037EMsgATSExternalStressJobRunning\020\351\013\022$\n\037"
  "EMsgATSExternalStressJobStopped\020\352\013\022$\n\037EM"
  "sgATSExternalStressJobStopAll\020\353\013\022&\n!EMsg"
  "ATSExternalStressActionResult\020\354\013\022\023\n\016EMsg"
  "ATSStarted\020\355\013\022\032\n\025EMsgATSCSPerfTestTask\020\356"
  "\013\022\036\n\031EMsgATSCSPerfTestResponse\020\357\013\022\017\n\nEMs"
  "gBaseDP\020\300\014\022\035\n\030EMsgDPSetPublishingState\020\301"
  "\014\022\034\n\027EMsgDPUniquePlayersStat\020\303\014\022\025\n\020EMsgD"
  "PCloudStats\020\314\014\022\031\n\024EMsgDPGetPlayerCount\020\317"
  "\014\022!\n\034EMsgDPGetPlayerCountResponse\020\320\014\022\"\n\035"
  "EMsgDPGameServersPlayersStats\020\321\014\022#\n\036EMsg"
  "ClientDPCheckSpecialSurvey\020\324\014\022+\n&EMsgCli"
  "entDPCheckSpecialSurveyResponse\020\325\014\022*\n%EM"
  "sgClientDPSendSpecialSurveyResponse\020\326\014\022/"
  "\n*EMsgClientDPSendSpecialSurveyResponseR"
  "eply\020\327\014\022\036\n\031EMsgDPStoreSaleStatistics\020\330\014\022"
  "\033\n\026EMsgDPPartnerMicroTxns\020\334\014\022#\n\036EMsgDPPa"
  "rtnerMicroTxnsResponse\020\335\014\022\036\n\031EMsgDPVRUni"
  "quePlayersStat\020\337\014\022\017\n\nEMsgBaseCM\020\244\r\022\030\n\023EM"
  "sgCMSetAllowState\020\245\r\022\031\n\024EMsgCMSpewAllowS"
  "tate\020\246\r\022\032\n\025EMsgCMSessionRejected\020\247\r\022\025\n\020E"
  "MsgCMSetSecrets\020\250\r\022\025\n\020EMsgCMGetSecrets\020\251"
  "\r\022 \n\033EMsgCMRemotePlayReplyPacket\020\252\r\022\017\n\nE"
  "MsgBaseGC\020\230\021\022\024\n\017EMsgGCCmdRevive\020\233\021\022\022\n\rEM"
  "sgGCCmdDown\020\236\021\022\024\n\017EMsgGCCmdDeploy\020\237\021\022\034\n\027"
  "EMsgGCCmdDeployResponse\020\240\021\022\024\n\017EMsgGCCmdS"
  "witch\020\241\021\022\032\n\025EMsgAMRefreshSessions\020\242\021\022\035\n\030"
  "EMsgGCAchievementAwarded\020\244\021\022\024\n\017EMsgGCCmd"
  "Status\020\250\021\022+\n&EMsgGCRegisterWebInterfaces"
  "_Deprecated\020\251\021\022\'\n\"EMsgGCGetAccountDetail"
  "s_DEPRECATED\020\252\021\022\032\n\025EMsgGCInterAppMessage"
  "\020\253\021\022\033\n\026EMsgGCGetEmailTemplate\020\254\021\022#\n\036EMsg"
  "GCGetEmailTemplateResponse\020\255\021\022\021\n\014EMsgGCH"
  "Relay\020\256\021\022\031\n\024EMsgGCHRelayToClient\020\257\021\022\031\n\024E"
  "MsgGCHUpdateSession\020\260\021\022 \n\033EMsgGCHRequest"
  "UpdateSession\020\261\021\022\031\n\024EMsgGCHRequestStatus"
  "\020\262\021\022!\n\034EMsgGCHRequestStatusResponse\020\263\021\022\""
  "\n\035EMsgGCHAccountVacStatusChange\020\264\021\022\023\n\016EM"
  "sgGCHSpawnGC\020\265\021\022\033\n\026EMsgGCHSpawnGCRespons"
  "e\020\266\021\022\022\n\rEMsgGCHKillGC\020\267\021\022\032\n\025EMsgGCHKillG"
  "CResponse\020\270\021\022\'\n\"EMsgGCHAccountTradeBanSt"
  "atusChange\020\271\021\022#\n\036EMsgGCHAccountLockStatu"
  "sChange\020\272\021\022!\n\034EMsgGCHVacVerificationChan"
  "ge\020\273\021\022$\n\037EMsgGCHAccountPhoneNumberChange"
  "\020\274\021\022\"\n\035EMsgGCHAccountTwoFactorChange\020\275\021\022"
  "\035\n\030EMsgGCHInviteUserToLobby\020\276\021\022\"\n\035EMsgGC"
  "HUpdateMultipleSessions\020\277\021\022(\n#EMsgGCHMar"
  "kAppSessionsAuthoritative\020\300\021\022-\n(EMsgGCHR"
  "ecurringSubscriptionStatusChange\020\301\021\022\035\n\030E"
  "MsgGCHAppCheersReceived\020\302\021\022$\n\037EMsgGCHApp"
  "CheersGetAllowedTypes\020\303\021\022,\n\'EMsgGCHAppCh"
  "eersGetAllowedTypesResponse\020\304\021\022#\n\036EMsgGC"
  "HRoutingRulesFromGCHtoGM\020\305\021\022#\n\036EMsgGCHRo"
  "utingRulesToGCHfromGM\020\306\021\022!\n\034EMsgUpdateCM"
  "MessageRateRules\020\307\021\022\020\n\013EMsgBaseP2P\020\304\023\022\035\n"
  "\030EMsgP2PIntroducerMessage\020\306\023\022\017\n\nEMsgBase"
  "SM\020\324\026\022\032\n\025EMsgSMExpensiveReport\020\326\026\022\027\n\022EMs"
  "gSMHourlyReport\020\327\026\022\033\n\026EMsgSMPartitionRen"
  "ames\020\331\026\022\027\n\022EMsgSMMonitorSpace\020\332\026\022(\n#EMsg"
  "SMTestNextBuildSchemaConversion\020\333\026\0220\n+EM"
  "sgSMTestNextBuildSchemaConversionRespons"
  "e\020\334\026\022\021\n\014EMsgBaseTest\020\270\027\022\023\n\016EMsgFailServe"
  "r\020\270\027\022\031\n\024EMsgJobHeartbeatTest\020\271\027\022!\n\034EMsgJ"
  "obHeartbeatTestResponse\020\272\027\022\025\n\020EMsgBaseFT"
  "SRange\020\234\030\022\025\n\020EMsgBaseCCSRange\020\316\030\022%\n EMsg"
  "CCSDeleteAllCommentsByAuthor\020\331\030\022-\n(EMsgC"
  "CSDeleteAllCommentsByAuthorResponse\020\332\030\022\025"
  "\n\020EMsgBaseLBSRange\020\200\031\022\024\n\017EMsgLBSSetScore"
  "\020\201\031\022\034\n\027EMsgLBSSetScoreResponse\020\202\031\022\032\n\025EMs"
  "gLBSFindOrCreateLB\020\203\031\022\"\n\035EMsgLBSFindOrCr"
  "eateLBResponse\020\204\031\022\030\n\023EMsgLBSGetLBEntries"
  "\020\205\031\022 \n\033EMsgLBSGetLBEntriesResponse\020\206\031\022\025\n"
  "\020EMsgLBSGetLBList\020\207\031\022\035\n\030EMsgLBSGetLBList"
  "Response\020\210\031\022\030\n\023EMsgLBSSetLBDetails\020\211\031\022\024\n"
  "\017EMsgLBSDeleteLB\020\212\031\022\031\n\024EMsgLBSDeleteLBEn"
  "try\020\213\031\022\023\n\016EMsgLBSResetLB\020\214\031\022\033\n\026EMsgLBSRe"
  "setLBResponse\020\215\031\022\034\n\027EMsgLBSDeleteLBRespo"
  "nse\020\216\031\022\020\n\013EMsgBaseOGS\020\310\032\022\030\n\023EMsgOGSBegin"
  "Session\020\311\032\022 \n\033EMsgOGSBeginSessionRespons"
  "e\020\312\032\022\026\n\021EMsgOGSEndSession\020\313\032\022\036\n\031EMsgOGSE"
  "ndSessionResponse\020\314\032\022\036\n\031EMsgOGSWriteAppS"
  "essionRow\020\316\032\022\020\n\013EMsgBaseBRP\020\220\034\022\025\n\020EMsgBa"
  "seAMRange2\020\240\037\022\025\n\020EMsgAMCreateChat\020\241\037\022\035\n\030"
  "EMsgAMCreateChatResponse\020\242\037\022!\n\034EMsgAMGet"
  "AccountEmailAddress\020\246\037\022)\n$EMsgAMGetAccou"
  "ntEmailAddressResponse\020\247\037\022\032\n\025EMsgAMReque"
  "stClanData\020\250\037\022\031\n\024EMsgAMRouteToClients\020\251\037"
  "\022\024\n\017EMsgAMLeaveClan\020\252\037\022\032\n\025EMsgAMClanPerm"
  "issions\020\253\037\022\"\n\035EMsgAMClanPermissionsRespo"
  "nse\020\254\037\022.\n)EMsgAMCreateClanEventDummyForR"
  "ateLimiting\020\255\037\022.\n)EMsgAMUpdateClanEventD"
  "ummyForRateLimiting\020\257\037\022$\n\037EMsgAMSetClanP"
  "ermissionSettings\020\265\037\022,\n\'EMsgAMSetClanPer"
  "missionSettingsResponse\020\266\037\022$\n\037EMsgAMGetC"
  "lanPermissionSettings\020\267\037\022,\n\'EMsgAMGetCla"
  "nPermissionSettingsResponse\020\270\037\022\036\n\031EMsgAM"
  "PublishChatRoomInfo\020\271\037\022\033\n\026EMsgClientChat"
  "RoomInfo\020\272\037\022\031\n\024EMsgAMGetClanHistory\020\307\037\022!"
  "\n\034EMsgAMGetClanHistoryResponse\020\310\037\022 \n\033EMs"
  "gAMGetClanPermissionBits\020\311\037\022(\n#EMsgAMGet"
  "ClanPermissionBitsResponse\020\312\037\022 \n\033EMsgAMS"
  "etClanPermissionBits\020\313\037\022(\n#EMsgAMSetClan"
  "PermissionBitsResponse\020\314\037\022\035\n\030EMsgAMSessi"
  "onInfoRequest\020\315\037\022\036\n\031EMsgAMSessionInfoRes"
  "ponse\020\316\037\022\032\n\025EMsgAMValidateWGToken\020\317\037\022\026\n\021"
  "EMsgAMGetClanRank\020\322\037\022\036\n\031EMsgAMGetClanRan"
  "kResponse\020\323\037\022\026\n\021EMsgAMSetClanRank\020\324\037\022\036\n\031"
  "EMsgAMSetClanRankResponse\020\325\037\022\026\n\021EMsgAMGe"
  "tClanPOTW\020\326\037\022\036\n\031EMsgAMGetClanPOTWRespons"
  "e\020\327\037\022\026\n\021EMsgAMSetClanPOTW\020\330\037\022\036\n\031EMsgAMSe"
  "tClanPOTWResponse\020\331\037\022\023\n\016EMsgAMDumpUser\020\333"
  "\037\022\033\n\026EMsgAMKickUserFromClan\020\334\037\022\033\n\026EMsgAM"
  "AddFounderToClan\020\335\037\022\"\n\035EMsgAMValidateWGT"
  "okenResponse\020\336\037\022\034\n\027EMsgAMSetAccountDetai"
  "ls\020\340\037\022\031\n\024EMsgAMGetChatBanList\020\341\037\022!\n\034EMsg"
  "AMGetChatBanListResponse\020\342\037\022\030\n\023EMsgAMUnB"
  "anFromChat\020\343\037\022\031\n\024EMsgAMSetClanDetails\020\344\037"
  "\022\034\n\027EMsgUGSGetUserGameStats\020\351\037\022$\n\037EMsgUG"
  "SGetUserGameStatsResponse\020\352\037\022\036\n\031EMsgAMCh"
  "eckClanMembership\020\353\037\022\031\n\024EMsgAMGetClanMem"
  "bers\020\354\037\022!\n\034EMsgAMGetClanMembersResponse\020"
  "\355\037\022!\n\034EMsgAMNotifyChatOfClanChange\020\357\037\022\033\n"
  "\026EMsgAMResubmitPurchase\020\360\037\022\024\n\017EMsgAMAddF"
  "riend\020\361\037\022\034\n\027EMsgAMAddFriendResponse\020\362\037\022\027"
  "\n\022EMsgAMRemoveFriend\020\363\037\022\023\n\016EMsgAMDumpCla"
  "n\020\364\037\022\032\n\025EMsgAMChangeClanOwner\020\365\037\022\034\n\027EMsg"
  "AMCancelEasyCollect\020\366\037\022$\n\037EMsgAMCancelEa"
  "syCollectResponse\020\367\037\022\030\n\023EMsgAMClansInCom"
  "mon\020\372\037\022 \n\033EMsgAMClansInCommonResponse\020\373\037"
  "\022\033\n\026EMsgAMIsValidAccountID\020\374\037\022\032\n\025EMsgAMW"
  "ipeFriendsList\020\377\037\022\025\n\020EMsgAMSetIgnored\020\200 "
  "\022%\n EMsgAMClansInCommonCountResponse\020\201 \022"
  "\026\n\021EMsgAMFriendsList\020\202 \022\036\n\031EMsgAMFriends"
  "ListResponse\020\203 \022\032\n\025EMsgAMFriendsInCommon"
  "\020\204 \022\"\n\035EMsgAMFriendsInCommonResponse\020\205 \022"
  "\'\n\"EMsgAMFriendsInCommonCountResponse\020\206 "
  "\022\035\n\030EMsgAMClansInCommonCount\020\207 \022\033\n\026EMsgA"
  "MChallengeVerdict\020\210 \022 \n\033EMsgAMChallengeN"
  "otification\020\211 \022\025\n\020EMsgAMFindGSByIP\020\212 \022\026\n"
  "\021EMsgAMFoundGSByIP\020\213 \022\026\n\021EMsgAMGiftRevok"
  "ed\020\214 \022\027\n\022EMsgAMUserClanList\020\216 \022\037\n\032EMsgAM"
  "UserClanListResponse\020\217 \022\035\n\030EMsgAMGetAcco"
  "untDetails2\020\220 \022%\n EMsgAMGetAccountDetail"
  "sResponse2\020\221 \022&\n!EMsgAMSetCommunityProfi"
  "leSettings\020\222 \022.\n)EMsgAMSetCommunityProfi"
  "leSettingsResponse\020\223 \022#\n\036EMsgAMGetCommun"
  "ityPrivacyState\020\224 \022+\n&EMsgAMGetCommunity"
  "PrivacyStateResponse\020\225 \022&\n!EMsgAMCheckCl"
  "anInviteRateLimiting\020\226 \022$\n\037EMsgUGSGetUse"
  "rAchievementStatus\020\227 \022\025\n\020EMsgAMGetIgnore"
  "d\020\230 \022\035\n\030EMsgAMGetIgnoredResponse\020\231 \022\035\n\030E"
  "MsgAMSetIgnoredResponse\020\232 \022$\n\037EMsgAMSetF"
  "riendRelationshipNone\020\233 \022 \n\033EMsgAMGetFri"
  "endRelationship\020\234 \022(\n#EMsgAMGetFriendRel"
  "ationshipResponse\020\235 \022\036\n\031EMsgAMServiceMod"
  "ulesCache\020\236 \022\035\n\030EMsgAMServiceModulesCall"
  "\020\237 \022%\n EMsgAMServiceModulesCallResponse\020"
  "\240 \022\037\n\032EMsgCommunityAddFriendNews\020\254 \022\027\n\022E"
  "MsgAMFindClanUser\020\257 \022\037\n\032EMsgAMFindClanUs"
  "erResponse\020\260 \022\026\n\021EMsgAMBanFromChat\020\261 \022#\n"
  "\036EMsgAMGetUserNewsSubscriptions\020\263 \022+\n&EM"
  "sgAMGetUserNewsSubscriptionsResponse\020\264 \022"
  "#\n\036EMsgAMSetUserNewsSubscriptions\020\265 \022\033\n\026"
  "EMsgAMSendQueuedEmails\020\270 \022\032\n\025EMsgAMSetLi"
  "censeFlags\020\271 \022\033\n\026EMsgAMGetAccountStatus\020"
  "\276 \022#\n\036EMsgAMGetAccountStatusResponse\020\277 \022"
  "\030\n\023EMsgAMEditBanReason\020\300 \022&\n!EMsgAMCheck"
  "ClanMembershipResponse\020\301 \022\"\n\035EMsgAMProbe"
  "ClanMembershipList\020\302 \022*\n%EMsgAMProbeClan"
  "MembershipListResponse\020\303 \022,\n\'EMsgUGSGetU"
  "serAchievementStatusResponse\020\304 \022\034\n\027EMsgA"
  "MGetFriendsLobbies\020\305 \022$\n\037EMsgAMGetFriend"
  "sLobbiesResponse\020\306 \022$\n\037EMsgAMGetUserFrie"
  "ndNewsResponse\020\314 \022#\n\036EMsgCommunityGetUse"
  "rFriendNews\020\315 \022#\n\036EMsgAMGetUserClansNews"
  "Response\020\316 \022\033\n\026EMsgAMGetUserClansNews\020\317 "
  "\022\037\n\032EMsgAMGetPreviousCBAccount\020\330 \022\'\n\"EMs"
  "gAMGetPreviousCBAccountResponse\020\331 \022 \n\033EM"
  "sgAMGetUserLicenseHistory\020\336 \022(\n#EMsgAMGe"
  "tUserLicenseHistoryResponse\020\337 \022 \n\033EMsgAM"
  "SupportChangePassword\020\342 \022\035\n\030EMsgAMSuppor"
  "tChangeEmail\020\343 \022&\n!EMsgAMResetUserVerifi"
  "cationGSByIP\020\345 \022\034\n\027EMsgAMUpdateGSPlaySta"
  "ts\020\346 \022!\n\034EMsgAMSupportEnableOrDisable\020\347 "
  "\022\034\n\027EMsgAMGetPurchaseStatus\020\356 \022\"\n\035EMsgAM"
  "SupportIsAccountEnabled\020\361 \022*\n%EMsgAMSupp"
  "ortIsAccountEnabledResponse\020\362 \022\030\n\023EMsgUG"
  "SGetUserStats\020\363 \022\023\n\016EMsgAMGSSearch\020\365 \022!\n"
  "\034EMsgChatServerRouteFriendMsg\020\373 \022&\n!EMsg"
  "AMTicketAuthRequestOrResponse\020\374 \022\031\n\024EMsg"
  "AMAddFreeLicense\020\200!\022\034\n\027EMsgAMValidateEma"
  "ilLink\020\207!\022$\n\037EMsgAMValidateEmailLinkResp"
  "onse\020\210!\022\032\n\025EMsgUGSStoreUserStats\020\214!\022\033\n\026E"
  "MsgAMDeleteStoredCard\020\221!\022\037\n\032EMsgAMRevoke"
  "LegacyGameKeys\020\222!\022\033\n\026EMsgAMGetWalletDeta"
  "ils\020\224!\022#\n\036EMsgAMGetWalletDetailsResponse"
  "\020\225!\022\"\n\035EMsgAMDeleteStoredPaymentInfo\020\226!\022"
  "\"\n\035EMsgAMGetStoredPaymentSummary\020\227!\022*\n%E"
  "MsgAMGetStoredPaymentSummaryResponse\020\230!\022"
  "\"\n\035EMsgAMGetWalletConversionRate\020\231!\022*\n%E"
  "MsgAMGetWalletConversionRateResponse\020\232!\022"
  "\030\n\023EMsgAMConvertWallet\020\233!\022 \n\033EMsgAMConve"
  "rtWalletResponse\020\234!\022\031\n\024EMsgAMSetPreAppro"
  "val\020\237!\022!\n\034EMsgAMSetPreApprovalResponse\020\240"
  "!\022\027\n\022EMsgAMCreateRefund\020\242!\022\033\n\026EMsgAMCrea"
  "teChargeback\020\244!\022\030\n\023EMsgAMCreateDispute\020\246"
  "!\022\027\n\022EMsgAMClearDispute\020\250!\022$\n\037EMsgAMCrea"
  "teFinancialAdjustment\020\251!\022\035\n\030EMsgAMPlayer"
  "NicknameList\020\252!\022%\n EMsgAMPlayerNicknameL"
  "istResponse\020\253!\022!\n\034EMsgAMGetUserCurrentGa"
  "meInfo\020\255!\022)\n$EMsgAMGetUserCurrentGameInf"
  "oResponse\020\256!\022\032\n\025EMsgAMGetGSPlayerList\020\257!"
  "\022\"\n\035EMsgAMGetGSPlayerListResponse\020\260!\022 \n\033"
  "EMsgAMGetSteamIDForMicroTxn\020\266!\022(\n#EMsgAM"
  "GetSteamIDForMicroTxnResponse\020\267!\022\033\n\026EMsg"
  "AMSetPartnerMember\020\270!\022\036\n\031EMsgAMRemovePub"
  "lisherUser\020\271!\022\035\n\030EMsgAMGetUserLicenseLis"
  "t\020\272!\022%\n EMsgAMGetUserLicenseListResponse"
  "\020\273!\022 \n\033EMsgAMReloadGameGroupPolicy\020\274!\022!\n"
  "\034EMsgAMAddFreeLicenseResponse\020\275!\022\032\n\025EMsg"
  "AMVACStatusUpdate\020\276!\022\034\n\027EMsgAMGetAccount"
  "Details\020\277!\022$\n\037EMsgAMGetAccountDetailsRes"
  "ponse\020\300!\022\037\n\032EMsgAMGetPlayerLinkDetails\020\301"
  "!\022\'\n\"EMsgAMGetPlayerLinkDetailsResponse\020"
  "\302!\022\'\n\"EMsgAMGetAccountFlagsForWGSpoofing"
  "\020\306!\022/\n*EMsgAMGetAccountFlagsForWGSpoofin"
  "gResponse\020\307!\022\032\n\025EMsgAMGetClanOfficers\020\312!"
  "\022\"\n\035EMsgAMGetClanOfficersResponse\020\313!\022\025\n\020"
  "EMsgAMNameChange\020\314!\022\031\n\024EMsgAMGetNameHist"
  "ory\020\315!\022!\n\034EMsgAMGetNameHistoryResponse\020\316"
  "!\022\'\n\"EMsgAMSupportRemoveAccountSecurity\020"
  "\323!\022(\n#EMsgAMIsAccountInCaptchaGracePerio"
  "d\020\324!\0220\n+EMsgAMIsAccountInCaptchaGracePer"
  "iodResponse\020\325!\022\033\n\026EMsgAMAccountPS3Unlink"
  "\020\326!\022#\n\036EMsgAMAccountPS3UnlinkResponse\020\327!"
  "\022\"\n\035EMsgUGSStoreUserStatsResponse\020\330!\022\034\n\027"
  "EMsgAMGetAccountPSNInfo\020\331!\022$\n\037EMsgAMGetA"
  "ccountPSNInfoResponse\020\332!\022\"\n\035EMsgAMAuthen"
  "ticatedPlayerList\020\333!\022\027\n\022EMsgAMGetUserGif"
  "ts\020\334!\022\037\n\032EMsgAMGetUserGiftsResponse\020\335!\022\036"
  "\n\031EMsgAMTransferLockedGifts\020\340!\022&\n!EMsgAM"
  "TransferLockedGiftsResponse\020\341!\022#\n\036EMsgAM"
  "PlayerHostedOnGameServer\020\342!\022\034\n\027EMsgAMGet"
  "AccountBanInfo\020\343!\022$\n\037EMsgAMGetAccountBan"
  "InfoResponse\020\344!\022\037\n\032EMsgAMRecordBanEnforc"
  "ement\020\345!\022\037\n\032EMsgAMRollbackGiftTransfer\020\346"
  "!\022\'\n\"EMsgAMRollbackGiftTransferResponse\020"
  "\347!\022#\n\036EMsgAMHandlePendingTransaction\020\350!\022"
  "\035\n\030EMsgAMRequestClanDetails\020\351!\022&\n!EMsgAM"
  "DeleteStoredPaypalAgreement\020\352!\022\033\n\026EMsgAM"
  "GameServerUpdate\020\353!\022\033\n\026EMsgAMGameServerR"
  "emove\020\354!\022\036\n\031EMsgAMGetPaypalAgreements\020\355!"
  "\022&\n!EMsgAMGetPaypalAgreementsResponse\020\356!"
  "\022-\n(EMsgAMGameServerPlayerCompatibilityC"
  "heck\020\357!\0225\n0EMsgAMGameServerPlayerCompati"
  "bilityCheckResponse\020\360!\022\027\n\022EMsgAMRenewLic"
  "ense\020\361!\022%\n EMsgAMGetAccountCommunityBanI"
  "nfo\020\362!\022-\n(EMsgAMGetAccountCommunityBanIn"
  "foResponse\020\363!\022*\n%EMsgAMGameServerAccount"
  "ChangePassword\020\364!\022)\n$EMsgAMGameServerAcc"
  "ountDeleteAccount\020\365!\022\031\n\024EMsgAMRenewAgree"
  "ment\020\366!\022\030\n\023EMsgAMXsollaPayment\020\370!\022 \n\033EMs"
  "gAMXsollaPaymentResponse\020\371!\022 \n\033EMsgAMAcc"
  "tAllowedToPurchase\020\372!\022(\n#EMsgAMAcctAllow"
  "edToPurchaseResponse\020\373!\022\033\n\026EMsgAMSwapKio"
  "skDeposit\020\374!\022#\n\036EMsgAMSwapKioskDepositRe"
  "sponse\020\375!\022\035\n\030EMsgAMSetUserGiftUnowned\020\376!"
  "\022%\n EMsgAMSetUserGiftUnownedResponse\020\377!\022"
  "\037\n\032EMsgAMClaimUnownedUserGift\020\200\"\022\'\n\"EMsg"
  "AMClaimUnownedUserGiftResponse\020\201\"\022\026\n\021EMs"
  "gAMSetClanName\020\202\"\022\036\n\031EMsgAMSetClanNameRe"
  "sponse\020\203\"\022\026\n\021EMsgAMGrantCoupon\020\204\"\022\036\n\031EMs"
  "gAMGrantCouponResponse\020\205\"\022+\n&EMsgAMIsPac"
  "kageRestrictedInUserCountry\020\206\"\0223\n.EMsgAM"
  "IsPackageRestrictedInUserCountryResponse"
  "\020\207\"\022+\n&EMsgAMHandlePendingTransactionRes"
  "ponse\020\210\"\022\034\n\027EMsgAMGrantGuestPasses2\020\211\"\022$"
  "\n\037EMsgAMGrantGuestPasses2Response\020\212\"\022\036\n\031"
  "EMsgAMGetPlayerBanDetails\020\215\"\022&\n!EMsgAMGe"
  "tPlayerBanDetailsResponse\020\216\"\022\033\n\026EMsgAMFi"
  "nalizePurchase\020\217\"\022#\n\036EMsgAMFinalizePurch"
  "aseResponse\020\220\"\022 \n\033EMsgAMPersonaChangeRes"
  "ponse\020\224\"\022)\n$EMsgAMGetClanDetailsForForum"
  "Creation\020\225\"\0221\n,EMsgAMGetClanDetailsForFo"
  "rumCreationResponse\020\226\"\022&\n!EMsgAMGetPendi"
  "ngNotificationCount\020\227\"\022.\n)EMsgAMGetPendi"
  "ngNotificationCountResponse\020\230\"\022\036\n\031EMsgAM"
  "PasswordHashUpgrade\020\231\"\022\033\n\026EMsgAMBoaCompr"
  "aPayment\020\234\"\022#\n\036EMsgAMBoaCompraPaymentRes"
  "ponse\020\235\"\022#\n\036EMsgAMCompleteExternalPurcha"
  "se\020\237\"\022+\n&EMsgAMCompleteExternalPurchaseR"
  "esponse\020\240\"\022\'\n\"EMsgAMResolveNegativeWalle"
  "tCredits\020\241\"\022/\n*EMsgAMResolveNegativeWall"
  "etCreditsResponse\020\242\"\022$\n\037EMsgAMPlayerGetC"
  "lanBasicDetails\020\245\"\022,\n\'EMsgAMPlayerGetCla"
  "nBasicDetailsResponse\020\246\"\022\025\n\020EMsgAMMOLPay"
  "ment\020\247\"\022\035\n\030EMsgAMMOLPaymentResponse\020\250\"\022\031"
  "\n\024EMsgGetUserIPCountry\020\251\"\022!\n\034EMsgGetUser"
  "IPCountryResponse\020\252\"\022)\n$EMsgNotification"
  "OfSuspiciousActivity\020\253\"\022\030\n\023EMsgAMDegicaP"
  "ayment\020\254\"\022 \n\033EMsgAMDegicaPaymentResponse"
  "\020\255\"\022\027\n\022EMsgAMEClubPayment\020\256\"\022\037\n\032EMsgAMEC"
  "lubPaymentResponse\020\257\"\022#\n\036EMsgAMPayPalPay"
  "mentsHubPayment\020\260\"\022+\n&EMsgAMPayPalPaymen"
  "tsHubPaymentResponse\020\261\"\022/\n*EMsgAMTwoFact"
  "orRecoverAuthenticatorRequest\020\262\"\0220\n+EMsg"
  "AMTwoFactorRecoverAuthenticatorResponse\020"
  "\263\"\022\033\n\026EMsgAMSmart2PayPayment\020\264\"\022#\n\036EMsgA"
  "MSmart2PayPaymentResponse\020\265\"\0225\n0EMsgAMVa"
  "lidatePasswordResetCodeAndSendSmsRequest"
  "\020\266\"\0226\n1EMsgAMValidatePasswordResetCodeAn"
  "dSendSmsResponse\020\267\"\022(\n#EMsgAMGetAccountR"
  "esetDetailsRequest\020\270\"\022)\n$EMsgAMGetAccoun"
  "tResetDetailsResponse\020\271\"\022\030\n\023EMsgAMBitPay"
  "Payment\020\272\"\022 \n\033EMsgAMBitPayPaymentRespons"
  "e\020\273\"\022 \n\033EMsgAMSendAccountInfoUpdate\020\274\"\022\034"
  "\n\027EMsgAMSendScheduledGift\020\275\"\022\030\n\023EMsgAMNo"
  "dwinPayment\020\276\"\022 \n\033EMsgAMNodwinPaymentRes"
  "ponse\020\277\"\022\036\n\031EMsgAMResolveWalletRevoke\020\300\""
  "\022%\n EMsgAMResolveWalletReverseRevoke\020\301\"\022"
  "\030\n\023EMsgAMFundedPayment\020\302\"\022 \n\033EMsgAMFunde"
  "dPaymentResponse\020\303\"\022,\n\'EMsgAMRequestPers"
  "onaUpdateForChatServer\020\304\"\022\036\n\031EMsgAMPerfe"
  "ctWorldPayment\020\305\"\022&\n!EMsgAMPerfectWorldP"
  "aymentResponse\020\306\"\022\032\n\025EMsgAMECommPayPayme"
  "nt\020\307\"\022\"\n\035EMsgAMECommPayPaymentResponse\020\310"
  "\"\022\034\n\027EMsgAMSetRemoteClientID\020\311\"\022\024\n\017EMsgB"
  "asePSRange\020\210\'\022\036\n\031EMsgPSIsValidShoppingCa"
  "rt\020\213\'\022&\n!EMsgPSIsValidShoppingCartRespon"
  "se\020\214\'\022\"\n\035EMsgPSGetShoppingCartContents\020\221"
  "\'\022*\n%EMsgPSGetShoppingCartContentsRespon"
  "se\020\222\'\022(\n#EMsgPSAddWalletCreditToShopping"
  "Cart\020\223\'\0220\n+EMsgPSAddWalletCreditToShoppi"
  "ngCartResponse\020\224\'\022!\n\034EMsgPSGetAccountCar"
  "tContents\020\225\'\022)\n$EMsgPSGetAccountCartCont"
  "entsResponse\020\226\'\022\025\n\020EMsgBaseUFSRange\020\320(\022\037"
  "\n\032EMsgUFSReloadPartitionInfo\020\337(\022\033\n\026EMsgU"
  "FSSynchronizeFile\020\341(\022#\n\036EMsgUFSSynchroni"
  "zeFileResponse\020\342(\022\037\n\032EMsgClientUFSGetUGC"
  "Details\020\352(\022\'\n\"EMsgClientUFSGetUGCDetails"
  "Response\020\353(\022\033\n\026EMsgUFSUpdateFileFlags\020\354("
  "\022#\n\036EMsgUFSUpdateFileFlagsResponse\020\355(\022#\n"
  "\036EMsgClientUFSGetSingleFileInfo\020\356(\022+\n&EM"
  "sgClientUFSGetSingleFileInfoResponse\020\357(\022"
  "\033\n\026EMsgClientUFSShareFile\020\360(\022#\n\036EMsgClie"
  "ntUFSShareFileResponse\020\361(\022\031\n\024EMsgUFSRelo"
  "adAccount\020\362(\022!\n\034EMsgUFSReloadAccountResp"
  "onse\020\363(\022\037\n\032EMsgUFSUpdateRecordBatched\020\364("
  "\022\'\n\"EMsgUFSUpdateRecordBatchedResponse\020\365"
  "(\022\027\n\022EMsgUFSMigrateFile\020\366(\022\037\n\032EMsgUFSMig"
  "rateFileResponse\020\367(\022\026\n\021EMsgUFSGetUGCURLs"
  "\020\370(\022\036\n\031EMsgUFSGetUGCURLsResponse\020\371(\022\'\n\"E"
  "MsgUFSHttpUploadFileFinishRequest\020\372(\022(\n#"
  "EMsgUFSHttpUploadFileFinishResponse\020\373(\022 "
  "\n\033EMsgUFSDownloadStartRequest\020\374(\022!\n\034EMsg"
  "UFSDownloadStartResponse\020\375(\022 \n\033EMsgUFSDo"
  "wnloadChunkRequest\020\376(\022!\n\034EMsgUFSDownload"
  "ChunkResponse\020\377(\022!\n\034EMsgUFSDownloadFinis"
  "hRequest\020\200)\022\"\n\035EMsgUFSDownloadFinishResp"
  "onse\020\201)\022\031\n\024EMsgUFSFlushURLCache\020\202)\022\034\n\027EM"
  "sgUFSMigrateFileAppID\020\205)\022$\n\037EMsgUFSMigra"
  "teFileAppIDResponse\020\206)\022\024\n\017EMsgBaseClient"
  "2\020\230*\022,\n\'EMsgClientRequestForgottenPasswo"
  "rdEmail\020\231*\0224\n/EMsgClientRequestForgotten"
  "PasswordEmailResponse\020\232*\022$\n\037EMsgClientCr"
  "eateAccountResponse\020\233*\022%\n EMsgClientRese"
  "tForgottenPassword\020\234*\022-\n(EMsgClientReset"
  "ForgottenPasswordResponse\020\235*\022-\n(EMsgClie"
  "ntInformOfResetForgottenPassword\020\237*\0225\n0E"
  "MsgClientInformOfResetForgottenPasswordR"
  "esponse\020\240*\022\'\n\"EMsgClientAnonUserLogOn_De"
  "precated\020\241*\022&\n!EMsgClientGamesPlayedWith"
  "DataBlob\020\242*\022!\n\034EMsgClientUpdateUserGameI"
  "nfo\020\243*\022\035\n\030EMsgClientFileToDownload\020\244*\022%\n"
  " EMsgClientFileToDownloadResponse\020\245*\022\032\n\025"
  "EMsgClientLBSSetScore\020\246*\022\"\n\035EMsgClientLB"
  "SSetScoreResponse\020\247*\022 \n\033EMsgClientLBSFin"
  "dOrCreateLB\020\250*\022(\n#EMsgClientLBSFindOrCre"
  "ateLBResponse\020\251*\022\036\n\031EMsgClientLBSGetLBEn"
  "tries\020\252*\022&\n!EMsgClientLBSGetLBEntriesRes"
  "ponse\020\253*\022\033\n\026EMsgClientChatDeclined\020\262*\022 \n"
  "\033EMsgClientFriendMsgIncoming\020\263*\022\"\n\035EMsgC"
  "lientAuthList_Deprecated\020\264*\022!\n\034EMsgClien"
  "tTicketAuthComplete\020\265*\022\037\n\032EMsgClientIsLi"
  "mitedAccount\020\266*\022\036\n\031EMsgClientRequestAuth"
  "List\020\267*\022\027\n\022EMsgClientAuthList\020\270*\022\036\n\031EMsg"
  "ClientStat_Deprecated\020\271*\022 \n\033EMsgClientP2"
  "PConnectionInfo\020\272*\022$\n\037EMsgClientP2PConne"
  "ctionFailInfo\020\273*\022$\n\037EMsgClientGetDepotDe"
  "cryptionKey\020\276*\022,\n\'EMsgClientGetDepotDecr"
  "yptionKeyResponse\020\277*\022 \n\033EMsgClientEnable"
  "TestLicense\020\303*\022(\n#EMsgClientEnableTestLi"
  "censeResponse\020\304*\022!\n\034EMsgClientDisableTes"
  "tLicense\020\305*\022)\n$EMsgClientDisableTestLice"
  "nseResponse\020\306*\022#\n\036EMsgClientCheckAppBeta"
  "Password\020\312*\022+\n&EMsgClientCheckAppBetaPas"
  "swordResponse\020\313*\022\023\n\016EMsgClientToGC\020\314*\022\025\n"
  "\020EMsgClientFromGC\020\315*\022\034\n\027EMsgClientEmailA"
  "ddrInfo\020\320*\022\036\n\031EMsgClientPasswordChange3\020"
  "\321*\022\033\n\026EMsgClientEmailChange3\020\322*\022 \n\033EMsgC"
  "lientPersonalQAChange3\020\323*\022&\n!EMsgClientR"
  "esetForgottenPassword3\020\324*\022-\n(EMsgClientR"
  "equestForgottenPasswordEmail3\020\325*\022\032\n\025EMsg"
  "ClientNewLoginKey\020\327*\022-\n(EMsgClientNewLog"
  "inKeyAccepted_Deprecated\020\330*\022\'\n\"EMsgClien"
  "tLogOnWithHash_Deprecated\020\331*\022\036\n\031EMsgClie"
  "ntStoreUserStats2\020\332*\022\033\n\026EMsgClientStatsU"
  "pdated\020\333*\022.\n)EMsgClientRequestedClientSt"
  "ats_Deprecated\020\350*\022$\n\037EMsgClientStat2Int3"
  "2_Deprecated\020\351*\022\037\n\032EMsgClientStat2_Depre"
  "cated\020\352*\022!\n\034EMsgClientDRMDownloadRequest"
  "\020\355*\022\"\n\035EMsgClientDRMDownloadResponse\020\356*\022"
  "\035\n\030EMsgClientDRMFinalResult\020\357*\022$\n\037EMsgCl"
  "ientGetFriendsWhoPlayGame\020\360*\022,\n\'EMsgClie"
  "ntGetFriendsWhoPlayGameResponse\020\361*\022\036\n\031EM"
  "sgClientOGSBeginSession\020\362*\022&\n!EMsgClient"
  "OGSBeginSessionResponse\020\363*\022\034\n\027EMsgClient"
  "OGSEndSession\020\364*\022$\n\037EMsgClientOGSEndSess"
  "ionResponse\020\365*\022\032\n\025EMsgClientOGSWriteRow\020"
  "\366*\022!\n\034EMsgClientGetPeerContentInfo\020\367*\022)\n"
  "$EMsgClientGetPeerContentInfoResponse\020\370*"
  "\022%\n EMsgClientStartPeerContentServer\020\371*\022"
  "-\n(EMsgClientStartPeerContentServerRespo"
  "nse\020\372*\022 \n\033EMsgClientServerUnavailable\020\374*"
  "\022\037\n\032EMsgClientServersAvailable\020\375*\022\'\n\"EMs"
  "gClientRegisterAuthTicketWithCM\020\376*\022\032\n\025EM"
  "sgClientGCMsgFailed\020\377*\022\"\n\035EMsgClientMicr"
  "oTxnAuthRequest\020\200+\022 \n\033EMsgClientMicroTxn"
  "Authorize\020\201+\022(\n#EMsgClientMicroTxnAuthor"
  "izeResponse\020\202+\022\036\n\031EMsgClientGetMicroTxnI"
  "nfo\020\204+\022&\n!EMsgClientGetMicroTxnInfoRespo"
  "nse\020\205+\022#\n\036EMsgClientDeregisterWithServer"
  "\020\207+\022%\n EMsgClientSubscribeToPersonaFeed\020"
  "\210+\022\024\n\017EMsgClientLogon\020\212+\022\037\n\032EMsgClientGe"
  "tClientDetails\020\213+\022\'\n\"EMsgClientGetClient"
  "DetailsResponse\020\214+\022)\n$EMsgClientReportOv"
  "erlayDetourFailure\020\215+\022\037\n\032EMsgClientGetCl"
  "ientAppList\020\216+\022\'\n\"EMsgClientGetClientApp"
  "ListResponse\020\217+\022\037\n\032EMsgClientInstallClie"
  "ntApp\020\220+\022\'\n\"EMsgClientInstallClientAppRe"
  "sponse\020\221+\022!\n\034EMsgClientUninstallClientAp"
  "p\020\222+\022)\n$EMsgClientUninstallClientAppResp"
  "onse\020\223+\022&\n!EMsgClientSetClientAppUpdateS"
  "tate\020\224+\022.\n)EMsgClientSetClientAppUpdateS"
  "tateResponse\020\225+\022(\n#EMsgClientRequestEncr"
  "yptedAppTicket\020\226+\0220\n+EMsgClientRequestEn"
  "cryptedAppTicketResponse\020\227+\022\037\n\032EMsgClien"
  "tWalletInfoUpdate\020\230+\022\030\n\023EMsgClientLBSSet"
  "UGC\020\231+\022 \n\033EMsgClientLBSSetUGCResponse\020\232+"
  "\022 \n\033EMsgClientAMGetClanOfficers\020\233+\022(\n#EM"
  "sgClientAMGetClanOfficersResponse\020\234+\022 \n\033"
  "EMsgClientFriendProfileInfo\020\237+\022(\n#EMsgCl"
  "ientFriendProfileInfoResponse\020\240+\022!\n\034EMsg"
  "ClientScreenshotsChanged\020\247+\022\036\n\031EMsgClien"
  "tLaunchClientApp\020\250+\022&\n!EMsgClientLaunchC"
  "lientAppResponse\020\251+\022!\n\034EMsgClientRequest"
  "AccountData\020\255+\022)\n$EMsgClientRequestAccou"
  "ntDataResponse\020\256+\022&\n!EMsgClientResetForg"
  "ottenPassword4\020\257+\022\031\n\024EMsgClientHideFrien"
  "d\020\260+\022 \n\033EMsgClientFriendsGroupsList\020\261+\022$"
  "\n\037EMsgClientGetClanActivityCounts\020\262+\022,\n\'"
  "EMsgClientGetClanActivityCountsResponse\020"
  "\263+\022\036\n\031EMsgClientOGSReportString\020\264+\022\033\n\026EM"
  "sgClientOGSReportBug\020\265+\022\027\n\022EMsgClientSen"
  "tLogs\020\266+\022\036\n\031EMsgClientLogonGameServer\020\267+"
  "\022#\n\036EMsgAMClientCreateFriendsGroup\020\270+\022+\n"
  "&EMsgAMClientCreateFriendsGroupResponse\020"
  "\271+\022#\n\036EMsgAMClientDeleteFriendsGroup\020\272+\022"
  "+\n&EMsgAMClientDeleteFriendsGroupRespons"
  "e\020\273+\022#\n\036EMsgAMClientManageFriendsGroup\020\274"
  "+\022+\n&EMsgAMClientManageFriendsGroupRespo"
  "nse\020\275+\022!\n\034EMsgAMClientAddFriendToGroup\020\276"
  "+\022)\n$EMsgAMClientAddFriendToGroupRespons"
  "e\020\277+\022&\n!EMsgAMClientRemoveFriendFromGrou"
  "p\020\300+\022.\n)EMsgAMClientRemoveFriendFromGrou"
  "pResponse\020\301+\022&\n!EMsgClientAMGetPersonaNa"
  "meHistory\020\302+\022.\n)EMsgClientAMGetPersonaNa"
  "meHistoryResponse\020\303+\022!\n\034EMsgClientReques"
  "tFreeLicense\020\304+\022)\n$EMsgClientRequestFree"
  "LicenseResponse\020\305+\022.\n)EMsgClientDRMDownl"
  "oadRequestWithCrashData\020\306+\022\032\n\025EMsgClient"
  "AuthListAck\020\307+\022 \n\033EMsgClientItemAnnounce"
  "ments\020\310+\022\'\n\"EMsgClientRequestItemAnnounc"
  "ements\020\311+\022$\n\037EMsgClientFriendMsgEchoToSe"
  "nder\020\312+\022#\n\036EMsgClientCommentNotification"
  "s\020\316+\022*\n%EMsgClientRequestCommentNotifica"
  "tions\020\317+\022$\n\037EMsgClientPersonaChangeRespo"
  "nse\020\320+\022<\n7EMsgClientRequestWebAPIAuthent"
  "icateUserNonce_Deprecated\020\321+\022D\n\?EMsgClie"
  "ntRequestWebAPIAuthenticateUserNonceResp"
  "onse_Deprecated\020\322+\022!\n\034EMsgClientPlayerNi"
  "cknameList\020\323+\022\"\n\035EMsgAMClientSetPlayerNi"
  "ckname\020\324+\022*\n%EMsgAMClientSetPlayerNickna"
  "meResponse\020\325+\022*\n%EMsgClientGetNumberOfCu"
  "rrentPlayersDP\020\330+\0222\n-EMsgClientGetNumber"
  "OfCurrentPlayersDPResponse\020\331+\022\"\n\035EMsgCli"
  "entServiceMethodLegacy\020\332+\022*\n%EMsgClientS"
  "erviceMethodLegacyResponse\020\333+\022(\n#EMsgCli"
  "entFriendUserStatusPublished\020\334+\022\034\n\027EMsgC"
  "lientCurrentUIMode\020\335+\022+\n&EMsgClientVanit"
  "yURLChangedNotification\020\336+\022 \n\033EMsgClient"
  "UserNotifications\020\337+\022\020\n\013EMsgBaseDFS\020\340+\022\023"
  "\n\016EMsgDFSGetFile\020\341+\022\034\n\027EMsgDFSInstallLoc"
  "alFile\020\342+\022\026\n\021EMsgDFSConnection\020\343+\022\033\n\026EMs"
  "gDFSConnectionReply\020\344+\022%\n EMsgClientDFSA"
  "uthenticateRequest\020\345+\022&\n!EMsgClientDFSAu"
  "thenticateResponse\020\346+\022\034\n\027EMsgClientDFSEn"
  "dSession\020\347+\022\025\n\020EMsgDFSPurgeFile\020\350+\022\025\n\020EM"
  "sgDFSRouteFile\020\351+\022\035\n\030EMsgDFSGetFileFromS"
  "erver\020\352+\022\034\n\027EMsgDFSAcceptedResponse\020\353+\022\033"
  "\n\026EMsgDFSRequestPingback\020\354+\022\034\n\027EMsgDFSRe"
  "cvTransmitFile\020\355+\022\034\n\027EMsgDFSSendTransmit"
  "File\020\356+\022\034\n\027EMsgDFSRequestPingback2\020\357+\022\035\n"
  "\030EMsgDFSResponsePingback2\020\360+\022 \n\033EMsgClie"
  "ntDFSDownloadStatus\020\361+\022\031\n\024EMsgDFSStartTr"
  "ansfer\020\362+\022\034\n\027EMsgDFSTransferComplete\020\363+\022"
  "\035\n\030EMsgDFSRouteFileResponse\020\364+\022$\n\037EMsgCl"
  "ientNetworkingCertRequest\020\365+\022,\n\'EMsgClie"
  "ntNetworkingCertRequestResponse\020\366+\022\037\n\032EM"
  "sgClientChallengeRequest\020\367+\022 \n\033EMsgClien"
  "tChallengeResponse\020\370+\022!\n\034EMsgBadgeCrafte"
  "dNotification\020\371+\022*\n%EMsgClientNetworking"
  "MobileCertRequest\020\372+\0222\n-EMsgClientNetwor"
  "kingMobileCertRequestResponse\020\373+\022\020\n\013EMsg"
  "BaseMDS\020\250-\022!\n\034EMsgMDSGetDepotDecryptionK"
  "ey\020\264-\022)\n$EMsgMDSGetDepotDecryptionKeyRes"
  "ponse\020\265-\022&\n!EMsgMDSContentServerConfigRe"
  "quest\020\303-\022\037\n\032EMsgMDSContentServerConfig\020\304"
  "-\022\034\n\027EMsgMDSGetDepotManifest\020\305-\022$\n\037EMsgM"
  "DSGetDepotManifestResponse\020\306-\022!\n\034EMsgMDS"
  "GetDepotManifestChunk\020\307-\022\032\n\025EMsgMDSToCSF"
  "lushChunk\020\324-\022\030\n\023EMsgMDSMigrateChunk\020\327-\022 "
  "\n\033EMsgMDSMigrateChunkResponse\020\330-\022\035\n\030EMsg"
  "MDSToCSFlushManifest\020\331-\022\017\n\nEMsgCSBase\020\2700"
  "\022\017\n\nEMsgCSPing\020\2710\022\027\n\022EMsgCSPingResponse\020"
  "\2720\022\020\n\013EMsgGMSBase\020\2002\022\037\n\032EMsgGMSGameServe"
  "rReplicate\020\2012\022\035\n\030EMsgClientGMSServerQuer"
  "y\020\2032\022%\n EMsgGMSClientServerQueryResponse"
  "\020\2042\022\036\n\031EMsgAMGMSGameServerUpdate\020\2052\022\036\n\031E"
  "MsgAMGMSGameServerRemove\020\2062\022\034\n\027EMsgGameS"
  "erverOutOfDate\020\2072\022 \n\033EMsgDeviceAuthoriza"
  "tionBase\020\3442\022*\n%EMsgClientAuthorizeLocalD"
  "eviceRequest\020\3452\022+\n&EMsgClientAuthorizeLo"
  "calDeviceResponse\020\3462\022\'\n\"EMsgClientDeauth"
  "orizeDeviceRequest\020\3472\022 \n\033EMsgClientDeaut"
  "horizeDevice\020\3502\022+\n&EMsgClientUseLocalDev"
  "iceAuthorizations\020\3512\022#\n\036EMsgClientGetAut"
  "horizedDevices\020\3522\022+\n&EMsgClientGetAuthor"
  "izedDevicesResponse\020\3532\022(\n#EMsgAMNotifySe"
  "ssionDeviceAuthorized\020\3542\022/\n*EMsgClientAu"
  "thorizeLocalDeviceNotification\020\3552\022\020\n\013EMs"
  "gMMSBase\020\3103\022\035\n\030EMsgClientMMSCreateLobby\020"
  "\3113\022%\n EMsgClientMMSCreateLobbyResponse\020\312"
  "3\022\033\n\026EMsgClientMMSJoinLobby\020\3133\022#\n\036EMsgCl"
  "ientMMSJoinLobbyResponse\020\3143\022\034\n\027EMsgClien"
  "tMMSLeaveLobby\020\3153\022$\n\037EMsgClientMMSLeaveL"
  "obbyResponse\020\3163\022\036\n\031EMsgClientMMSGetLobby"
  "List\020\3173\022&\n!EMsgClientMMSGetLobbyListResp"
  "onse\020\3203\022\036\n\031EMsgClientMMSSetLobbyData\020\3213\022"
  "&\n!EMsgClientMMSSetLobbyDataResponse\020\3223\022"
  "\036\n\031EMsgClientMMSGetLobbyData\020\3233\022\033\n\026EMsgC"
  "lientMMSLobbyData\020\3243\022\"\n\035EMsgClientMMSSen"
  "dLobbyChatMsg\020\3253\022\036\n\031EMsgClientMMSLobbyCh"
  "atMsg\020\3263\022\037\n\032EMsgClientMMSSetLobbyOwner\020\327"
  "3\022\'\n\"EMsgClientMMSSetLobbyOwnerResponse\020"
  "\3303\022$\n\037EMsgClientMMSSetLobbyGameServer\020\3313"
  "\022$\n\037EMsgClientMMSLobbyGameServerSet\020\3323\022!"
  "\n\034EMsgClientMMSUserJoinedLobby\020\3333\022\037\n\032EMs"
  "gClientMMSUserLeftLobby\020\3343\022\037\n\032EMsgClient"
  "MMSInviteToLobby\020\3353\022\'\n\"EMsgClientMMSFlus"
  "hFrenemyListCache\020\3363\022/\n*EMsgClientMMSFlu"
  "shFrenemyListCacheResponse\020\3373\022 \n\033EMsgCli"
  "entMMSSetLobbyLinked\020\3403\022,\n\'EMsgClientMMS"
  "SetRatelimitPolicyOnClient\020\3413\022 \n\033EMsgCli"
  "entMMSGetLobbyStatus\020\3423\022(\n#EMsgClientMMS"
  "GetLobbyStatusResponse\020\3433\022\030\n\023EMsgMMSGetL"
  "obbyList\020\3443\022 \n\033EMsgMMSGetLobbyListRespon"
  "se\020\3453\022\026\n\021EMsgNonStdMsgBase\020\2205\022\033\n\026EMsgNon"
  "StdMsgMemcached\020\2215\022\034\n\027EMsgNonStdMsgHTTPS"
  "erver\020\2225\022\034\n\027EMsgNonStdMsgHTTPClient\020\2235\022\034"
  "\n\027EMsgNonStdMsgWGResponse\020\2245\022\036\n\031EMsgNonS"
  "tdMsgPHPSimulator\020\2255\022\027\n\022EMsgNonStdMsgCha"
  "se\020\2265\022\035\n\030EMsgNonStdMsgDFSTransfer\020\2275\022\027\n\022"
  "EMsgNonStdMsgTests\020\2305\022\035\n\030EMsgNonStdMsgUM"
  "QpipeAAPL\020\2315\022\030\n\023EMSgNonStdMsgSyslog\020\2325\022 "
  "\n\033EMsgNonStdMsgSteam2Emulator\020\2345\022\034\n\027EMsg"
  "NonStdMsgRTMPServer\020\2355\022\033\n\026EMsgNonStdMsgW"
  "ebSocket\020\2365\022\027\n\022EMsgNonStdMsgRedis\020\2375\022\020\n\013"
  "EMsgUDSBase\020\3306\022#\n\036EMsgClientUDSP2PSessio"
  "nStarted\020\3316\022!\n\034EMsgClientUDSP2PSessionEn"
  "ded\020\3326\022\032\n\025EMsgUDSRenderUserAuth\020\3336\022\"\n\035EM"
  "sgUDSRenderUserAuthResponse\020\3346\022\033\n\026EMsgCl"
  "ientInviteToGame\020\3356\022\026\n\021EMsgUDSHasSession"
  "\020\3366\022\036\n\031EMsgUDSHasSessionResponse\020\3376\022\021\n\014E"
  "MsgMPASBase\020\2747\022\030\n\023EMsgMPASVacBanReset\020\2757"
  "\022\020\n\013EMsgKGSBase\020\2408\022\020\n\013EMsgUCMBase\020\2049\022\037\n\032"
  "EMsgClientUCMAddScreenshot\020\2059\022\'\n\"EMsgCli"
  "entUCMAddScreenshotResponse\020\2069\022!\n\034EMsgUC"
  "MResetCommunityContent\020\2139\022)\n$EMsgUCMRese"
  "tCommunityContentResponse\020\2149\022\"\n\035EMsgClie"
  "ntUCMDeleteScreenshot\020\2159\022*\n%EMsgClientUC"
  "MDeleteScreenshotResponse\020\2169\022\035\n\030EMsgClie"
  "ntUCMPublishFile\020\2179\022%\n EMsgClientUCMPubl"
  "ishFileResponse\020\2209\022%\n EMsgClientUCMDelet"
  "ePublishedFile\020\2239\022-\n(EMsgClientUCMDelete"
  "PublishedFileResponse\020\2249\022%\n EMsgClientUC"
  "MUpdatePublishedFile\020\2359\022-\n(EMsgClientUCM"
  "UpdatePublishedFileResponse\020\2369\022\037\n\032EMsgUC"
  "MUpdatePublishedFile\020\2379\022\'\n\"EMsgUCMUpdate"
  "PublishedFileResponse\020\2409\022#\n\036EMsgUCMUpdat"
  "ePublishedFileStat\020\2439\022\037\n\032EMsgUCMReloadPu"
  "blishedFile\020\2519\022$\n\037EMsgUCMReloadUserFileL"
  "istCaches\020\2529\022!\n\034EMsgUCMPublishedFileRepo"
  "rted\020\2539\022#\n\036EMsgUCMPublishedFilePreviewAd"
  "d\020\2559\022+\n&EMsgUCMPublishedFilePreviewAddRe"
  "sponse\020\2569\022&\n!EMsgUCMPublishedFilePreview"
  "Remove\020\2579\022.\n)EMsgUCMPublishedFilePreview"
  "RemoveResponse\020\2609\022#\n\036EMsgUCMPublishedFil"
  "eSubscribed\020\2659\022%\n EMsgUCMPublishedFileUn"
  "subscribed\020\2669\022\027\n\022EMsgUCMPublishFile\020\2679\022\037"
  "\n\032EMsgUCMPublishFileResponse\020\2709\022!\n\034EMsgU"
  "CMPublishedFileChildAdd\020\2719\022)\n$EMsgUCMPub"
  "lishedFileChildAddResponse\020\2729\022$\n\037EMsgUCM"
  "PublishedFileChildRemove\020\2739\022,\n\'EMsgUCMPu"
  "blishedFileChildRemoveResponse\020\2749\022&\n!EMs"
  "gUCMPublishedFileParentChanged\020\2779\022,\n\'EMs"
  "gClientUCMSetUserPublishedFileAction\020\3049\022"
  "4\n/EMsgClientUCMSetUserPublishedFileActi"
  "onResponse\020\3059\0225\n0EMsgClientUCMEnumerateP"
  "ublishedFilesByUserAction\020\3069\022=\n8EMsgClie"
  "ntUCMEnumeratePublishedFilesByUserAction"
  "Response\020\3079\022\"\n\035EMsgUCMGetUserSubscribedF"
  "iles\020\3119\022*\n%EMsgUCMGetUserSubscribedFiles"
  "Response\020\3129\022!\n\034EMsgUCMFixStatsPublishedF"
  "ile\020\3139\0229\n4EMsgClientUCMEnumerateUserSubs"
  "cribedFilesWithUpdates\020\3229\022A\n<EMsgClientU"
  "CMEnumerateUserSubscribedFilesWithUpdate"
  "sResponse\020\3239\022\'\n\"EMsgUCMPublishedFileCont"
  "entUpdated\020\3249\022&\n!EMsgClientUCMPublishedF"
  "ileUpdated\020\3259\022\017\n\nEMsgFSBase\020\314:\022!\n\034EMsgCl"
  "ientRichPresenceUpload\020\315:\022\"\n\035EMsgClientR"
  "ichPresenceRequest\020\316:\022\037\n\032EMsgClientRichP"
  "resenceInfo\020\317:\022\036\n\031EMsgFSRichPresenceRequ"
  "est\020\320:\022\037\n\032EMsgFSRichPresenceResponse\020\321:\022"
  "\035\n\030EMsgFSComputeFrenematrix\020\322:\022%\n EMsgFS"
  "ComputeFrenematrixResponse\020\323:\022!\n\034EMsgFSP"
  "layStatusNotification\020\324:\022\036\n\031EMsgFSAddOrR"
  "emoveFollower\020\326:\022&\n!EMsgFSAddOrRemoveFol"
  "lowerResponse\020\327:\022\036\n\031EMsgFSUpdateFollowin"
  "gList\020\330:\022\036\n\031EMsgFSCommentNotification\020\331:"
  "\022$\n\037EMsgFSCommentNotificationViewed\020\332:\022!"
  "\n\034EMsgClientFSGetFollowerCount\020\333:\022)\n$EMs"
  "gClientFSGetFollowerCountResponse\020\334:\022\037\n\032"
  "EMsgClientFSGetIsFollowing\020\335:\022\'\n\"EMsgCli"
  "entFSGetIsFollowingResponse\020\336:\022\'\n\"EMsgCl"
  "ientFSEnumerateFollowingList\020\337:\022/\n*EMsgC"
  "lientFSEnumerateFollowingListResponse\020\340:"
  "\022&\n!EMsgFSGetPendingNotificationCount\020\341:"
  "\022.\n)EMsgFSGetPendingNotificationCountRes"
  "ponse\020\342:\022-\n(EMsgClientChatOfflineMessage"
  "Notification\020\343:\022-\n(EMsgClientChatRequest"
  "OfflineMessageCount\020\344:\022*\n%EMsgClientChat"
  "GetFriendMessageHistory\020\345:\0222\n-EMsgClient"
  "ChatGetFriendMessageHistoryResponse\020\346:\022<"
  "\n7EMsgClientChatGetFriendMessageHistoryF"
  "orOfflineMessages\020\347:\022&\n!EMsgClientFSGetF"
  "riendsSteamLevels\020\350:\022.\n)EMsgClientFSGetF"
  "riendsSteamLevelsResponse\020\351:\022\034\n\027EMsgAMRe"
  "questFriendData\020\352:\022\022\n\rEMsgDRMRange2\020\260;\022*"
  "\n%EMsgCEGVersionSetEnableDisableRequest\020"
  "\260;\022+\n&EMsgCEGVersionSetEnableDisableResp"
  "onse\020\261;\022!\n\034EMsgCEGPropStatusDRMSRequest\020"
  "\262;\022\"\n\035EMsgCEGPropStatusDRMSResponse\020\263;\022%"
  "\n EMsgCEGWhackFailureReportRequest\020\264;\022&\n"
  "!EMsgCEGWhackFailureReportResponse\020\265;\022\034\n"
  "\027EMsgDRMSFetchVersionSet\020\266;\022$\n\037EMsgDRMSF"
  "etchVersionSetResponse\020\267;\022\021\n\014EMsgEconBas"
  "e\020\224<\022)\n$EMsgEconTrading_InitiateTradeReq"
  "uest\020\225<\022*\n%EMsgEconTrading_InitiateTrade"
  "Proposed\020\226<\022*\n%EMsgEconTrading_InitiateT"
  "radeResponse\020\227<\022(\n#EMsgEconTrading_Initi"
  "ateTradeResult\020\230<\022!\n\034EMsgEconTrading_Sta"
  "rtSession\020\231<\022\'\n\"EMsgEconTrading_CancelTr"
  "adeRequest\020\232<\022 \n\033EMsgEconFlushInventoryC"
  "ache\020\233<\022(\n#EMsgEconFlushInventoryCacheRe"
  "sponse\020\234<\022$\n\037EMsgEconCDKeyProcessTransac"
  "tion\020\237<\022,\n\'EMsgEconCDKeyProcessTransacti"
  "onResponse\020\240<\022\031\n\024EMsgEconGetErrorLogs\020\241<"
  "\022!\n\034EMsgEconGetErrorLogsResponse\020\242<\022\020\n\013E"
  "MsgRMRange\020\370<\022\032\n\025EMsgRMTestVerisignOTP\020\370"
  "<\022\"\n\035EMsgRMTestVerisignOTPResponse\020\371<\022\036\n"
  "\031EMsgRMDeleteMemcachedKeys\020\373<\022\027\n\022EMsgRMR"
  "emoteInvoke\020\374<\022\027\n\022EMsgBadLoginIPList\020\375<\022"
  "\035\n\030EMsgRMMsgTraceAddTrigger\020\376<\022 \n\033EMsgRM"
  "MsgTraceRemoveTrigger\020\377<\022\030\n\023EMsgRMMsgTra"
  "ceEvent\020\200=\022\020\n\013EMsgUGSBase\020\334=\022\035\n\030EMsgUGSU"
  "pdateGlobalStats\020\334=\022 \n\033EMsgClientUGSGetG"
  "lobalStats\020\335=\022(\n#EMsgClientUGSGetGlobalS"
  "tatsResponse\020\336=\022\022\n\rEMsgStoreBase\020\300>\022\020\n\013E"
  "MsgUMQBase\020\244\?\022\025\n\020EMsgWorkshopBase\020\210@\022\023\n\016"
  "EMsgWebAPIBase\020\354@\022\"\n\035EMsgWebAPIValidateO"
  "Auth2Token\020\354@\022*\n%EMsgWebAPIValidateOAuth"
  "2TokenResponse\020\355@\022#\n\036EMsgWebAPIRegisterG"
  "CInterfaces\020\357@\022)\n$EMsgWebAPIInvalidateOA"
  "uthClientCache\020\360@\022(\n#EMsgWebAPIInvalidat"
  "eOAuthTokenCache\020\361@\022\031\n\024EMsgWebAPISetSecr"
  "ets\020\362@\022\025\n\020EMsgBackpackBase\020\320A\022\036\n\031EMsgBac"
  "kpackAddToCurrency\020\321A\022&\n!EMsgBackpackAdd"
  "ToCurrencyResponse\020\322A\022\020\n\013EMsgCREBase\020\264B\022"
  "\033\n\026EMsgCREItemVoteSummary\020\267B\022#\n\036EMsgCREI"
  "temVoteSummaryResponse\020\270B\022\'\n\"EMsgCREUpda"
  "teUserPublishedItemVote\020\273B\022/\n*EMsgCREUpd"
  "ateUserPublishedItemVoteResponse\020\274B\022+\n&E"
  "MsgCREGetUserPublishedItemVoteDetails\020\275B"
  "\0223\n.EMsgCREGetUserPublishedItemVoteDetai"
  "lsResponse\020\276B\022\024\n\017EMsgSecretsBase\020\230C\022%\n E"
  "MsgSecretsRequestCredentialPair\020\230C\022&\n!EM"
  "sgSecretsCredentialPairResponse\020\231C\022\027\n\022EM"
  "sgBoxMonitorBase\020\374C\022 \n\033EMsgBoxMonitorRep"
  "ortRequest\020\374C\022!\n\034EMsgBoxMonitorReportRes"
  "ponse\020\375C\022\021\n\014EMsgPICSBase\020\304E\022&\n!EMsgClien"
  "tPICSChangesSinceRequest\020\305E\022\'\n\"EMsgClien"
  "tPICSChangesSinceResponse\020\306E\022%\n EMsgClie"
  "ntPICSProductInfoRequest\020\307E\022&\n!EMsgClien"
  "tPICSProductInfoResponse\020\310E\022%\n EMsgClien"
  "tPICSAccessTokenRequest\020\311E\022&\n!EMsgClient"
  "PICSAccessTokenResponse\020\312E\022%\n EMsgClient"
  "PICSPrivateBetaRequest\020\313E\022&\n!EMsgClientP"
  "ICSPrivateBetaResponse\020\314E\022\026\n\021EMsgWorkerP"
  "rocess\020\250F\022!\n\034EMsgWorkerProcessPingReques"
  "t\020\250F\022\"\n\035EMsgWorkerProcessPingResponse\020\251F"
  "\022\036\n\031EMsgWorkerProcessShutdown\020\252F\022\031\n\024EMsg"
  "DRMWorkerProcess\020\214G\022#\n\036EMsgDRMWorkerProc"
  "essDRMAndSign\020\214G\022+\n&EMsgDRMWorkerProcess"
  "DRMAndSignResponse\020\215G\022.\n)EMsgDRMWorkerPr"
  "ocessSteamworksInfoRequest\020\216G\022/\n*EMsgDRM"
  "WorkerProcessSteamworksInfoResponse\020\217G\022-"
  "\n(EMsgDRMWorkerProcessInstallDRMDLLReque"
  "st\020\220G\022.\n)EMsgDRMWorkerProcessInstallDRMD"
  "LLResponse\020\221G\022.\n)EMsgDRMWorkerProcessSec"
  "retIdStringRequest\020\222G\022/\n*EMsgDRMWorkerPr"
  "ocessSecretIdStringResponse\020\223G\0225\n0EMsgDR"
  "MWorkerProcessInstallProcessedFilesReque"
  "st\020\226G\0226\n1EMsgDRMWorkerProcessInstallProc"
  "essedFilesResponse\020\227G\022+\n&EMsgDRMWorkerPr"
  "ocessExamineBlobRequest\020\230G\022,\n\'EMsgDRMWor"
  "kerProcessExamineBlobResponse\020\231G\022.\n)EMsg"
  "DRMWorkerProcessDescribeSecretRequest\020\232G"
  "\022/\n*EMsgDRMWorkerProcessDescribeSecretRe"
  "sponse\020\233G\0220\n+EMsgDRMWorkerProcessBackfil"
  "lOriginalRequest\020\234G\0221\n,EMsgDRMWorkerProc"
  "essBackfillOriginalResponse\020\235G\022.\n)EMsgDR"
  "MWorkerProcessValidateDRMDLLRequest\020\236G\022/"
  "\n*EMsgDRMWorkerProcessValidateDRMDLLResp"
  "onse\020\237G\022,\n\'EMsgDRMWorkerProcessValidateF"
  "ileRequest\020\240G\022-\n(EMsgDRMWorkerProcessVal"
  "idateFileResponse\020\241G\022/\n*EMsgDRMWorkerPro"
  "cessSplitAndInstallRequest\020\242G\0220\n+EMsgDRM"
  "WorkerProcessSplitAndInstallResponse\020\243G\022"
  "\'\n\"EMsgDRMWorkerProcessGetBlobRequest\020\244G"
  "\022(\n#EMsgDRMWorkerProcessGetBlobResponse\020"
  "\245G\022-\n(EMsgDRMWorkerProcessEvaluateCrashR"
  "equest\020\246G\022.\n)EMsgDRMWorkerProcessEvaluat"
  "eCrashResponse\020\247G\022+\n&EMsgDRMWorkerProces"
  "sAnalyzeFileRequest\020\250G\022,\n\'EMsgDRMWorkerP"
  "rocessAnalyzeFileResponse\020\251G\022*\n%EMsgDRMW"
  "orkerProcessUnpackBlobRequest\020\252G\022+\n&EMsg"
  "DRMWorkerProcessUnpackBlobResponse\020\253G\022*\n"
  "%EMsgDRMWorkerProcessInstallAllRequest\020\254"
  "G\022+\n&EMsgDRMWorkerProcessInstallAllRespo"
  "nse\020\255G\022!\n\034EMsgDRMWorkerProcessSignFile\020\256"
  "G\022)\n$EMsgDRMWorkerProcessSignFileRespons"
  "e\020\257G\022\032\n\025EMsgTestWorkerProcess\020\360G\0221\n,EMsg"
  "TestWorkerProcessLoadUnloadModuleRequest"
  "\020\360G\0222\n-EMsgTestWorkerProcessLoadUnloadMo"
  "duleResponse\020\361G\0222\n-EMsgTestWorkerProcess"
  "ServiceModuleCallRequest\020\362G\0223\n.EMsgTestW"
  "orkerProcessServiceModuleCallResponse\020\363G"
  "\022\030\n\023EMsgQuestServerBase\020\324H\022\036\n\031EMsgClient"
  "GetEmoticonList\020\362H\022\033\n\026EMsgClientEmoticon"
  "List\020\363H\022\020\n\013EMsgSLCBase\020\270I\022\035\n\030EMsgSLCUser"
  "SessionStatus\020\270I\022$\n\037EMsgSLCRequestUserSe"
  "ssionStatus\020\271I\022$\n\037EMsgSLCSharedLicensesL"
  "ockStatus\020\272I\022&\n!EMsgClientSharedLibraryL"
  "ockStatus\020\275I\022\'\n\"EMsgClientSharedLibraryS"
  "topPlaying\020\276I\022 \n\033EMsgSLCSharedLibraryCha"
  "nged\020\300I\022\031\n\024EMsgRemoteClientBase\020\234J\022\"\n\035EM"
  "sgRemoteClientAuth_OBSOLETE\020\234J\022*\n%EMsgRe"
  "moteClientAuthResponse_OBSOLETE\020\235J\022\036\n\031EM"
  "sgRemoteClientAppStatus\020\236J\022 \n\033EMsgRemote"
  "ClientStartStream\020\237J\022(\n#EMsgRemoteClient"
  "StartStreamResponse\020\240J\022\031\n\024EMsgRemoteClie"
  "ntPing\020\241J\022!\n\034EMsgRemoteClientPingRespons"
  "e\020\242J\022\031\n\024EMsgClientUnlockH264\020\243J\022!\n\034EMsgC"
  "lientUnlockH264Response\020\244J\022\037\n\032EMsgRemote"
  "ClientAcceptEULA\020\245J\022(\n#EMsgRemoteClientG"
  "etControllerConfig\020\246J\0220\n+EMsgRemoteClien"
  "tGetControllerConfigResponse\020\247J\022%\n EMsgR"
  "emoteClientStreamingEnabled\020\250J\022\"\n\035EMsgCl"
  "ientUnlockHEVC_OBSOLETE\020\251J\022*\n%EMsgClient"
  "UnlockHEVCResponse_OBSOLETE\020\252J\022\"\n\035EMsgRe"
  "moteClientStatusRequest\020\253J\022#\n\036EMsgRemote"
  "ClientStatusResponse\020\254J\022)\n$EMsgRemoteCli"
  "entAuthorizationRequest\020\255J\022*\n%EMsgRemote"
  "ClientAuthorizationResponse\020\256J\022/\n*EMsgRe"
  "moteClientAuthorizationCancelRequest\020\257J\022"
  "+\n&EMsgRemoteClientAuthorizationConfirme"
  "d\020\260J\022!\n\034EMsgRemoteClientProofRequest\020\261J\022"
  "\"\n\035EMsgRemoteClientProofResponse\020\262J\022%\n E"
  "MsgClientConcurrentSessionsBase\020\200K\022\"\n\035EM"
  "sgClientPlayingSessionState\020\200K\022!\n\034EMsgCl"
  "ientKickPlayingSession\020\201K\022\034\n\027EMsgClientB"
  "roadcastBase\020\344K\022\034\n\027EMsgClientBroadcastIn"
  "it\020\344K\022\036\n\031EMsgClientBroadcastFrames\020\345K\022\"\n"
  "\035EMsgClientBroadcastDisconnect\020\346K\022$\n\037EMs"
  "gClientBroadcastUploadConfig\020\350K\022\024\n\017EMsgB"
  "aseClient3\020\310L\022$\n\037EMsgClientVoiceCallPreA"
  "uthorize\020\310L\022,\n\'EMsgClientVoiceCallPreAut"
  "horizeResponse\020\311L\022%\n EMsgClientServerTim"
  "estampRequest\020\312L\022&\n!EMsgClientServerTime"
  "stampResponse\020\313L\022-\n(EMsgServiceMethodCal"
  "lFromClientNonAuthed\020\314L\022\024\n\017EMsgClientHel"
  "lo\020\315L\022\'\n\"EMsgClientEnableOrDisableDownlo"
  "ads\020\316L\022/\n*EMsgClientEnableOrDisableDownl"
  "oadsResponse\020\317L\022\037\n\032EMsgClientFeatureGrou"
  "pInfo\020\320L\022\031\n\024EMsgClientLANP2PBase\020\254M\022!\n\034E"
  "MsgClientLANP2PRequestChunk\020\254M\022)\n$EMsgCl"
  "ientLANP2PRequestChunkResponse\020\255M\022\037\n\032EMs"
  "gClientPeerChunkRequest\020\256M\022 \n\033EMsgClient"
  "PeerChunkResponse\020\257M\022\030\n\023EMsgClientLANP2P"
  "Max\020\217N\022\033\n\026EMsgBaseWatchdogServer\020\220N\022\027\n\022E"
  "MsgNotifyWatchdog\020\220N\022\036\n\031EMsgClientSiteLi"
  "censeBase\020\364N\022.\n)EMsgClientSiteLicenseSit"
  "eInfoNotification\020\364N\022\"\n\035EMsgClientSiteLi"
  "censeCheckout\020\365N\022*\n%EMsgClientSiteLicens"
  "eCheckoutResponse\020\366N\022+\n&EMsgClientSiteLi"
  "censeGetAvailableSeats\020\367N\0223\n.EMsgClientS"
  "iteLicenseGetAvailableSeatsResponse\020\370N\022-"
  "\n(EMsgClientSiteLicenseGetContentCacheIn"
  "fo\020\371N\0225\n0EMsgClientSiteLicenseGetContent"
  "CacheInfoResponse\020\372N\022\027\n\022EMsgBaseChatServ"
  "er\020\340]\022.\n)EMsgChatServerGetPendingNotific"
  "ationCount\020\340]\0226\n1EMsgChatServerGetPendin"
  "gNotificationCountResponse\020\341]\022\031\n\024EMsgBas"
  "eSecretServer\020\304^\022\034\n\027EMsgServerSecretChan"
  "ged\020\304^\022\017\n\nEMsgBaseWG\020\250_\022\"\n\035EMsgWGConnect"
  "ionProtocolError\020\250_\022&\n!EMsgWGConnectionV"
  "alidateUserToken\020\251_\022.\n)EMsgWGConnectionV"
  "alidateUserTokenResponse\020\252_\022$\n\037EMsgWGCon"
  "nectionLegacyWGRequest\020\253_\022%\n EMsgWGConne"
  "ctionLegacyWGResponse\020\254_\022 \n\033EMsgClientPe"
  "ndingGameLaunch\020\214`\022(\n#EMsgClientPendingG"
  "ameLaunchResponse\020\215`\032\002\020\001*\263\004\n\027EClientPers"
  "onaStateFlag\022!\n\035EClientPersonaStateFlagS"
  "tatus\020\001\022%\n!EClientPersonaStateFlagPlayer"
  "Name\020\002\022$\n EClientPersonaStateFlagQueryPo"
  "rt\020\004\022#\n\037EClientPersonaStateFlagSourceID\020"
  "\010\022#\n\037EClientPersonaStateFlagPresence\020\020\022#"
  "\n\037EClientPersonaStateFlagLastSeen\020@\022(\n#E"
  "ClientPersonaStateFlagUserClanRank\020\200\001\022%\n"
  " EClientPersonaStateGameExtraInfo\020\200\002\022$\n\037"
  "EClientPersonaStateGameDataBlob\020\200\004\022$\n\037EC"
  "lientPersonaStateFlagClanData\020\200\010\022$\n\037ECli"
  "entPersonaStateFlagFacebook\020\200\020\022(\n#EClien"
  "tPersonaStateFlagRichPresence\020\200 \022%\n ECli"
  "entPersonaStateFlagBroadcast\020\200@\022%\n\037EClie"
  "ntPersonaStateFlagWatching\020\200\200\001*\257\001\n\024EMsgC"
  "lanAccountFlags\022\035\n\031EMsgClanAccountFlagPu"
  "blic\020\001\022\034\n\030EMsgClanAccountFlagLarge\020\002\022\035\n\031"
  "EMsgClanAccountFlagLocked\020\004\022\037\n\033EMsgClanA"
  "ccountFlagDisabled\020\010\022\032\n\026EMsgClanAccountF"
  "lagOGG\020\020*\374\002\n\021ESteamReviewScore\022,\n(ESteam"
  "ReviewScore_OverwhelminglyPositive\020\t\022\"\n\036"
  "ESteamReviewScore_VeryPositive\020\010\022\036\n\032ESte"
  "amReviewScore_Positive\020\007\022$\n ESteamReview"
  "Score_MostlyPositive\020\006\022\033\n\027ESteamReviewSc"
  "ore_Mixed\020\005\022$\n ESteamReviewScore_MostlyN"
  "egative\020\004\022\036\n\032ESteamReviewScore_Negative\020"
  "\003\022\"\n\036ESteamReviewScore_VeryNegative\020\002\022,\n"
  "(ESteamReviewScore_OverwhelminglyNegativ"
  "e\020\001\022\032\n\026ESteamReviewScore_None\020\000*\263\001\n\023ECod"
  "ecUsagePlatform\022\036\n\032ECodecUsagePlatformUn"
  "known\020\000\022\036\n\032ECodecUsagePlatformWindows\020\001\022"
  "\034\n\030ECodecUsagePlatformMacOS\020\002\022\034\n\030ECodecU"
  "sagePlatformLinux\020\003\022 \n\034ECodecUsagePlatfo"
  "rmSteamDeck\020\004*\271\001\n\021ECodecUsageReason\022\034\n\030E"
  "CodecUsageReasonUnknown\020\000\022\037\n\033ECodecUsage"
  "ReasonRemotePlay\020\001\022!\n\035ECodecUsageReasonB"
  "roadcasting\020\002\022\036\n\032ECodecUsageReasonGameVi"
  "deo\020\003\022\"\n\036ECodecUsageReasonGameRecording\020"
  "\004B\037H\001\200\001\000\252\002\027OpenSteamworks.Protobuf"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_enums_5fclientserver_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_enums_5fclientserver_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_enums_5fclientserver_2eproto = {
  false, false, 50234, descriptor_table_protodef_enums_5fclientserver_2eproto, "enums_clientserver.proto", 
  &descriptor_table_enums_5fclientserver_2eproto_once, descriptor_table_enums_5fclientserver_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_enums_5fclientserver_2eproto::offsets,
  file_level_metadata_enums_5fclientserver_2eproto, file_level_enum_descriptors_enums_5fclientserver_2eproto, file_level_service_descriptors_enums_5fclientserver_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_enums_5fclientserver_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return descriptor_table_enums_5fclientserver_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_enums_5fclientserver_2eproto(&descriptor_table_enums_5fclientserver_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsg_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[0];
}
bool EMsg_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 100:
    case 113:
    case 115:
    case 120:
    case 121:
    case 123:
    case 124:
    case 126:
    case 127:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 215:
    case 221:
    case 225:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
    case 240:
    case 241:
    case 242:
    case 243:
    case 244:
    case 245:
    case 246:
    case 247:
    case 300:
    case 301:
    case 307:
    case 308:
    case 309:
    case 316:
    case 317:
    case 318:
    case 320:
    case 321:
    case 322:
    case 323:
    case 324:
    case 325:
    case 326:
    case 327:
    case 329:
    case 331:
    case 332:
    case 334:
    case 335:
    case 336:
    case 337:
    case 338:
    case 339:
    case 340:
    case 400:
    case 402:
    case 405:
    case 406:
    case 423:
    case 424:
    case 425:
    case 426:
    case 429:
    case 430:
    case 431:
    case 432:
    case 433:
    case 500:
    case 504:
    case 505:
    case 508:
    case 509:
    case 510:
    case 511:
    case 512:
    case 513:
    case 516:
    case 517:
    case 518:
    case 519:
    case 522:
    case 523:
    case 525:
    case 526:
    case 527:
    case 528:
    case 529:
    case 530:
    case 531:
    case 532:
    case 533:
    case 534:
    case 535:
    case 536:
    case 537:
    case 538:
    case 541:
    case 542:
    case 550:
    case 551:
    case 552:
    case 553:
    case 554:
    case 555:
    case 560:
    case 561:
    case 563:
    case 566:
    case 567:
    case 568:
    case 569:
    case 570:
    case 571:
    case 572:
    case 573:
    case 574:
    case 575:
    case 576:
    case 577:
    case 578:
    case 579:
    case 580:
    case 581:
    case 582:
    case 583:
    case 584:
    case 586:
    case 587:
    case 588:
    case 589:
    case 590:
    case 591:
    case 592:
    case 593:
    case 596:
    case 597:
    case 598:
    case 600:
    case 601:
    case 602:
    case 604:
    case 605:
    case 606:
    case 607:
    case 608:
    case 609:
    case 610:
    case 611:
    case 625:
    case 628:
    case 629:
    case 630:
    case 631:
    case 633:
    case 634:
    case 635:
    case 636:
    case 637:
    case 638:
    case 639:
    case 640:
    case 641:
    case 642:
    case 643:
    case 644:
    case 645:
    case 646:
    case 650:
    case 700:
    case 701:
    case 702:
    case 703:
    case 704:
    case 705:
    case 706:
    case 707:
    case 710:
    case 712:
    case 714:
    case 715:
    case 716:
    case 717:
    case 718:
    case 719:
    case 720:
    case 721:
    case 726:
    case 727:
    case 728:
    case 730:
    case 731:
    case 732:
    case 736:
    case 738:
    case 740:
    case 741:
    case 742:
    case 743:
    case 744:
    case 745:
    case 746:
    case 747:
    case 751:
    case 755:
    case 756:
    case 757:
    case 758:
    case 759:
    case 760:
    case 763:
    case 764:
    case 765:
    case 766:
    case 767:
    case 768:
    case 771:
    case 773:
    case 774:
    case 779:
    case 780:
    case 782:
    case 784:
    case 785:
    case 791:
    case 792:
    case 796:
    case 797:
    case 798:
    case 799:
    case 800:
    case 801:
    case 802:
    case 803:
    case 805:
    case 807:
    case 808:
    case 809:
    case 810:
    case 813:
    case 814:
    case 815:
    case 818:
    case 819:
    case 820:
    case 821:
    case 822:
    case 830:
    case 831:
    case 832:
    case 839:
    case 842:
    case 845:
    case 846:
    case 848:
    case 849:
    case 850:
    case 851:
    case 855:
    case 856:
    case 857:
    case 858:
    case 860:
    case 880:
    case 896:
    case 897:
    case 900:
    case 901:
    case 903:
    case 905:
    case 906:
    case 907:
    case 908:
    case 909:
    case 910:
    case 911:
    case 918:
    case 919:
    case 920:
    case 921:
    case 922:
    case 923:
    case 936:
    case 937:
    case 938:
    case 939:
    case 940:
    case 941:
    case 1000:
    case 1004:
    case 1005:
    case 1006:
    case 1010:
    case 1019:
    case 1020:
    case 1023:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1028:
    case 1100:
    case 1101:
    case 1102:
    case 1103:
    case 1104:
    case 1105:
    case 1106:
    case 1107:
    case 1108:
    case 1109:
    case 1110:
    case 1111:
    case 1112:
    case 1114:
    case 1115:
    case 1116:
    case 1117:
    case 1118:
    case 1119:
    case 1120:
    case 1121:
    case 1122:
    case 1123:
    case 1124:
    case 1125:
    case 1126:
    case 1127:
    case 1128:
    case 1129:
    case 1130:
    case 1131:
    case 1132:
    case 1133:
    case 1134:
    case 1200:
    case 1201:
    case 1202:
    case 1203:
    case 1204:
    case 1300:
    case 1301:
    case 1302:
    case 1303:
    case 1304:
    case 1305:
    case 1400:
    case 1401:
    case 1402:
    case 1403:
    case 1404:
    case 1406:
    case 1408:
    case 1409:
    case 1410:
    case 1411:
    case 1417:
    case 1418:
    case 1421:
    case 1422:
    case 1425:
    case 1426:
    case 1427:
    case 1433:
    case 1434:
    case 1435:
    case 1437:
    case 1438:
    case 1440:
    case 1441:
    case 1445:
    case 1446:
    case 1448:
    case 1449:
    case 1450:
    case 1451:
    case 1452:
    case 1453:
    case 1454:
    case 1455:
    case 1456:
    case 1457:
    case 1458:
    case 1459:
    case 1460:
    case 1461:
    case 1462:
    case 1463:
    case 1464:
    case 1465:
    case 1468:
    case 1469:
    case 1470:
    case 1471:
    case 1472:
    case 1473:
    case 1474:
    case 1475:
    case 1476:
    case 1477:
    case 1478:
    case 1479:
    case 1480:
    case 1481:
    case 1482:
    case 1483:
    case 1484:
    case 1485:
    case 1486:
    case 1487:
    case 1494:
    case 1495:
    case 1496:
    case 1497:
    case 1498:
    case 1499:
    case 1500:
    case 1501:
    case 1502:
    case 1503:
    case 1504:
    case 1505:
    case 1506:
    case 1507:
    case 1508:
    case 1509:
    case 1510:
    case 1511:
    case 1512:
    case 1513:
    case 1514:
    case 1515:
    case 1516:
    case 1517:
    case 1518:
    case 1519:
    case 1600:
    case 1601:
    case 1603:
    case 1612:
    case 1615:
    case 1616:
    case 1617:
    case 1620:
    case 1621:
    case 1622:
    case 1623:
    case 1624:
    case 1628:
    case 1629:
    case 1631:
    case 1700:
    case 1701:
    case 1702:
    case 1703:
    case 1704:
    case 1705:
    case 1706:
    case 2200:
    case 2203:
    case 2206:
    case 2207:
    case 2208:
    case 2209:
    case 2210:
    case 2212:
    case 2216:
    case 2217:
    case 2218:
    case 2219:
    case 2220:
    case 2221:
    case 2222:
    case 2223:
    case 2224:
    case 2225:
    case 2226:
    case 2227:
    case 2228:
    case 2229:
    case 2230:
    case 2231:
    case 2232:
    case 2233:
    case 2234:
    case 2235:
    case 2236:
    case 2237:
    case 2238:
    case 2239:
    case 2240:
    case 2241:
    case 2242:
    case 2243:
    case 2244:
    case 2245:
    case 2246:
    case 2247:
    case 2500:
    case 2502:
    case 2900:
    case 2902:
    case 2903:
    case 2905:
    case 2906:
    case 2907:
    case 2908:
    case 3000:
    case 3001:
    case 3002:
    case 3100:
    case 3150:
    case 3161:
    case 3162:
    case 3200:
    case 3201:
    case 3202:
    case 3203:
    case 3204:
    case 3205:
    case 3206:
    case 3207:
    case 3208:
    case 3209:
    case 3210:
    case 3211:
    case 3212:
    case 3213:
    case 3214:
    case 3400:
    case 3401:
    case 3402:
    case 3403:
    case 3404:
    case 3406:
    case 3600:
    case 4000:
    case 4001:
    case 4002:
    case 4006:
    case 4007:
    case 4008:
    case 4009:
    case 4010:
    case 4011:
    case 4012:
    case 4013:
    case 4015:
    case 4021:
    case 4022:
    case 4023:
    case 4024:
    case 4025:
    case 4026:
    case 4039:
    case 4040:
    case 4041:
    case 4042:
    case 4043:
    case 4044:
    case 4045:
    case 4046:
    case 4047:
    case 4050:
    case 4051:
    case 4052:
    case 4053:
    case 4054:
    case 4055:
    case 4056:
    case 4057:
    case 4059:
    case 4060:
    case 4061:
    case 4062:
    case 4064:
    case 4065:
    case 4066:
    case 4067:
    case 4068:
    case 4073:
    case 4074:
    case 4075:
    case 4076:
    case 4077:
    case 4079:
    case 4080:
    case 4081:
    case 4082:
    case 4083:
    case 4084:
    case 4085:
    case 4086:
    case 4087:
    case 4090:
    case 4091:
    case 4092:
    case 4095:
    case 4096:
    case 4097:
    case 4098:
    case 4099:
    case 4100:
    case 4101:
    case 4102:
    case 4103:
    case 4104:
    case 4105:
    case 4106:
    case 4107:
    case 4108:
    case 4110:
    case 4111:
    case 4112:
    case 4113:
    case 4114:
    case 4115:
    case 4116:
    case 4117:
    case 4118:
    case 4119:
    case 4120:
    case 4121:
    case 4122:
    case 4123:
    case 4124:
    case 4125:
    case 4126:
    case 4127:
    case 4128:
    case 4140:
    case 4143:
    case 4144:
    case 4145:
    case 4147:
    case 4148:
    case 4149:
    case 4152:
    case 4153:
    case 4158:
    case 4159:
    case 4160:
    case 4161:
    case 4162:
    case 4163:
    case 4164:
    case 4165:
    case 4166:
    case 4172:
    case 4173:
    case 4174:
    case 4175:
    case 4184:
    case 4185:
    case 4190:
    case 4191:
    case 4194:
    case 4195:
    case 4197:
    case 4198:
    case 4199:
    case 4206:
    case 4209:
    case 4210:
    case 4211:
    case 4213:
    case 4219:
    case 4220:
    case 4224:
    case 4231:
    case 4232:
    case 4236:
    case 4241:
    case 4242:
    case 4244:
    case 4245:
    case 4246:
    case 4247:
    case 4248:
    case 4249:
    case 4250:
    case 4251:
    case 4252:
    case 4255:
    case 4256:
    case 4258:
    case 4260:
    case 4262:
    case 4264:
    case 4265:
    case 4266:
    case 4267:
    case 4269:
    case 4270:
    case 4271:
    case 4272:
    case 4278:
    case 4279:
    case 4280:
    case 4281:
    case 4282:
    case 4283:
    case 4284:
    case 4285:
    case 4286:
    case 4287:
    case 4288:
    case 4289:
    case 4290:
    case 4294:
    case 4295:
    case 4298:
    case 4299:
    case 4300:
    case 4301:
    case 4302:
    case 4307:
    case 4308:
    case 4309:
    case 4310:
    case 4311:
    case 4312:
    case 4313:
    case 4314:
    case 4315:
    case 4316:
    case 4317:
    case 4320:
    case 4321:
    case 4322:
    case 4323:
    case 4324:
    case 4325:
    case 4326:
    case 4327:
    case 4328:
    case 4329:
    case 4330:
    case 4331:
    case 4332:
    case 4333:
    case 4334:
    case 4335:
    case 4336:
    case 4337:
    case 4338:
    case 4339:
    case 4340:
    case 4341:
    case 4342:
    case 4344:
    case 4345:
    case 4346:
    case 4347:
    case 4348:
    case 4349:
    case 4350:
    case 4351:
    case 4352:
    case 4353:
    case 4354:
    case 4355:
    case 4356:
    case 4357:
    case 4358:
    case 4359:
    case 4360:
    case 4361:
    case 4362:
    case 4365:
    case 4366:
    case 4367:
    case 4368:
    case 4372:
    case 4373:
    case 4374:
    case 4375:
    case 4376:
    case 4377:
    case 4380:
    case 4381:
    case 4383:
    case 4384:
    case 4385:
    case 4386:
    case 4389:
    case 4390:
    case 4391:
    case 4392:
    case 4393:
    case 4394:
    case 4395:
    case 4396:
    case 4397:
    case 4398:
    case 4399:
    case 4400:
    case 4401:
    case 4402:
    case 4403:
    case 4404:
    case 4405:
    case 4406:
    case 4407:
    case 4408:
    case 4409:
    case 4410:
    case 4411:
    case 4412:
    case 4413:
    case 4414:
    case 4415:
    case 4416:
    case 4417:
    case 4418:
    case 4419:
    case 4420:
    case 4421:
    case 4422:
    case 4423:
    case 4424:
    case 4425:
    case 5000:
    case 5003:
    case 5004:
    case 5009:
    case 5010:
    case 5011:
    case 5012:
    case 5013:
    case 5014:
    case 5200:
    case 5215:
    case 5217:
    case 5218:
    case 5226:
    case 5227:
    case 5228:
    case 5229:
    case 5230:
    case 5231:
    case 5232:
    case 5233:
    case 5234:
    case 5235:
    case 5236:
    case 5237:
    case 5238:
    case 5239:
    case 5240:
    case 5241:
    case 5242:
    case 5243:
    case 5244:
    case 5245:
    case 5246:
    case 5247:
    case 5248:
    case 5249:
    case 5250:
    case 5253:
    case 5254:
    case 5400:
    case 5401:
    case 5402:
    case 5403:
    case 5404:
    case 5405:
    case 5407:
    case 5408:
    case 5409:
    case 5410:
    case 5411:
    case 5412:
    case 5413:
    case 5414:
    case 5415:
    case 5416:
    case 5417:
    case 5418:
    case 5419:
    case 5426:
    case 5427:
    case 5428:
    case 5429:
    case 5430:
    case 5431:
    case 5432:
    case 5433:
    case 5434:
    case 5435:
    case 5438:
    case 5439:
    case 5443:
    case 5444:
    case 5445:
    case 5446:
    case 5450:
    case 5451:
    case 5452:
    case 5453:
    case 5456:
    case 5457:
    case 5458:
    case 5459:
    case 5460:
    case 5461:
    case 5463:
    case 5464:
    case 5465:
    case 5466:
    case 5467:
    case 5480:
    case 5481:
    case 5482:
    case 5485:
    case 5486:
    case 5487:
    case 5488:
    case 5489:
    case 5490:
    case 5491:
    case 5492:
    case 5493:
    case 5494:
    case 5495:
    case 5496:
    case 5497:
    case 5498:
    case 5500:
    case 5501:
    case 5502:
    case 5503:
    case 5504:
    case 5505:
    case 5506:
    case 5508:
    case 5509:
    case 5511:
    case 5512:
    case 5514:
    case 5515:
    case 5516:
    case 5517:
    case 5518:
    case 5519:
    case 5520:
    case 5521:
    case 5522:
    case 5523:
    case 5524:
    case 5525:
    case 5526:
    case 5527:
    case 5528:
    case 5529:
    case 5530:
    case 5531:
    case 5532:
    case 5535:
    case 5536:
    case 5543:
    case 5544:
    case 5545:
    case 5549:
    case 5550:
    case 5551:
    case 5552:
    case 5553:
    case 5554:
    case 5555:
    case 5556:
    case 5557:
    case 5558:
    case 5559:
    case 5560:
    case 5561:
    case 5562:
    case 5563:
    case 5564:
    case 5565:
    case 5566:
    case 5567:
    case 5568:
    case 5569:
    case 5570:
    case 5571:
    case 5572:
    case 5573:
    case 5574:
    case 5575:
    case 5576:
    case 5577:
    case 5578:
    case 5582:
    case 5583:
    case 5584:
    case 5585:
    case 5586:
    case 5587:
    case 5588:
    case 5589:
    case 5592:
    case 5593:
    case 5594:
    case 5595:
    case 5596:
    case 5597:
    case 5598:
    case 5599:
    case 5600:
    case 5601:
    case 5602:
    case 5603:
    case 5604:
    case 5605:
    case 5606:
    case 5607:
    case 5608:
    case 5609:
    case 5610:
    case 5611:
    case 5612:
    case 5613:
    case 5614:
    case 5615:
    case 5616:
    case 5617:
    case 5618:
    case 5619:
    case 5620:
    case 5621:
    case 5622:
    case 5623:
    case 5624:
    case 5625:
    case 5626:
    case 5627:
    case 5800:
    case 5812:
    case 5813:
    case 5827:
    case 5828:
    case 5829:
    case 5830:
    case 5831:
    case 5844:
    case 5847:
    case 5848:
    case 5849:
    case 6200:
    case 6201:
    case 6202:
    case 6400:
    case 6401:
    case 6403:
    case 6404:
    case 6405:
    case 6406:
    case 6407:
    case 6500:
    case 6501:
    case 6502:
    case 6503:
    case 6504:
    case 6505:
    case 6506:
    case 6507:
    case 6508:
    case 6509:
    case 6600:
    case 6601:
    case 6602:
    case 6603:
    case 6604:
    case 6605:
    case 6606:
    case 6607:
    case 6608:
    case 6609:
    case 6610:
    case 6611:
    case 6612:
    case 6613:
    case 6614:
    case 6615:
    case 6616:
    case 6617:
    case 6618:
    case 6619:
    case 6620:
    case 6621:
    case 6622:
    case 6623:
    case 6624:
    case 6625:
    case 6626:
    case 6627:
    case 6628:
    case 6629:
    case 6800:
    case 6801:
    case 6802:
    case 6803:
    case 6804:
    case 6805:
    case 6806:
    case 6807:
    case 6808:
    case 6809:
    case 6810:
    case 6812:
    case 6813:
    case 6814:
    case 6815:
    case 7000:
    case 7001:
    case 7002:
    case 7003:
    case 7004:
    case 7005:
    case 7006:
    case 7007:
    case 7100:
    case 7101:
    case 7200:
    case 7300:
    case 7301:
    case 7302:
    case 7307:
    case 7308:
    case 7309:
    case 7310:
    case 7311:
    case 7312:
    case 7315:
    case 7316:
    case 7325:
    case 7326:
    case 7327:
    case 7328:
    case 7331:
    case 7337:
    case 7338:
    case 7339:
    case 7341:
    case 7342:
    case 7343:
    case 7344:
    case 7349:
    case 7350:
    case 7351:
    case 7352:
    case 7353:
    case 7354:
    case 7355:
    case 7356:
    case 7359:
    case 7364:
    case 7365:
    case 7366:
    case 7367:
    case 7369:
    case 7370:
    case 7371:
    case 7378:
    case 7379:
    case 7380:
    case 7381:
    case 7500:
    case 7501:
    case 7502:
    case 7503:
    case 7504:
    case 7505:
    case 7506:
    case 7507:
    case 7508:
    case 7510:
    case 7511:
    case 7512:
    case 7513:
    case 7514:
    case 7515:
    case 7516:
    case 7517:
    case 7518:
    case 7519:
    case 7520:
    case 7521:
    case 7522:
    case 7523:
    case 7524:
    case 7525:
    case 7526:
    case 7527:
    case 7528:
    case 7529:
    case 7530:
    case 7600:
    case 7601:
    case 7602:
    case 7603:
    case 7604:
    case 7605:
    case 7606:
    case 7607:
    case 7700:
    case 7701:
    case 7702:
    case 7703:
    case 7704:
    case 7705:
    case 7706:
    case 7707:
    case 7708:
    case 7711:
    case 7712:
    case 7713:
    case 7714:
    case 7800:
    case 7801:
    case 7803:
    case 7804:
    case 7805:
    case 7806:
    case 7807:
    case 7808:
    case 7900:
    case 7901:
    case 7902:
    case 8000:
    case 8100:
    case 8200:
    case 8300:
    case 8301:
    case 8303:
    case 8304:
    case 8305:
    case 8306:
    case 8400:
    case 8401:
    case 8402:
    case 8500:
    case 8503:
    case 8504:
    case 8507:
    case 8508:
    case 8509:
    case 8510:
    case 8600:
    case 8601:
    case 8700:
    case 8701:
    case 8900:
    case 8901:
    case 8902:
    case 8903:
    case 8904:
    case 8905:
    case 8906:
    case 8907:
    case 8908:
    case 9000:
    case 9001:
    case 9002:
    case 9100:
    case 9101:
    case 9102:
    case 9103:
    case 9104:
    case 9105:
    case 9106:
    case 9107:
    case 9110:
    case 9111:
    case 9112:
    case 9113:
    case 9114:
    case 9115:
    case 9116:
    case 9117:
    case 9118:
    case 9119:
    case 9120:
    case 9121:
    case 9122:
    case 9123:
    case 9124:
    case 9125:
    case 9126:
    case 9127:
    case 9128:
    case 9129:
    case 9130:
    case 9131:
    case 9132:
    case 9133:
    case 9134:
    case 9135:
    case 9200:
    case 9201:
    case 9202:
    case 9203:
    case 9300:
    case 9330:
    case 9331:
    case 9400:
    case 9401:
    case 9402:
    case 9405:
    case 9406:
    case 9408:
    case 9500:
    case 9501:
    case 9502:
    case 9503:
    case 9504:
    case 9505:
    case 9506:
    case 9507:
    case 9508:
    case 9509:
    case 9510:
    case 9511:
    case 9512:
    case 9513:
    case 9514:
    case 9515:
    case 9516:
    case 9517:
    case 9518:
    case 9519:
    case 9520:
    case 9521:
    case 9522:
    case 9600:
    case 9601:
    case 9700:
    case 9701:
    case 9702:
    case 9704:
    case 9800:
    case 9801:
    case 9802:
    case 9803:
    case 9804:
    case 9805:
    case 9806:
    case 9807:
    case 9808:
    case 9900:
    case 9901:
    case 9902:
    case 9903:
    case 9999:
    case 10000:
    case 10100:
    case 10101:
    case 10102:
    case 10103:
    case 10104:
    case 10105:
    case 10106:
    case 12000:
    case 12001:
    case 12100:
    case 12200:
    case 12201:
    case 12202:
    case 12203:
    case 12204:
    case 12300:
    case 12301:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EClientPersonaStateFlag_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[1];
}
bool EClientPersonaStateFlag_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsgClanAccountFlags_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[2];
}
bool EMsgClanAccountFlags_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ESteamReviewScore_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[3];
}
bool ESteamReviewScore_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECodecUsagePlatform_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[4];
}
bool ECodecUsagePlatform_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECodecUsageReason_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[5];
}
bool ECodecUsageReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
