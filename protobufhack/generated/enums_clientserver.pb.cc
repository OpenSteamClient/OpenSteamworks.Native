// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums_clientserver.proto

#include "enums_clientserver.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_enums_5fclientserver_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_enums_5fclientserver_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_enums_5fclientserver_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_enums_5fclientserver_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_enums_5fclientserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030enums_clientserver.proto\032 google/proto"
  "buf/descriptor.proto*\260\377\002\n\004EMsg\022\017\n\013EMsgIn"
  "valid\020\000\022\r\n\tEMsgMulti\020\001\022\027\n\023EMsgProtobufWr"
  "apped\020\002\022\023\n\017EMsgBaseGeneral\020d\022\024\n\020EMsgGene"
  "ricReply\020d\022\025\n\021EMsgDestJobFailed\020q\022\r\n\tEMs"
  "gAlert\020s\022\023\n\017EMsgSCIDRequest\020x\022\024\n\020EMsgSCI"
  "DResponse\020y\022\024\n\020EMsgJobHeartbeat\020{\022\022\n\016EMs"
  "gHubConnect\020|\022\021\n\rEMsgSubscribe\020~\022\022\n\016EMRo"
  "uteMessage\020\177\022\022\n\rEMsgWGRequest\020\202\001\022\023\n\016EMsg"
  "WGResponse\020\203\001\022\022\n\rEMsgKeepAlive\020\204\001\022\031\n\024EMs"
  "gWebAPIJobRequest\020\205\001\022\032\n\025EMsgWebAPIJobRes"
  "ponse\020\206\001\022\033\n\026EMsgClientSessionStart\020\207\001\022\031\n"
  "\024EMsgClientSessionEnd\020\210\001\022\034\n\027EMsgClientSe"
  "ssionUpdate\020\211\001\022\030\n\023EMsgStatsDeprecated\020\212\001"
  "\022\r\n\010EMsgPing\020\213\001\022\025\n\020EMsgPingResponse\020\214\001\022\016"
  "\n\tEMsgStats\020\215\001\022\036\n\031EMsgRequestFullStatsBl"
  "ock\020\216\001\022\031\n\024EMsgLoadDBOCacheItem\020\217\001\022!\n\034EMs"
  "gLoadDBOCacheItemResponse\020\220\001\022 \n\033EMsgInva"
  "lidateDBOCacheItems\020\221\001\022\026\n\021EMsgServiceMet"
  "hod\020\222\001\022\036\n\031EMsgServiceMethodResponse\020\223\001\022\036"
  "\n\031EMsgClientPackageVersions\020\224\001\022\031\n\024EMsgTi"
  "mestampRequest\020\225\001\022\032\n\025EMsgTimestampRespon"
  "se\020\226\001\022$\n\037EMsgServiceMethodCallFromClient"
  "\020\227\001\022\"\n\035EMsgServiceMethodSendToClient\020\230\001\022"
  "\022\n\rEMsgBaseShell\020\310\001\022\024\n\017EMsgAssignSysID\020\310"
  "\001\022\r\n\010EMsgExit\020\311\001\022\023\n\016EMsgDirRequest\020\312\001\022\024\n"
  "\017EMsgDirResponse\020\313\001\022\023\n\016EMsgZipRequest\020\314\001"
  "\022\024\n\017EMsgZipResponse\020\315\001\022\035\n\030EMsgUpdateReco"
  "rdResponse\020\327\001\022 \n\033EMsgUpdateCreditCardReq"
  "uest\020\335\001\022\036\n\031EMsgUpdateUserBanResponse\020\341\001\022"
  "\026\n\021EMsgPrepareToExit\020\342\001\022!\n\034EMsgContentDe"
  "scriptionUpdate\020\343\001\022\030\n\023EMsgTestResetServe"
  "r\020\344\001\022\030\n\023EMsgUniverseChanged\020\345\001\022\036\n\031EMsgSh"
  "ellConfigInfoUpdate\020\346\001\022&\n!EMsgRequestWin"
  "dowsEventLogEntries\020\351\001\022&\n!EMsgProvideWin"
  "dowsEventLogEntries\020\352\001\022\030\n\023EMsgShellSearc"
  "hLogs\020\353\001\022 \n\033EMsgShellSearchLogsResponse\020"
  "\354\001\022!\n\034EMsgShellCheckWindowsUpdates\020\355\001\022)\n"
  "$EMsgShellCheckWindowsUpdatesResponse\020\356\001"
  "\022\034\n\027EMsgTestFlushDelayedSQL\020\360\001\022$\n\037EMsgTe"
  "stFlushDelayedSQLResponse\020\361\001\022&\n!EMsgEnsu"
  "reExecuteScheduledTasTEST\020\362\001\0220\n+EMsgEnsu"
  "reExecuteScheduledTaskResponse_TEST\020\363\001\022,"
  "\n\'EMsgUpdateScheduledTaskEnableState_TES"
  "T\020\364\001\0224\n/EMsgUpdateScheduledTaskEnableSta"
  "teResponse_TEST\020\365\001\022&\n!EMsgContentDescrip"
  "tionDeltaUpdate\020\366\001\022\'\n\"EMsgGMShellAndServ"
  "erAddressUpdates\020\367\001\022\017\n\nEMsgBaseGM\020\254\002\022\022\n\r"
  "EMsgHeartbeat\020\254\002\022\024\n\017EMsgShellFailed\020\255\002\022\023"
  "\n\016EMsgExitShells\020\263\002\022\022\n\rEMsgExitShell\020\264\002\022"
  "\032\n\025EMsgGracefulExitShell\020\265\002\022\"\n\035EMsgLicen"
  "seProcessingComplete\020\274\002\022\024\n\017EMsgSetTestFl"
  "ag\020\275\002\022\035\n\030EMsgQueuedEmailsComplete\020\276\002\022\022\n\r"
  "EMsgGMDRMSync\020\300\002\022\035\n\030EMsgPhysicalBoxInven"
  "tory\020\301\002\022\031\n\024EMsgUpdateConfigFile\020\302\002\022\023\n\016EM"
  "sgTestInitDB\020\303\002\022\033\n\026EMsgGMWriteConfigToSQ"
  "L\020\304\002\022\036\n\031EMsgGMLoadActivationCodes\020\305\002\022\026\n\021"
  "EMsgGMQueueForFBS\020\306\002\022\"\n\035EMsgGMSchemaConv"
  "ersionResults\020\307\002\022!\n\034EMsgGMWriteShellFail"
  "ureToSQL\020\311\002\022\032\n\025EMsgGMWriteStatsToSOS\020\312\002\022"
  "\"\n\035EMsgGMGetServiceMethodRouting\020\313\002\022*\n%E"
  "MsgGMGetServiceMethodRoutingResponse\020\314\002\022"
  "(\n#EMsgGMTestNextBuildSchemaConversion\020\316"
  "\002\0220\n+EMsgGMTestNextBuildSchemaConversion"
  "Response\020\317\002\022\033\n\026EMsgExpectShellRestart\020\320\002"
  "\022\027\n\022EMsgHotFixProgress\020\321\002\022)\n$EMsgGMStats"
  "ForwardToAdminConnections\020\322\002\022\035\n\030EMsgGMGe"
  "tModifiedConVars\020\323\002\022%\n EMsgGMGetModified"
  "ConVarsResponse\020\324\002\022\020\n\013EMsgBaseAIS\020\220\003\022%\n "
  "EMsgAISRequestContentDescription\020\222\003\022\031\n\024E"
  "MsgAISUpdateAppInfo\020\223\003\022\"\n\035EMsgAISGetPack"
  "ageChangeNumber\020\225\003\022*\n%EMsgAISGetPackageC"
  "hangeNumberResponse\020\226\003\022\030\n\023EMsgAIGetAppGC"
  "Flags\020\247\003\022 \n\033EMsgAIGetAppGCFlagsResponse\020"
  "\250\003\022\025\n\020EMsgAIGetAppList\020\251\003\022\035\n\030EMsgAIGetAp"
  "pListResponse\020\252\003\022\037\n\032EMsgAISGetCouponDefi"
  "nition\020\255\003\022\'\n\"EMsgAISGetCouponDefinitionR"
  "esponse\020\256\003\022/\n*EMsgAISUpdateSubordinateCo"
  "ntentDescription\020\257\003\0227\n2EMsgAISUpdateSubo"
  "rdinateContentDescriptionResponse\020\260\003\022\030\n\023"
  "EMsgAISTestEnableGC\020\261\003\022\017\n\nEMsgBaseAM\020\364\003\022"
  "\037\n\032EMsgAMUpdateUserBanRequest\020\370\003\022\025\n\020EMsg"
  "AMAddLicense\020\371\003\022\035\n\030EMsgAMSendSystemIMToU"
  "ser\020\374\003\022\030\n\023EMsgAMExtendLicense\020\375\003\022\036\n\031EMsg"
  "AMAddMinutesToLicense\020\376\003\022\030\n\023EMsgAMCancel"
  "License\020\377\003\022\027\n\022EMsgAMInitPurchase\020\200\004\022\033\n\026E"
  "MsgAMPurchaseResponse\020\201\004\022\033\n\026EMsgAMGetLeg"
  "acyGameKey\020\204\004\022#\n\036EMsgAMGetLegacyGameKeyR"
  "esponse\020\205\004\022\037\n\032EMsgAMFindHungTransactions"
  "\020\206\004\022#\n\036EMsgAMSetAccountTrustedRequest\020\207\004"
  "\022\031\n\024EMsgAMCancelPurchase\020\212\004\022\027\n\022EMsgAMNew"
  "Challenge\020\213\004\022\035\n\030EMsgAMFixPendingPurchase"
  "\020\215\004\022%\n EMsgAMFixPendingPurchaseResponse\020"
  "\216\004\022\027\n\022EMsgAMIsUserBanned\020\217\004\022\026\n\021EMsgAMReg"
  "isterKey\020\220\004\022\036\n\031EMsgAMLoadActivationCodes"
  "\020\221\004\022&\n!EMsgAMLoadActivationCodesResponse"
  "\020\222\004\022\034\n\027EMsgAMLookupKeyResponse\020\223\004\022\024\n\017EMs"
  "gAMLookupKey\020\224\004\022\026\n\021EMsgAMChatCleanup\020\225\004\022"
  "\026\n\021EMsgAMClanCleanup\020\226\004\022\033\n\026EMsgAMFixPend"
  "ingRefund\020\227\004\022\034\n\027EMsgAMReverseChargeback\020"
  "\230\004\022$\n\037EMsgAMReverseChargebackResponse\020\231\004"
  "\022\032\n\025EMsgAMClanCleanupList\020\232\004\022\035\n\030EMsgAMSe"
  "ndCartRepurchase\020\235\004\022%\n EMsgAMSendCartRep"
  "urchaseResponse\020\236\004\022\035\n\030EMsgAllowUserToPla"
  "yQuery\020\246\004\022 \n\033EMsgAllowUserToPlayResponse"
  "\020\247\004\022\025\n\020EMsgAMVerfiyUser\020\250\004\022\033\n\026EMsgAMClie"
  "ntNotPlaying\020\251\004\022\"\n\035EMsgAMClientRequestFr"
  "iendship\020\252\004\022\035\n\030EMsgAMRelayPublishStatus\020"
  "\253\004\022\037\n\032EMsgAMInitPurchaseResponse\020\260\004\022!\n\034E"
  "MsgAMRevokePurchaseResponse\020\261\004\022\035\n\030EMsgAM"
  "RefreshGuestPasses\020\263\004\022\033\n\026EMsgAMGrantGues"
  "tPasses\020\266\004\022\032\n\025EMsgAMClanDataUpdated\020\267\004\022\030"
  "\n\023EMsgAMReloadAccount\020\270\004\022\035\n\030EMsgAMClient"
  "ChatMsgRelay\020\271\004\022\024\n\017EMsgAMChatMulti\020\272\004\022 \n"
  "\033EMsgAMClientChatInviteRelay\020\273\004\022\025\n\020EMsgA"
  "MChatInvite\020\274\004\022\036\n\031EMsgAMClientJoinChatRe"
  "lay\020\275\004\022$\n\037EMsgAMClientChatMemberInfoRela"
  "y\020\276\004\022 \n\033EMsgAMPublishChatMemberInfo\020\277\004\022#"
  "\n\036EMsgAMClientAcceptFriendInvite\020\300\004\022\024\n\017E"
  "MsgAMChatEnter\020\301\004\022)\n$EMsgAMClientPublish"
  "RemovalFromSource\020\302\004\022\033\n\026EMsgAMChatAction"
  "Result\020\303\004\022\027\n\022EMsgAMFindAccounts\020\304\004\022\037\n\032EM"
  "sgAMFindAccountsResponse\020\305\004\022\035\n\030EMsgAMIsA"
  "ccountNameInUse\020\306\004\022%\n EMsgAMIsAccountNam"
  "eInUseResponse\020\307\004\022\032\n\025EMsgAMSetAccountFla"
  "gs\020\310\004\022\025\n\020EMsgAMCreateClan\020\312\004\022\035\n\030EMsgAMCr"
  "eateClanResponse\020\313\004\022\031\n\024EMsgAMGetClanDeta"
  "ils\020\314\004\022!\n\034EMsgAMGetClanDetailsResponse\020\315"
  "\004\022\031\n\024EMsgAMSetPersonaName\020\316\004\022\024\n\017EMsgAMSe"
  "tAvatar\020\317\004\022\033\n\026EMsgAMAuthenticateUser\020\320\004\022"
  "#\n\036EMsgAMAuthenticateUserResponse\020\321\004\022\037\n\032"
  "EMsgAMP2PIntroducerMessage\020\324\004\022\031\n\024EMsgCli"
  "entChatAction\020\325\004\022 \n\033EMsgAMClientChatActi"
  "onRelay\020\326\004\022\017\n\nEMsgBaseVS\020\330\004\022\025\n\020EMsgReqCh"
  "allenge\020\330\004\022\024\n\017EMsgVACResponse\020\331\004\022\031\n\024EMsg"
  "ReqChallengeTest\020\332\004\022\024\n\017EMsgVSMarkCheat\020\334"
  "\004\022\023\n\016EMsgVSAddCheat\020\335\004\022\031\n\024EMsgVSPurgeCod"
  "eModDB\020\336\004\022\036\n\031EMsgVSGetChallengeResults\020\337"
  "\004\022\036\n\031EMsgVSChallengeResultText\020\340\004\022\031\n\024EMs"
  "gVSReportLingerer\020\341\004\022\"\n\035EMsgVSRequestMan"
  "agedChallenge\020\342\004\022\031\n\024EMsgVSLoadDBFinished"
  "\020\343\004\022\021\n\014EMsgBaseDRMS\020\361\004\022\034\n\027EMsgDRMBuildBl"
  "obRequest\020\364\004\022\035\n\030EMsgDRMBuildBlobResponse"
  "\020\365\004\022\036\n\031EMsgDRMResolveGuidRequest\020\366\004\022\037\n\032E"
  "MsgDRMResolveGuidResponse\020\367\004\022\035\n\030EMsgDRMV"
  "ariabilityReport\020\371\004\022%\n EMsgDRMVariabilit"
  "yReportResponse\020\372\004\022\033\n\026EMsgDRMStabilityRe"
  "port\020\373\004\022#\n\036EMsgDRMStabilityReportRespons"
  "e\020\374\004\022 \n\033EMsgDRMDetailsReportRequest\020\375\004\022!"
  "\n\034EMsgDRMDetailsReportResponse\020\376\004\022\027\n\022EMs"
  "gDRMProcessFile\020\377\004\022\027\n\022EMsgDRMAdminUpdate"
  "\020\200\005\022\037\n\032EMsgDRMAdminUpdateResponse\020\201\005\022\020\n\013"
  "EMsgDRMSync\020\202\005\022\030\n\023EMsgDRMSyncResponse\020\203\005"
  "\022\037\n\032EMsgDRMProcessFileResponse\020\204\005\022\032\n\025EMs"
  "gDRMEmptyGuidCache\020\205\005\022\"\n\035EMsgDRMEmptyGui"
  "dCacheResponse\020\206\005\022\017\n\nEMsgBaseCS\020\212\005\022\023\n\016EM"
  "sgBaseClient\020\274\005\022\037\n\032EMsgClientLogOn_Depre"
  "cated\020\275\005\022#\n\036EMsgClientAnonLogOn_Deprecat"
  "ed\020\276\005\022\030\n\023EMsgClientHeartBeat\020\277\005\022\032\n\025EMsgC"
  "lientVACResponse\020\300\005\022#\n\036EMsgClientGamesPl"
  "ayed_obsolete\020\301\005\022\025\n\020EMsgClientLogOff\020\302\005\022"
  " \n\033EMsgClientNoUDPConnectivity\020\303\005\022\036\n\031EMs"
  "gClientConnectionStats\020\306\005\022\033\n\026EMsgClientP"
  "ingResponse\020\310\005\022\033\n\026EMsgClientRemoveFriend"
  "\020\312\005\022$\n\037EMsgClientGamesPlayedNoDataBlob\020\313"
  "\005\022\033\n\026EMsgClientChangeStatus\020\314\005\022 \n\033EMsgCl"
  "ientVacStatusResponse\020\315\005\022\030\n\023EMsgClientFr"
  "iendMsg\020\316\005\022#\n\036EMsgClientGameConnect_obso"
  "lete\020\317\005\022$\n\037EMsgClientGamesPlayed2_obsole"
  "te\020\320\005\022!\n\034EMsgClientGameEnded_obsolete\020\321\005"
  "\022\027\n\022EMsgClientSystemIM\020\326\005\022\032\n\025EMsgClientS"
  "ystemIMAck\020\327\005\022\032\n\025EMsgClientGetLicenses\020\330"
  "\005\022\037\n\032EMsgClientGetLegacyGameKey\020\332\005\022,\n\'EM"
  "sgClientContentServerLogOn_Deprecated\020\333\005"
  "\022\031\n\024EMsgClientAckVACBan2\020\334\005\022\"\n\035EMsgClien"
  "tGetPurchaseReceipts\020\340\005\022$\n\037EMsgClientGam"
  "esPlayed3_obsolete\020\342\005\022\033\n\026EMsgClientAckGu"
  "estPass\020\344\005\022\036\n\031EMsgClientRedeemGuestPass\020"
  "\345\005\022\032\n\025EMsgClientGamesPlayed\020\346\005\022\032\n\025EMsgCl"
  "ientRegisterKey\020\347\005\022\037\n\032EMsgClientInviteUs"
  "erToClan\020\350\005\022$\n\037EMsgClientAcknowledgeClan"
  "Invite\020\351\005\022$\n\037EMsgClientPurchaseWithMachi"
  "neID\020\352\005\022\034\n\027EMsgClientAppUsageEvent\020\353\005\022\034\n"
  "\027EMsgClientLogOnResponse\020\357\005\022\037\n\032EMsgClien"
  "tSetHeartbeatRate\020\363\005\022$\n\037EMsgClientNotLog"
  "gedOnDeprecated\020\364\005\022\030\n\023EMsgClientLoggedOf"
  "f\020\365\005\022\022\n\rEMsgGSApprove\020\366\005\022\017\n\nEMsgGSDeny\020\367"
  "\005\022\017\n\nEMsgGSKick\020\370\005\022\037\n\032EMsgClientPurchase"
  "Response\020\373\005\022\023\n\016EMsgClientPing\020\374\005\022\022\n\rEMsg"
  "ClientNOP\020\375\005\022\033\n\026EMsgClientPersonaState\020\376"
  "\005\022\032\n\025EMsgClientFriendsList\020\377\005\022\032\n\025EMsgCli"
  "entAccountInfo\020\200\006\022\031\n\024EMsgClientNewsUpdat"
  "e\020\203\006\022\036\n\031EMsgClientGameConnectDeny\020\205\006\022\026\n\021"
  "EMsgGSStatusReply\020\206\006\022 \n\033EMsgClientGameCo"
  "nnectTokens\020\213\006\022\032\n\025EMsgClientLicenseList\020"
  "\214\006\022\033\n\026EMsgClientVACBanStatus\020\216\006\022\031\n\024EMsgC"
  "lientEncryptPct\020\220\006\022\'\n\"EMsgClientGetLegac"
  "yGameKeyResponse\020\221\006\022\030\n\023EMsgClientAddFrie"
  "nd\020\227\006\022 \n\033EMsgClientAddFriendResponse\020\230\006\022"
  "#\n\036EMsgClientAckGuestPassResponse\020\234\006\022&\n!"
  "EMsgClientRedeemGuestPassResponse\020\235\006\022$\n\037"
  "EMsgClientUpdateGuestPassesList\020\236\006\022\026\n\021EM"
  "sgClientChatMsg\020\237\006\022\031\n\024EMsgClientChatInvi"
  "te\020\240\006\022\027\n\022EMsgClientJoinChat\020\241\006\022\035\n\030EMsgCl"
  "ientChatMemberInfo\020\242\006\022.\n)EMsgClientLogOn"
  "WithCredentials_Deprecated\020\243\006\022%\n EMsgCli"
  "entPasswordChangeResponse\020\245\006\022\030\n\023EMsgClie"
  "ntChatEnter\020\247\006\022&\n!EMsgClientFriendRemove"
  "dFromSource\020\250\006\022\031\n\024EMsgClientCreateChat\020\251"
  "\006\022!\n\034EMsgClientCreateChatResponse\020\252\006\022#\n\036"
  "EMsgClientP2PIntroducerMessage\020\255\006\022\037\n\032EMs"
  "gClientChatActionResult\020\256\006\022 \n\033EMsgClient"
  "RequestFriendData\020\257\006\022\033\n\026EMsgClientGetUse"
  "rStats\020\262\006\022#\n\036EMsgClientGetUserStatsRespo"
  "nse\020\263\006\022\035\n\030EMsgClientStoreUserStats\020\264\006\022%\n"
  " EMsgClientStoreUserStatsResponse\020\265\006\022\030\n\023"
  "EMsgClientClanState\020\266\006\022\034\n\027EMsgClientServ"
  "iceModule\020\276\006\022\032\n\025EMsgClientServiceCall\020\277\006"
  "\022\"\n\035EMsgClientServiceCallResponse\020\300\006\022$\n\037"
  "EMsgClientNatTraversalStatEvent\020\307\006\022\036\n\031EM"
  "sgClientSteamUsageEvent\020\312\006\022\034\n\027EMsgClient"
  "CheckPassword\020\315\006\022\034\n\027EMsgClientResetPassw"
  "ord\020\316\006\022$\n\037EMsgClientCheckPasswordRespons"
  "e\020\320\006\022$\n\037EMsgClientResetPasswordResponse\020"
  "\321\006\022\033\n\026EMsgClientSessionToken\020\322\006\022\037\n\032EMsgC"
  "lientDRMProblemReport\020\323\006\022\036\n\031EMsgClientSe"
  "tIgnoreFriend\020\327\006\022&\n!EMsgClientSetIgnoreF"
  "riendResponse\020\330\006\022$\n\037EMsgClientGetAppOwne"
  "rshipTicket\020\331\006\022,\n\'EMsgClientGetAppOwners"
  "hipTicketResponse\020\332\006\022#\n\036EMsgClientGetLob"
  "byListResponse\020\334\006\022\031\n\024EMsgClientServerLis"
  "t\020\360\006\022\035\n\030EMsgClientDRMBlobRequest\020\200\007\022\036\n\031E"
  "MsgClientDRMBlobResponse\020\201\007\022\027\n\022EMsgBaseG"
  "ameServer\020\204\007\022\033\n\026EMsgGSDisconnectNotice\020\205"
  "\007\022\021\n\014EMsgGSStatus\020\207\007\022\026\n\021EMsgGSUserPlayin"
  "g\020\211\007\022\022\n\rEMsgGSStatus2\020\212\007\022\036\n\031EMsgGSStatus"
  "Update_Unused\020\213\007\022\025\n\020EMsgGSServerType\020\214\007\022"
  "\025\n\020EMsgGSPlayerList\020\215\007\022#\n\036EMsgGSGetUserA"
  "chievementStatus\020\216\007\022+\n&EMsgGSGetUserAchi"
  "evementStatusResponse\020\217\007\022\027\n\022EMsgGSGetPla"
  "yStats\020\226\007\022\037\n\032EMsgGSGetPlayStatsResponse\020"
  "\227\007\022\035\n\030EMsgGSGetUserGroupStatus\020\230\007\022\035\n\030EMs"
  "gAMGetUserGroupStatus\020\231\007\022%\n EMsgAMGetUse"
  "rGroupStatusResponse\020\232\007\022%\n EMsgGSGetUser"
  "GroupStatusResponse\020\233\007\022\030\n\023EMsgGSGetReput"
  "ation\020\250\007\022 \n\033EMsgGSGetReputationResponse\020"
  "\251\007\022\034\n\027EMsgGSAssociateWithClan\020\252\007\022$\n\037EMsg"
  "GSAssociateWithClanResponse\020\253\007\022(\n#EMsgGS"
  "ComputeNewPlayerCompatibility\020\254\007\0220\n+EMsg"
  "GSComputeNewPlayerCompatibilityResponse\020"
  "\255\007\022\022\n\rEMsgBaseAdmin\020\350\007\022\021\n\014EMsgAdminCmd\020\350"
  "\007\022\031\n\024EMsgAdminCmdResponse\020\354\007\022\036\n\031EMsgAdmi"
  "nLogListenRequest\020\355\007\022\026\n\021EMsgAdminLogEven"
  "t\020\356\007\022\025\n\020EMsgUniverseData\020\362\007\022\022\n\rEMsgAdmin"
  "Spew\020\373\007\022\032\n\025EMsgAdminConsoleTitle\020\374\007\022\024\n\017E"
  "MsgAdminGCSpew\020\377\007\022\027\n\022EMsgAdminGCCommand\020"
  "\200\010\022\036\n\031EMsgAdminGCGetCommandList\020\201\010\022&\n!EM"
  "sgAdminGCGetCommandListResponse\020\202\010\022\032\n\025EM"
  "sgFBSConnectionData\020\203\010\022\025\n\020EMsgAdminMsgSp"
  "ew\020\204\010\022\020\n\013EMsgBaseFBS\020\314\010\022\026\n\021EMsgFBSReqVer"
  "sion\020\314\010\022\027\n\022EMsgFBSVersionInfo\020\315\010\022\030\n\023EMsg"
  "FBSForceRefresh\020\316\010\022\027\n\022EMsgFBSForceBounce"
  "\020\317\010\022\031\n\024EMsgFBSDeployPackage\020\320\010\022\032\n\025EMsgFB"
  "SDeployResponse\020\321\010\022\036\n\031EMsgFBSUpdateBoots"
  "trapper\020\322\010\022\024\n\017EMsgFBSSetState\020\323\010\022\032\n\025EMsg"
  "FBSApplyOSUpdates\020\324\010\022\030\n\023EMsgFBSRunCMDScr"
  "ipt\020\325\010\022\025\n\020EMsgFBSRebootBox\020\326\010\022\035\n\030EMsgFBS"
  "SetBigBrotherMode\020\327\010\022\032\n\025EMsgFBSMinidumpS"
  "erver\020\330\010\022\037\n\032EMsgFBSDeployHotFixPackage\020\332"
  "\010\022 \n\033EMsgFBSDeployHotFixResponse\020\333\010\022\032\n\025E"
  "MsgFBSDownloadHotFix\020\334\010\022\"\n\035EMsgFBSDownlo"
  "adHotFixResponse\020\335\010\022\"\n\035EMsgFBSUpdateTarg"
  "etConfigFile\020\336\010\022\034\n\027EMsgFBSApplyAccountCr"
  "ed\020\337\010\022$\n\037EMsgFBSApplyAccountCredResponse"
  "\020\340\010\022\031\n\024EMsgFBSSetShellCount\020\341\010\022\032\n\025EMsgFB"
  "STerminateShell\020\342\010\022\035\n\030EMsgFBSQueryGMForR"
  "equest\020\343\010\022\033\n\026EMsgFBSQueryGMResponse\020\344\010\022\034"
  "\n\027EMsgFBSTerminateZombies\020\345\010\022 \n\033EMsgFBSI"
  "nfoFromBootstrapper\020\346\010\022\035\n\030EMsgFBSRebootB"
  "oxResponse\020\347\010\022&\n!EMsgFBSBootstrapperPack"
  "ageRequest\020\350\010\022\'\n\"EMsgFBSBootstrapperPack"
  "ageResponse\020\351\010\022\'\n\"EMsgFBSBootstrapperGet"
  "PackageChunk\020\352\010\022/\n*EMsgFBSBootstrapperGe"
  "tPackageChunkResponse\020\353\010\022/\n*EMsgFBSBoots"
  "trapperPackageTransferProgress\020\354\010\022\037\n\032EMs"
  "gFBSRestartBootstrapper\020\355\010\022\034\n\027EMsgFBSPau"
  "seFrozenDumps\020\356\010\022\025\n\020EMsgBaseFileXfer\020\260\t\022"
  "\030\n\023EMsgFileXferRequest\020\260\t\022\031\n\024EMsgFileXfe"
  "rResponse\020\261\t\022\025\n\020EMsgFileXferData\020\262\t\022\024\n\017E"
  "MsgFileXferEnd\020\263\t\022\030\n\023EMsgFileXferDataAck"
  "\020\264\t\022\030\n\023EMsgBaseChannelAuth\020\224\n\022\035\n\030EMsgCha"
  "nnelAuthChallenge\020\224\n\022\034\n\027EMsgChannelAuthR"
  "esponse\020\225\n\022\032\n\025EMsgChannelAuthResult\020\226\n\022\036"
  "\n\031EMsgChannelEncryptRequest\020\227\n\022\037\n\032EMsgCh"
  "annelEncryptResponse\020\230\n\022\035\n\030EMsgChannelEn"
  "cryptResult\020\231\n\022\017\n\nEMsgBaseBS\020\370\n\022\030\n\023EMsgB"
  "SPurchaseStart\020\371\n\022\033\n\026EMsgBSPurchaseRespo"
  "nse\020\372\n\022\036\n\031EMsgBSAuthenticateCCTrans\020\373\n\022&"
  "\n!EMsgBSAuthenticateCCTransResponse\020\374\n\022\031"
  "\n\024EMsgBSSettleComplete\020\376\n\022\030\n\023EMsgBSInitP"
  "ayPalTxn\020\200\013\022 \n\033EMsgBSInitPayPalTxnRespon"
  "se\020\201\013\022\034\n\027EMsgBSGetPayPalUserInfo\020\202\013\022$\n\037E"
  "MsgBSGetPayPalUserInfoResponse\020\203\013\022\032\n\025EMs"
  "gBSPaymentInstrBan\020\211\013\022\"\n\035EMsgBSPaymentIn"
  "strBanResponse\020\212\013\022\034\n\027EMsgBSInitGCBankXfe"
  "rTxn\020\215\013\022$\n\037EMsgBSInitGCBankXferTxnRespon"
  "se\020\216\013\022\026\n\021EMsgBSCommitGCTxn\020\221\013\022!\n\034EMsgBSQ"
  "ueryTransactionStatus\020\222\013\022)\n$EMsgBSQueryT"
  "ransactionStatusResponse\020\223\013\022\037\n\032EMsgBSQue"
  "ryTxnExtendedInfo\020\231\013\022\'\n\"EMsgBSQueryTxnEx"
  "tendedInfoResponse\020\232\013\022 \n\033EMsgBSUpdateCon"
  "versionRates\020\233\013\022!\n\034EMsgBSPurchaseRunFrau"
  "dChecks\020\235\013\022)\n$EMsgBSPurchaseRunFraudChec"
  "ksResponse\020\236\013\022\037\n\032EMsgBSQueryBankInformat"
  "ion\020\240\013\022\'\n\"EMsgBSQueryBankInformationResp"
  "onse\020\241\013\022\"\n\035EMsgBSValidateXsollaSignature"
  "\020\245\013\022*\n%EMsgBSValidateXsollaSignatureResp"
  "onse\020\246\013\022\034\n\027EMsgBSQiwiWalletInvoice\020\250\013\022$\n"
  "\037EMsgBSQiwiWalletInvoiceResponse\020\251\013\022%\n E"
  "MsgBSUpdateInventoryFromProPack\020\252\013\022-\n(EM"
  "sgBSUpdateInventoryFromProPackResponse\020\253"
  "\013\022\036\n\031EMsgBSSendShippingRequest\020\254\013\022&\n!EMs"
  "gBSSendShippingRequestResponse\020\255\013\022 \n\033EMs"
  "gBSGetProPackOrderStatus\020\256\013\022(\n#EMsgBSGet"
  "ProPackOrderStatusResponse\020\257\013\022\032\n\025EMsgBSC"
  "heckJobRunning\020\260\013\022\"\n\035EMsgBSCheckJobRunni"
  "ngResponse\020\261\013\022(\n#EMsgBSResetPackagePurch"
  "aseRateLimit\020\262\013\0220\n+EMsgBSResetPackagePur"
  "chaseRateLimitResponse\020\263\013\022\034\n\027EMsgBSUpdat"
  "ePaymentData\020\264\013\022$\n\037EMsgBSUpdatePaymentDa"
  "taResponse\020\265\013\022\034\n\027EMsgBSGetBillingAddress"
  "\020\266\013\022$\n\037EMsgBSGetBillingAddressResponse\020\267"
  "\013\022\034\n\027EMsgBSGetCreditCardInfo\020\270\013\022$\n\037EMsgB"
  "SGetCreditCardInfoResponse\020\271\013\022#\n\036EMsgBSR"
  "emoveExpiredPaymentData\020\274\013\022+\n&EMsgBSRemo"
  "veExpiredPaymentDataResponse\020\275\013\022\037\n\032EMsgB"
  "SConvertToCurrentKeys\020\276\013\022\'\n\"EMsgBSConver"
  "tToCurrentKeysResponse\020\277\013\022\027\n\022EMsgBSInitP"
  "urchase\020\300\013\022\037\n\032EMsgBSInitPurchaseResponse"
  "\020\301\013\022\033\n\026EMsgBSCompletePurchase\020\302\013\022#\n\036EMsg"
  "BSCompletePurchaseResponse\020\303\013\022\036\n\031EMsgBSP"
  "runeCardUsageStats\020\304\013\022&\n!EMsgBSPruneCard"
  "UsageStatsResponse\020\305\013\022\037\n\032EMsgBSStoreBank"
  "Information\020\306\013\022\'\n\"EMsgBSStoreBankInforma"
  "tionResponse\020\307\013\022\030\n\023EMsgBSVerifyPOSAKey\020\310"
  "\013\022 \n\033EMsgBSVerifyPOSAKeyResponse\020\311\013\022\037\n\032E"
  "MsgBSReverseRedeemPOSAKey\020\312\013\022\'\n\"EMsgBSRe"
  "verseRedeemPOSAKeyResponse\020\313\013\022\036\n\031EMsgBSQ"
  "ueryFindCreditCard\020\314\013\022&\n!EMsgBSQueryFind"
  "CreditCardResponse\020\315\013\022\037\n\032EMsgBSStatusInq"
  "uiryPOSAKey\020\316\013\022\'\n\"EMsgBSStatusInquiryPOS"
  "AKeyResponse\020\317\013\022*\n%EMsgBSBoaCompraConfir"
  "mProductDelivery\020\326\013\0222\n-EMsgBSBoaCompraCo"
  "nfirmProductDeliveryResponse\020\327\013\022\037\n\032EMsgB"
  "SGenerateBoaCompraMD5\020\330\013\022\'\n\"EMsgBSGenera"
  "teBoaCompraMD5Response\020\331\013\022\026\n\021EMsgBSCommi"
  "tWPTxn\020\332\013\022\031\n\024EMsgBSCommitAdyenTxn\020\333\013\022\020\n\013"
  "EMsgBaseATS\020\334\013\022\033\n\026EMsgATSStartStressTest"
  "\020\335\013\022\032\n\025EMsgATSStopStressTest\020\336\013\022\035\n\030EMsgA"
  "TSRunFailServerTest\020\337\013\022\033\n\026EMsgATSUFSPerf"
  "TestTask\020\340\013\022\037\n\032EMsgATSUFSPerfTestRespons"
  "e\020\341\013\022\024\n\017EMsgATSCycleTCM\020\342\013\022\036\n\031EMsgATSIni"
  "tDRMSStressTest\020\343\013\022\024\n\017EMsgATSCallTest\020\344\013"
  "\022\031\n\024EMsgATSCallTestReply\020\345\013\022\037\n\032EMsgATSSt"
  "artExternalStress\020\346\013\022\"\n\035EMsgATSExternalS"
  "tressJobStart\020\347\013\022#\n\036EMsgATSExternalStres"
  "sJobQueued\020\350\013\022$\n\037EMsgATSExternalStressJo"
  "bRunning\020\351\013\022$\n\037EMsgATSExternalStressJobS"
  "topped\020\352\013\022$\n\037EMsgATSExternalStressJobSto"
  "pAll\020\353\013\022&\n!EMsgATSExternalStressActionRe"
  "sult\020\354\013\022\023\n\016EMsgATSStarted\020\355\013\022\032\n\025EMsgATSC"
  "SPerfTestTask\020\356\013\022\036\n\031EMsgATSCSPerfTestRes"
  "ponse\020\357\013\022\017\n\nEMsgBaseDP\020\300\014\022\035\n\030EMsgDPSetPu"
  "blishingState\020\301\014\022\034\n\027EMsgDPUniquePlayersS"
  "tat\020\303\014\022\025\n\020EMsgDPCloudStats\020\314\014\022\031\n\024EMsgDPG"
  "etPlayerCount\020\317\014\022!\n\034EMsgDPGetPlayerCount"
  "Response\020\320\014\022\"\n\035EMsgDPGameServersPlayersS"
  "tats\020\321\014\022#\n\036EMsgClientDPCheckSpecialSurve"
  "y\020\324\014\022+\n&EMsgClientDPCheckSpecialSurveyRe"
  "sponse\020\325\014\022*\n%EMsgClientDPSendSpecialSurv"
  "eyResponse\020\326\014\022/\n*EMsgClientDPSendSpecial"
  "SurveyResponseReply\020\327\014\022\036\n\031EMsgDPStoreSal"
  "eStatistics\020\330\014\022\033\n\026EMsgDPPartnerMicroTxns"
  "\020\334\014\022#\n\036EMsgDPPartnerMicroTxnsResponse\020\335\014"
  "\022\036\n\031EMsgDPVRUniquePlayersStat\020\337\014\022\017\n\nEMsg"
  "BaseCM\020\244\r\022\030\n\023EMsgCMSetAllowState\020\245\r\022\031\n\024E"
  "MsgCMSpewAllowState\020\246\r\022\032\n\025EMsgCMSessionR"
  "ejected\020\247\r\022\025\n\020EMsgCMSetSecrets\020\250\r\022\025\n\020EMs"
  "gCMGetSecrets\020\251\r\022 \n\033EMsgCMRemotePlayRepl"
  "yPacket\020\252\r\022\017\n\nEMsgBaseGC\020\230\021\022\024\n\017EMsgGCCmd"
  "Revive\020\233\021\022\022\n\rEMsgGCCmdDown\020\236\021\022\024\n\017EMsgGCC"
  "mdDeploy\020\237\021\022\034\n\027EMsgGCCmdDeployResponse\020\240"
  "\021\022\024\n\017EMsgGCCmdSwitch\020\241\021\022\032\n\025EMsgAMRefresh"
  "Sessions\020\242\021\022\035\n\030EMsgGCAchievementAwarded\020"
  "\244\021\022\024\n\017EMsgGCCmdStatus\020\250\021\022+\n&EMsgGCRegist"
  "erWebInterfaces_Deprecated\020\251\021\022\'\n\"EMsgGCG"
  "etAccountDetails_DEPRECATED\020\252\021\022\032\n\025EMsgGC"
  "InterAppMessage\020\253\021\022\033\n\026EMsgGCGetEmailTemp"
  "late\020\254\021\022#\n\036EMsgGCGetEmailTemplateRespons"
  "e\020\255\021\022\021\n\014EMsgGCHRelay\020\256\021\022\031\n\024EMsgGCHRelayT"
  "oClient\020\257\021\022\031\n\024EMsgGCHUpdateSession\020\260\021\022 \n"
  "\033EMsgGCHRequestUpdateSession\020\261\021\022\031\n\024EMsgG"
  "CHRequestStatus\020\262\021\022!\n\034EMsgGCHRequestStat"
  "usResponse\020\263\021\022\"\n\035EMsgGCHAccountVacStatus"
  "Change\020\264\021\022\023\n\016EMsgGCHSpawnGC\020\265\021\022\033\n\026EMsgGC"
  "HSpawnGCResponse\020\266\021\022\022\n\rEMsgGCHKillGC\020\267\021\022"
  "\032\n\025EMsgGCHKillGCResponse\020\270\021\022\'\n\"EMsgGCHAc"
  "countTradeBanStatusChange\020\271\021\022#\n\036EMsgGCHA"
  "ccountLockStatusChange\020\272\021\022!\n\034EMsgGCHVacV"
  "erificationChange\020\273\021\022$\n\037EMsgGCHAccountPh"
  "oneNumberChange\020\274\021\022\"\n\035EMsgGCHAccountTwoF"
  "actorChange\020\275\021\022\035\n\030EMsgGCHInviteUserToLob"
  "by\020\276\021\022\"\n\035EMsgGCHUpdateMultipleSessions\020\277"
  "\021\022(\n#EMsgGCHMarkAppSessionsAuthoritative"
  "\020\300\021\022-\n(EMsgGCHRecurringSubscriptionStatu"
  "sChange\020\301\021\022\035\n\030EMsgGCHAppCheersReceived\020\302"
  "\021\022$\n\037EMsgGCHAppCheersGetAllowedTypes\020\303\021\022"
  ",\n\'EMsgGCHAppCheersGetAllowedTypesRespon"
  "se\020\304\021\022#\n\036EMsgGCHRoutingRulesFromGCHtoGM\020"
  "\305\021\022#\n\036EMsgGCHRoutingRulesToGCHfromGM\020\306\021\022"
  "!\n\034EMsgUpdateCMMessageRateRules\020\307\021\022\020\n\013EM"
  "sgBaseP2P\020\304\023\022\035\n\030EMsgP2PIntroducerMessage"
  "\020\306\023\022\017\n\nEMsgBaseSM\020\324\026\022\032\n\025EMsgSMExpensiveR"
  "eport\020\326\026\022\027\n\022EMsgSMHourlyReport\020\327\026\022\033\n\026EMs"
  "gSMPartitionRenames\020\331\026\022\027\n\022EMsgSMMonitorS"
  "pace\020\332\026\022(\n#EMsgSMTestNextBuildSchemaConv"
  "ersion\020\333\026\0220\n+EMsgSMTestNextBuildSchemaCo"
  "nversionResponse\020\334\026\022\021\n\014EMsgBaseTest\020\270\027\022\023"
  "\n\016EMsgFailServer\020\270\027\022\031\n\024EMsgJobHeartbeatT"
  "est\020\271\027\022!\n\034EMsgJobHeartbeatTestResponse\020\272"
  "\027\022\025\n\020EMsgBaseFTSRange\020\234\030\022\025\n\020EMsgBaseCCSR"
  "ange\020\316\030\022%\n EMsgCCSDeleteAllCommentsByAut"
  "hor\020\331\030\022-\n(EMsgCCSDeleteAllCommentsByAuth"
  "orResponse\020\332\030\022\025\n\020EMsgBaseLBSRange\020\200\031\022\024\n\017"
  "EMsgLBSSetScore\020\201\031\022\034\n\027EMsgLBSSetScoreRes"
  "ponse\020\202\031\022\032\n\025EMsgLBSFindOrCreateLB\020\203\031\022\"\n\035"
  "EMsgLBSFindOrCreateLBResponse\020\204\031\022\030\n\023EMsg"
  "LBSGetLBEntries\020\205\031\022 \n\033EMsgLBSGetLBEntrie"
  "sResponse\020\206\031\022\025\n\020EMsgLBSGetLBList\020\207\031\022\035\n\030E"
  "MsgLBSGetLBListResponse\020\210\031\022\030\n\023EMsgLBSSet"
  "LBDetails\020\211\031\022\024\n\017EMsgLBSDeleteLB\020\212\031\022\031\n\024EM"
  "sgLBSDeleteLBEntry\020\213\031\022\023\n\016EMsgLBSResetLB\020"
  "\214\031\022\033\n\026EMsgLBSResetLBResponse\020\215\031\022\034\n\027EMsgL"
  "BSDeleteLBResponse\020\216\031\022\020\n\013EMsgBaseOGS\020\310\032\022"
  "\030\n\023EMsgOGSBeginSession\020\311\032\022 \n\033EMsgOGSBegi"
  "nSessionResponse\020\312\032\022\026\n\021EMsgOGSEndSession"
  "\020\313\032\022\036\n\031EMsgOGSEndSessionResponse\020\314\032\022\036\n\031E"
  "MsgOGSWriteAppSessionRow\020\316\032\022\020\n\013EMsgBaseB"
  "RP\020\220\034\022\025\n\020EMsgBaseAMRange2\020\240\037\022\025\n\020EMsgAMCr"
  "eateChat\020\241\037\022\035\n\030EMsgAMCreateChatResponse\020"
  "\242\037\022!\n\034EMsgAMGetAccountEmailAddress\020\246\037\022)\n"
  "$EMsgAMGetAccountEmailAddressResponse\020\247\037"
  "\022\032\n\025EMsgAMRequestClanData\020\250\037\022\031\n\024EMsgAMRo"
  "uteToClients\020\251\037\022\024\n\017EMsgAMLeaveClan\020\252\037\022\032\n"
  "\025EMsgAMClanPermissions\020\253\037\022\"\n\035EMsgAMClanP"
  "ermissionsResponse\020\254\037\022.\n)EMsgAMCreateCla"
  "nEventDummyForRateLimiting\020\255\037\022.\n)EMsgAMU"
  "pdateClanEventDummyForRateLimiting\020\257\037\022$\n"
  "\037EMsgAMSetClanPermissionSettings\020\265\037\022,\n\'E"
  "MsgAMSetClanPermissionSettingsResponse\020\266"
  "\037\022$\n\037EMsgAMGetClanPermissionSettings\020\267\037\022"
  ",\n\'EMsgAMGetClanPermissionSettingsRespon"
  "se\020\270\037\022\036\n\031EMsgAMPublishChatRoomInfo\020\271\037\022\033\n"
  "\026EMsgClientChatRoomInfo\020\272\037\022\031\n\024EMsgAMGetC"
  "lanHistory\020\307\037\022!\n\034EMsgAMGetClanHistoryRes"
  "ponse\020\310\037\022 \n\033EMsgAMGetClanPermissionBits\020"
  "\311\037\022(\n#EMsgAMGetClanPermissionBitsRespons"
  "e\020\312\037\022 \n\033EMsgAMSetClanPermissionBits\020\313\037\022("
  "\n#EMsgAMSetClanPermissionBitsResponse\020\314\037"
  "\022\035\n\030EMsgAMSessionInfoRequest\020\315\037\022\036\n\031EMsgA"
  "MSessionInfoResponse\020\316\037\022\032\n\025EMsgAMValidat"
  "eWGToken\020\317\037\022\026\n\021EMsgAMGetClanRank\020\322\037\022\036\n\031E"
  "MsgAMGetClanRankResponse\020\323\037\022\026\n\021EMsgAMSet"
  "ClanRank\020\324\037\022\036\n\031EMsgAMSetClanRankResponse"
  "\020\325\037\022\026\n\021EMsgAMGetClanPOTW\020\326\037\022\036\n\031EMsgAMGet"
  "ClanPOTWResponse\020\327\037\022\026\n\021EMsgAMSetClanPOTW"
  "\020\330\037\022\036\n\031EMsgAMSetClanPOTWResponse\020\331\037\022\023\n\016E"
  "MsgAMDumpUser\020\333\037\022\033\n\026EMsgAMKickUserFromCl"
  "an\020\334\037\022\033\n\026EMsgAMAddFounderToClan\020\335\037\022\"\n\035EM"
  "sgAMValidateWGTokenResponse\020\336\037\022\034\n\027EMsgAM"
  "SetAccountDetails\020\340\037\022\031\n\024EMsgAMGetChatBan"
  "List\020\341\037\022!\n\034EMsgAMGetChatBanListResponse\020"
  "\342\037\022\030\n\023EMsgAMUnBanFromChat\020\343\037\022\031\n\024EMsgAMSe"
  "tClanDetails\020\344\037\022\034\n\027EMsgUGSGetUserGameSta"
  "ts\020\351\037\022$\n\037EMsgUGSGetUserGameStatsResponse"
  "\020\352\037\022\036\n\031EMsgAMCheckClanMembership\020\353\037\022\031\n\024E"
  "MsgAMGetClanMembers\020\354\037\022!\n\034EMsgAMGetClanM"
  "embersResponse\020\355\037\022!\n\034EMsgAMNotifyChatOfC"
  "lanChange\020\357\037\022\033\n\026EMsgAMResubmitPurchase\020\360"
  "\037\022\024\n\017EMsgAMAddFriend\020\361\037\022\034\n\027EMsgAMAddFrie"
  "ndResponse\020\362\037\022\027\n\022EMsgAMRemoveFriend\020\363\037\022\023"
  "\n\016EMsgAMDumpClan\020\364\037\022\032\n\025EMsgAMChangeClanO"
  "wner\020\365\037\022\034\n\027EMsgAMCancelEasyCollect\020\366\037\022$\n"
  "\037EMsgAMCancelEasyCollectResponse\020\367\037\022\030\n\023E"
  "MsgAMClansInCommon\020\372\037\022 \n\033EMsgAMClansInCo"
  "mmonResponse\020\373\037\022\033\n\026EMsgAMIsValidAccountI"
  "D\020\374\037\022\032\n\025EMsgAMWipeFriendsList\020\377\037\022\025\n\020EMsg"
  "AMSetIgnored\020\200 \022%\n EMsgAMClansInCommonCo"
  "untResponse\020\201 \022\026\n\021EMsgAMFriendsList\020\202 \022\036"
  "\n\031EMsgAMFriendsListResponse\020\203 \022\032\n\025EMsgAM"
  "FriendsInCommon\020\204 \022\"\n\035EMsgAMFriendsInCom"
  "monResponse\020\205 \022\'\n\"EMsgAMFriendsInCommonC"
  "ountResponse\020\206 \022\035\n\030EMsgAMClansInCommonCo"
  "unt\020\207 \022\033\n\026EMsgAMChallengeVerdict\020\210 \022 \n\033E"
  "MsgAMChallengeNotification\020\211 \022\025\n\020EMsgAMF"
  "indGSByIP\020\212 \022\026\n\021EMsgAMFoundGSByIP\020\213 \022\026\n\021"
  "EMsgAMGiftRevoked\020\214 \022\027\n\022EMsgAMUserClanLi"
  "st\020\216 \022\037\n\032EMsgAMUserClanListResponse\020\217 \022\035"
  "\n\030EMsgAMGetAccountDetails2\020\220 \022%\n EMsgAMG"
  "etAccountDetailsResponse2\020\221 \022&\n!EMsgAMSe"
  "tCommunityProfileSettings\020\222 \022.\n)EMsgAMSe"
  "tCommunityProfileSettingsResponse\020\223 \022#\n\036"
  "EMsgAMGetCommunityPrivacyState\020\224 \022+\n&EMs"
  "gAMGetCommunityPrivacyStateResponse\020\225 \022&"
  "\n!EMsgAMCheckClanInviteRateLimiting\020\226 \022$"
  "\n\037EMsgUGSGetUserAchievementStatus\020\227 \022\025\n\020"
  "EMsgAMGetIgnored\020\230 \022\035\n\030EMsgAMGetIgnoredR"
  "esponse\020\231 \022\035\n\030EMsgAMSetIgnoredResponse\020\232"
  " \022$\n\037EMsgAMSetFriendRelationshipNone\020\233 \022"
  " \n\033EMsgAMGetFriendRelationship\020\234 \022(\n#EMs"
  "gAMGetFriendRelationshipResponse\020\235 \022\036\n\031E"
  "MsgAMServiceModulesCache\020\236 \022\035\n\030EMsgAMSer"
  "viceModulesCall\020\237 \022%\n EMsgAMServiceModul"
  "esCallResponse\020\240 \022\037\n\032EMsgCommunityAddFri"
  "endNews\020\254 \022\027\n\022EMsgAMFindClanUser\020\257 \022\037\n\032E"
  "MsgAMFindClanUserResponse\020\260 \022\026\n\021EMsgAMBa"
  "nFromChat\020\261 \022#\n\036EMsgAMGetUserNewsSubscri"
  "ptions\020\263 \022+\n&EMsgAMGetUserNewsSubscripti"
  "onsResponse\020\264 \022#\n\036EMsgAMSetUserNewsSubsc"
  "riptions\020\265 \022\033\n\026EMsgAMSendQueuedEmails\020\270 "
  "\022\032\n\025EMsgAMSetLicenseFlags\020\271 \022\033\n\026EMsgAMGe"
  "tAccountStatus\020\276 \022#\n\036EMsgAMGetAccountSta"
  "tusResponse\020\277 \022\030\n\023EMsgAMEditBanReason\020\300 "
  "\022&\n!EMsgAMCheckClanMembershipResponse\020\301 "
  "\022\"\n\035EMsgAMProbeClanMembershipList\020\302 \022*\n%"
  "EMsgAMProbeClanMembershipListResponse\020\303 "
  "\022,\n\'EMsgUGSGetUserAchievementStatusRespo"
  "nse\020\304 \022\034\n\027EMsgAMGetFriendsLobbies\020\305 \022$\n\037"
  "EMsgAMGetFriendsLobbiesResponse\020\306 \022$\n\037EM"
  "sgAMGetUserFriendNewsResponse\020\314 \022#\n\036EMsg"
  "CommunityGetUserFriendNews\020\315 \022#\n\036EMsgAMG"
  "etUserClansNewsResponse\020\316 \022\033\n\026EMsgAMGetU"
  "serClansNews\020\317 \022\037\n\032EMsgAMGetPreviousCBAc"
  "count\020\330 \022\'\n\"EMsgAMGetPreviousCBAccountRe"
  "sponse\020\331 \022 \n\033EMsgAMGetUserLicenseHistory"
  "\020\336 \022(\n#EMsgAMGetUserLicenseHistoryRespon"
  "se\020\337 \022 \n\033EMsgAMSupportChangePassword\020\342 \022"
  "\035\n\030EMsgAMSupportChangeEmail\020\343 \022&\n!EMsgAM"
  "ResetUserVerificationGSByIP\020\345 \022\034\n\027EMsgAM"
  "UpdateGSPlayStats\020\346 \022!\n\034EMsgAMSupportEna"
  "bleOrDisable\020\347 \022\034\n\027EMsgAMGetPurchaseStat"
  "us\020\356 \022\"\n\035EMsgAMSupportIsAccountEnabled\020\361"
  " \022*\n%EMsgAMSupportIsAccountEnabledRespon"
  "se\020\362 \022\030\n\023EMsgUGSGetUserStats\020\363 \022\023\n\016EMsgA"
  "MGSSearch\020\365 \022!\n\034EMsgChatServerRouteFrien"
  "dMsg\020\373 \022&\n!EMsgAMTicketAuthRequestOrResp"
  "onse\020\374 \022\031\n\024EMsgAMAddFreeLicense\020\200!\022\034\n\027EM"
  "sgAMValidateEmailLink\020\207!\022$\n\037EMsgAMValida"
  "teEmailLinkResponse\020\210!\022\032\n\025EMsgUGSStoreUs"
  "erStats\020\214!\022\033\n\026EMsgAMDeleteStoredCard\020\221!\022"
  "\037\n\032EMsgAMRevokeLegacyGameKeys\020\222!\022\033\n\026EMsg"
  "AMGetWalletDetails\020\224!\022#\n\036EMsgAMGetWallet"
  "DetailsResponse\020\225!\022\"\n\035EMsgAMDeleteStored"
  "PaymentInfo\020\226!\022\"\n\035EMsgAMGetStoredPayment"
  "Summary\020\227!\022*\n%EMsgAMGetStoredPaymentSumm"
  "aryResponse\020\230!\022\"\n\035EMsgAMGetWalletConvers"
  "ionRate\020\231!\022*\n%EMsgAMGetWalletConversionR"
  "ateResponse\020\232!\022\030\n\023EMsgAMConvertWallet\020\233!"
  "\022 \n\033EMsgAMConvertWalletResponse\020\234!\022\031\n\024EM"
  "sgAMSetPreApproval\020\237!\022!\n\034EMsgAMSetPreApp"
  "rovalResponse\020\240!\022\027\n\022EMsgAMCreateRefund\020\242"
  "!\022\033\n\026EMsgAMCreateChargeback\020\244!\022\030\n\023EMsgAM"
  "CreateDispute\020\246!\022\027\n\022EMsgAMClearDispute\020\250"
  "!\022$\n\037EMsgAMCreateFinancialAdjustment\020\251!\022"
  "\035\n\030EMsgAMPlayerNicknameList\020\252!\022%\n EMsgAM"
  "PlayerNicknameListResponse\020\253!\022!\n\034EMsgAMG"
  "etUserCurrentGameInfo\020\255!\022)\n$EMsgAMGetUse"
  "rCurrentGameInfoResponse\020\256!\022\032\n\025EMsgAMGet"
  "GSPlayerList\020\257!\022\"\n\035EMsgAMGetGSPlayerList"
  "Response\020\260!\022 \n\033EMsgAMGetSteamIDForMicroT"
  "xn\020\266!\022(\n#EMsgAMGetSteamIDForMicroTxnResp"
  "onse\020\267!\022\033\n\026EMsgAMSetPartnerMember\020\270!\022\036\n\031"
  "EMsgAMRemovePublisherUser\020\271!\022\035\n\030EMsgAMGe"
  "tUserLicenseList\020\272!\022%\n EMsgAMGetUserLice"
  "nseListResponse\020\273!\022 \n\033EMsgAMReloadGameGr"
  "oupPolicy\020\274!\022!\n\034EMsgAMAddFreeLicenseResp"
  "onse\020\275!\022\032\n\025EMsgAMVACStatusUpdate\020\276!\022\034\n\027E"
  "MsgAMGetAccountDetails\020\277!\022$\n\037EMsgAMGetAc"
  "countDetailsResponse\020\300!\022\037\n\032EMsgAMGetPlay"
  "erLinkDetails\020\301!\022\'\n\"EMsgAMGetPlayerLinkD"
  "etailsResponse\020\302!\022\'\n\"EMsgAMGetAccountFla"
  "gsForWGSpoofing\020\306!\022/\n*EMsgAMGetAccountFl"
  "agsForWGSpoofingResponse\020\307!\022\032\n\025EMsgAMGet"
  "ClanOfficers\020\312!\022\"\n\035EMsgAMGetClanOfficers"
  "Response\020\313!\022\025\n\020EMsgAMNameChange\020\314!\022\031\n\024EM"
  "sgAMGetNameHistory\020\315!\022!\n\034EMsgAMGetNameHi"
  "storyResponse\020\316!\022\'\n\"EMsgAMSupportRemoveA"
  "ccountSecurity\020\323!\022(\n#EMsgAMIsAccountInCa"
  "ptchaGracePeriod\020\324!\0220\n+EMsgAMIsAccountIn"
  "CaptchaGracePeriodResponse\020\325!\022\033\n\026EMsgAMA"
  "ccountPS3Unlink\020\326!\022#\n\036EMsgAMAccountPS3Un"
  "linkResponse\020\327!\022\"\n\035EMsgUGSStoreUserStats"
  "Response\020\330!\022\034\n\027EMsgAMGetAccountPSNInfo\020\331"
  "!\022$\n\037EMsgAMGetAccountPSNInfoResponse\020\332!\022"
  "\"\n\035EMsgAMAuthenticatedPlayerList\020\333!\022\027\n\022E"
  "MsgAMGetUserGifts\020\334!\022\037\n\032EMsgAMGetUserGif"
  "tsResponse\020\335!\022\036\n\031EMsgAMTransferLockedGif"
  "ts\020\340!\022&\n!EMsgAMTransferLockedGiftsRespon"
  "se\020\341!\022#\n\036EMsgAMPlayerHostedOnGameServer\020"
  "\342!\022\034\n\027EMsgAMGetAccountBanInfo\020\343!\022$\n\037EMsg"
  "AMGetAccountBanInfoResponse\020\344!\022\037\n\032EMsgAM"
  "RecordBanEnforcement\020\345!\022\037\n\032EMsgAMRollbac"
  "kGiftTransfer\020\346!\022\'\n\"EMsgAMRollbackGiftTr"
  "ansferResponse\020\347!\022#\n\036EMsgAMHandlePending"
  "Transaction\020\350!\022\035\n\030EMsgAMRequestClanDetai"
  "ls\020\351!\022&\n!EMsgAMDeleteStoredPaypalAgreeme"
  "nt\020\352!\022\033\n\026EMsgAMGameServerUpdate\020\353!\022\033\n\026EM"
  "sgAMGameServerRemove\020\354!\022\036\n\031EMsgAMGetPayp"
  "alAgreements\020\355!\022&\n!EMsgAMGetPaypalAgreem"
  "entsResponse\020\356!\022-\n(EMsgAMGameServerPlaye"
  "rCompatibilityCheck\020\357!\0225\n0EMsgAMGameServ"
  "erPlayerCompatibilityCheckResponse\020\360!\022\027\n"
  "\022EMsgAMRenewLicense\020\361!\022%\n EMsgAMGetAccou"
  "ntCommunityBanInfo\020\362!\022-\n(EMsgAMGetAccoun"
  "tCommunityBanInfoResponse\020\363!\022*\n%EMsgAMGa"
  "meServerAccountChangePassword\020\364!\022)\n$EMsg"
  "AMGameServerAccountDeleteAccount\020\365!\022\031\n\024E"
  "MsgAMRenewAgreement\020\366!\022\030\n\023EMsgAMXsollaPa"
  "yment\020\370!\022 \n\033EMsgAMXsollaPaymentResponse\020"
  "\371!\022 \n\033EMsgAMAcctAllowedToPurchase\020\372!\022(\n#"
  "EMsgAMAcctAllowedToPurchaseResponse\020\373!\022\033"
  "\n\026EMsgAMSwapKioskDeposit\020\374!\022#\n\036EMsgAMSwa"
  "pKioskDepositResponse\020\375!\022\035\n\030EMsgAMSetUse"
  "rGiftUnowned\020\376!\022%\n EMsgAMSetUserGiftUnow"
  "nedResponse\020\377!\022\037\n\032EMsgAMClaimUnownedUser"
  "Gift\020\200\"\022\'\n\"EMsgAMClaimUnownedUserGiftRes"
  "ponse\020\201\"\022\026\n\021EMsgAMSetClanName\020\202\"\022\036\n\031EMsg"
  "AMSetClanNameResponse\020\203\"\022\026\n\021EMsgAMGrantC"
  "oupon\020\204\"\022\036\n\031EMsgAMGrantCouponResponse\020\205\""
  "\022+\n&EMsgAMIsPackageRestrictedInUserCount"
  "ry\020\206\"\0223\n.EMsgAMIsPackageRestrictedInUser"
  "CountryResponse\020\207\"\022+\n&EMsgAMHandlePendin"
  "gTransactionResponse\020\210\"\022\034\n\027EMsgAMGrantGu"
  "estPasses2\020\211\"\022$\n\037EMsgAMGrantGuestPasses2"
  "Response\020\212\"\022\036\n\031EMsgAMGetPlayerBanDetails"
  "\020\215\"\022&\n!EMsgAMGetPlayerBanDetailsResponse"
  "\020\216\"\022\033\n\026EMsgAMFinalizePurchase\020\217\"\022#\n\036EMsg"
  "AMFinalizePurchaseResponse\020\220\"\022 \n\033EMsgAMP"
  "ersonaChangeResponse\020\224\"\022)\n$EMsgAMGetClan"
  "DetailsForForumCreation\020\225\"\0221\n,EMsgAMGetC"
  "lanDetailsForForumCreationResponse\020\226\"\022&\n"
  "!EMsgAMGetPendingNotificationCount\020\227\"\022.\n"
  ")EMsgAMGetPendingNotificationCountRespon"
  "se\020\230\"\022\036\n\031EMsgAMPasswordHashUpgrade\020\231\"\022\033\n"
  "\026EMsgAMBoaCompraPayment\020\234\"\022#\n\036EMsgAMBoaC"
  "ompraPaymentResponse\020\235\"\022#\n\036EMsgAMComplet"
  "eExternalPurchase\020\237\"\022+\n&EMsgAMCompleteEx"
  "ternalPurchaseResponse\020\240\"\022\'\n\"EMsgAMResol"
  "veNegativeWalletCredits\020\241\"\022/\n*EMsgAMReso"
  "lveNegativeWalletCreditsResponse\020\242\"\022$\n\037E"
  "MsgAMPlayerGetClanBasicDetails\020\245\"\022,\n\'EMs"
  "gAMPlayerGetClanBasicDetailsResponse\020\246\"\022"
  "\025\n\020EMsgAMMOLPayment\020\247\"\022\035\n\030EMsgAMMOLPayme"
  "ntResponse\020\250\"\022\031\n\024EMsgGetUserIPCountry\020\251\""
  "\022!\n\034EMsgGetUserIPCountryResponse\020\252\"\022)\n$E"
  "MsgNotificationOfSuspiciousActivity\020\253\"\022\030"
  "\n\023EMsgAMDegicaPayment\020\254\"\022 \n\033EMsgAMDegica"
  "PaymentResponse\020\255\"\022\027\n\022EMsgAMEClubPayment"
  "\020\256\"\022\037\n\032EMsgAMEClubPaymentResponse\020\257\"\022#\n\036"
  "EMsgAMPayPalPaymentsHubPayment\020\260\"\022+\n&EMs"
  "gAMPayPalPaymentsHubPaymentResponse\020\261\"\022/"
  "\n*EMsgAMTwoFactorRecoverAuthenticatorReq"
  "uest\020\262\"\0220\n+EMsgAMTwoFactorRecoverAuthent"
  "icatorResponse\020\263\"\022\033\n\026EMsgAMSmart2PayPaym"
  "ent\020\264\"\022#\n\036EMsgAMSmart2PayPaymentResponse"
  "\020\265\"\0225\n0EMsgAMValidatePasswordResetCodeAn"
  "dSendSmsRequest\020\266\"\0226\n1EMsgAMValidatePass"
  "wordResetCodeAndSendSmsResponse\020\267\"\022(\n#EM"
  "sgAMGetAccountResetDetailsRequest\020\270\"\022)\n$"
  "EMsgAMGetAccountResetDetailsResponse\020\271\"\022"
  "\030\n\023EMsgAMBitPayPayment\020\272\"\022 \n\033EMsgAMBitPa"
  "yPaymentResponse\020\273\"\022 \n\033EMsgAMSendAccount"
  "InfoUpdate\020\274\"\022\034\n\027EMsgAMSendScheduledGift"
  "\020\275\"\022\030\n\023EMsgAMNodwinPayment\020\276\"\022 \n\033EMsgAMN"
  "odwinPaymentResponse\020\277\"\022\036\n\031EMsgAMResolve"
  "WalletRevoke\020\300\"\022%\n EMsgAMResolveWalletRe"
  "verseRevoke\020\301\"\022\030\n\023EMsgAMFundedPayment\020\302\""
  "\022 \n\033EMsgAMFundedPaymentResponse\020\303\"\022,\n\'EM"
  "sgAMRequestPersonaUpdateForChatServer\020\304\""
  "\022\036\n\031EMsgAMPerfectWorldPayment\020\305\"\022&\n!EMsg"
  "AMPerfectWorldPaymentResponse\020\306\"\022\032\n\025EMsg"
  "AMECommPayPayment\020\307\"\022\"\n\035EMsgAMECommPayPa"
  "ymentResponse\020\310\"\022\034\n\027EMsgAMSetRemoteClien"
  "tID\020\311\"\022\024\n\017EMsgBasePSRange\020\210\'\022\036\n\031EMsgPSIs"
  "ValidShoppingCart\020\213\'\022&\n!EMsgPSIsValidSho"
  "ppingCartResponse\020\214\'\022\"\n\035EMsgPSGetShoppin"
  "gCartContents\020\221\'\022*\n%EMsgPSGetShoppingCar"
  "tContentsResponse\020\222\'\022(\n#EMsgPSAddWalletC"
  "reditToShoppingCart\020\223\'\0220\n+EMsgPSAddWalle"
  "tCreditToShoppingCartResponse\020\224\'\022!\n\034EMsg"
  "PSGetAccountCartContents\020\225\'\022)\n$EMsgPSGet"
  "AccountCartContentsResponse\020\226\'\022\025\n\020EMsgBa"
  "seUFSRange\020\320(\022\037\n\032EMsgUFSReloadPartitionI"
  "nfo\020\337(\022\033\n\026EMsgUFSSynchronizeFile\020\341(\022#\n\036E"
  "MsgUFSSynchronizeFileResponse\020\342(\022\037\n\032EMsg"
  "ClientUFSGetUGCDetails\020\352(\022\'\n\"EMsgClientU"
  "FSGetUGCDetailsResponse\020\353(\022\033\n\026EMsgUFSUpd"
  "ateFileFlags\020\354(\022#\n\036EMsgUFSUpdateFileFlag"
  "sResponse\020\355(\022#\n\036EMsgClientUFSGetSingleFi"
  "leInfo\020\356(\022+\n&EMsgClientUFSGetSingleFileI"
  "nfoResponse\020\357(\022\033\n\026EMsgClientUFSShareFile"
  "\020\360(\022#\n\036EMsgClientUFSShareFileResponse\020\361("
  "\022\031\n\024EMsgUFSReloadAccount\020\362(\022!\n\034EMsgUFSRe"
  "loadAccountResponse\020\363(\022\037\n\032EMsgUFSUpdateR"
  "ecordBatched\020\364(\022\'\n\"EMsgUFSUpdateRecordBa"
  "tchedResponse\020\365(\022\027\n\022EMsgUFSMigrateFile\020\366"
  "(\022\037\n\032EMsgUFSMigrateFileResponse\020\367(\022\026\n\021EM"
  "sgUFSGetUGCURLs\020\370(\022\036\n\031EMsgUFSGetUGCURLsR"
  "esponse\020\371(\022\'\n\"EMsgUFSHttpUploadFileFinis"
  "hRequest\020\372(\022(\n#EMsgUFSHttpUploadFileFini"
  "shResponse\020\373(\022 \n\033EMsgUFSDownloadStartReq"
  "uest\020\374(\022!\n\034EMsgUFSDownloadStartResponse\020"
  "\375(\022 \n\033EMsgUFSDownloadChunkRequest\020\376(\022!\n\034"
  "EMsgUFSDownloadChunkResponse\020\377(\022!\n\034EMsgU"
  "FSDownloadFinishRequest\020\200)\022\"\n\035EMsgUFSDow"
  "nloadFinishResponse\020\201)\022\031\n\024EMsgUFSFlushUR"
  "LCache\020\202)\022\034\n\027EMsgUFSMigrateFileAppID\020\205)\022"
  "$\n\037EMsgUFSMigrateFileAppIDResponse\020\206)\022\024\n"
  "\017EMsgBaseClient2\020\230*\022,\n\'EMsgClientRequest"
  "ForgottenPasswordEmail\020\231*\0224\n/EMsgClientR"
  "equestForgottenPasswordEmailResponse\020\232*\022"
  "$\n\037EMsgClientCreateAccountResponse\020\233*\022%\n"
  " EMsgClientResetForgottenPassword\020\234*\022-\n("
  "EMsgClientResetForgottenPasswordResponse"
  "\020\235*\022-\n(EMsgClientInformOfResetForgottenP"
  "assword\020\237*\0225\n0EMsgClientInformOfResetFor"
  "gottenPasswordResponse\020\240*\022\'\n\"EMsgClientA"
  "nonUserLogOn_Deprecated\020\241*\022&\n!EMsgClient"
  "GamesPlayedWithDataBlob\020\242*\022!\n\034EMsgClient"
  "UpdateUserGameInfo\020\243*\022\035\n\030EMsgClientFileT"
  "oDownload\020\244*\022%\n EMsgClientFileToDownload"
  "Response\020\245*\022\032\n\025EMsgClientLBSSetScore\020\246*\022"
  "\"\n\035EMsgClientLBSSetScoreResponse\020\247*\022 \n\033E"
  "MsgClientLBSFindOrCreateLB\020\250*\022(\n#EMsgCli"
  "entLBSFindOrCreateLBResponse\020\251*\022\036\n\031EMsgC"
  "lientLBSGetLBEntries\020\252*\022&\n!EMsgClientLBS"
  "GetLBEntriesResponse\020\253*\022\033\n\026EMsgClientCha"
  "tDeclined\020\262*\022 \n\033EMsgClientFriendMsgIncom"
  "ing\020\263*\022\"\n\035EMsgClientAuthList_Deprecated\020"
  "\264*\022!\n\034EMsgClientTicketAuthComplete\020\265*\022\037\n"
  "\032EMsgClientIsLimitedAccount\020\266*\022\036\n\031EMsgCl"
  "ientRequestAuthList\020\267*\022\027\n\022EMsgClientAuth"
  "List\020\270*\022\023\n\016EMsgClientStat\020\271*\022 \n\033EMsgClie"
  "ntP2PConnectionInfo\020\272*\022$\n\037EMsgClientP2PC"
  "onnectionFailInfo\020\273*\022$\n\037EMsgClientGetDep"
  "otDecryptionKey\020\276*\022,\n\'EMsgClientGetDepot"
  "DecryptionKeyResponse\020\277*\022 \n\033EMsgClientEn"
  "ableTestLicense\020\303*\022(\n#EMsgClientEnableTe"
  "stLicenseResponse\020\304*\022!\n\034EMsgClientDisabl"
  "eTestLicense\020\305*\022)\n$EMsgClientDisableTest"
  "LicenseResponse\020\306*\022$\n\037EMsgClientRequestV"
  "alidationMail\020\310*\022,\n\'EMsgClientRequestVal"
  "idationMailResponse\020\311*\022#\n\036EMsgClientChec"
  "kAppBetaPassword\020\312*\022+\n&EMsgClientCheckAp"
  "pBetaPasswordResponse\020\313*\022\023\n\016EMsgClientTo"
  "GC\020\314*\022\025\n\020EMsgClientFromGC\020\315*\022\034\n\027EMsgClie"
  "ntEmailAddrInfo\020\320*\022\036\n\031EMsgClientPassword"
  "Change3\020\321*\022\033\n\026EMsgClientEmailChange3\020\322*\022"
  " \n\033EMsgClientPersonalQAChange3\020\323*\022&\n!EMs"
  "gClientResetForgottenPassword3\020\324*\022-\n(EMs"
  "gClientRequestForgottenPasswordEmail3\020\325*"
  "\022\032\n\025EMsgClientNewLoginKey\020\327*\022-\n(EMsgClie"
  "ntNewLoginKeyAccepted_Deprecated\020\330*\022\'\n\"E"
  "MsgClientLogOnWithHash_Deprecated\020\331*\022\036\n\031"
  "EMsgClientStoreUserStats2\020\332*\022\033\n\026EMsgClie"
  "ntStatsUpdated\020\333*\022#\n\036EMsgClientRequested"
  "ClientStats\020\350*\022\031\n\024EMsgClientStat2Int32\020\351"
  "*\022\024\n\017EMsgClientStat2\020\352*\022!\n\034EMsgClientDRM"
  "DownloadRequest\020\355*\022\"\n\035EMsgClientDRMDownl"
  "oadResponse\020\356*\022\035\n\030EMsgClientDRMFinalResu"
  "lt\020\357*\022$\n\037EMsgClientGetFriendsWhoPlayGame"
  "\020\360*\022,\n\'EMsgClientGetFriendsWhoPlayGameRe"
  "sponse\020\361*\022\036\n\031EMsgClientOGSBeginSession\020\362"
  "*\022&\n!EMsgClientOGSBeginSessionResponse\020\363"
  "*\022\034\n\027EMsgClientOGSEndSession\020\364*\022$\n\037EMsgC"
  "lientOGSEndSessionResponse\020\365*\022\032\n\025EMsgCli"
  "entOGSWriteRow\020\366*\022!\n\034EMsgClientGetPeerCo"
  "ntentInfo\020\367*\022)\n$EMsgClientGetPeerContent"
  "InfoResponse\020\370*\022%\n EMsgClientStartPeerCo"
  "ntentServer\020\371*\022-\n(EMsgClientStartPeerCon"
  "tentServerResponse\020\372*\022 \n\033EMsgClientServe"
  "rUnavailable\020\374*\022\037\n\032EMsgClientServersAvai"
  "lable\020\375*\022\'\n\"EMsgClientRegisterAuthTicket"
  "WithCM\020\376*\022\032\n\025EMsgClientGCMsgFailed\020\377*\022\"\n"
  "\035EMsgClientMicroTxnAuthRequest\020\200+\022 \n\033EMs"
  "gClientMicroTxnAuthorize\020\201+\022(\n#EMsgClien"
  "tMicroTxnAuthorizeResponse\020\202+\022\036\n\031EMsgCli"
  "entGetMicroTxnInfo\020\204+\022&\n!EMsgClientGetMi"
  "croTxnInfoResponse\020\205+\022#\n\036EMsgClientDereg"
  "isterWithServer\020\207+\022%\n EMsgClientSubscrib"
  "eToPersonaFeed\020\210+\022\024\n\017EMsgClientLogon\020\212+\022"
  "\037\n\032EMsgClientGetClientDetails\020\213+\022\'\n\"EMsg"
  "ClientGetClientDetailsResponse\020\214+\022)\n$EMs"
  "gClientReportOverlayDetourFailure\020\215+\022\037\n\032"
  "EMsgClientGetClientAppList\020\216+\022\'\n\"EMsgCli"
  "entGetClientAppListResponse\020\217+\022\037\n\032EMsgCl"
  "ientInstallClientApp\020\220+\022\'\n\"EMsgClientIns"
  "tallClientAppResponse\020\221+\022!\n\034EMsgClientUn"
  "installClientApp\020\222+\022)\n$EMsgClientUninsta"
  "llClientAppResponse\020\223+\022&\n!EMsgClientSetC"
  "lientAppUpdateState\020\224+\022.\n)EMsgClientSetC"
  "lientAppUpdateStateResponse\020\225+\022(\n#EMsgCl"
  "ientRequestEncryptedAppTicket\020\226+\0220\n+EMsg"
  "ClientRequestEncryptedAppTicketResponse\020"
  "\227+\022\037\n\032EMsgClientWalletInfoUpdate\020\230+\022\030\n\023E"
  "MsgClientLBSSetUGC\020\231+\022 \n\033EMsgClientLBSSe"
  "tUGCResponse\020\232+\022 \n\033EMsgClientAMGetClanOf"
  "ficers\020\233+\022(\n#EMsgClientAMGetClanOfficers"
  "Response\020\234+\022 \n\033EMsgClientFriendProfileIn"
  "fo\020\237+\022(\n#EMsgClientFriendProfileInfoResp"
  "onse\020\240+\022 \n\033EMsgClientUpdateMachineAuth\020\241"
  "+\022(\n#EMsgClientUpdateMachineAuthResponse"
  "\020\242+\022\036\n\031EMsgClientReadMachineAuth\020\243+\022&\n!E"
  "MsgClientReadMachineAuthResponse\020\244+\022!\n\034E"
  "MsgClientRequestMachineAuth\020\245+\022)\n$EMsgCl"
  "ientRequestMachineAuthResponse\020\246+\022!\n\034EMs"
  "gClientScreenshotsChanged\020\247+\022\036\n\031EMsgClie"
  "ntLaunchClientApp\020\250+\022&\n!EMsgClientLaunch"
  "ClientAppResponse\020\251+\022\036\n\031EMsgClientGetCDN"
  "AuthToken\020\252+\022&\n!EMsgClientGetCDNAuthToke"
  "nResponse\020\253+\022%\n EMsgClientDownloadRateSt"
  "atistics\020\254+\022!\n\034EMsgClientRequestAccountD"
  "ata\020\255+\022)\n$EMsgClientRequestAccountDataRe"
  "sponse\020\256+\022&\n!EMsgClientResetForgottenPas"
  "sword4\020\257+\022\031\n\024EMsgClientHideFriend\020\260+\022 \n\033"
  "EMsgClientFriendsGroupsList\020\261+\022$\n\037EMsgCl"
  "ientGetClanActivityCounts\020\262+\022,\n\'EMsgClie"
  "ntGetClanActivityCountsResponse\020\263+\022\036\n\031EM"
  "sgClientOGSReportString\020\264+\022\033\n\026EMsgClient"
  "OGSReportBug\020\265+\022\027\n\022EMsgClientSentLogs\020\266+"
  "\022\036\n\031EMsgClientLogonGameServer\020\267+\022#\n\036EMsg"
  "AMClientCreateFriendsGroup\020\270+\022+\n&EMsgAMC"
  "lientCreateFriendsGroupResponse\020\271+\022#\n\036EM"
  "sgAMClientDeleteFriendsGroup\020\272+\022+\n&EMsgA"
  "MClientDeleteFriendsGroupResponse\020\273+\022#\n\036"
  "EMsgAMClientManageFriendsGroup\020\274+\022+\n&EMs"
  "gAMClientManageFriendsGroupResponse\020\275+\022!"
  "\n\034EMsgAMClientAddFriendToGroup\020\276+\022)\n$EMs"
  "gAMClientAddFriendToGroupResponse\020\277+\022&\n!"
  "EMsgAMClientRemoveFriendFromGroup\020\300+\022.\n)"
  "EMsgAMClientRemoveFriendFromGroupRespons"
  "e\020\301+\022&\n!EMsgClientAMGetPersonaNameHistor"
  "y\020\302+\022.\n)EMsgClientAMGetPersonaNameHistor"
  "yResponse\020\303+\022!\n\034EMsgClientRequestFreeLic"
  "ense\020\304+\022)\n$EMsgClientRequestFreeLicenseR"
  "esponse\020\305+\022.\n)EMsgClientDRMDownloadReque"
  "stWithCrashData\020\306+\022\032\n\025EMsgClientAuthList"
  "Ack\020\307+\022 \n\033EMsgClientItemAnnouncements\020\310+"
  "\022\'\n\"EMsgClientRequestItemAnnouncements\020\311"
  "+\022$\n\037EMsgClientFriendMsgEchoToSender\020\312+\022"
  "#\n\036EMsgClientCommentNotifications\020\316+\022*\n%"
  "EMsgClientRequestCommentNotifications\020\317+"
  "\022$\n\037EMsgClientPersonaChangeResponse\020\320+\022<"
  "\n7EMsgClientRequestWebAPIAuthenticateUse"
  "rNonce_Deprecated\020\321+\022D\n\?EMsgClientReques"
  "tWebAPIAuthenticateUserNonceResponse_Dep"
  "recated\020\322+\022!\n\034EMsgClientPlayerNicknameLi"
  "st\020\323+\022\"\n\035EMsgAMClientSetPlayerNickname\020\324"
  "+\022*\n%EMsgAMClientSetPlayerNicknameRespon"
  "se\020\325+\022*\n%EMsgClientGetNumberOfCurrentPla"
  "yersDP\020\330+\0222\n-EMsgClientGetNumberOfCurren"
  "tPlayersDPResponse\020\331+\022\"\n\035EMsgClientServi"
  "ceMethodLegacy\020\332+\022*\n%EMsgClientServiceMe"
  "thodLegacyResponse\020\333+\022(\n#EMsgClientFrien"
  "dUserStatusPublished\020\334+\022\034\n\027EMsgClientCur"
  "rentUIMode\020\335+\022+\n&EMsgClientVanityURLChan"
  "gedNotification\020\336+\022 \n\033EMsgClientUserNoti"
  "fications\020\337+\022\020\n\013EMsgBaseDFS\020\340+\022\023\n\016EMsgDF"
  "SGetFile\020\341+\022\034\n\027EMsgDFSInstallLocalFile\020\342"
  "+\022\026\n\021EMsgDFSConnection\020\343+\022\033\n\026EMsgDFSConn"
  "ectionReply\020\344+\022%\n EMsgClientDFSAuthentic"
  "ateRequest\020\345+\022&\n!EMsgClientDFSAuthentica"
  "teResponse\020\346+\022\034\n\027EMsgClientDFSEndSession"
  "\020\347+\022\025\n\020EMsgDFSPurgeFile\020\350+\022\025\n\020EMsgDFSRou"
  "teFile\020\351+\022\035\n\030EMsgDFSGetFileFromServer\020\352+"
  "\022\034\n\027EMsgDFSAcceptedResponse\020\353+\022\033\n\026EMsgDF"
  "SRequestPingback\020\354+\022\034\n\027EMsgDFSRecvTransm"
  "itFile\020\355+\022\034\n\027EMsgDFSSendTransmitFile\020\356+\022"
  "\034\n\027EMsgDFSRequestPingback2\020\357+\022\035\n\030EMsgDFS"
  "ResponsePingback2\020\360+\022 \n\033EMsgClientDFSDow"
  "nloadStatus\020\361+\022\031\n\024EMsgDFSStartTransfer\020\362"
  "+\022\034\n\027EMsgDFSTransferComplete\020\363+\022\035\n\030EMsgD"
  "FSRouteFileResponse\020\364+\022$\n\037EMsgClientNetw"
  "orkingCertRequest\020\365+\022,\n\'EMsgClientNetwor"
  "kingCertRequestResponse\020\366+\022\037\n\032EMsgClient"
  "ChallengeRequest\020\367+\022 \n\033EMsgClientChallen"
  "geResponse\020\370+\022!\n\034EMsgBadgeCraftedNotific"
  "ation\020\371+\022*\n%EMsgClientNetworkingMobileCe"
  "rtRequest\020\372+\0222\n-EMsgClientNetworkingMobi"
  "leCertRequestResponse\020\373+\022\020\n\013EMsgBaseMDS\020"
  "\250-\022!\n\034EMsgMDSGetDepotDecryptionKey\020\264-\022)\n"
  "$EMsgMDSGetDepotDecryptionKeyResponse\020\265-"
  "\022&\n!EMsgMDSContentServerConfigRequest\020\303-"
  "\022\037\n\032EMsgMDSContentServerConfig\020\304-\022\034\n\027EMs"
  "gMDSGetDepotManifest\020\305-\022$\n\037EMsgMDSGetDep"
  "otManifestResponse\020\306-\022!\n\034EMsgMDSGetDepot"
  "ManifestChunk\020\307-\022\032\n\025EMsgMDSToCSFlushChun"
  "k\020\324-\022\030\n\023EMsgMDSMigrateChunk\020\327-\022 \n\033EMsgMD"
  "SMigrateChunkResponse\020\330-\022\035\n\030EMsgMDSToCSF"
  "lushManifest\020\331-\022\017\n\nEMsgCSBase\020\2700\022\017\n\nEMsg"
  "CSPing\020\2710\022\027\n\022EMsgCSPingResponse\020\2720\022\020\n\013EM"
  "sgGMSBase\020\2002\022\037\n\032EMsgGMSGameServerReplica"
  "te\020\2012\022\035\n\030EMsgClientGMSServerQuery\020\2032\022%\n "
  "EMsgGMSClientServerQueryResponse\020\2042\022\036\n\031E"
  "MsgAMGMSGameServerUpdate\020\2052\022\036\n\031EMsgAMGMS"
  "GameServerRemove\020\2062\022\034\n\027EMsgGameServerOut"
  "OfDate\020\2072\022 \n\033EMsgDeviceAuthorizationBase"
  "\020\3442\022*\n%EMsgClientAuthorizeLocalDeviceReq"
  "uest\020\3452\022+\n&EMsgClientAuthorizeLocalDevic"
  "eResponse\020\3462\022\'\n\"EMsgClientDeauthorizeDev"
  "iceRequest\020\3472\022 \n\033EMsgClientDeauthorizeDe"
  "vice\020\3502\022+\n&EMsgClientUseLocalDeviceAutho"
  "rizations\020\3512\022#\n\036EMsgClientGetAuthorizedD"
  "evices\020\3522\022+\n&EMsgClientGetAuthorizedDevi"
  "cesResponse\020\3532\022(\n#EMsgAMNotifySessionDev"
  "iceAuthorized\020\3542\022/\n*EMsgClientAuthorizeL"
  "ocalDeviceNotification\020\3552\022\020\n\013EMsgMMSBase"
  "\020\3103\022\035\n\030EMsgClientMMSCreateLobby\020\3113\022%\n EM"
  "sgClientMMSCreateLobbyResponse\020\3123\022\033\n\026EMs"
  "gClientMMSJoinLobby\020\3133\022#\n\036EMsgClientMMSJ"
  "oinLobbyResponse\020\3143\022\034\n\027EMsgClientMMSLeav"
  "eLobby\020\3153\022$\n\037EMsgClientMMSLeaveLobbyResp"
  "onse\020\3163\022\036\n\031EMsgClientMMSGetLobbyList\020\3173\022"
  "&\n!EMsgClientMMSGetLobbyListResponse\020\3203\022"
  "\036\n\031EMsgClientMMSSetLobbyData\020\3213\022&\n!EMsgC"
  "lientMMSSetLobbyDataResponse\020\3223\022\036\n\031EMsgC"
  "lientMMSGetLobbyData\020\3233\022\033\n\026EMsgClientMMS"
  "LobbyData\020\3243\022\"\n\035EMsgClientMMSSendLobbyCh"
  "atMsg\020\3253\022\036\n\031EMsgClientMMSLobbyChatMsg\020\3263"
  "\022\037\n\032EMsgClientMMSSetLobbyOwner\020\3273\022\'\n\"EMs"
  "gClientMMSSetLobbyOwnerResponse\020\3303\022$\n\037EM"
  "sgClientMMSSetLobbyGameServer\020\3313\022$\n\037EMsg"
  "ClientMMSLobbyGameServerSet\020\3323\022!\n\034EMsgCl"
  "ientMMSUserJoinedLobby\020\3333\022\037\n\032EMsgClientM"
  "MSUserLeftLobby\020\3343\022\037\n\032EMsgClientMMSInvit"
  "eToLobby\020\3353\022\'\n\"EMsgClientMMSFlushFrenemy"
  "ListCache\020\3363\022/\n*EMsgClientMMSFlushFrenem"
  "yListCacheResponse\020\3373\022 \n\033EMsgClientMMSSe"
  "tLobbyLinked\020\3403\022,\n\'EMsgClientMMSSetRatel"
  "imitPolicyOnClient\020\3413\022 \n\033EMsgClientMMSGe"
  "tLobbyStatus\020\3423\022(\n#EMsgClientMMSGetLobby"
  "StatusResponse\020\3433\022\030\n\023EMsgMMSGetLobbyList"
  "\020\3443\022 \n\033EMsgMMSGetLobbyListResponse\020\3453\022\026\n"
  "\021EMsgNonStdMsgBase\020\2205\022\033\n\026EMsgNonStdMsgMe"
  "mcached\020\2215\022\034\n\027EMsgNonStdMsgHTTPServer\020\2225"
  "\022\034\n\027EMsgNonStdMsgHTTPClient\020\2235\022\034\n\027EMsgNo"
  "nStdMsgWGResponse\020\2245\022\036\n\031EMsgNonStdMsgPHP"
  "Simulator\020\2255\022\027\n\022EMsgNonStdMsgChase\020\2265\022\035\n"
  "\030EMsgNonStdMsgDFSTransfer\020\2275\022\027\n\022EMsgNonS"
  "tdMsgTests\020\2305\022\035\n\030EMsgNonStdMsgUMQpipeAAP"
  "L\020\2315\022\030\n\023EMSgNonStdMsgSyslog\020\2325\022\031\n\024EMsgNo"
  "nStdMsgLogsink\020\2335\022 \n\033EMsgNonStdMsgSteam2"
  "Emulator\020\2345\022\034\n\027EMsgNonStdMsgRTMPServer\020\235"
  "5\022\033\n\026EMsgNonStdMsgWebSocket\020\2365\022\027\n\022EMsgNo"
  "nStdMsgRedis\020\2375\022\020\n\013EMsgUDSBase\020\3306\022#\n\036EMs"
  "gClientUDSP2PSessionStarted\020\3316\022!\n\034EMsgCl"
  "ientUDSP2PSessionEnded\020\3326\022\032\n\025EMsgUDSRend"
  "erUserAuth\020\3336\022\"\n\035EMsgUDSRenderUserAuthRe"
  "sponse\020\3346\022\033\n\026EMsgClientInviteToGame\020\3356\022\026"
  "\n\021EMsgUDSHasSession\020\3366\022\036\n\031EMsgUDSHasSess"
  "ionResponse\020\3376\022\021\n\014EMsgMPASBase\020\2747\022\030\n\023EMs"
  "gMPASVacBanReset\020\2757\022\020\n\013EMsgKGSBase\020\2408\022\020\n"
  "\013EMsgUCMBase\020\2049\022\037\n\032EMsgClientUCMAddScree"
  "nshot\020\2059\022\'\n\"EMsgClientUCMAddScreenshotRe"
  "sponse\020\2069\022!\n\034EMsgUCMResetCommunityConten"
  "t\020\2139\022)\n$EMsgUCMResetCommunityContentResp"
  "onse\020\2149\022\"\n\035EMsgClientUCMDeleteScreenshot"
  "\020\2159\022*\n%EMsgClientUCMDeleteScreenshotResp"
  "onse\020\2169\022\035\n\030EMsgClientUCMPublishFile\020\2179\022%"
  "\n EMsgClientUCMPublishFileResponse\020\2209\022%\n"
  " EMsgClientUCMDeletePublishedFile\020\2239\022-\n("
  "EMsgClientUCMDeletePublishedFileResponse"
  "\020\2249\022%\n EMsgClientUCMUpdatePublishedFile\020"
  "\2359\022-\n(EMsgClientUCMUpdatePublishedFileRe"
  "sponse\020\2369\022\037\n\032EMsgUCMUpdatePublishedFile\020"
  "\2379\022\'\n\"EMsgUCMUpdatePublishedFileResponse"
  "\020\2409\022#\n\036EMsgUCMUpdatePublishedFileStat\020\2439"
  "\022\037\n\032EMsgUCMReloadPublishedFile\020\2519\022$\n\037EMs"
  "gUCMReloadUserFileListCaches\020\2529\022!\n\034EMsgU"
  "CMPublishedFileReported\020\2539\022#\n\036EMsgUCMPub"
  "lishedFilePreviewAdd\020\2559\022+\n&EMsgUCMPublis"
  "hedFilePreviewAddResponse\020\2569\022&\n!EMsgUCMP"
  "ublishedFilePreviewRemove\020\2579\022.\n)EMsgUCMP"
  "ublishedFilePreviewRemoveResponse\020\2609\022#\n\036"
  "EMsgUCMPublishedFileSubscribed\020\2659\022%\n EMs"
  "gUCMPublishedFileUnsubscribed\020\2669\022\027\n\022EMsg"
  "UCMPublishFile\020\2679\022\037\n\032EMsgUCMPublishFileR"
  "esponse\020\2709\022!\n\034EMsgUCMPublishedFileChildA"
  "dd\020\2719\022)\n$EMsgUCMPublishedFileChildAddRes"
  "ponse\020\2729\022$\n\037EMsgUCMPublishedFileChildRem"
  "ove\020\2739\022,\n\'EMsgUCMPublishedFileChildRemov"
  "eResponse\020\2749\022&\n!EMsgUCMPublishedFilePare"
  "ntChanged\020\2779\022,\n\'EMsgClientUCMSetUserPubl"
  "ishedFileAction\020\3049\0224\n/EMsgClientUCMSetUs"
  "erPublishedFileActionResponse\020\3059\0225\n0EMsg"
  "ClientUCMEnumeratePublishedFilesByUserAc"
  "tion\020\3069\022=\n8EMsgClientUCMEnumeratePublish"
  "edFilesByUserActionResponse\020\3079\022\"\n\035EMsgUC"
  "MGetUserSubscribedFiles\020\3119\022*\n%EMsgUCMGet"
  "UserSubscribedFilesResponse\020\3129\022!\n\034EMsgUC"
  "MFixStatsPublishedFile\020\3139\0229\n4EMsgClientU"
  "CMEnumerateUserSubscribedFilesWithUpdate"
  "s\020\3229\022A\n<EMsgClientUCMEnumerateUserSubscr"
  "ibedFilesWithUpdatesResponse\020\3239\022\'\n\"EMsgU"
  "CMPublishedFileContentUpdated\020\3249\022&\n!EMsg"
  "ClientUCMPublishedFileUpdated\020\3259\022\017\n\nEMsg"
  "FSBase\020\314:\022!\n\034EMsgClientRichPresenceUploa"
  "d\020\315:\022\"\n\035EMsgClientRichPresenceRequest\020\316:"
  "\022\037\n\032EMsgClientRichPresenceInfo\020\317:\022\036\n\031EMs"
  "gFSRichPresenceRequest\020\320:\022\037\n\032EMsgFSRichP"
  "resenceResponse\020\321:\022\035\n\030EMsgFSComputeFrene"
  "matrix\020\322:\022%\n EMsgFSComputeFrenematrixRes"
  "ponse\020\323:\022!\n\034EMsgFSPlayStatusNotification"
  "\020\324:\022\036\n\031EMsgFSAddOrRemoveFollower\020\326:\022&\n!E"
  "MsgFSAddOrRemoveFollowerResponse\020\327:\022\036\n\031E"
  "MsgFSUpdateFollowingList\020\330:\022\036\n\031EMsgFSCom"
  "mentNotification\020\331:\022$\n\037EMsgFSCommentNoti"
  "ficationViewed\020\332:\022!\n\034EMsgClientFSGetFoll"
  "owerCount\020\333:\022)\n$EMsgClientFSGetFollowerC"
  "ountResponse\020\334:\022\037\n\032EMsgClientFSGetIsFoll"
  "owing\020\335:\022\'\n\"EMsgClientFSGetIsFollowingRe"
  "sponse\020\336:\022\'\n\"EMsgClientFSEnumerateFollow"
  "ingList\020\337:\022/\n*EMsgClientFSEnumerateFollo"
  "wingListResponse\020\340:\022&\n!EMsgFSGetPendingN"
  "otificationCount\020\341:\022.\n)EMsgFSGetPendingN"
  "otificationCountResponse\020\342:\022-\n(EMsgClien"
  "tChatOfflineMessageNotification\020\343:\022-\n(EM"
  "sgClientChatRequestOfflineMessageCount\020\344"
  ":\022*\n%EMsgClientChatGetFriendMessageHisto"
  "ry\020\345:\0222\n-EMsgClientChatGetFriendMessageH"
  "istoryResponse\020\346:\022<\n7EMsgClientChatGetFr"
  "iendMessageHistoryForOfflineMessages\020\347:\022"
  "&\n!EMsgClientFSGetFriendsSteamLevels\020\350:\022"
  ".\n)EMsgClientFSGetFriendsSteamLevelsResp"
  "onse\020\351:\022\034\n\027EMsgAMRequestFriendData\020\352:\022\022\n"
  "\rEMsgDRMRange2\020\260;\022*\n%EMsgCEGVersionSetEn"
  "ableDisableRequest\020\260;\022+\n&EMsgCEGVersionS"
  "etEnableDisableResponse\020\261;\022!\n\034EMsgCEGPro"
  "pStatusDRMSRequest\020\262;\022\"\n\035EMsgCEGPropStat"
  "usDRMSResponse\020\263;\022%\n EMsgCEGWhackFailure"
  "ReportRequest\020\264;\022&\n!EMsgCEGWhackFailureR"
  "eportResponse\020\265;\022\034\n\027EMsgDRMSFetchVersion"
  "Set\020\266;\022$\n\037EMsgDRMSFetchVersionSetRespons"
  "e\020\267;\022\021\n\014EMsgEconBase\020\224<\022)\n$EMsgEconTradi"
  "ng_InitiateTradeRequest\020\225<\022*\n%EMsgEconTr"
  "ading_InitiateTradeProposed\020\226<\022*\n%EMsgEc"
  "onTrading_InitiateTradeResponse\020\227<\022(\n#EM"
  "sgEconTrading_InitiateTradeResult\020\230<\022!\n\034"
  "EMsgEconTrading_StartSession\020\231<\022\'\n\"EMsgE"
  "conTrading_CancelTradeRequest\020\232<\022 \n\033EMsg"
  "EconFlushInventoryCache\020\233<\022(\n#EMsgEconFl"
  "ushInventoryCacheResponse\020\234<\022$\n\037EMsgEcon"
  "CDKeyProcessTransaction\020\237<\022,\n\'EMsgEconCD"
  "KeyProcessTransactionResponse\020\240<\022\031\n\024EMsg"
  "EconGetErrorLogs\020\241<\022!\n\034EMsgEconGetErrorL"
  "ogsResponse\020\242<\022\020\n\013EMsgRMRange\020\370<\022\032\n\025EMsg"
  "RMTestVerisignOTP\020\370<\022\"\n\035EMsgRMTestVerisi"
  "gnOTPResponse\020\371<\022\036\n\031EMsgRMDeleteMemcache"
  "dKeys\020\373<\022\027\n\022EMsgRMRemoteInvoke\020\374<\022\027\n\022EMs"
  "gBadLoginIPList\020\375<\022\035\n\030EMsgRMMsgTraceAddT"
  "rigger\020\376<\022 \n\033EMsgRMMsgTraceRemoveTrigger"
  "\020\377<\022\030\n\023EMsgRMMsgTraceEvent\020\200=\022\020\n\013EMsgUGS"
  "Base\020\334=\022\035\n\030EMsgUGSUpdateGlobalStats\020\334=\022 "
  "\n\033EMsgClientUGSGetGlobalStats\020\335=\022(\n#EMsg"
  "ClientUGSGetGlobalStatsResponse\020\336=\022\022\n\rEM"
  "sgStoreBase\020\300>\022\020\n\013EMsgUMQBase\020\244\?\022\025\n\020EMsg"
  "WorkshopBase\020\210@\022\023\n\016EMsgWebAPIBase\020\354@\022\"\n\035"
  "EMsgWebAPIValidateOAuth2Token\020\354@\022*\n%EMsg"
  "WebAPIValidateOAuth2TokenResponse\020\355@\022#\n\036"
  "EMsgWebAPIRegisterGCInterfaces\020\357@\022)\n$EMs"
  "gWebAPIInvalidateOAuthClientCache\020\360@\022(\n#"
  "EMsgWebAPIInvalidateOAuthTokenCache\020\361@\022\031"
  "\n\024EMsgWebAPISetSecrets\020\362@\022\025\n\020EMsgBackpac"
  "kBase\020\320A\022\036\n\031EMsgBackpackAddToCurrency\020\321A"
  "\022&\n!EMsgBackpackAddToCurrencyResponse\020\322A"
  "\022\020\n\013EMsgCREBase\020\264B\022\033\n\026EMsgCREItemVoteSum"
  "mary\020\267B\022#\n\036EMsgCREItemVoteSummaryRespons"
  "e\020\270B\022\'\n\"EMsgCREUpdateUserPublishedItemVo"
  "te\020\273B\022/\n*EMsgCREUpdateUserPublishedItemV"
  "oteResponse\020\274B\022+\n&EMsgCREGetUserPublishe"
  "dItemVoteDetails\020\275B\0223\n.EMsgCREGetUserPub"
  "lishedItemVoteDetailsResponse\020\276B\022\024\n\017EMsg"
  "SecretsBase\020\230C\022%\n EMsgSecretsRequestCred"
  "entialPair\020\230C\022&\n!EMsgSecretsCredentialPa"
  "irResponse\020\231C\022\027\n\022EMsgBoxMonitorBase\020\374C\022 "
  "\n\033EMsgBoxMonitorReportRequest\020\374C\022!\n\034EMsg"
  "BoxMonitorReportResponse\020\375C\022\024\n\017EMsgLogsi"
  "nkBase\020\340D\022\033\n\026EMsgLogsinkWriteReport\020\340D\022\021"
  "\n\014EMsgPICSBase\020\304E\022&\n!EMsgClientPICSChang"
  "esSinceRequest\020\305E\022\'\n\"EMsgClientPICSChang"
  "esSinceResponse\020\306E\022%\n EMsgClientPICSProd"
  "uctInfoRequest\020\307E\022&\n!EMsgClientPICSProdu"
  "ctInfoResponse\020\310E\022%\n EMsgClientPICSAcces"
  "sTokenRequest\020\311E\022&\n!EMsgClientPICSAccess"
  "TokenResponse\020\312E\022%\n EMsgClientPICSPrivat"
  "eBetaRequest\020\313E\022&\n!EMsgClientPICSPrivate"
  "BetaResponse\020\314E\022\026\n\021EMsgWorkerProcess\020\250F\022"
  "!\n\034EMsgWorkerProcessPingRequest\020\250F\022\"\n\035EM"
  "sgWorkerProcessPingResponse\020\251F\022\036\n\031EMsgWo"
  "rkerProcessShutdown\020\252F\022\031\n\024EMsgDRMWorkerP"
  "rocess\020\214G\022#\n\036EMsgDRMWorkerProcessDRMAndS"
  "ign\020\214G\022+\n&EMsgDRMWorkerProcessDRMAndSign"
  "Response\020\215G\022.\n)EMsgDRMWorkerProcessSteam"
  "worksInfoRequest\020\216G\022/\n*EMsgDRMWorkerProc"
  "essSteamworksInfoResponse\020\217G\022-\n(EMsgDRMW"
  "orkerProcessInstallDRMDLLRequest\020\220G\022.\n)E"
  "MsgDRMWorkerProcessInstallDRMDLLResponse"
  "\020\221G\022.\n)EMsgDRMWorkerProcessSecretIdStrin"
  "gRequest\020\222G\022/\n*EMsgDRMWorkerProcessSecre"
  "tIdStringResponse\020\223G\0225\n0EMsgDRMWorkerPro"
  "cessInstallProcessedFilesRequest\020\226G\0226\n1E"
  "MsgDRMWorkerProcessInstallProcessedFiles"
  "Response\020\227G\022+\n&EMsgDRMWorkerProcessExami"
  "neBlobRequest\020\230G\022,\n\'EMsgDRMWorkerProcess"
  "ExamineBlobResponse\020\231G\022.\n)EMsgDRMWorkerP"
  "rocessDescribeSecretRequest\020\232G\022/\n*EMsgDR"
  "MWorkerProcessDescribeSecretResponse\020\233G\022"
  "0\n+EMsgDRMWorkerProcessBackfillOriginalR"
  "equest\020\234G\0221\n,EMsgDRMWorkerProcessBackfil"
  "lOriginalResponse\020\235G\022.\n)EMsgDRMWorkerPro"
  "cessValidateDRMDLLRequest\020\236G\022/\n*EMsgDRMW"
  "orkerProcessValidateDRMDLLResponse\020\237G\022,\n"
  "\'EMsgDRMWorkerProcessValidateFileRequest"
  "\020\240G\022-\n(EMsgDRMWorkerProcessValidateFileR"
  "esponse\020\241G\022/\n*EMsgDRMWorkerProcessSplitA"
  "ndInstallRequest\020\242G\0220\n+EMsgDRMWorkerProc"
  "essSplitAndInstallResponse\020\243G\022\'\n\"EMsgDRM"
  "WorkerProcessGetBlobRequest\020\244G\022(\n#EMsgDR"
  "MWorkerProcessGetBlobResponse\020\245G\022-\n(EMsg"
  "DRMWorkerProcessEvaluateCrashRequest\020\246G\022"
  ".\n)EMsgDRMWorkerProcessEvaluateCrashResp"
  "onse\020\247G\022+\n&EMsgDRMWorkerProcessAnalyzeFi"
  "leRequest\020\250G\022,\n\'EMsgDRMWorkerProcessAnal"
  "yzeFileResponse\020\251G\022*\n%EMsgDRMWorkerProce"
  "ssUnpackBlobRequest\020\252G\022+\n&EMsgDRMWorkerP"
  "rocessUnpackBlobResponse\020\253G\022*\n%EMsgDRMWo"
  "rkerProcessInstallAllRequest\020\254G\022+\n&EMsgD"
  "RMWorkerProcessInstallAllResponse\020\255G\022\032\n\025"
  "EMsgTestWorkerProcess\020\360G\0221\n,EMsgTestWork"
  "erProcessLoadUnloadModuleRequest\020\360G\0222\n-E"
  "MsgTestWorkerProcessLoadUnloadModuleResp"
  "onse\020\361G\0222\n-EMsgTestWorkerProcessServiceM"
  "oduleCallRequest\020\362G\0223\n.EMsgTestWorkerPro"
  "cessServiceModuleCallResponse\020\363G\022\030\n\023EMsg"
  "QuestServerBase\020\324H\022\036\n\031EMsgClientGetEmoti"
  "conList\020\362H\022\033\n\026EMsgClientEmoticonList\020\363H\022"
  "\020\n\013EMsgSLCBase\020\270I\022\035\n\030EMsgSLCUserSessionS"
  "tatus\020\270I\022$\n\037EMsgSLCRequestUserSessionSta"
  "tus\020\271I\022$\n\037EMsgSLCSharedLicensesLockStatu"
  "s\020\272I\022&\n!EMsgClientSharedLibraryLockStatu"
  "s\020\275I\022\'\n\"EMsgClientSharedLibraryStopPlayi"
  "ng\020\276I\022 \n\033EMsgSLCSharedLibraryChanged\020\300I\022"
  "\031\n\024EMsgRemoteClientBase\020\234J\022\"\n\035EMsgRemote"
  "ClientAuth_OBSOLETE\020\234J\022*\n%EMsgRemoteClie"
  "ntAuthResponse_OBSOLETE\020\235J\022\036\n\031EMsgRemote"
  "ClientAppStatus\020\236J\022 \n\033EMsgRemoteClientSt"
  "artStream\020\237J\022(\n#EMsgRemoteClientStartStr"
  "eamResponse\020\240J\022\031\n\024EMsgRemoteClientPing\020\241"
  "J\022!\n\034EMsgRemoteClientPingResponse\020\242J\022\031\n\024"
  "EMsgClientUnlockH264\020\243J\022!\n\034EMsgClientUnl"
  "ockH264Response\020\244J\022\037\n\032EMsgRemoteClientAc"
  "ceptEULA\020\245J\022(\n#EMsgRemoteClientGetContro"
  "llerConfig\020\246J\0220\n+EMsgRemoteClientGetCont"
  "rollerConfigResponse\020\247J\022%\n EMsgRemoteCli"
  "entStreamingEnabled\020\250J\022\"\n\035EMsgClientUnlo"
  "ckHEVC_OBSOLETE\020\251J\022*\n%EMsgClientUnlockHE"
  "VCResponse_OBSOLETE\020\252J\022\"\n\035EMsgRemoteClie"
  "ntStatusRequest\020\253J\022#\n\036EMsgRemoteClientSt"
  "atusResponse\020\254J\022)\n$EMsgRemoteClientAutho"
  "rizationRequest\020\255J\022*\n%EMsgRemoteClientAu"
  "thorizationResponse\020\256J\022/\n*EMsgRemoteClie"
  "ntAuthorizationCancelRequest\020\257J\022+\n&EMsgR"
  "emoteClientAuthorizationConfirmed\020\260J\022!\n\034"
  "EMsgRemoteClientProofRequest\020\261J\022\"\n\035EMsgR"
  "emoteClientProofResponse\020\262J\022%\n EMsgClien"
  "tConcurrentSessionsBase\020\200K\022\"\n\035EMsgClient"
  "PlayingSessionState\020\200K\022!\n\034EMsgClientKick"
  "PlayingSession\020\201K\022\034\n\027EMsgClientBroadcast"
  "Base\020\344K\022\034\n\027EMsgClientBroadcastInit\020\344K\022\036\n"
  "\031EMsgClientBroadcastFrames\020\345K\022\"\n\035EMsgCli"
  "entBroadcastDisconnect\020\346K\022$\n\037EMsgClientB"
  "roadcastUploadConfig\020\350K\022\024\n\017EMsgBaseClien"
  "t3\020\310L\022$\n\037EMsgClientVoiceCallPreAuthorize"
  "\020\310L\022,\n\'EMsgClientVoiceCallPreAuthorizeRe"
  "sponse\020\311L\022%\n EMsgClientServerTimestampRe"
  "quest\020\312L\022&\n!EMsgClientServerTimestampRes"
  "ponse\020\313L\022-\n(EMsgServiceMethodCallFromCli"
  "entNonAuthed\020\314L\022\024\n\017EMsgClientHello\020\315L\022\'\n"
  "\"EMsgClientEnableOrDisableDownloads\020\316L\022/"
  "\n*EMsgClientEnableOrDisableDownloadsResp"
  "onse\020\317L\022\037\n\032EMsgClientFeatureGroupInfo\020\320L"
  "\022\031\n\024EMsgClientLANP2PBase\020\254M\022!\n\034EMsgClien"
  "tLANP2PRequestChunk\020\254M\022)\n$EMsgClientLANP"
  "2PRequestChunkResponse\020\255M\022\037\n\032EMsgClientP"
  "eerChunkRequest\020\256M\022 \n\033EMsgClientPeerChun"
  "kResponse\020\257M\022\030\n\023EMsgClientLANP2PMax\020\217N\022\033"
  "\n\026EMsgBaseWatchdogServer\020\220N\022\027\n\022EMsgNotif"
  "yWatchdog\020\220N\022\036\n\031EMsgClientSiteLicenseBas"
  "e\020\364N\022.\n)EMsgClientSiteLicenseSiteInfoNot"
  "ification\020\364N\022\"\n\035EMsgClientSiteLicenseChe"
  "ckout\020\365N\022*\n%EMsgClientSiteLicenseCheckou"
  "tResponse\020\366N\022+\n&EMsgClientSiteLicenseGet"
  "AvailableSeats\020\367N\0223\n.EMsgClientSiteLicen"
  "seGetAvailableSeatsResponse\020\370N\022-\n(EMsgCl"
  "ientSiteLicenseGetContentCacheInfo\020\371N\0225\n"
  "0EMsgClientSiteLicenseGetContentCacheInf"
  "oResponse\020\372N\022\027\n\022EMsgBaseChatServer\020\340]\022.\n"
  ")EMsgChatServerGetPendingNotificationCou"
  "nt\020\340]\0226\n1EMsgChatServerGetPendingNotific"
  "ationCountResponse\020\341]\022\031\n\024EMsgBaseSecretS"
  "erver\020\304^\022\034\n\027EMsgServerSecretChanged\020\304^\022\017"
  "\n\nEMsgBaseWG\020\250_\022\"\n\035EMsgWGConnectionProto"
  "colError\020\250_\022&\n!EMsgWGConnectionValidateU"
  "serToken\020\251_\022.\n)EMsgWGConnectionValidateU"
  "serTokenResponse\020\252_\022$\n\037EMsgWGConnectionL"
  "egacyWGRequest\020\253_\022%\n EMsgWGConnectionLeg"
  "acyWGResponse\020\254_\022 \n\033EMsgClientPendingGam"
  "eLaunch\020\214`\022(\n#EMsgClientPendingGameLaunc"
  "hResponse\020\215`\032\002\020\001*\263\004\n\027EClientPersonaState"
  "Flag\022!\n\035EClientPersonaStateFlagStatus\020\001\022"
  "%\n!EClientPersonaStateFlagPlayerName\020\002\022$"
  "\n EClientPersonaStateFlagQueryPort\020\004\022#\n\037"
  "EClientPersonaStateFlagSourceID\020\010\022#\n\037ECl"
  "ientPersonaStateFlagPresence\020\020\022#\n\037EClien"
  "tPersonaStateFlagLastSeen\020@\022(\n#EClientPe"
  "rsonaStateFlagUserClanRank\020\200\001\022%\n EClient"
  "PersonaStateGameExtraInfo\020\200\002\022$\n\037EClientP"
  "ersonaStateGameDataBlob\020\200\004\022$\n\037EClientPer"
  "sonaStateFlagClanData\020\200\010\022$\n\037EClientPerso"
  "naStateFlagFacebook\020\200\020\022(\n#EClientPersona"
  "StateFlagRichPresence\020\200 \022%\n EClientPerso"
  "naStateFlagBroadcast\020\200@\022%\n\037EClientPerson"
  "aStateFlagWatching\020\200\200\001*\257\001\n\024EMsgClanAccou"
  "ntFlags\022\035\n\031EMsgClanAccountFlagPublic\020\001\022\034"
  "\n\030EMsgClanAccountFlagLarge\020\002\022\035\n\031EMsgClan"
  "AccountFlagLocked\020\004\022\037\n\033EMsgClanAccountFl"
  "agDisabled\020\010\022\032\n\026EMsgClanAccountFlagOGG\020\020"
  "*\374\002\n\021ESteamReviewScore\022,\n(ESteamReviewSc"
  "ore_OverwhelminglyPositive\020\t\022\"\n\036ESteamRe"
  "viewScore_VeryPositive\020\010\022\036\n\032ESteamReview"
  "Score_Positive\020\007\022$\n ESteamReviewScore_Mo"
  "stlyPositive\020\006\022\033\n\027ESteamReviewScore_Mixe"
  "d\020\005\022$\n ESteamReviewScore_MostlyNegative\020"
  "\004\022\036\n\032ESteamReviewScore_Negative\020\003\022\"\n\036ESt"
  "eamReviewScore_VeryNegative\020\002\022,\n(ESteamR"
  "eviewScore_OverwhelminglyNegative\020\001\022\032\n\026E"
  "SteamReviewScore_None\020\000*\263\001\n\023ECodecUsageP"
  "latform\022\036\n\032ECodecUsagePlatformUnknown\020\000\022"
  "\036\n\032ECodecUsagePlatformWindows\020\001\022\034\n\030ECode"
  "cUsagePlatformMacOS\020\002\022\034\n\030ECodecUsagePlat"
  "formLinux\020\003\022 \n\034ECodecUsagePlatformSteamD"
  "eck\020\004*\271\001\n\021ECodecUsageReason\022\034\n\030ECodecUsa"
  "geReasonUnknown\020\000\022\037\n\033ECodecUsageReasonRe"
  "motePlay\020\001\022!\n\035ECodecUsageReasonBroadcast"
  "ing\020\002\022\036\n\032ECodecUsageReasonGameVideo\020\003\022\"\n"
  "\036ECodecUsageReasonGameRecording\020\004B\037H\001\200\001\000"
  "\252\002\027OpenSteamworks.Protobuf"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_enums_5fclientserver_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_enums_5fclientserver_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_enums_5fclientserver_2eproto = {
  false, false, 50666, descriptor_table_protodef_enums_5fclientserver_2eproto, "enums_clientserver.proto", 
  &descriptor_table_enums_5fclientserver_2eproto_once, descriptor_table_enums_5fclientserver_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_enums_5fclientserver_2eproto::offsets,
  file_level_metadata_enums_5fclientserver_2eproto, file_level_enum_descriptors_enums_5fclientserver_2eproto, file_level_service_descriptors_enums_5fclientserver_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_enums_5fclientserver_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return descriptor_table_enums_5fclientserver_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_enums_5fclientserver_2eproto(&descriptor_table_enums_5fclientserver_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsg_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[0];
}
bool EMsg_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 100:
    case 113:
    case 115:
    case 120:
    case 121:
    case 123:
    case 124:
    case 126:
    case 127:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 215:
    case 221:
    case 225:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
    case 240:
    case 241:
    case 242:
    case 243:
    case 244:
    case 245:
    case 246:
    case 247:
    case 300:
    case 301:
    case 307:
    case 308:
    case 309:
    case 316:
    case 317:
    case 318:
    case 320:
    case 321:
    case 322:
    case 323:
    case 324:
    case 325:
    case 326:
    case 327:
    case 329:
    case 330:
    case 331:
    case 332:
    case 334:
    case 335:
    case 336:
    case 337:
    case 338:
    case 339:
    case 340:
    case 400:
    case 402:
    case 403:
    case 405:
    case 406:
    case 423:
    case 424:
    case 425:
    case 426:
    case 429:
    case 430:
    case 431:
    case 432:
    case 433:
    case 500:
    case 504:
    case 505:
    case 508:
    case 509:
    case 510:
    case 511:
    case 512:
    case 513:
    case 516:
    case 517:
    case 518:
    case 519:
    case 522:
    case 523:
    case 525:
    case 526:
    case 527:
    case 528:
    case 529:
    case 530:
    case 531:
    case 532:
    case 533:
    case 534:
    case 535:
    case 536:
    case 537:
    case 538:
    case 541:
    case 542:
    case 550:
    case 551:
    case 552:
    case 553:
    case 554:
    case 555:
    case 560:
    case 561:
    case 563:
    case 566:
    case 567:
    case 568:
    case 569:
    case 570:
    case 571:
    case 572:
    case 573:
    case 574:
    case 575:
    case 576:
    case 577:
    case 578:
    case 579:
    case 580:
    case 581:
    case 582:
    case 583:
    case 584:
    case 586:
    case 587:
    case 588:
    case 589:
    case 590:
    case 591:
    case 592:
    case 593:
    case 596:
    case 597:
    case 598:
    case 600:
    case 601:
    case 602:
    case 604:
    case 605:
    case 606:
    case 607:
    case 608:
    case 609:
    case 610:
    case 611:
    case 625:
    case 628:
    case 629:
    case 630:
    case 631:
    case 633:
    case 634:
    case 635:
    case 636:
    case 637:
    case 638:
    case 639:
    case 640:
    case 641:
    case 642:
    case 643:
    case 644:
    case 645:
    case 646:
    case 650:
    case 700:
    case 701:
    case 702:
    case 703:
    case 704:
    case 705:
    case 706:
    case 707:
    case 710:
    case 712:
    case 714:
    case 715:
    case 716:
    case 717:
    case 718:
    case 719:
    case 720:
    case 721:
    case 726:
    case 727:
    case 728:
    case 730:
    case 731:
    case 732:
    case 736:
    case 738:
    case 740:
    case 741:
    case 742:
    case 743:
    case 744:
    case 745:
    case 746:
    case 747:
    case 751:
    case 755:
    case 756:
    case 757:
    case 758:
    case 759:
    case 760:
    case 763:
    case 764:
    case 765:
    case 766:
    case 767:
    case 768:
    case 771:
    case 773:
    case 774:
    case 779:
    case 780:
    case 782:
    case 784:
    case 785:
    case 791:
    case 792:
    case 796:
    case 797:
    case 798:
    case 799:
    case 800:
    case 801:
    case 802:
    case 803:
    case 805:
    case 807:
    case 808:
    case 809:
    case 810:
    case 813:
    case 814:
    case 815:
    case 818:
    case 819:
    case 820:
    case 821:
    case 822:
    case 830:
    case 831:
    case 832:
    case 839:
    case 842:
    case 845:
    case 846:
    case 848:
    case 849:
    case 850:
    case 851:
    case 855:
    case 856:
    case 857:
    case 858:
    case 860:
    case 880:
    case 896:
    case 897:
    case 900:
    case 901:
    case 903:
    case 905:
    case 906:
    case 907:
    case 908:
    case 909:
    case 910:
    case 911:
    case 918:
    case 919:
    case 920:
    case 921:
    case 922:
    case 923:
    case 936:
    case 937:
    case 938:
    case 939:
    case 940:
    case 941:
    case 1000:
    case 1004:
    case 1005:
    case 1006:
    case 1010:
    case 1019:
    case 1020:
    case 1023:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1028:
    case 1100:
    case 1101:
    case 1102:
    case 1103:
    case 1104:
    case 1105:
    case 1106:
    case 1107:
    case 1108:
    case 1109:
    case 1110:
    case 1111:
    case 1112:
    case 1114:
    case 1115:
    case 1116:
    case 1117:
    case 1118:
    case 1119:
    case 1120:
    case 1121:
    case 1122:
    case 1123:
    case 1124:
    case 1125:
    case 1126:
    case 1127:
    case 1128:
    case 1129:
    case 1130:
    case 1131:
    case 1132:
    case 1133:
    case 1134:
    case 1200:
    case 1201:
    case 1202:
    case 1203:
    case 1204:
    case 1300:
    case 1301:
    case 1302:
    case 1303:
    case 1304:
    case 1305:
    case 1400:
    case 1401:
    case 1402:
    case 1403:
    case 1404:
    case 1406:
    case 1408:
    case 1409:
    case 1410:
    case 1411:
    case 1417:
    case 1418:
    case 1421:
    case 1422:
    case 1425:
    case 1426:
    case 1427:
    case 1433:
    case 1434:
    case 1435:
    case 1437:
    case 1438:
    case 1440:
    case 1441:
    case 1445:
    case 1446:
    case 1448:
    case 1449:
    case 1450:
    case 1451:
    case 1452:
    case 1453:
    case 1454:
    case 1455:
    case 1456:
    case 1457:
    case 1458:
    case 1459:
    case 1460:
    case 1461:
    case 1462:
    case 1463:
    case 1464:
    case 1465:
    case 1468:
    case 1469:
    case 1470:
    case 1471:
    case 1472:
    case 1473:
    case 1474:
    case 1475:
    case 1476:
    case 1477:
    case 1478:
    case 1479:
    case 1480:
    case 1481:
    case 1482:
    case 1483:
    case 1484:
    case 1485:
    case 1486:
    case 1487:
    case 1494:
    case 1495:
    case 1496:
    case 1497:
    case 1498:
    case 1499:
    case 1500:
    case 1501:
    case 1502:
    case 1503:
    case 1504:
    case 1505:
    case 1506:
    case 1507:
    case 1508:
    case 1509:
    case 1510:
    case 1511:
    case 1512:
    case 1513:
    case 1514:
    case 1515:
    case 1516:
    case 1517:
    case 1518:
    case 1519:
    case 1600:
    case 1601:
    case 1603:
    case 1612:
    case 1615:
    case 1616:
    case 1617:
    case 1620:
    case 1621:
    case 1622:
    case 1623:
    case 1624:
    case 1628:
    case 1629:
    case 1631:
    case 1700:
    case 1701:
    case 1702:
    case 1703:
    case 1704:
    case 1705:
    case 1706:
    case 2200:
    case 2203:
    case 2206:
    case 2207:
    case 2208:
    case 2209:
    case 2210:
    case 2212:
    case 2216:
    case 2217:
    case 2218:
    case 2219:
    case 2220:
    case 2221:
    case 2222:
    case 2223:
    case 2224:
    case 2225:
    case 2226:
    case 2227:
    case 2228:
    case 2229:
    case 2230:
    case 2231:
    case 2232:
    case 2233:
    case 2234:
    case 2235:
    case 2236:
    case 2237:
    case 2238:
    case 2239:
    case 2240:
    case 2241:
    case 2242:
    case 2243:
    case 2244:
    case 2245:
    case 2246:
    case 2247:
    case 2500:
    case 2502:
    case 2900:
    case 2902:
    case 2903:
    case 2905:
    case 2906:
    case 2907:
    case 2908:
    case 3000:
    case 3001:
    case 3002:
    case 3100:
    case 3150:
    case 3161:
    case 3162:
    case 3200:
    case 3201:
    case 3202:
    case 3203:
    case 3204:
    case 3205:
    case 3206:
    case 3207:
    case 3208:
    case 3209:
    case 3210:
    case 3211:
    case 3212:
    case 3213:
    case 3214:
    case 3400:
    case 3401:
    case 3402:
    case 3403:
    case 3404:
    case 3406:
    case 3600:
    case 4000:
    case 4001:
    case 4002:
    case 4006:
    case 4007:
    case 4008:
    case 4009:
    case 4010:
    case 4011:
    case 4012:
    case 4013:
    case 4015:
    case 4021:
    case 4022:
    case 4023:
    case 4024:
    case 4025:
    case 4026:
    case 4039:
    case 4040:
    case 4041:
    case 4042:
    case 4043:
    case 4044:
    case 4045:
    case 4046:
    case 4047:
    case 4050:
    case 4051:
    case 4052:
    case 4053:
    case 4054:
    case 4055:
    case 4056:
    case 4057:
    case 4059:
    case 4060:
    case 4061:
    case 4062:
    case 4064:
    case 4065:
    case 4066:
    case 4067:
    case 4068:
    case 4073:
    case 4074:
    case 4075:
    case 4076:
    case 4077:
    case 4079:
    case 4080:
    case 4081:
    case 4082:
    case 4083:
    case 4084:
    case 4085:
    case 4086:
    case 4087:
    case 4090:
    case 4091:
    case 4092:
    case 4095:
    case 4096:
    case 4097:
    case 4098:
    case 4099:
    case 4100:
    case 4101:
    case 4102:
    case 4103:
    case 4104:
    case 4105:
    case 4106:
    case 4107:
    case 4108:
    case 4110:
    case 4111:
    case 4112:
    case 4113:
    case 4114:
    case 4115:
    case 4116:
    case 4117:
    case 4118:
    case 4119:
    case 4120:
    case 4121:
    case 4122:
    case 4123:
    case 4124:
    case 4125:
    case 4126:
    case 4127:
    case 4128:
    case 4140:
    case 4143:
    case 4144:
    case 4145:
    case 4147:
    case 4148:
    case 4149:
    case 4152:
    case 4153:
    case 4158:
    case 4159:
    case 4160:
    case 4161:
    case 4162:
    case 4163:
    case 4164:
    case 4165:
    case 4166:
    case 4172:
    case 4173:
    case 4174:
    case 4175:
    case 4184:
    case 4185:
    case 4190:
    case 4191:
    case 4194:
    case 4195:
    case 4197:
    case 4198:
    case 4199:
    case 4206:
    case 4209:
    case 4210:
    case 4211:
    case 4213:
    case 4219:
    case 4220:
    case 4224:
    case 4231:
    case 4232:
    case 4236:
    case 4241:
    case 4242:
    case 4244:
    case 4245:
    case 4246:
    case 4247:
    case 4248:
    case 4249:
    case 4250:
    case 4251:
    case 4252:
    case 4255:
    case 4256:
    case 4258:
    case 4260:
    case 4262:
    case 4264:
    case 4265:
    case 4266:
    case 4267:
    case 4269:
    case 4270:
    case 4271:
    case 4272:
    case 4278:
    case 4279:
    case 4280:
    case 4281:
    case 4282:
    case 4283:
    case 4284:
    case 4285:
    case 4286:
    case 4287:
    case 4288:
    case 4289:
    case 4290:
    case 4294:
    case 4295:
    case 4298:
    case 4299:
    case 4300:
    case 4301:
    case 4302:
    case 4307:
    case 4308:
    case 4309:
    case 4310:
    case 4311:
    case 4312:
    case 4313:
    case 4314:
    case 4315:
    case 4316:
    case 4317:
    case 4320:
    case 4321:
    case 4322:
    case 4323:
    case 4324:
    case 4325:
    case 4326:
    case 4327:
    case 4328:
    case 4329:
    case 4330:
    case 4331:
    case 4332:
    case 4333:
    case 4334:
    case 4335:
    case 4336:
    case 4337:
    case 4338:
    case 4339:
    case 4340:
    case 4341:
    case 4342:
    case 4344:
    case 4345:
    case 4346:
    case 4347:
    case 4348:
    case 4349:
    case 4350:
    case 4351:
    case 4352:
    case 4353:
    case 4354:
    case 4355:
    case 4356:
    case 4357:
    case 4358:
    case 4359:
    case 4360:
    case 4361:
    case 4362:
    case 4365:
    case 4366:
    case 4367:
    case 4368:
    case 4372:
    case 4373:
    case 4374:
    case 4375:
    case 4376:
    case 4377:
    case 4380:
    case 4381:
    case 4383:
    case 4384:
    case 4385:
    case 4386:
    case 4389:
    case 4390:
    case 4391:
    case 4392:
    case 4393:
    case 4394:
    case 4395:
    case 4396:
    case 4397:
    case 4398:
    case 4399:
    case 4400:
    case 4401:
    case 4402:
    case 4403:
    case 4404:
    case 4405:
    case 4406:
    case 4407:
    case 4408:
    case 4409:
    case 4410:
    case 4411:
    case 4412:
    case 4413:
    case 4414:
    case 4415:
    case 4416:
    case 4417:
    case 4418:
    case 4419:
    case 4420:
    case 4421:
    case 4422:
    case 4423:
    case 4424:
    case 4425:
    case 5000:
    case 5003:
    case 5004:
    case 5009:
    case 5010:
    case 5011:
    case 5012:
    case 5013:
    case 5014:
    case 5200:
    case 5215:
    case 5217:
    case 5218:
    case 5226:
    case 5227:
    case 5228:
    case 5229:
    case 5230:
    case 5231:
    case 5232:
    case 5233:
    case 5234:
    case 5235:
    case 5236:
    case 5237:
    case 5238:
    case 5239:
    case 5240:
    case 5241:
    case 5242:
    case 5243:
    case 5244:
    case 5245:
    case 5246:
    case 5247:
    case 5248:
    case 5249:
    case 5250:
    case 5253:
    case 5254:
    case 5400:
    case 5401:
    case 5402:
    case 5403:
    case 5404:
    case 5405:
    case 5407:
    case 5408:
    case 5409:
    case 5410:
    case 5411:
    case 5412:
    case 5413:
    case 5414:
    case 5415:
    case 5416:
    case 5417:
    case 5418:
    case 5419:
    case 5426:
    case 5427:
    case 5428:
    case 5429:
    case 5430:
    case 5431:
    case 5432:
    case 5433:
    case 5434:
    case 5435:
    case 5438:
    case 5439:
    case 5443:
    case 5444:
    case 5445:
    case 5446:
    case 5448:
    case 5449:
    case 5450:
    case 5451:
    case 5452:
    case 5453:
    case 5456:
    case 5457:
    case 5458:
    case 5459:
    case 5460:
    case 5461:
    case 5463:
    case 5464:
    case 5465:
    case 5466:
    case 5467:
    case 5480:
    case 5481:
    case 5482:
    case 5485:
    case 5486:
    case 5487:
    case 5488:
    case 5489:
    case 5490:
    case 5491:
    case 5492:
    case 5493:
    case 5494:
    case 5495:
    case 5496:
    case 5497:
    case 5498:
    case 5500:
    case 5501:
    case 5502:
    case 5503:
    case 5504:
    case 5505:
    case 5506:
    case 5508:
    case 5509:
    case 5511:
    case 5512:
    case 5514:
    case 5515:
    case 5516:
    case 5517:
    case 5518:
    case 5519:
    case 5520:
    case 5521:
    case 5522:
    case 5523:
    case 5524:
    case 5525:
    case 5526:
    case 5527:
    case 5528:
    case 5529:
    case 5530:
    case 5531:
    case 5532:
    case 5535:
    case 5536:
    case 5537:
    case 5538:
    case 5539:
    case 5540:
    case 5541:
    case 5542:
    case 5543:
    case 5544:
    case 5545:
    case 5546:
    case 5547:
    case 5548:
    case 5549:
    case 5550:
    case 5551:
    case 5552:
    case 5553:
    case 5554:
    case 5555:
    case 5556:
    case 5557:
    case 5558:
    case 5559:
    case 5560:
    case 5561:
    case 5562:
    case 5563:
    case 5564:
    case 5565:
    case 5566:
    case 5567:
    case 5568:
    case 5569:
    case 5570:
    case 5571:
    case 5572:
    case 5573:
    case 5574:
    case 5575:
    case 5576:
    case 5577:
    case 5578:
    case 5582:
    case 5583:
    case 5584:
    case 5585:
    case 5586:
    case 5587:
    case 5588:
    case 5589:
    case 5592:
    case 5593:
    case 5594:
    case 5595:
    case 5596:
    case 5597:
    case 5598:
    case 5599:
    case 5600:
    case 5601:
    case 5602:
    case 5603:
    case 5604:
    case 5605:
    case 5606:
    case 5607:
    case 5608:
    case 5609:
    case 5610:
    case 5611:
    case 5612:
    case 5613:
    case 5614:
    case 5615:
    case 5616:
    case 5617:
    case 5618:
    case 5619:
    case 5620:
    case 5621:
    case 5622:
    case 5623:
    case 5624:
    case 5625:
    case 5626:
    case 5627:
    case 5800:
    case 5812:
    case 5813:
    case 5827:
    case 5828:
    case 5829:
    case 5830:
    case 5831:
    case 5844:
    case 5847:
    case 5848:
    case 5849:
    case 6200:
    case 6201:
    case 6202:
    case 6400:
    case 6401:
    case 6403:
    case 6404:
    case 6405:
    case 6406:
    case 6407:
    case 6500:
    case 6501:
    case 6502:
    case 6503:
    case 6504:
    case 6505:
    case 6506:
    case 6507:
    case 6508:
    case 6509:
    case 6600:
    case 6601:
    case 6602:
    case 6603:
    case 6604:
    case 6605:
    case 6606:
    case 6607:
    case 6608:
    case 6609:
    case 6610:
    case 6611:
    case 6612:
    case 6613:
    case 6614:
    case 6615:
    case 6616:
    case 6617:
    case 6618:
    case 6619:
    case 6620:
    case 6621:
    case 6622:
    case 6623:
    case 6624:
    case 6625:
    case 6626:
    case 6627:
    case 6628:
    case 6629:
    case 6800:
    case 6801:
    case 6802:
    case 6803:
    case 6804:
    case 6805:
    case 6806:
    case 6807:
    case 6808:
    case 6809:
    case 6810:
    case 6811:
    case 6812:
    case 6813:
    case 6814:
    case 6815:
    case 7000:
    case 7001:
    case 7002:
    case 7003:
    case 7004:
    case 7005:
    case 7006:
    case 7007:
    case 7100:
    case 7101:
    case 7200:
    case 7300:
    case 7301:
    case 7302:
    case 7307:
    case 7308:
    case 7309:
    case 7310:
    case 7311:
    case 7312:
    case 7315:
    case 7316:
    case 7325:
    case 7326:
    case 7327:
    case 7328:
    case 7331:
    case 7337:
    case 7338:
    case 7339:
    case 7341:
    case 7342:
    case 7343:
    case 7344:
    case 7349:
    case 7350:
    case 7351:
    case 7352:
    case 7353:
    case 7354:
    case 7355:
    case 7356:
    case 7359:
    case 7364:
    case 7365:
    case 7366:
    case 7367:
    case 7369:
    case 7370:
    case 7371:
    case 7378:
    case 7379:
    case 7380:
    case 7381:
    case 7500:
    case 7501:
    case 7502:
    case 7503:
    case 7504:
    case 7505:
    case 7506:
    case 7507:
    case 7508:
    case 7510:
    case 7511:
    case 7512:
    case 7513:
    case 7514:
    case 7515:
    case 7516:
    case 7517:
    case 7518:
    case 7519:
    case 7520:
    case 7521:
    case 7522:
    case 7523:
    case 7524:
    case 7525:
    case 7526:
    case 7527:
    case 7528:
    case 7529:
    case 7530:
    case 7600:
    case 7601:
    case 7602:
    case 7603:
    case 7604:
    case 7605:
    case 7606:
    case 7607:
    case 7700:
    case 7701:
    case 7702:
    case 7703:
    case 7704:
    case 7705:
    case 7706:
    case 7707:
    case 7708:
    case 7711:
    case 7712:
    case 7713:
    case 7714:
    case 7800:
    case 7801:
    case 7803:
    case 7804:
    case 7805:
    case 7806:
    case 7807:
    case 7808:
    case 7900:
    case 7901:
    case 7902:
    case 8000:
    case 8100:
    case 8200:
    case 8300:
    case 8301:
    case 8303:
    case 8304:
    case 8305:
    case 8306:
    case 8400:
    case 8401:
    case 8402:
    case 8500:
    case 8503:
    case 8504:
    case 8507:
    case 8508:
    case 8509:
    case 8510:
    case 8600:
    case 8601:
    case 8700:
    case 8701:
    case 8800:
    case 8900:
    case 8901:
    case 8902:
    case 8903:
    case 8904:
    case 8905:
    case 8906:
    case 8907:
    case 8908:
    case 9000:
    case 9001:
    case 9002:
    case 9100:
    case 9101:
    case 9102:
    case 9103:
    case 9104:
    case 9105:
    case 9106:
    case 9107:
    case 9110:
    case 9111:
    case 9112:
    case 9113:
    case 9114:
    case 9115:
    case 9116:
    case 9117:
    case 9118:
    case 9119:
    case 9120:
    case 9121:
    case 9122:
    case 9123:
    case 9124:
    case 9125:
    case 9126:
    case 9127:
    case 9128:
    case 9129:
    case 9130:
    case 9131:
    case 9132:
    case 9133:
    case 9200:
    case 9201:
    case 9202:
    case 9203:
    case 9300:
    case 9330:
    case 9331:
    case 9400:
    case 9401:
    case 9402:
    case 9405:
    case 9406:
    case 9408:
    case 9500:
    case 9501:
    case 9502:
    case 9503:
    case 9504:
    case 9505:
    case 9506:
    case 9507:
    case 9508:
    case 9509:
    case 9510:
    case 9511:
    case 9512:
    case 9513:
    case 9514:
    case 9515:
    case 9516:
    case 9517:
    case 9518:
    case 9519:
    case 9520:
    case 9521:
    case 9522:
    case 9600:
    case 9601:
    case 9700:
    case 9701:
    case 9702:
    case 9704:
    case 9800:
    case 9801:
    case 9802:
    case 9803:
    case 9804:
    case 9805:
    case 9806:
    case 9807:
    case 9808:
    case 9900:
    case 9901:
    case 9902:
    case 9903:
    case 9999:
    case 10000:
    case 10100:
    case 10101:
    case 10102:
    case 10103:
    case 10104:
    case 10105:
    case 10106:
    case 12000:
    case 12001:
    case 12100:
    case 12200:
    case 12201:
    case 12202:
    case 12203:
    case 12204:
    case 12300:
    case 12301:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EClientPersonaStateFlag_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[1];
}
bool EClientPersonaStateFlag_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsgClanAccountFlags_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[2];
}
bool EMsgClanAccountFlags_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ESteamReviewScore_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[3];
}
bool ESteamReviewScore_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECodecUsagePlatform_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[4];
}
bool ECodecUsagePlatform_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECodecUsageReason_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[5];
}
bool ECodecUsageReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
