// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums_clientserver.proto

#include "enums_clientserver.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_enums_5fclientserver_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_enums_5fclientserver_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_enums_5fclientserver_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_enums_5fclientserver_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_enums_5fclientserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030enums_clientserver.proto\032 google/proto"
  "buf/descriptor.proto*\215\200\003\n\004EMsg\022\017\n\013EMsgIn"
  "valid\020\000\022\r\n\tEMsgMulti\020\001\022\027\n\023EMsgProtobufWr"
  "apped\020\002\022\023\n\017EMsgBaseGeneral\020d\022\024\n\020EMsgGene"
  "ricReply\020d\022\025\n\021EMsgDestJobFailed\020q\022\r\n\tEMs"
  "gAlert\020s\022\023\n\017EMsgSCIDRequest\020x\022\024\n\020EMsgSCI"
  "DResponse\020y\022\024\n\020EMsgJobHeartbeat\020{\022\022\n\016EMs"
  "gHubConnect\020|\022\021\n\rEMsgSubscribe\020~\022\022\n\016EMRo"
  "uteMessage\020\177\022\022\n\rEMsgWGRequest\020\202\001\022\023\n\016EMsg"
  "WGResponse\020\203\001\022\022\n\rEMsgKeepAlive\020\204\001\022\031\n\024EMs"
  "gWebAPIJobRequest\020\205\001\022\032\n\025EMsgWebAPIJobRes"
  "ponse\020\206\001\022\033\n\026EMsgClientSessionStart\020\207\001\022\031\n"
  "\024EMsgClientSessionEnd\020\210\001\022\034\n\027EMsgClientSe"
  "ssionUpdate\020\211\001\022\030\n\023EMsgStatsDeprecated\020\212\001"
  "\022\r\n\010EMsgPing\020\213\001\022\025\n\020EMsgPingResponse\020\214\001\022\016"
  "\n\tEMsgStats\020\215\001\022\036\n\031EMsgRequestFullStatsBl"
  "ock\020\216\001\022\031\n\024EMsgLoadDBOCacheItem\020\217\001\022!\n\034EMs"
  "gLoadDBOCacheItemResponse\020\220\001\022 \n\033EMsgInva"
  "lidateDBOCacheItems\020\221\001\022\026\n\021EMsgServiceMet"
  "hod\020\222\001\022\036\n\031EMsgServiceMethodResponse\020\223\001\022\036"
  "\n\031EMsgClientPackageVersions\020\224\001\022\031\n\024EMsgTi"
  "mestampRequest\020\225\001\022\032\n\025EMsgTimestampRespon"
  "se\020\226\001\022$\n\037EMsgServiceMethodCallFromClient"
  "\020\227\001\022\"\n\035EMsgServiceMethodSendToClient\020\230\001\022"
  "\022\n\rEMsgBaseShell\020\310\001\022\024\n\017EMsgAssignSysID\020\310"
  "\001\022\r\n\010EMsgExit\020\311\001\022\023\n\016EMsgDirRequest\020\312\001\022\024\n"
  "\017EMsgDirResponse\020\313\001\022\023\n\016EMsgZipRequest\020\314\001"
  "\022\024\n\017EMsgZipResponse\020\315\001\022\035\n\030EMsgUpdateReco"
  "rdResponse\020\327\001\022 \n\033EMsgUpdateCreditCardReq"
  "uest\020\335\001\022\036\n\031EMsgUpdateUserBanResponse\020\341\001\022"
  "\026\n\021EMsgPrepareToExit\020\342\001\022!\n\034EMsgContentDe"
  "scriptionUpdate\020\343\001\022\030\n\023EMsgTestResetServe"
  "r\020\344\001\022\030\n\023EMsgUniverseChanged\020\345\001\022\036\n\031EMsgSh"
  "ellConfigInfoUpdate\020\346\001\022&\n!EMsgRequestWin"
  "dowsEventLogEntries\020\351\001\022&\n!EMsgProvideWin"
  "dowsEventLogEntries\020\352\001\022\030\n\023EMsgShellSearc"
  "hLogs\020\353\001\022 \n\033EMsgShellSearchLogsResponse\020"
  "\354\001\022!\n\034EMsgShellCheckWindowsUpdates\020\355\001\022)\n"
  "$EMsgShellCheckWindowsUpdatesResponse\020\356\001"
  "\022\034\n\027EMsgTestFlushDelayedSQL\020\360\001\022$\n\037EMsgTe"
  "stFlushDelayedSQLResponse\020\361\001\022&\n!EMsgEnsu"
  "reExecuteScheduledTasTEST\020\362\001\0220\n+EMsgEnsu"
  "reExecuteScheduledTaskResponse_TEST\020\363\001\022,"
  "\n\'EMsgUpdateScheduledTaskEnableState_TES"
  "T\020\364\001\0224\n/EMsgUpdateScheduledTaskEnableSta"
  "teResponse_TEST\020\365\001\022&\n!EMsgContentDescrip"
  "tionDeltaUpdate\020\366\001\022\'\n\"EMsgGMShellAndServ"
  "erAddressUpdates\020\367\001\022\017\n\nEMsgBaseGM\020\254\002\022\022\n\r"
  "EMsgHeartbeat\020\254\002\022\024\n\017EMsgShellFailed\020\255\002\022\023"
  "\n\016EMsgExitShells\020\263\002\022\022\n\rEMsgExitShell\020\264\002\022"
  "\032\n\025EMsgGracefulExitShell\020\265\002\022\"\n\035EMsgLicen"
  "seProcessingComplete\020\274\002\022\024\n\017EMsgSetTestFl"
  "ag\020\275\002\022\035\n\030EMsgQueuedEmailsComplete\020\276\002\022\022\n\r"
  "EMsgGMDRMSync\020\300\002\022\035\n\030EMsgPhysicalBoxInven"
  "tory\020\301\002\022\031\n\024EMsgUpdateConfigFile\020\302\002\022\023\n\016EM"
  "sgTestInitDB\020\303\002\022\033\n\026EMsgGMWriteConfigToSQ"
  "L\020\304\002\022\036\n\031EMsgGMLoadActivationCodes\020\305\002\022\026\n\021"
  "EMsgGMQueueForFBS\020\306\002\022\"\n\035EMsgGMSchemaConv"
  "ersionResults\020\307\002\022!\n\034EMsgGMWriteShellFail"
  "ureToSQL\020\311\002\022\032\n\025EMsgGMWriteStatsToSOS\020\312\002\022"
  "\"\n\035EMsgGMGetServiceMethodRouting\020\313\002\022*\n%E"
  "MsgGMGetServiceMethodRoutingResponse\020\314\002\022"
  "(\n#EMsgGMTestNextBuildSchemaConversion\020\316"
  "\002\0220\n+EMsgGMTestNextBuildSchemaConversion"
  "Response\020\317\002\022\033\n\026EMsgExpectShellRestart\020\320\002"
  "\022\027\n\022EMsgHotFixProgress\020\321\002\022)\n$EMsgGMStats"
  "ForwardToAdminConnections\020\322\002\022\035\n\030EMsgGMGe"
  "tModifiedConVars\020\323\002\022%\n EMsgGMGetModified"
  "ConVarsResponse\020\324\002\022\020\n\013EMsgBaseAIS\020\220\003\022%\n "
  "EMsgAISRequestContentDescription\020\222\003\022\031\n\024E"
  "MsgAISUpdateAppInfo\020\223\003\022\"\n\035EMsgAISGetPack"
  "ageChangeNumber\020\225\003\022*\n%EMsgAISGetPackageC"
  "hangeNumberResponse\020\226\003\022\030\n\023EMsgAIGetAppGC"
  "Flags\020\247\003\022 \n\033EMsgAIGetAppGCFlagsResponse\020"
  "\250\003\022\025\n\020EMsgAIGetAppList\020\251\003\022\035\n\030EMsgAIGetAp"
  "pListResponse\020\252\003\022\037\n\032EMsgAISGetCouponDefi"
  "nition\020\255\003\022\'\n\"EMsgAISGetCouponDefinitionR"
  "esponse\020\256\003\022/\n*EMsgAISUpdateSubordinateCo"
  "ntentDescription\020\257\003\0227\n2EMsgAISUpdateSubo"
  "rdinateContentDescriptionResponse\020\260\003\022\030\n\023"
  "EMsgAISTestEnableGC\020\261\003\022\017\n\nEMsgBaseAM\020\364\003\022"
  "\037\n\032EMsgAMUpdateUserBanRequest\020\370\003\022\025\n\020EMsg"
  "AMAddLicense\020\371\003\022\035\n\030EMsgAMSendSystemIMToU"
  "ser\020\374\003\022\030\n\023EMsgAMExtendLicense\020\375\003\022\036\n\031EMsg"
  "AMAddMinutesToLicense\020\376\003\022\030\n\023EMsgAMCancel"
  "License\020\377\003\022\027\n\022EMsgAMInitPurchase\020\200\004\022\033\n\026E"
  "MsgAMPurchaseResponse\020\201\004\022\033\n\026EMsgAMGetLeg"
  "acyGameKey\020\204\004\022#\n\036EMsgAMGetLegacyGameKeyR"
  "esponse\020\205\004\022\037\n\032EMsgAMFindHungTransactions"
  "\020\206\004\022#\n\036EMsgAMSetAccountTrustedRequest\020\207\004"
  "\022\031\n\024EMsgAMCancelPurchase\020\212\004\022\027\n\022EMsgAMNew"
  "Challenge\020\213\004\022\035\n\030EMsgAMFixPendingPurchase"
  "\020\215\004\022%\n EMsgAMFixPendingPurchaseResponse\020"
  "\216\004\022\027\n\022EMsgAMIsUserBanned\020\217\004\022\026\n\021EMsgAMReg"
  "isterKey\020\220\004\022\036\n\031EMsgAMLoadActivationCodes"
  "\020\221\004\022&\n!EMsgAMLoadActivationCodesResponse"
  "\020\222\004\022\034\n\027EMsgAMLookupKeyResponse\020\223\004\022\024\n\017EMs"
  "gAMLookupKey\020\224\004\022\026\n\021EMsgAMChatCleanup\020\225\004\022"
  "\026\n\021EMsgAMClanCleanup\020\226\004\022\033\n\026EMsgAMFixPend"
  "ingRefund\020\227\004\022\034\n\027EMsgAMReverseChargeback\020"
  "\230\004\022$\n\037EMsgAMReverseChargebackResponse\020\231\004"
  "\022\032\n\025EMsgAMClanCleanupList\020\232\004\022\035\n\030EMsgAMSe"
  "ndCartRepurchase\020\235\004\022%\n EMsgAMSendCartRep"
  "urchaseResponse\020\236\004\022\035\n\030EMsgAllowUserToPla"
  "yQuery\020\246\004\022 \n\033EMsgAllowUserToPlayResponse"
  "\020\247\004\022\025\n\020EMsgAMVerfiyUser\020\250\004\022\033\n\026EMsgAMClie"
  "ntNotPlaying\020\251\004\022\"\n\035EMsgAMClientRequestFr"
  "iendship\020\252\004\022\035\n\030EMsgAMRelayPublishStatus\020"
  "\253\004\022\037\n\032EMsgAMInitPurchaseResponse\020\260\004\022!\n\034E"
  "MsgAMRevokePurchaseResponse\020\261\004\022\035\n\030EMsgAM"
  "RefreshGuestPasses\020\263\004\022\033\n\026EMsgAMGrantGues"
  "tPasses\020\266\004\022\032\n\025EMsgAMClanDataUpdated\020\267\004\022\030"
  "\n\023EMsgAMReloadAccount\020\270\004\022\035\n\030EMsgAMClient"
  "ChatMsgRelay\020\271\004\022\024\n\017EMsgAMChatMulti\020\272\004\022 \n"
  "\033EMsgAMClientChatInviteRelay\020\273\004\022\025\n\020EMsgA"
  "MChatInvite\020\274\004\022\036\n\031EMsgAMClientJoinChatRe"
  "lay\020\275\004\022$\n\037EMsgAMClientChatMemberInfoRela"
  "y\020\276\004\022 \n\033EMsgAMPublishChatMemberInfo\020\277\004\022#"
  "\n\036EMsgAMClientAcceptFriendInvite\020\300\004\022\024\n\017E"
  "MsgAMChatEnter\020\301\004\022)\n$EMsgAMClientPublish"
  "RemovalFromSource\020\302\004\022\033\n\026EMsgAMChatAction"
  "Result\020\303\004\022\027\n\022EMsgAMFindAccounts\020\304\004\022\037\n\032EM"
  "sgAMFindAccountsResponse\020\305\004\022\035\n\030EMsgAMIsA"
  "ccountNameInUse\020\306\004\022%\n EMsgAMIsAccountNam"
  "eInUseResponse\020\307\004\022\032\n\025EMsgAMSetAccountFla"
  "gs\020\310\004\022\025\n\020EMsgAMCreateClan\020\312\004\022\035\n\030EMsgAMCr"
  "eateClanResponse\020\313\004\022\031\n\024EMsgAMGetClanDeta"
  "ils\020\314\004\022!\n\034EMsgAMGetClanDetailsResponse\020\315"
  "\004\022\031\n\024EMsgAMSetPersonaName\020\316\004\022\024\n\017EMsgAMSe"
  "tAvatar\020\317\004\022\033\n\026EMsgAMAuthenticateUser\020\320\004\022"
  "#\n\036EMsgAMAuthenticateUserResponse\020\321\004\022\037\n\032"
  "EMsgAMP2PIntroducerMessage\020\324\004\022\031\n\024EMsgCli"
  "entChatAction\020\325\004\022 \n\033EMsgAMClientChatActi"
  "onRelay\020\326\004\022\017\n\nEMsgBaseVS\020\330\004\022\025\n\020EMsgReqCh"
  "allenge\020\330\004\022\024\n\017EMsgVACResponse\020\331\004\022\031\n\024EMsg"
  "ReqChallengeTest\020\332\004\022\024\n\017EMsgVSMarkCheat\020\334"
  "\004\022\023\n\016EMsgVSAddCheat\020\335\004\022\031\n\024EMsgVSPurgeCod"
  "eModDB\020\336\004\022\036\n\031EMsgVSGetChallengeResults\020\337"
  "\004\022\036\n\031EMsgVSChallengeResultText\020\340\004\022\031\n\024EMs"
  "gVSReportLingerer\020\341\004\022\"\n\035EMsgVSRequestMan"
  "agedChallenge\020\342\004\022\031\n\024EMsgVSLoadDBFinished"
  "\020\343\004\022\021\n\014EMsgBaseDRMS\020\361\004\022\034\n\027EMsgDRMBuildBl"
  "obRequest\020\364\004\022\035\n\030EMsgDRMBuildBlobResponse"
  "\020\365\004\022\036\n\031EMsgDRMResolveGuidRequest\020\366\004\022\037\n\032E"
  "MsgDRMResolveGuidResponse\020\367\004\022\035\n\030EMsgDRMV"
  "ariabilityReport\020\371\004\022%\n EMsgDRMVariabilit"
  "yReportResponse\020\372\004\022\033\n\026EMsgDRMStabilityRe"
  "port\020\373\004\022#\n\036EMsgDRMStabilityReportRespons"
  "e\020\374\004\022 \n\033EMsgDRMDetailsReportRequest\020\375\004\022!"
  "\n\034EMsgDRMDetailsReportResponse\020\376\004\022\027\n\022EMs"
  "gDRMProcessFile\020\377\004\022\027\n\022EMsgDRMAdminUpdate"
  "\020\200\005\022\037\n\032EMsgDRMAdminUpdateResponse\020\201\005\022\020\n\013"
  "EMsgDRMSync\020\202\005\022\030\n\023EMsgDRMSyncResponse\020\203\005"
  "\022\037\n\032EMsgDRMProcessFileResponse\020\204\005\022\032\n\025EMs"
  "gDRMEmptyGuidCache\020\205\005\022\"\n\035EMsgDRMEmptyGui"
  "dCacheResponse\020\206\005\022\017\n\nEMsgBaseCS\020\212\005\022\023\n\016EM"
  "sgBaseClient\020\274\005\022\037\n\032EMsgClientLogOn_Depre"
  "cated\020\275\005\022#\n\036EMsgClientAnonLogOn_Deprecat"
  "ed\020\276\005\022\030\n\023EMsgClientHeartBeat\020\277\005\022\032\n\025EMsgC"
  "lientVACResponse\020\300\005\022#\n\036EMsgClientGamesPl"
  "ayed_obsolete\020\301\005\022\025\n\020EMsgClientLogOff\020\302\005\022"
  " \n\033EMsgClientNoUDPConnectivity\020\303\005\022\036\n\031EMs"
  "gClientConnectionStats\020\306\005\022\033\n\026EMsgClientP"
  "ingResponse\020\310\005\022\033\n\026EMsgClientRemoveFriend"
  "\020\312\005\022$\n\037EMsgClientGamesPlayedNoDataBlob\020\313"
  "\005\022\033\n\026EMsgClientChangeStatus\020\314\005\022 \n\033EMsgCl"
  "ientVacStatusResponse\020\315\005\022\030\n\023EMsgClientFr"
  "iendMsg\020\316\005\022#\n\036EMsgClientGameConnect_obso"
  "lete\020\317\005\022$\n\037EMsgClientGamesPlayed2_obsole"
  "te\020\320\005\022!\n\034EMsgClientGameEnded_obsolete\020\321\005"
  "\022\027\n\022EMsgClientSystemIM\020\326\005\022\032\n\025EMsgClientS"
  "ystemIMAck\020\327\005\022\032\n\025EMsgClientGetLicenses\020\330"
  "\005\022\037\n\032EMsgClientGetLegacyGameKey\020\332\005\022,\n\'EM"
  "sgClientContentServerLogOn_Deprecated\020\333\005"
  "\022\031\n\024EMsgClientAckVACBan2\020\334\005\022\"\n\035EMsgClien"
  "tGetPurchaseReceipts\020\340\005\022$\n\037EMsgClientGam"
  "esPlayed3_obsolete\020\342\005\022\033\n\026EMsgClientAckGu"
  "estPass\020\344\005\022\036\n\031EMsgClientRedeemGuestPass\020"
  "\345\005\022\032\n\025EMsgClientGamesPlayed\020\346\005\022\032\n\025EMsgCl"
  "ientRegisterKey\020\347\005\022\037\n\032EMsgClientInviteUs"
  "erToClan\020\350\005\022$\n\037EMsgClientAcknowledgeClan"
  "Invite\020\351\005\022$\n\037EMsgClientPurchaseWithMachi"
  "neID\020\352\005\022\034\n\027EMsgClientAppUsageEvent\020\353\005\022\034\n"
  "\027EMsgClientLogOnResponse\020\357\005\022\037\n\032EMsgClien"
  "tSetHeartbeatRate\020\363\005\022$\n\037EMsgClientNotLog"
  "gedOnDeprecated\020\364\005\022\030\n\023EMsgClientLoggedOf"
  "f\020\365\005\022\022\n\rEMsgGSApprove\020\366\005\022\017\n\nEMsgGSDeny\020\367"
  "\005\022\017\n\nEMsgGSKick\020\370\005\022\037\n\032EMsgClientPurchase"
  "Response\020\373\005\022\023\n\016EMsgClientPing\020\374\005\022\022\n\rEMsg"
  "ClientNOP\020\375\005\022\033\n\026EMsgClientPersonaState\020\376"
  "\005\022\032\n\025EMsgClientFriendsList\020\377\005\022\032\n\025EMsgCli"
  "entAccountInfo\020\200\006\022\031\n\024EMsgClientNewsUpdat"
  "e\020\203\006\022\036\n\031EMsgClientGameConnectDeny\020\205\006\022\026\n\021"
  "EMsgGSStatusReply\020\206\006\022 \n\033EMsgClientGameCo"
  "nnectTokens\020\213\006\022\032\n\025EMsgClientLicenseList\020"
  "\214\006\022\033\n\026EMsgClientVACBanStatus\020\216\006\022\025\n\020EMsgC"
  "lientCMList\020\217\006\022\031\n\024EMsgClientEncryptPct\020\220"
  "\006\022\'\n\"EMsgClientGetLegacyGameKeyResponse\020"
  "\221\006\022\030\n\023EMsgClientAddFriend\020\227\006\022 \n\033EMsgClie"
  "ntAddFriendResponse\020\230\006\022#\n\036EMsgClientAckG"
  "uestPassResponse\020\234\006\022&\n!EMsgClientRedeemG"
  "uestPassResponse\020\235\006\022$\n\037EMsgClientUpdateG"
  "uestPassesList\020\236\006\022\026\n\021EMsgClientChatMsg\020\237"
  "\006\022\031\n\024EMsgClientChatInvite\020\240\006\022\027\n\022EMsgClie"
  "ntJoinChat\020\241\006\022\035\n\030EMsgClientChatMemberInf"
  "o\020\242\006\022.\n)EMsgClientLogOnWithCredentials_D"
  "eprecated\020\243\006\022%\n EMsgClientPasswordChange"
  "Response\020\245\006\022\030\n\023EMsgClientChatEnter\020\247\006\022&\n"
  "!EMsgClientFriendRemovedFromSource\020\250\006\022\031\n"
  "\024EMsgClientCreateChat\020\251\006\022!\n\034EMsgClientCr"
  "eateChatResponse\020\252\006\022#\n\036EMsgClientP2PIntr"
  "oducerMessage\020\255\006\022\037\n\032EMsgClientChatAction"
  "Result\020\256\006\022 \n\033EMsgClientRequestFriendData"
  "\020\257\006\022\033\n\026EMsgClientGetUserStats\020\262\006\022#\n\036EMsg"
  "ClientGetUserStatsResponse\020\263\006\022\035\n\030EMsgCli"
  "entStoreUserStats\020\264\006\022%\n EMsgClientStoreU"
  "serStatsResponse\020\265\006\022\030\n\023EMsgClientClanSta"
  "te\020\266\006\022\034\n\027EMsgClientServiceModule\020\276\006\022\032\n\025E"
  "MsgClientServiceCall\020\277\006\022\"\n\035EMsgClientSer"
  "viceCallResponse\020\300\006\022$\n\037EMsgClientNatTrav"
  "ersalStatEvent\020\307\006\022\036\n\031EMsgClientSteamUsag"
  "eEvent\020\312\006\022\034\n\027EMsgClientCheckPassword\020\315\006\022"
  "\034\n\027EMsgClientResetPassword\020\316\006\022$\n\037EMsgCli"
  "entCheckPasswordResponse\020\320\006\022$\n\037EMsgClien"
  "tResetPasswordResponse\020\321\006\022\033\n\026EMsgClientS"
  "essionToken\020\322\006\022\037\n\032EMsgClientDRMProblemRe"
  "port\020\323\006\022\036\n\031EMsgClientSetIgnoreFriend\020\327\006\022"
  "&\n!EMsgClientSetIgnoreFriendResponse\020\330\006\022"
  "$\n\037EMsgClientGetAppOwnershipTicket\020\331\006\022,\n"
  "\'EMsgClientGetAppOwnershipTicketResponse"
  "\020\332\006\022#\n\036EMsgClientGetLobbyListResponse\020\334\006"
  "\022\031\n\024EMsgClientServerList\020\360\006\022\035\n\030EMsgClien"
  "tDRMBlobRequest\020\200\007\022\036\n\031EMsgClientDRMBlobR"
  "esponse\020\201\007\022\027\n\022EMsgBaseGameServer\020\204\007\022\033\n\026E"
  "MsgGSDisconnectNotice\020\205\007\022\021\n\014EMsgGSStatus"
  "\020\207\007\022\026\n\021EMsgGSUserPlaying\020\211\007\022\022\n\rEMsgGSSta"
  "tus2\020\212\007\022\036\n\031EMsgGSStatusUpdate_Unused\020\213\007\022"
  "\025\n\020EMsgGSServerType\020\214\007\022\025\n\020EMsgGSPlayerLi"
  "st\020\215\007\022#\n\036EMsgGSGetUserAchievementStatus\020"
  "\216\007\022+\n&EMsgGSGetUserAchievementStatusResp"
  "onse\020\217\007\022\027\n\022EMsgGSGetPlayStats\020\226\007\022\037\n\032EMsg"
  "GSGetPlayStatsResponse\020\227\007\022\035\n\030EMsgGSGetUs"
  "erGroupStatus\020\230\007\022\035\n\030EMsgAMGetUserGroupSt"
  "atus\020\231\007\022%\n EMsgAMGetUserGroupStatusRespo"
  "nse\020\232\007\022%\n EMsgGSGetUserGroupStatusRespon"
  "se\020\233\007\022\030\n\023EMsgGSGetReputation\020\250\007\022 \n\033EMsgG"
  "SGetReputationResponse\020\251\007\022\034\n\027EMsgGSAssoc"
  "iateWithClan\020\252\007\022$\n\037EMsgGSAssociateWithCl"
  "anResponse\020\253\007\022(\n#EMsgGSComputeNewPlayerC"
  "ompatibility\020\254\007\0220\n+EMsgGSComputeNewPlaye"
  "rCompatibilityResponse\020\255\007\022\022\n\rEMsgBaseAdm"
  "in\020\350\007\022\021\n\014EMsgAdminCmd\020\350\007\022\031\n\024EMsgAdminCmd"
  "Response\020\354\007\022\036\n\031EMsgAdminLogListenRequest"
  "\020\355\007\022\026\n\021EMsgAdminLogEvent\020\356\007\022\025\n\020EMsgUnive"
  "rseData\020\362\007\022\022\n\rEMsgAdminSpew\020\373\007\022\032\n\025EMsgAd"
  "minConsoleTitle\020\374\007\022\024\n\017EMsgAdminGCSpew\020\377\007"
  "\022\027\n\022EMsgAdminGCCommand\020\200\010\022\036\n\031EMsgAdminGC"
  "GetCommandList\020\201\010\022&\n!EMsgAdminGCGetComma"
  "ndListResponse\020\202\010\022\032\n\025EMsgFBSConnectionDa"
  "ta\020\203\010\022\025\n\020EMsgAdminMsgSpew\020\204\010\022\020\n\013EMsgBase"
  "FBS\020\314\010\022\026\n\021EMsgFBSReqVersion\020\314\010\022\027\n\022EMsgFB"
  "SVersionInfo\020\315\010\022\030\n\023EMsgFBSForceRefresh\020\316"
  "\010\022\027\n\022EMsgFBSForceBounce\020\317\010\022\031\n\024EMsgFBSDep"
  "loyPackage\020\320\010\022\032\n\025EMsgFBSDeployResponse\020\321"
  "\010\022\036\n\031EMsgFBSUpdateBootstrapper\020\322\010\022\024\n\017EMs"
  "gFBSSetState\020\323\010\022\032\n\025EMsgFBSApplyOSUpdates"
  "\020\324\010\022\030\n\023EMsgFBSRunCMDScript\020\325\010\022\025\n\020EMsgFBS"
  "RebootBox\020\326\010\022\035\n\030EMsgFBSSetBigBrotherMode"
  "\020\327\010\022\032\n\025EMsgFBSMinidumpServer\020\330\010\022\037\n\032EMsgF"
  "BSDeployHotFixPackage\020\332\010\022 \n\033EMsgFBSDeplo"
  "yHotFixResponse\020\333\010\022\032\n\025EMsgFBSDownloadHot"
  "Fix\020\334\010\022\"\n\035EMsgFBSDownloadHotFixResponse\020"
  "\335\010\022\"\n\035EMsgFBSUpdateTargetConfigFile\020\336\010\022\034"
  "\n\027EMsgFBSApplyAccountCred\020\337\010\022$\n\037EMsgFBSA"
  "pplyAccountCredResponse\020\340\010\022\031\n\024EMsgFBSSet"
  "ShellCount\020\341\010\022\032\n\025EMsgFBSTerminateShell\020\342"
  "\010\022\035\n\030EMsgFBSQueryGMForRequest\020\343\010\022\033\n\026EMsg"
  "FBSQueryGMResponse\020\344\010\022\034\n\027EMsgFBSTerminat"
  "eZombies\020\345\010\022 \n\033EMsgFBSInfoFromBootstrapp"
  "er\020\346\010\022\035\n\030EMsgFBSRebootBoxResponse\020\347\010\022&\n!"
  "EMsgFBSBootstrapperPackageRequest\020\350\010\022\'\n\""
  "EMsgFBSBootstrapperPackageResponse\020\351\010\022\'\n"
  "\"EMsgFBSBootstrapperGetPackageChunk\020\352\010\022/"
  "\n*EMsgFBSBootstrapperGetPackageChunkResp"
  "onse\020\353\010\022/\n*EMsgFBSBootstrapperPackageTra"
  "nsferProgress\020\354\010\022\037\n\032EMsgFBSRestartBootst"
  "rapper\020\355\010\022\034\n\027EMsgFBSPauseFrozenDumps\020\356\010\022"
  "\025\n\020EMsgBaseFileXfer\020\260\t\022\030\n\023EMsgFileXferRe"
  "quest\020\260\t\022\031\n\024EMsgFileXferResponse\020\261\t\022\025\n\020E"
  "MsgFileXferData\020\262\t\022\024\n\017EMsgFileXferEnd\020\263\t"
  "\022\030\n\023EMsgFileXferDataAck\020\264\t\022\030\n\023EMsgBaseCh"
  "annelAuth\020\224\n\022\035\n\030EMsgChannelAuthChallenge"
  "\020\224\n\022\034\n\027EMsgChannelAuthResponse\020\225\n\022\032\n\025EMs"
  "gChannelAuthResult\020\226\n\022\036\n\031EMsgChannelEncr"
  "yptRequest\020\227\n\022\037\n\032EMsgChannelEncryptRespo"
  "nse\020\230\n\022\035\n\030EMsgChannelEncryptResult\020\231\n\022\017\n"
  "\nEMsgBaseBS\020\370\n\022\030\n\023EMsgBSPurchaseStart\020\371\n"
  "\022\033\n\026EMsgBSPurchaseResponse\020\372\n\022\036\n\031EMsgBSA"
  "uthenticateCCTrans\020\373\n\022&\n!EMsgBSAuthentic"
  "ateCCTransResponse\020\374\n\022\031\n\024EMsgBSSettleCom"
  "plete\020\376\n\022\030\n\023EMsgBSInitPayPalTxn\020\200\013\022 \n\033EM"
  "sgBSInitPayPalTxnResponse\020\201\013\022\034\n\027EMsgBSGe"
  "tPayPalUserInfo\020\202\013\022$\n\037EMsgBSGetPayPalUse"
  "rInfoResponse\020\203\013\022\032\n\025EMsgBSPaymentInstrBa"
  "n\020\211\013\022\"\n\035EMsgBSPaymentInstrBanResponse\020\212\013"
  "\022\034\n\027EMsgBSInitGCBankXferTxn\020\215\013\022$\n\037EMsgBS"
  "InitGCBankXferTxnResponse\020\216\013\022\026\n\021EMsgBSCo"
  "mmitGCTxn\020\221\013\022!\n\034EMsgBSQueryTransactionSt"
  "atus\020\222\013\022)\n$EMsgBSQueryTransactionStatusR"
  "esponse\020\223\013\022\037\n\032EMsgBSQueryTxnExtendedInfo"
  "\020\231\013\022\'\n\"EMsgBSQueryTxnExtendedInfoRespons"
  "e\020\232\013\022 \n\033EMsgBSUpdateConversionRates\020\233\013\022!"
  "\n\034EMsgBSPurchaseRunFraudChecks\020\235\013\022)\n$EMs"
  "gBSPurchaseRunFraudChecksResponse\020\236\013\022\037\n\032"
  "EMsgBSQueryBankInformation\020\240\013\022\'\n\"EMsgBSQ"
  "ueryBankInformationResponse\020\241\013\022\"\n\035EMsgBS"
  "ValidateXsollaSignature\020\245\013\022*\n%EMsgBSVali"
  "dateXsollaSignatureResponse\020\246\013\022\034\n\027EMsgBS"
  "QiwiWalletInvoice\020\250\013\022$\n\037EMsgBSQiwiWallet"
  "InvoiceResponse\020\251\013\022%\n EMsgBSUpdateInvent"
  "oryFromProPack\020\252\013\022-\n(EMsgBSUpdateInvento"
  "ryFromProPackResponse\020\253\013\022\036\n\031EMsgBSSendSh"
  "ippingRequest\020\254\013\022&\n!EMsgBSSendShippingRe"
  "questResponse\020\255\013\022 \n\033EMsgBSGetProPackOrde"
  "rStatus\020\256\013\022(\n#EMsgBSGetProPackOrderStatu"
  "sResponse\020\257\013\022\032\n\025EMsgBSCheckJobRunning\020\260\013"
  "\022\"\n\035EMsgBSCheckJobRunningResponse\020\261\013\022(\n#"
  "EMsgBSResetPackagePurchaseRateLimit\020\262\013\0220"
  "\n+EMsgBSResetPackagePurchaseRateLimitRes"
  "ponse\020\263\013\022\034\n\027EMsgBSUpdatePaymentData\020\264\013\022$"
  "\n\037EMsgBSUpdatePaymentDataResponse\020\265\013\022\034\n\027"
  "EMsgBSGetBillingAddress\020\266\013\022$\n\037EMsgBSGetB"
  "illingAddressResponse\020\267\013\022\034\n\027EMsgBSGetCre"
  "ditCardInfo\020\270\013\022$\n\037EMsgBSGetCreditCardInf"
  "oResponse\020\271\013\022#\n\036EMsgBSRemoveExpiredPayme"
  "ntData\020\274\013\022+\n&EMsgBSRemoveExpiredPaymentD"
  "ataResponse\020\275\013\022\037\n\032EMsgBSConvertToCurrent"
  "Keys\020\276\013\022\'\n\"EMsgBSConvertToCurrentKeysRes"
  "ponse\020\277\013\022\027\n\022EMsgBSInitPurchase\020\300\013\022\037\n\032EMs"
  "gBSInitPurchaseResponse\020\301\013\022\033\n\026EMsgBSComp"
  "letePurchase\020\302\013\022#\n\036EMsgBSCompletePurchas"
  "eResponse\020\303\013\022\036\n\031EMsgBSPruneCardUsageStat"
  "s\020\304\013\022&\n!EMsgBSPruneCardUsageStatsRespons"
  "e\020\305\013\022\037\n\032EMsgBSStoreBankInformation\020\306\013\022\'\n"
  "\"EMsgBSStoreBankInformationResponse\020\307\013\022\030"
  "\n\023EMsgBSVerifyPOSAKey\020\310\013\022 \n\033EMsgBSVerify"
  "POSAKeyResponse\020\311\013\022\037\n\032EMsgBSReverseRedee"
  "mPOSAKey\020\312\013\022\'\n\"EMsgBSReverseRedeemPOSAKe"
  "yResponse\020\313\013\022\036\n\031EMsgBSQueryFindCreditCar"
  "d\020\314\013\022&\n!EMsgBSQueryFindCreditCardRespons"
  "e\020\315\013\022\037\n\032EMsgBSStatusInquiryPOSAKey\020\316\013\022\'\n"
  "\"EMsgBSStatusInquiryPOSAKeyResponse\020\317\013\022*"
  "\n%EMsgBSBoaCompraConfirmProductDelivery\020"
  "\326\013\0222\n-EMsgBSBoaCompraConfirmProductDeliv"
  "eryResponse\020\327\013\022\037\n\032EMsgBSGenerateBoaCompr"
  "aMD5\020\330\013\022\'\n\"EMsgBSGenerateBoaCompraMD5Res"
  "ponse\020\331\013\022\026\n\021EMsgBSCommitWPTxn\020\332\013\022\031\n\024EMsg"
  "BSCommitAdyenTxn\020\333\013\022\020\n\013EMsgBaseATS\020\334\013\022\033\n"
  "\026EMsgATSStartStressTest\020\335\013\022\032\n\025EMsgATSSto"
  "pStressTest\020\336\013\022\035\n\030EMsgATSRunFailServerTe"
  "st\020\337\013\022\033\n\026EMsgATSUFSPerfTestTask\020\340\013\022\037\n\032EM"
  "sgATSUFSPerfTestResponse\020\341\013\022\024\n\017EMsgATSCy"
  "cleTCM\020\342\013\022\036\n\031EMsgATSInitDRMSStressTest\020\343"
  "\013\022\024\n\017EMsgATSCallTest\020\344\013\022\031\n\024EMsgATSCallTe"
  "stReply\020\345\013\022\037\n\032EMsgATSStartExternalStress"
  "\020\346\013\022\"\n\035EMsgATSExternalStressJobStart\020\347\013\022"
  "#\n\036EMsgATSExternalStressJobQueued\020\350\013\022$\n\037"
  "EMsgATSExternalStressJobRunning\020\351\013\022$\n\037EM"
  "sgATSExternalStressJobStopped\020\352\013\022$\n\037EMsg"
  "ATSExternalStressJobStopAll\020\353\013\022&\n!EMsgAT"
  "SExternalStressActionResult\020\354\013\022\023\n\016EMsgAT"
  "SStarted\020\355\013\022\032\n\025EMsgATSCSPerfTestTask\020\356\013\022"
  "\036\n\031EMsgATSCSPerfTestResponse\020\357\013\022\017\n\nEMsgB"
  "aseDP\020\300\014\022\035\n\030EMsgDPSetPublishingState\020\301\014\022"
  "\034\n\027EMsgDPUniquePlayersStat\020\303\014\022\025\n\020EMsgDPC"
  "loudStats\020\314\014\022\031\n\024EMsgDPGetPlayerCount\020\317\014\022"
  "!\n\034EMsgDPGetPlayerCountResponse\020\320\014\022\"\n\035EM"
  "sgDPGameServersPlayersStats\020\321\014\022#\n\036EMsgCl"
  "ientDPCheckSpecialSurvey\020\324\014\022+\n&EMsgClien"
  "tDPCheckSpecialSurveyResponse\020\325\014\022*\n%EMsg"
  "ClientDPSendSpecialSurveyResponse\020\326\014\022/\n*"
  "EMsgClientDPSendSpecialSurveyResponseRep"
  "ly\020\327\014\022\036\n\031EMsgDPStoreSaleStatistics\020\330\014\022\033\n"
  "\026EMsgDPPartnerMicroTxns\020\334\014\022#\n\036EMsgDPPart"
  "nerMicroTxnsResponse\020\335\014\022\036\n\031EMsgDPVRUniqu"
  "ePlayersStat\020\337\014\022\017\n\nEMsgBaseCM\020\244\r\022\030\n\023EMsg"
  "CMSetAllowState\020\245\r\022\031\n\024EMsgCMSpewAllowSta"
  "te\020\246\r\022\032\n\025EMsgCMSessionRejected\020\247\r\022\025\n\020EMs"
  "gCMSetSecrets\020\250\r\022\025\n\020EMsgCMGetSecrets\020\251\r\022"
  " \n\033EMsgCMRemotePlayReplyPacket\020\252\r\022\017\n\nEMs"
  "gBaseGC\020\230\021\022\024\n\017EMsgGCCmdRevive\020\233\021\022\022\n\rEMsg"
  "GCCmdDown\020\236\021\022\024\n\017EMsgGCCmdDeploy\020\237\021\022\034\n\027EM"
  "sgGCCmdDeployResponse\020\240\021\022\024\n\017EMsgGCCmdSwi"
  "tch\020\241\021\022\032\n\025EMsgAMRefreshSessions\020\242\021\022\035\n\030EM"
  "sgGCAchievementAwarded\020\244\021\022\024\n\017EMsgGCCmdSt"
  "atus\020\250\021\022+\n&EMsgGCRegisterWebInterfaces_D"
  "eprecated\020\251\021\022\'\n\"EMsgGCGetAccountDetails_"
  "DEPRECATED\020\252\021\022\032\n\025EMsgGCInterAppMessage\020\253"
  "\021\022\033\n\026EMsgGCGetEmailTemplate\020\254\021\022#\n\036EMsgGC"
  "GetEmailTemplateResponse\020\255\021\022\021\n\014EMsgGCHRe"
  "lay\020\256\021\022\031\n\024EMsgGCHRelayToClient\020\257\021\022\031\n\024EMs"
  "gGCHUpdateSession\020\260\021\022 \n\033EMsgGCHRequestUp"
  "dateSession\020\261\021\022\031\n\024EMsgGCHRequestStatus\020\262"
  "\021\022!\n\034EMsgGCHRequestStatusResponse\020\263\021\022\"\n\035"
  "EMsgGCHAccountVacStatusChange\020\264\021\022\023\n\016EMsg"
  "GCHSpawnGC\020\265\021\022\033\n\026EMsgGCHSpawnGCResponse\020"
  "\266\021\022\022\n\rEMsgGCHKillGC\020\267\021\022\032\n\025EMsgGCHKillGCR"
  "esponse\020\270\021\022\'\n\"EMsgGCHAccountTradeBanStat"
  "usChange\020\271\021\022#\n\036EMsgGCHAccountLockStatusC"
  "hange\020\272\021\022!\n\034EMsgGCHVacVerificationChange"
  "\020\273\021\022$\n\037EMsgGCHAccountPhoneNumberChange\020\274"
  "\021\022\"\n\035EMsgGCHAccountTwoFactorChange\020\275\021\022\035\n"
  "\030EMsgGCHInviteUserToLobby\020\276\021\022\"\n\035EMsgGCHU"
  "pdateMultipleSessions\020\277\021\022(\n#EMsgGCHMarkA"
  "ppSessionsAuthoritative\020\300\021\022-\n(EMsgGCHRec"
  "urringSubscriptionStatusChange\020\301\021\022\035\n\030EMs"
  "gGCHAppCheersReceived\020\302\021\022$\n\037EMsgGCHAppCh"
  "eersGetAllowedTypes\020\303\021\022,\n\'EMsgGCHAppChee"
  "rsGetAllowedTypesResponse\020\304\021\022#\n\036EMsgGCHR"
  "outingRulesFromGCHtoGM\020\305\021\022#\n\036EMsgGCHRout"
  "ingRulesToGCHfromGM\020\306\021\022!\n\034EMsgUpdateCMMe"
  "ssageRateRules\020\307\021\022\020\n\013EMsgBaseP2P\020\304\023\022\035\n\030E"
  "MsgP2PIntroducerMessage\020\306\023\022\017\n\nEMsgBaseSM"
  "\020\324\026\022\032\n\025EMsgSMExpensiveReport\020\326\026\022\027\n\022EMsgS"
  "MHourlyReport\020\327\026\022\033\n\026EMsgSMPartitionRenam"
  "es\020\331\026\022\027\n\022EMsgSMMonitorSpace\020\332\026\022(\n#EMsgSM"
  "TestNextBuildSchemaConversion\020\333\026\0220\n+EMsg"
  "SMTestNextBuildSchemaConversionResponse\020"
  "\334\026\022\021\n\014EMsgBaseTest\020\270\027\022\023\n\016EMsgFailServer\020"
  "\270\027\022\031\n\024EMsgJobHeartbeatTest\020\271\027\022!\n\034EMsgJob"
  "HeartbeatTestResponse\020\272\027\022\025\n\020EMsgBaseFTSR"
  "ange\020\234\030\022\025\n\020EMsgBaseCCSRange\020\316\030\022%\n EMsgCC"
  "SDeleteAllCommentsByAuthor\020\331\030\022-\n(EMsgCCS"
  "DeleteAllCommentsByAuthorResponse\020\332\030\022\025\n\020"
  "EMsgBaseLBSRange\020\200\031\022\024\n\017EMsgLBSSetScore\020\201"
  "\031\022\034\n\027EMsgLBSSetScoreResponse\020\202\031\022\032\n\025EMsgL"
  "BSFindOrCreateLB\020\203\031\022\"\n\035EMsgLBSFindOrCrea"
  "teLBResponse\020\204\031\022\030\n\023EMsgLBSGetLBEntries\020\205"
  "\031\022 \n\033EMsgLBSGetLBEntriesResponse\020\206\031\022\025\n\020E"
  "MsgLBSGetLBList\020\207\031\022\035\n\030EMsgLBSGetLBListRe"
  "sponse\020\210\031\022\030\n\023EMsgLBSSetLBDetails\020\211\031\022\024\n\017E"
  "MsgLBSDeleteLB\020\212\031\022\031\n\024EMsgLBSDeleteLBEntr"
  "y\020\213\031\022\023\n\016EMsgLBSResetLB\020\214\031\022\033\n\026EMsgLBSRese"
  "tLBResponse\020\215\031\022\034\n\027EMsgLBSDeleteLBRespons"
  "e\020\216\031\022\020\n\013EMsgBaseOGS\020\310\032\022\030\n\023EMsgOGSBeginSe"
  "ssion\020\311\032\022 \n\033EMsgOGSBeginSessionResponse\020"
  "\312\032\022\026\n\021EMsgOGSEndSession\020\313\032\022\036\n\031EMsgOGSEnd"
  "SessionResponse\020\314\032\022\036\n\031EMsgOGSWriteAppSes"
  "sionRow\020\316\032\022\020\n\013EMsgBaseBRP\020\220\034\022\025\n\020EMsgBase"
  "AMRange2\020\240\037\022\025\n\020EMsgAMCreateChat\020\241\037\022\035\n\030EM"
  "sgAMCreateChatResponse\020\242\037\022!\n\034EMsgAMGetAc"
  "countEmailAddress\020\246\037\022)\n$EMsgAMGetAccount"
  "EmailAddressResponse\020\247\037\022\032\n\025EMsgAMRequest"
  "ClanData\020\250\037\022\031\n\024EMsgAMRouteToClients\020\251\037\022\024"
  "\n\017EMsgAMLeaveClan\020\252\037\022\032\n\025EMsgAMClanPermis"
  "sions\020\253\037\022\"\n\035EMsgAMClanPermissionsRespons"
  "e\020\254\037\022.\n)EMsgAMCreateClanEventDummyForRat"
  "eLimiting\020\255\037\022.\n)EMsgAMUpdateClanEventDum"
  "myForRateLimiting\020\257\037\022$\n\037EMsgAMSetClanPer"
  "missionSettings\020\265\037\022,\n\'EMsgAMSetClanPermi"
  "ssionSettingsResponse\020\266\037\022$\n\037EMsgAMGetCla"
  "nPermissionSettings\020\267\037\022,\n\'EMsgAMGetClanP"
  "ermissionSettingsResponse\020\270\037\022\036\n\031EMsgAMPu"
  "blishChatRoomInfo\020\271\037\022\033\n\026EMsgClientChatRo"
  "omInfo\020\272\037\022\031\n\024EMsgAMGetClanHistory\020\307\037\022!\n\034"
  "EMsgAMGetClanHistoryResponse\020\310\037\022 \n\033EMsgA"
  "MGetClanPermissionBits\020\311\037\022(\n#EMsgAMGetCl"
  "anPermissionBitsResponse\020\312\037\022 \n\033EMsgAMSet"
  "ClanPermissionBits\020\313\037\022(\n#EMsgAMSetClanPe"
  "rmissionBitsResponse\020\314\037\022\035\n\030EMsgAMSession"
  "InfoRequest\020\315\037\022\036\n\031EMsgAMSessionInfoRespo"
  "nse\020\316\037\022\032\n\025EMsgAMValidateWGToken\020\317\037\022\026\n\021EM"
  "sgAMGetClanRank\020\322\037\022\036\n\031EMsgAMGetClanRankR"
  "esponse\020\323\037\022\026\n\021EMsgAMSetClanRank\020\324\037\022\036\n\031EM"
  "sgAMSetClanRankResponse\020\325\037\022\026\n\021EMsgAMGetC"
  "lanPOTW\020\326\037\022\036\n\031EMsgAMGetClanPOTWResponse\020"
  "\327\037\022\026\n\021EMsgAMSetClanPOTW\020\330\037\022\036\n\031EMsgAMSetC"
  "lanPOTWResponse\020\331\037\022\023\n\016EMsgAMDumpUser\020\333\037\022"
  "\033\n\026EMsgAMKickUserFromClan\020\334\037\022\033\n\026EMsgAMAd"
  "dFounderToClan\020\335\037\022\"\n\035EMsgAMValidateWGTok"
  "enResponse\020\336\037\022\034\n\027EMsgAMSetAccountDetails"
  "\020\340\037\022\031\n\024EMsgAMGetChatBanList\020\341\037\022!\n\034EMsgAM"
  "GetChatBanListResponse\020\342\037\022\030\n\023EMsgAMUnBan"
  "FromChat\020\343\037\022\031\n\024EMsgAMSetClanDetails\020\344\037\022\034"
  "\n\027EMsgUGSGetUserGameStats\020\351\037\022$\n\037EMsgUGSG"
  "etUserGameStatsResponse\020\352\037\022\036\n\031EMsgAMChec"
  "kClanMembership\020\353\037\022\031\n\024EMsgAMGetClanMembe"
  "rs\020\354\037\022!\n\034EMsgAMGetClanMembersResponse\020\355\037"
  "\022!\n\034EMsgAMNotifyChatOfClanChange\020\357\037\022\033\n\026E"
  "MsgAMResubmitPurchase\020\360\037\022\024\n\017EMsgAMAddFri"
  "end\020\361\037\022\034\n\027EMsgAMAddFriendResponse\020\362\037\022\027\n\022"
  "EMsgAMRemoveFriend\020\363\037\022\023\n\016EMsgAMDumpClan\020"
  "\364\037\022\032\n\025EMsgAMChangeClanOwner\020\365\037\022\034\n\027EMsgAM"
  "CancelEasyCollect\020\366\037\022$\n\037EMsgAMCancelEasy"
  "CollectResponse\020\367\037\022\030\n\023EMsgAMClansInCommo"
  "n\020\372\037\022 \n\033EMsgAMClansInCommonResponse\020\373\037\022\033"
  "\n\026EMsgAMIsValidAccountID\020\374\037\022\032\n\025EMsgAMWip"
  "eFriendsList\020\377\037\022\025\n\020EMsgAMSetIgnored\020\200 \022%"
  "\n EMsgAMClansInCommonCountResponse\020\201 \022\026\n"
  "\021EMsgAMFriendsList\020\202 \022\036\n\031EMsgAMFriendsLi"
  "stResponse\020\203 \022\032\n\025EMsgAMFriendsInCommon\020\204"
  " \022\"\n\035EMsgAMFriendsInCommonResponse\020\205 \022\'\n"
  "\"EMsgAMFriendsInCommonCountResponse\020\206 \022\035"
  "\n\030EMsgAMClansInCommonCount\020\207 \022\033\n\026EMsgAMC"
  "hallengeVerdict\020\210 \022 \n\033EMsgAMChallengeNot"
  "ification\020\211 \022\025\n\020EMsgAMFindGSByIP\020\212 \022\026\n\021E"
  "MsgAMFoundGSByIP\020\213 \022\026\n\021EMsgAMGiftRevoked"
  "\020\214 \022\027\n\022EMsgAMUserClanList\020\216 \022\037\n\032EMsgAMUs"
  "erClanListResponse\020\217 \022\035\n\030EMsgAMGetAccoun"
  "tDetails2\020\220 \022%\n EMsgAMGetAccountDetailsR"
  "esponse2\020\221 \022&\n!EMsgAMSetCommunityProfile"
  "Settings\020\222 \022.\n)EMsgAMSetCommunityProfile"
  "SettingsResponse\020\223 \022#\n\036EMsgAMGetCommunit"
  "yPrivacyState\020\224 \022+\n&EMsgAMGetCommunityPr"
  "ivacyStateResponse\020\225 \022&\n!EMsgAMCheckClan"
  "InviteRateLimiting\020\226 \022$\n\037EMsgUGSGetUserA"
  "chievementStatus\020\227 \022\025\n\020EMsgAMGetIgnored\020"
  "\230 \022\035\n\030EMsgAMGetIgnoredResponse\020\231 \022\035\n\030EMs"
  "gAMSetIgnoredResponse\020\232 \022$\n\037EMsgAMSetFri"
  "endRelationshipNone\020\233 \022 \n\033EMsgAMGetFrien"
  "dRelationship\020\234 \022(\n#EMsgAMGetFriendRelat"
  "ionshipResponse\020\235 \022\036\n\031EMsgAMServiceModul"
  "esCache\020\236 \022\035\n\030EMsgAMServiceModulesCall\020\237"
  " \022%\n EMsgAMServiceModulesCallResponse\020\240 "
  "\022\037\n\032EMsgCommunityAddFriendNews\020\254 \022\027\n\022EMs"
  "gAMFindClanUser\020\257 \022\037\n\032EMsgAMFindClanUser"
  "Response\020\260 \022\026\n\021EMsgAMBanFromChat\020\261 \022#\n\036E"
  "MsgAMGetUserNewsSubscriptions\020\263 \022+\n&EMsg"
  "AMGetUserNewsSubscriptionsResponse\020\264 \022#\n"
  "\036EMsgAMSetUserNewsSubscriptions\020\265 \022\033\n\026EM"
  "sgAMSendQueuedEmails\020\270 \022\032\n\025EMsgAMSetLice"
  "nseFlags\020\271 \022\033\n\026EMsgAMGetAccountStatus\020\276 "
  "\022#\n\036EMsgAMGetAccountStatusResponse\020\277 \022\030\n"
  "\023EMsgAMEditBanReason\020\300 \022&\n!EMsgAMCheckCl"
  "anMembershipResponse\020\301 \022\"\n\035EMsgAMProbeCl"
  "anMembershipList\020\302 \022*\n%EMsgAMProbeClanMe"
  "mbershipListResponse\020\303 \022,\n\'EMsgUGSGetUse"
  "rAchievementStatusResponse\020\304 \022\034\n\027EMsgAMG"
  "etFriendsLobbies\020\305 \022$\n\037EMsgAMGetFriendsL"
  "obbiesResponse\020\306 \022$\n\037EMsgAMGetUserFriend"
  "NewsResponse\020\314 \022#\n\036EMsgCommunityGetUserF"
  "riendNews\020\315 \022#\n\036EMsgAMGetUserClansNewsRe"
  "sponse\020\316 \022\033\n\026EMsgAMGetUserClansNews\020\317 \022\037"
  "\n\032EMsgAMGetPreviousCBAccount\020\330 \022\'\n\"EMsgA"
  "MGetPreviousCBAccountResponse\020\331 \022 \n\033EMsg"
  "AMGetUserLicenseHistory\020\336 \022(\n#EMsgAMGetU"
  "serLicenseHistoryResponse\020\337 \022 \n\033EMsgAMSu"
  "pportChangePassword\020\342 \022\035\n\030EMsgAMSupportC"
  "hangeEmail\020\343 \022&\n!EMsgAMResetUserVerifica"
  "tionGSByIP\020\345 \022\034\n\027EMsgAMUpdateGSPlayStats"
  "\020\346 \022!\n\034EMsgAMSupportEnableOrDisable\020\347 \022\034"
  "\n\027EMsgAMGetPurchaseStatus\020\356 \022\"\n\035EMsgAMSu"
  "pportIsAccountEnabled\020\361 \022*\n%EMsgAMSuppor"
  "tIsAccountEnabledResponse\020\362 \022\030\n\023EMsgUGSG"
  "etUserStats\020\363 \022\023\n\016EMsgAMGSSearch\020\365 \022!\n\034E"
  "MsgChatServerRouteFriendMsg\020\373 \022&\n!EMsgAM"
  "TicketAuthRequestOrResponse\020\374 \022\031\n\024EMsgAM"
  "AddFreeLicense\020\200!\022\034\n\027EMsgAMValidateEmail"
  "Link\020\207!\022$\n\037EMsgAMValidateEmailLinkRespon"
  "se\020\210!\022\032\n\025EMsgUGSStoreUserStats\020\214!\022\033\n\026EMs"
  "gAMDeleteStoredCard\020\221!\022\037\n\032EMsgAMRevokeLe"
  "gacyGameKeys\020\222!\022\033\n\026EMsgAMGetWalletDetail"
  "s\020\224!\022#\n\036EMsgAMGetWalletDetailsResponse\020\225"
  "!\022\"\n\035EMsgAMDeleteStoredPaymentInfo\020\226!\022\"\n"
  "\035EMsgAMGetStoredPaymentSummary\020\227!\022*\n%EMs"
  "gAMGetStoredPaymentSummaryResponse\020\230!\022\"\n"
  "\035EMsgAMGetWalletConversionRate\020\231!\022*\n%EMs"
  "gAMGetWalletConversionRateResponse\020\232!\022\030\n"
  "\023EMsgAMConvertWallet\020\233!\022 \n\033EMsgAMConvert"
  "WalletResponse\020\234!\022\031\n\024EMsgAMSetPreApprova"
  "l\020\237!\022!\n\034EMsgAMSetPreApprovalResponse\020\240!\022"
  "\027\n\022EMsgAMCreateRefund\020\242!\022\033\n\026EMsgAMCreate"
  "Chargeback\020\244!\022\030\n\023EMsgAMCreateDispute\020\246!\022"
  "\027\n\022EMsgAMClearDispute\020\250!\022$\n\037EMsgAMCreate"
  "FinancialAdjustment\020\251!\022\035\n\030EMsgAMPlayerNi"
  "cknameList\020\252!\022%\n EMsgAMPlayerNicknameLis"
  "tResponse\020\253!\022!\n\034EMsgAMGetUserCurrentGame"
  "Info\020\255!\022)\n$EMsgAMGetUserCurrentGameInfoR"
  "esponse\020\256!\022\032\n\025EMsgAMGetGSPlayerList\020\257!\022\""
  "\n\035EMsgAMGetGSPlayerListResponse\020\260!\022 \n\033EM"
  "sgAMGetSteamIDForMicroTxn\020\266!\022(\n#EMsgAMGe"
  "tSteamIDForMicroTxnResponse\020\267!\022\033\n\026EMsgAM"
  "SetPartnerMember\020\270!\022\036\n\031EMsgAMRemovePubli"
  "sherUser\020\271!\022\035\n\030EMsgAMGetUserLicenseList\020"
  "\272!\022%\n EMsgAMGetUserLicenseListResponse\020\273"
  "!\022 \n\033EMsgAMReloadGameGroupPolicy\020\274!\022!\n\034E"
  "MsgAMAddFreeLicenseResponse\020\275!\022\032\n\025EMsgAM"
  "VACStatusUpdate\020\276!\022\034\n\027EMsgAMGetAccountDe"
  "tails\020\277!\022$\n\037EMsgAMGetAccountDetailsRespo"
  "nse\020\300!\022\037\n\032EMsgAMGetPlayerLinkDetails\020\301!\022"
  "\'\n\"EMsgAMGetPlayerLinkDetailsResponse\020\302!"
  "\022\'\n\"EMsgAMGetAccountFlagsForWGSpoofing\020\306"
  "!\022/\n*EMsgAMGetAccountFlagsForWGSpoofingR"
  "esponse\020\307!\022\032\n\025EMsgAMGetClanOfficers\020\312!\022\""
  "\n\035EMsgAMGetClanOfficersResponse\020\313!\022\025\n\020EM"
  "sgAMNameChange\020\314!\022\031\n\024EMsgAMGetNameHistor"
  "y\020\315!\022!\n\034EMsgAMGetNameHistoryResponse\020\316!\022"
  "\'\n\"EMsgAMSupportRemoveAccountSecurity\020\323!"
  "\022(\n#EMsgAMIsAccountInCaptchaGracePeriod\020"
  "\324!\0220\n+EMsgAMIsAccountInCaptchaGracePerio"
  "dResponse\020\325!\022\033\n\026EMsgAMAccountPS3Unlink\020\326"
  "!\022#\n\036EMsgAMAccountPS3UnlinkResponse\020\327!\022\""
  "\n\035EMsgUGSStoreUserStatsResponse\020\330!\022\034\n\027EM"
  "sgAMGetAccountPSNInfo\020\331!\022$\n\037EMsgAMGetAcc"
  "ountPSNInfoResponse\020\332!\022\"\n\035EMsgAMAuthenti"
  "catedPlayerList\020\333!\022\027\n\022EMsgAMGetUserGifts"
  "\020\334!\022\037\n\032EMsgAMGetUserGiftsResponse\020\335!\022\036\n\031"
  "EMsgAMTransferLockedGifts\020\340!\022&\n!EMsgAMTr"
  "ansferLockedGiftsResponse\020\341!\022#\n\036EMsgAMPl"
  "ayerHostedOnGameServer\020\342!\022\034\n\027EMsgAMGetAc"
  "countBanInfo\020\343!\022$\n\037EMsgAMGetAccountBanIn"
  "foResponse\020\344!\022\037\n\032EMsgAMRecordBanEnforcem"
  "ent\020\345!\022\037\n\032EMsgAMRollbackGiftTransfer\020\346!\022"
  "\'\n\"EMsgAMRollbackGiftTransferResponse\020\347!"
  "\022#\n\036EMsgAMHandlePendingTransaction\020\350!\022\035\n"
  "\030EMsgAMRequestClanDetails\020\351!\022&\n!EMsgAMDe"
  "leteStoredPaypalAgreement\020\352!\022\033\n\026EMsgAMGa"
  "meServerUpdate\020\353!\022\033\n\026EMsgAMGameServerRem"
  "ove\020\354!\022\036\n\031EMsgAMGetPaypalAgreements\020\355!\022&"
  "\n!EMsgAMGetPaypalAgreementsResponse\020\356!\022-"
  "\n(EMsgAMGameServerPlayerCompatibilityChe"
  "ck\020\357!\0225\n0EMsgAMGameServerPlayerCompatibi"
  "lityCheckResponse\020\360!\022\027\n\022EMsgAMRenewLicen"
  "se\020\361!\022%\n EMsgAMGetAccountCommunityBanInf"
  "o\020\362!\022-\n(EMsgAMGetAccountCommunityBanInfo"
  "Response\020\363!\022*\n%EMsgAMGameServerAccountCh"
  "angePassword\020\364!\022)\n$EMsgAMGameServerAccou"
  "ntDeleteAccount\020\365!\022\031\n\024EMsgAMRenewAgreeme"
  "nt\020\366!\022\030\n\023EMsgAMXsollaPayment\020\370!\022 \n\033EMsgA"
  "MXsollaPaymentResponse\020\371!\022 \n\033EMsgAMAcctA"
  "llowedToPurchase\020\372!\022(\n#EMsgAMAcctAllowed"
  "ToPurchaseResponse\020\373!\022\033\n\026EMsgAMSwapKiosk"
  "Deposit\020\374!\022#\n\036EMsgAMSwapKioskDepositResp"
  "onse\020\375!\022\035\n\030EMsgAMSetUserGiftUnowned\020\376!\022%"
  "\n EMsgAMSetUserGiftUnownedResponse\020\377!\022\037\n"
  "\032EMsgAMClaimUnownedUserGift\020\200\"\022\'\n\"EMsgAM"
  "ClaimUnownedUserGiftResponse\020\201\"\022\026\n\021EMsgA"
  "MSetClanName\020\202\"\022\036\n\031EMsgAMSetClanNameResp"
  "onse\020\203\"\022\026\n\021EMsgAMGrantCoupon\020\204\"\022\036\n\031EMsgA"
  "MGrantCouponResponse\020\205\"\022+\n&EMsgAMIsPacka"
  "geRestrictedInUserCountry\020\206\"\0223\n.EMsgAMIs"
  "PackageRestrictedInUserCountryResponse\020\207"
  "\"\022+\n&EMsgAMHandlePendingTransactionRespo"
  "nse\020\210\"\022\034\n\027EMsgAMGrantGuestPasses2\020\211\"\022$\n\037"
  "EMsgAMGrantGuestPasses2Response\020\212\"\022\036\n\031EM"
  "sgAMGetPlayerBanDetails\020\215\"\022&\n!EMsgAMGetP"
  "layerBanDetailsResponse\020\216\"\022\033\n\026EMsgAMFina"
  "lizePurchase\020\217\"\022#\n\036EMsgAMFinalizePurchas"
  "eResponse\020\220\"\022 \n\033EMsgAMPersonaChangeRespo"
  "nse\020\224\"\022)\n$EMsgAMGetClanDetailsForForumCr"
  "eation\020\225\"\0221\n,EMsgAMGetClanDetailsForForu"
  "mCreationResponse\020\226\"\022&\n!EMsgAMGetPending"
  "NotificationCount\020\227\"\022.\n)EMsgAMGetPending"
  "NotificationCountResponse\020\230\"\022\036\n\031EMsgAMPa"
  "sswordHashUpgrade\020\231\"\022\033\n\026EMsgAMBoaCompraP"
  "ayment\020\234\"\022#\n\036EMsgAMBoaCompraPaymentRespo"
  "nse\020\235\"\022#\n\036EMsgAMCompleteExternalPurchase"
  "\020\237\"\022+\n&EMsgAMCompleteExternalPurchaseRes"
  "ponse\020\240\"\022\'\n\"EMsgAMResolveNegativeWalletC"
  "redits\020\241\"\022/\n*EMsgAMResolveNegativeWallet"
  "CreditsResponse\020\242\"\022$\n\037EMsgAMPlayerGetCla"
  "nBasicDetails\020\245\"\022,\n\'EMsgAMPlayerGetClanB"
  "asicDetailsResponse\020\246\"\022\025\n\020EMsgAMMOLPayme"
  "nt\020\247\"\022\035\n\030EMsgAMMOLPaymentResponse\020\250\"\022\031\n\024"
  "EMsgGetUserIPCountry\020\251\"\022!\n\034EMsgGetUserIP"
  "CountryResponse\020\252\"\022)\n$EMsgNotificationOf"
  "SuspiciousActivity\020\253\"\022\030\n\023EMsgAMDegicaPay"
  "ment\020\254\"\022 \n\033EMsgAMDegicaPaymentResponse\020\255"
  "\"\022\027\n\022EMsgAMEClubPayment\020\256\"\022\037\n\032EMsgAMEClu"
  "bPaymentResponse\020\257\"\022#\n\036EMsgAMPayPalPayme"
  "ntsHubPayment\020\260\"\022+\n&EMsgAMPayPalPayments"
  "HubPaymentResponse\020\261\"\022/\n*EMsgAMTwoFactor"
  "RecoverAuthenticatorRequest\020\262\"\0220\n+EMsgAM"
  "TwoFactorRecoverAuthenticatorResponse\020\263\""
  "\022\033\n\026EMsgAMSmart2PayPayment\020\264\"\022#\n\036EMsgAMS"
  "mart2PayPaymentResponse\020\265\"\0225\n0EMsgAMVali"
  "datePasswordResetCodeAndSendSmsRequest\020\266"
  "\"\0226\n1EMsgAMValidatePasswordResetCodeAndS"
  "endSmsResponse\020\267\"\022(\n#EMsgAMGetAccountRes"
  "etDetailsRequest\020\270\"\022)\n$EMsgAMGetAccountR"
  "esetDetailsResponse\020\271\"\022\030\n\023EMsgAMBitPayPa"
  "yment\020\272\"\022 \n\033EMsgAMBitPayPaymentResponse\020"
  "\273\"\022 \n\033EMsgAMSendAccountInfoUpdate\020\274\"\022\034\n\027"
  "EMsgAMSendScheduledGift\020\275\"\022\030\n\023EMsgAMNodw"
  "inPayment\020\276\"\022 \n\033EMsgAMNodwinPaymentRespo"
  "nse\020\277\"\022\036\n\031EMsgAMResolveWalletRevoke\020\300\"\022%"
  "\n EMsgAMResolveWalletReverseRevoke\020\301\"\022\030\n"
  "\023EMsgAMFundedPayment\020\302\"\022 \n\033EMsgAMFundedP"
  "aymentResponse\020\303\"\022,\n\'EMsgAMRequestPerson"
  "aUpdateForChatServer\020\304\"\022\036\n\031EMsgAMPerfect"
  "WorldPayment\020\305\"\022&\n!EMsgAMPerfectWorldPay"
  "mentResponse\020\306\"\022\032\n\025EMsgAMECommPayPayment"
  "\020\307\"\022\"\n\035EMsgAMECommPayPaymentResponse\020\310\"\022"
  "\034\n\027EMsgAMSetRemoteClientID\020\311\"\022\024\n\017EMsgBas"
  "ePSRange\020\210\'\022\036\n\031EMsgPSIsValidShoppingCart"
  "\020\213\'\022&\n!EMsgPSIsValidShoppingCartResponse"
  "\020\214\'\022\"\n\035EMsgPSGetShoppingCartContents\020\221\'\022"
  "*\n%EMsgPSGetShoppingCartContentsResponse"
  "\020\222\'\022(\n#EMsgPSAddWalletCreditToShoppingCa"
  "rt\020\223\'\0220\n+EMsgPSAddWalletCreditToShopping"
  "CartResponse\020\224\'\022!\n\034EMsgPSGetAccountCartC"
  "ontents\020\225\'\022)\n$EMsgPSGetAccountCartConten"
  "tsResponse\020\226\'\022\025\n\020EMsgBaseUFSRange\020\320(\022\037\n\032"
  "EMsgUFSReloadPartitionInfo\020\337(\022\033\n\026EMsgUFS"
  "SynchronizeFile\020\341(\022#\n\036EMsgUFSSynchronize"
  "FileResponse\020\342(\022\037\n\032EMsgClientUFSGetUGCDe"
  "tails\020\352(\022\'\n\"EMsgClientUFSGetUGCDetailsRe"
  "sponse\020\353(\022\033\n\026EMsgUFSUpdateFileFlags\020\354(\022#"
  "\n\036EMsgUFSUpdateFileFlagsResponse\020\355(\022#\n\036E"
  "MsgClientUFSGetSingleFileInfo\020\356(\022+\n&EMsg"
  "ClientUFSGetSingleFileInfoResponse\020\357(\022\033\n"
  "\026EMsgClientUFSShareFile\020\360(\022#\n\036EMsgClient"
  "UFSShareFileResponse\020\361(\022\031\n\024EMsgUFSReload"
  "Account\020\362(\022!\n\034EMsgUFSReloadAccountRespon"
  "se\020\363(\022\037\n\032EMsgUFSUpdateRecordBatched\020\364(\022\'"
  "\n\"EMsgUFSUpdateRecordBatchedResponse\020\365(\022"
  "\027\n\022EMsgUFSMigrateFile\020\366(\022\037\n\032EMsgUFSMigra"
  "teFileResponse\020\367(\022\026\n\021EMsgUFSGetUGCURLs\020\370"
  "(\022\036\n\031EMsgUFSGetUGCURLsResponse\020\371(\022\'\n\"EMs"
  "gUFSHttpUploadFileFinishRequest\020\372(\022(\n#EM"
  "sgUFSHttpUploadFileFinishResponse\020\373(\022 \n\033"
  "EMsgUFSDownloadStartRequest\020\374(\022!\n\034EMsgUF"
  "SDownloadStartResponse\020\375(\022 \n\033EMsgUFSDown"
  "loadChunkRequest\020\376(\022!\n\034EMsgUFSDownloadCh"
  "unkResponse\020\377(\022!\n\034EMsgUFSDownloadFinishR"
  "equest\020\200)\022\"\n\035EMsgUFSDownloadFinishRespon"
  "se\020\201)\022\031\n\024EMsgUFSFlushURLCache\020\202)\022\034\n\027EMsg"
  "UFSMigrateFileAppID\020\205)\022$\n\037EMsgUFSMigrate"
  "FileAppIDResponse\020\206)\022\024\n\017EMsgBaseClient2\020"
  "\230*\022,\n\'EMsgClientRequestForgottenPassword"
  "Email\020\231*\0224\n/EMsgClientRequestForgottenPa"
  "sswordEmailResponse\020\232*\022$\n\037EMsgClientCrea"
  "teAccountResponse\020\233*\022%\n EMsgClientResetF"
  "orgottenPassword\020\234*\022-\n(EMsgClientResetFo"
  "rgottenPasswordResponse\020\235*\022-\n(EMsgClient"
  "InformOfResetForgottenPassword\020\237*\0225\n0EMs"
  "gClientInformOfResetForgottenPasswordRes"
  "ponse\020\240*\022\'\n\"EMsgClientAnonUserLogOn_Depr"
  "ecated\020\241*\022&\n!EMsgClientGamesPlayedWithDa"
  "taBlob\020\242*\022!\n\034EMsgClientUpdateUserGameInf"
  "o\020\243*\022\035\n\030EMsgClientFileToDownload\020\244*\022%\n E"
  "MsgClientFileToDownloadResponse\020\245*\022\032\n\025EM"
  "sgClientLBSSetScore\020\246*\022\"\n\035EMsgClientLBSS"
  "etScoreResponse\020\247*\022 \n\033EMsgClientLBSFindO"
  "rCreateLB\020\250*\022(\n#EMsgClientLBSFindOrCreat"
  "eLBResponse\020\251*\022\036\n\031EMsgClientLBSGetLBEntr"
  "ies\020\252*\022&\n!EMsgClientLBSGetLBEntriesRespo"
  "nse\020\253*\022\033\n\026EMsgClientChatDeclined\020\262*\022 \n\033E"
  "MsgClientFriendMsgIncoming\020\263*\022\"\n\035EMsgCli"
  "entAuthList_Deprecated\020\264*\022!\n\034EMsgClientT"
  "icketAuthComplete\020\265*\022\037\n\032EMsgClientIsLimi"
  "tedAccount\020\266*\022\036\n\031EMsgClientRequestAuthLi"
  "st\020\267*\022\027\n\022EMsgClientAuthList\020\270*\022\023\n\016EMsgCl"
  "ientStat\020\271*\022 \n\033EMsgClientP2PConnectionIn"
  "fo\020\272*\022$\n\037EMsgClientP2PConnectionFailInfo"
  "\020\273*\022$\n\037EMsgClientGetDepotDecryptionKey\020\276"
  "*\022,\n\'EMsgClientGetDepotDecryptionKeyResp"
  "onse\020\277*\022 \n\033EMsgClientEnableTestLicense\020\303"
  "*\022(\n#EMsgClientEnableTestLicenseResponse"
  "\020\304*\022!\n\034EMsgClientDisableTestLicense\020\305*\022)"
  "\n$EMsgClientDisableTestLicenseResponse\020\306"
  "*\022$\n\037EMsgClientRequestValidationMail\020\310*\022"
  ",\n\'EMsgClientRequestValidationMailRespon"
  "se\020\311*\022#\n\036EMsgClientCheckAppBetaPassword\020"
  "\312*\022+\n&EMsgClientCheckAppBetaPasswordResp"
  "onse\020\313*\022\023\n\016EMsgClientToGC\020\314*\022\025\n\020EMsgClie"
  "ntFromGC\020\315*\022\034\n\027EMsgClientEmailAddrInfo\020\320"
  "*\022\036\n\031EMsgClientPasswordChange3\020\321*\022\033\n\026EMs"
  "gClientEmailChange3\020\322*\022 \n\033EMsgClientPers"
  "onalQAChange3\020\323*\022&\n!EMsgClientResetForgo"
  "ttenPassword3\020\324*\022-\n(EMsgClientRequestFor"
  "gottenPasswordEmail3\020\325*\022\032\n\025EMsgClientNew"
  "LoginKey\020\327*\022-\n(EMsgClientNewLoginKeyAcce"
  "pted_Deprecated\020\330*\022\'\n\"EMsgClientLogOnWit"
  "hHash_Deprecated\020\331*\022\036\n\031EMsgClientStoreUs"
  "erStats2\020\332*\022\033\n\026EMsgClientStatsUpdated\020\333*"
  "\022#\n\036EMsgClientRequestedClientStats\020\350*\022\031\n"
  "\024EMsgClientStat2Int32\020\351*\022\024\n\017EMsgClientSt"
  "at2\020\352*\022\035\n\030EMsgClientVerifyPassword\020\353*\022%\n"
  " EMsgClientVerifyPasswordResponse\020\354*\022!\n\034"
  "EMsgClientDRMDownloadRequest\020\355*\022\"\n\035EMsgC"
  "lientDRMDownloadResponse\020\356*\022\035\n\030EMsgClien"
  "tDRMFinalResult\020\357*\022$\n\037EMsgClientGetFrien"
  "dsWhoPlayGame\020\360*\022,\n\'EMsgClientGetFriends"
  "WhoPlayGameResponse\020\361*\022\036\n\031EMsgClientOGSB"
  "eginSession\020\362*\022&\n!EMsgClientOGSBeginSess"
  "ionResponse\020\363*\022\034\n\027EMsgClientOGSEndSessio"
  "n\020\364*\022$\n\037EMsgClientOGSEndSessionResponse\020"
  "\365*\022\032\n\025EMsgClientOGSWriteRow\020\366*\022!\n\034EMsgCl"
  "ientGetPeerContentInfo\020\367*\022)\n$EMsgClientG"
  "etPeerContentInfoResponse\020\370*\022%\n EMsgClie"
  "ntStartPeerContentServer\020\371*\022-\n(EMsgClien"
  "tStartPeerContentServerResponse\020\372*\022 \n\033EM"
  "sgClientServerUnavailable\020\374*\022\037\n\032EMsgClie"
  "ntServersAvailable\020\375*\022\'\n\"EMsgClientRegis"
  "terAuthTicketWithCM\020\376*\022\032\n\025EMsgClientGCMs"
  "gFailed\020\377*\022\"\n\035EMsgClientMicroTxnAuthRequ"
  "est\020\200+\022 \n\033EMsgClientMicroTxnAuthorize\020\201+"
  "\022(\n#EMsgClientMicroTxnAuthorizeResponse\020"
  "\202+\022\036\n\031EMsgClientGetMicroTxnInfo\020\204+\022&\n!EM"
  "sgClientGetMicroTxnInfoResponse\020\205+\022#\n\036EM"
  "sgClientDeregisterWithServer\020\207+\022%\n EMsgC"
  "lientSubscribeToPersonaFeed\020\210+\022\024\n\017EMsgCl"
  "ientLogon\020\212+\022\037\n\032EMsgClientGetClientDetai"
  "ls\020\213+\022\'\n\"EMsgClientGetClientDetailsRespo"
  "nse\020\214+\022)\n$EMsgClientReportOverlayDetourF"
  "ailure\020\215+\022\037\n\032EMsgClientGetClientAppList\020"
  "\216+\022\'\n\"EMsgClientGetClientAppListResponse"
  "\020\217+\022\037\n\032EMsgClientInstallClientApp\020\220+\022\'\n\""
  "EMsgClientInstallClientAppResponse\020\221+\022!\n"
  "\034EMsgClientUninstallClientApp\020\222+\022)\n$EMsg"
  "ClientUninstallClientAppResponse\020\223+\022&\n!E"
  "MsgClientSetClientAppUpdateState\020\224+\022.\n)E"
  "MsgClientSetClientAppUpdateStateResponse"
  "\020\225+\022(\n#EMsgClientRequestEncryptedAppTick"
  "et\020\226+\0220\n+EMsgClientRequestEncryptedAppTi"
  "cketResponse\020\227+\022\037\n\032EMsgClientWalletInfoU"
  "pdate\020\230+\022\030\n\023EMsgClientLBSSetUGC\020\231+\022 \n\033EM"
  "sgClientLBSSetUGCResponse\020\232+\022 \n\033EMsgClie"
  "ntAMGetClanOfficers\020\233+\022(\n#EMsgClientAMGe"
  "tClanOfficersResponse\020\234+\022 \n\033EMsgClientFr"
  "iendProfileInfo\020\237+\022(\n#EMsgClientFriendPr"
  "ofileInfoResponse\020\240+\022 \n\033EMsgClientUpdate"
  "MachineAuth\020\241+\022(\n#EMsgClientUpdateMachin"
  "eAuthResponse\020\242+\022\036\n\031EMsgClientReadMachin"
  "eAuth\020\243+\022&\n!EMsgClientReadMachineAuthRes"
  "ponse\020\244+\022!\n\034EMsgClientRequestMachineAuth"
  "\020\245+\022)\n$EMsgClientRequestMachineAuthRespo"
  "nse\020\246+\022!\n\034EMsgClientScreenshotsChanged\020\247"
  "+\022\036\n\031EMsgClientLaunchClientApp\020\250+\022&\n!EMs"
  "gClientLaunchClientAppResponse\020\251+\022\036\n\031EMs"
  "gClientGetCDNAuthToken\020\252+\022&\n!EMsgClientG"
  "etCDNAuthTokenResponse\020\253+\022%\n EMsgClientD"
  "ownloadRateStatistics\020\254+\022!\n\034EMsgClientRe"
  "questAccountData\020\255+\022)\n$EMsgClientRequest"
  "AccountDataResponse\020\256+\022&\n!EMsgClientRese"
  "tForgottenPassword4\020\257+\022\031\n\024EMsgClientHide"
  "Friend\020\260+\022 \n\033EMsgClientFriendsGroupsList"
  "\020\261+\022$\n\037EMsgClientGetClanActivityCounts\020\262"
  "+\022,\n\'EMsgClientGetClanActivityCountsResp"
  "onse\020\263+\022\036\n\031EMsgClientOGSReportString\020\264+\022"
  "\033\n\026EMsgClientOGSReportBug\020\265+\022\027\n\022EMsgClie"
  "ntSentLogs\020\266+\022\036\n\031EMsgClientLogonGameServ"
  "er\020\267+\022#\n\036EMsgAMClientCreateFriendsGroup\020"
  "\270+\022+\n&EMsgAMClientCreateFriendsGroupResp"
  "onse\020\271+\022#\n\036EMsgAMClientDeleteFriendsGrou"
  "p\020\272+\022+\n&EMsgAMClientDeleteFriendsGroupRe"
  "sponse\020\273+\022#\n\036EMsgAMClientManageFriendsGr"
  "oup\020\274+\022+\n&EMsgAMClientManageFriendsGroup"
  "Response\020\275+\022!\n\034EMsgAMClientAddFriendToGr"
  "oup\020\276+\022)\n$EMsgAMClientAddFriendToGroupRe"
  "sponse\020\277+\022&\n!EMsgAMClientRemoveFriendFro"
  "mGroup\020\300+\022.\n)EMsgAMClientRemoveFriendFro"
  "mGroupResponse\020\301+\022&\n!EMsgClientAMGetPers"
  "onaNameHistory\020\302+\022.\n)EMsgClientAMGetPers"
  "onaNameHistoryResponse\020\303+\022!\n\034EMsgClientR"
  "equestFreeLicense\020\304+\022)\n$EMsgClientReques"
  "tFreeLicenseResponse\020\305+\022.\n)EMsgClientDRM"
  "DownloadRequestWithCrashData\020\306+\022\032\n\025EMsgC"
  "lientAuthListAck\020\307+\022 \n\033EMsgClientItemAnn"
  "ouncements\020\310+\022\'\n\"EMsgClientRequestItemAn"
  "nouncements\020\311+\022$\n\037EMsgClientFriendMsgEch"
  "oToSender\020\312+\022#\n\036EMsgClientCommentNotific"
  "ations\020\316+\022*\n%EMsgClientRequestCommentNot"
  "ifications\020\317+\022$\n\037EMsgClientPersonaChange"
  "Response\020\320+\022<\n7EMsgClientRequestWebAPIAu"
  "thenticateUserNonce_Deprecated\020\321+\022D\n\?EMs"
  "gClientRequestWebAPIAuthenticateUserNonc"
  "eResponse_Deprecated\020\322+\022!\n\034EMsgClientPla"
  "yerNicknameList\020\323+\022\"\n\035EMsgAMClientSetPla"
  "yerNickname\020\324+\022*\n%EMsgAMClientSetPlayerN"
  "icknameResponse\020\325+\022*\n%EMsgClientGetNumbe"
  "rOfCurrentPlayersDP\020\330+\0222\n-EMsgClientGetN"
  "umberOfCurrentPlayersDPResponse\020\331+\022\"\n\035EM"
  "sgClientServiceMethodLegacy\020\332+\022*\n%EMsgCl"
  "ientServiceMethodLegacyResponse\020\333+\022(\n#EM"
  "sgClientFriendUserStatusPublished\020\334+\022\034\n\027"
  "EMsgClientCurrentUIMode\020\335+\022+\n&EMsgClient"
  "VanityURLChangedNotification\020\336+\022 \n\033EMsgC"
  "lientUserNotifications\020\337+\022\020\n\013EMsgBaseDFS"
  "\020\340+\022\023\n\016EMsgDFSGetFile\020\341+\022\034\n\027EMsgDFSInsta"
  "llLocalFile\020\342+\022\026\n\021EMsgDFSConnection\020\343+\022\033"
  "\n\026EMsgDFSConnectionReply\020\344+\022%\n EMsgClien"
  "tDFSAuthenticateRequest\020\345+\022&\n!EMsgClient"
  "DFSAuthenticateResponse\020\346+\022\034\n\027EMsgClient"
  "DFSEndSession\020\347+\022\025\n\020EMsgDFSPurgeFile\020\350+\022"
  "\025\n\020EMsgDFSRouteFile\020\351+\022\035\n\030EMsgDFSGetFile"
  "FromServer\020\352+\022\034\n\027EMsgDFSAcceptedResponse"
  "\020\353+\022\033\n\026EMsgDFSRequestPingback\020\354+\022\034\n\027EMsg"
  "DFSRecvTransmitFile\020\355+\022\034\n\027EMsgDFSSendTra"
  "nsmitFile\020\356+\022\034\n\027EMsgDFSRequestPingback2\020"
  "\357+\022\035\n\030EMsgDFSResponsePingback2\020\360+\022 \n\033EMs"
  "gClientDFSDownloadStatus\020\361+\022\031\n\024EMsgDFSSt"
  "artTransfer\020\362+\022\034\n\027EMsgDFSTransferComplet"
  "e\020\363+\022\035\n\030EMsgDFSRouteFileResponse\020\364+\022$\n\037E"
  "MsgClientNetworkingCertRequest\020\365+\022,\n\'EMs"
  "gClientNetworkingCertRequestResponse\020\366+\022"
  "\037\n\032EMsgClientChallengeRequest\020\367+\022 \n\033EMsg"
  "ClientChallengeResponse\020\370+\022!\n\034EMsgBadgeC"
  "raftedNotification\020\371+\022*\n%EMsgClientNetwo"
  "rkingMobileCertRequest\020\372+\0222\n-EMsgClientN"
  "etworkingMobileCertRequestResponse\020\373+\022\020\n"
  "\013EMsgBaseMDS\020\250-\022!\n\034EMsgMDSGetDepotDecryp"
  "tionKey\020\264-\022)\n$EMsgMDSGetDepotDecryptionK"
  "eyResponse\020\265-\022&\n!EMsgMDSContentServerCon"
  "figRequest\020\303-\022\037\n\032EMsgMDSContentServerCon"
  "fig\020\304-\022\034\n\027EMsgMDSGetDepotManifest\020\305-\022$\n\037"
  "EMsgMDSGetDepotManifestResponse\020\306-\022!\n\034EM"
  "sgMDSGetDepotManifestChunk\020\307-\022\032\n\025EMsgMDS"
  "ToCSFlushChunk\020\324-\022\030\n\023EMsgMDSMigrateChunk"
  "\020\327-\022 \n\033EMsgMDSMigrateChunkResponse\020\330-\022\035\n"
  "\030EMsgMDSToCSFlushManifest\020\331-\022\017\n\nEMsgCSBa"
  "se\020\2700\022\017\n\nEMsgCSPing\020\2710\022\027\n\022EMsgCSPingResp"
  "onse\020\2720\022\020\n\013EMsgGMSBase\020\2002\022\037\n\032EMsgGMSGame"
  "ServerReplicate\020\2012\022\035\n\030EMsgClientGMSServe"
  "rQuery\020\2032\022%\n EMsgGMSClientServerQueryRes"
  "ponse\020\2042\022\036\n\031EMsgAMGMSGameServerUpdate\020\2052"
  "\022\036\n\031EMsgAMGMSGameServerRemove\020\2062\022\034\n\027EMsg"
  "GameServerOutOfDate\020\2072\022 \n\033EMsgDeviceAuth"
  "orizationBase\020\3442\022*\n%EMsgClientAuthorizeL"
  "ocalDeviceRequest\020\3452\022+\n&EMsgClientAuthor"
  "izeLocalDeviceResponse\020\3462\022\'\n\"EMsgClientD"
  "eauthorizeDeviceRequest\020\3472\022 \n\033EMsgClient"
  "DeauthorizeDevice\020\3502\022+\n&EMsgClientUseLoc"
  "alDeviceAuthorizations\020\3512\022#\n\036EMsgClientG"
  "etAuthorizedDevices\020\3522\022+\n&EMsgClientGetA"
  "uthorizedDevicesResponse\020\3532\022(\n#EMsgAMNot"
  "ifySessionDeviceAuthorized\020\3542\022/\n*EMsgCli"
  "entAuthorizeLocalDeviceNotification\020\3552\022\020"
  "\n\013EMsgMMSBase\020\3103\022\035\n\030EMsgClientMMSCreateL"
  "obby\020\3113\022%\n EMsgClientMMSCreateLobbyRespo"
  "nse\020\3123\022\033\n\026EMsgClientMMSJoinLobby\020\3133\022#\n\036E"
  "MsgClientMMSJoinLobbyResponse\020\3143\022\034\n\027EMsg"
  "ClientMMSLeaveLobby\020\3153\022$\n\037EMsgClientMMSL"
  "eaveLobbyResponse\020\3163\022\036\n\031EMsgClientMMSGet"
  "LobbyList\020\3173\022&\n!EMsgClientMMSGetLobbyLis"
  "tResponse\020\3203\022\036\n\031EMsgClientMMSSetLobbyDat"
  "a\020\3213\022&\n!EMsgClientMMSSetLobbyDataRespons"
  "e\020\3223\022\036\n\031EMsgClientMMSGetLobbyData\020\3233\022\033\n\026"
  "EMsgClientMMSLobbyData\020\3243\022\"\n\035EMsgClientM"
  "MSSendLobbyChatMsg\020\3253\022\036\n\031EMsgClientMMSLo"
  "bbyChatMsg\020\3263\022\037\n\032EMsgClientMMSSetLobbyOw"
  "ner\020\3273\022\'\n\"EMsgClientMMSSetLobbyOwnerResp"
  "onse\020\3303\022$\n\037EMsgClientMMSSetLobbyGameServ"
  "er\020\3313\022$\n\037EMsgClientMMSLobbyGameServerSet"
  "\020\3323\022!\n\034EMsgClientMMSUserJoinedLobby\020\3333\022\037"
  "\n\032EMsgClientMMSUserLeftLobby\020\3343\022\037\n\032EMsgC"
  "lientMMSInviteToLobby\020\3353\022\'\n\"EMsgClientMM"
  "SFlushFrenemyListCache\020\3363\022/\n*EMsgClientM"
  "MSFlushFrenemyListCacheResponse\020\3373\022 \n\033EM"
  "sgClientMMSSetLobbyLinked\020\3403\022,\n\'EMsgClie"
  "ntMMSSetRatelimitPolicyOnClient\020\3413\022 \n\033EM"
  "sgClientMMSGetLobbyStatus\020\3423\022(\n#EMsgClie"
  "ntMMSGetLobbyStatusResponse\020\3433\022\030\n\023EMsgMM"
  "SGetLobbyList\020\3443\022 \n\033EMsgMMSGetLobbyListR"
  "esponse\020\3453\022\026\n\021EMsgNonStdMsgBase\020\2205\022\033\n\026EM"
  "sgNonStdMsgMemcached\020\2215\022\034\n\027EMsgNonStdMsg"
  "HTTPServer\020\2225\022\034\n\027EMsgNonStdMsgHTTPClient"
  "\020\2235\022\034\n\027EMsgNonStdMsgWGResponse\020\2245\022\036\n\031EMs"
  "gNonStdMsgPHPSimulator\020\2255\022\027\n\022EMsgNonStdM"
  "sgChase\020\2265\022\035\n\030EMsgNonStdMsgDFSTransfer\020\227"
  "5\022\027\n\022EMsgNonStdMsgTests\020\2305\022\035\n\030EMsgNonStd"
  "MsgUMQpipeAAPL\020\2315\022\030\n\023EMSgNonStdMsgSyslog"
  "\020\2325\022\031\n\024EMsgNonStdMsgLogsink\020\2335\022 \n\033EMsgNo"
  "nStdMsgSteam2Emulator\020\2345\022\034\n\027EMsgNonStdMs"
  "gRTMPServer\020\2355\022\033\n\026EMsgNonStdMsgWebSocket"
  "\020\2365\022\027\n\022EMsgNonStdMsgRedis\020\2375\022\020\n\013EMsgUDSB"
  "ase\020\3306\022#\n\036EMsgClientUDSP2PSessionStarted"
  "\020\3316\022!\n\034EMsgClientUDSP2PSessionEnded\020\3326\022\032"
  "\n\025EMsgUDSRenderUserAuth\020\3336\022\"\n\035EMsgUDSRen"
  "derUserAuthResponse\020\3346\022\033\n\026EMsgClientInvi"
  "teToGame\020\3356\022\026\n\021EMsgUDSHasSession\020\3366\022\036\n\031E"
  "MsgUDSHasSessionResponse\020\3376\022\021\n\014EMsgMPASB"
  "ase\020\2747\022\030\n\023EMsgMPASVacBanReset\020\2757\022\020\n\013EMsg"
  "KGSBase\020\2408\022\020\n\013EMsgUCMBase\020\2049\022\037\n\032EMsgClie"
  "ntUCMAddScreenshot\020\2059\022\'\n\"EMsgClientUCMAd"
  "dScreenshotResponse\020\2069\022!\n\034EMsgUCMResetCo"
  "mmunityContent\020\2139\022)\n$EMsgUCMResetCommuni"
  "tyContentResponse\020\2149\022\"\n\035EMsgClientUCMDel"
  "eteScreenshot\020\2159\022*\n%EMsgClientUCMDeleteS"
  "creenshotResponse\020\2169\022\035\n\030EMsgClientUCMPub"
  "lishFile\020\2179\022%\n EMsgClientUCMPublishFileR"
  "esponse\020\2209\022%\n EMsgClientUCMDeletePublish"
  "edFile\020\2239\022-\n(EMsgClientUCMDeletePublishe"
  "dFileResponse\020\2249\022%\n EMsgClientUCMUpdateP"
  "ublishedFile\020\2359\022-\n(EMsgClientUCMUpdatePu"
  "blishedFileResponse\020\2369\022\037\n\032EMsgUCMUpdateP"
  "ublishedFile\020\2379\022\'\n\"EMsgUCMUpdatePublishe"
  "dFileResponse\020\2409\022#\n\036EMsgUCMUpdatePublish"
  "edFileStat\020\2439\022\037\n\032EMsgUCMReloadPublishedF"
  "ile\020\2519\022$\n\037EMsgUCMReloadUserFileListCache"
  "s\020\2529\022!\n\034EMsgUCMPublishedFileReported\020\2539\022"
  "#\n\036EMsgUCMPublishedFilePreviewAdd\020\2559\022+\n&"
  "EMsgUCMPublishedFilePreviewAddResponse\020\256"
  "9\022&\n!EMsgUCMPublishedFilePreviewRemove\020\257"
  "9\022.\n)EMsgUCMPublishedFilePreviewRemoveRe"
  "sponse\020\2609\022#\n\036EMsgUCMPublishedFileSubscri"
  "bed\020\2659\022%\n EMsgUCMPublishedFileUnsubscrib"
  "ed\020\2669\022\027\n\022EMsgUCMPublishFile\020\2679\022\037\n\032EMsgUC"
  "MPublishFileResponse\020\2709\022!\n\034EMsgUCMPublis"
  "hedFileChildAdd\020\2719\022)\n$EMsgUCMPublishedFi"
  "leChildAddResponse\020\2729\022$\n\037EMsgUCMPublishe"
  "dFileChildRemove\020\2739\022,\n\'EMsgUCMPublishedF"
  "ileChildRemoveResponse\020\2749\022&\n!EMsgUCMPubl"
  "ishedFileParentChanged\020\2779\022,\n\'EMsgClientU"
  "CMSetUserPublishedFileAction\020\3049\0224\n/EMsgC"
  "lientUCMSetUserPublishedFileActionRespon"
  "se\020\3059\0225\n0EMsgClientUCMEnumeratePublished"
  "FilesByUserAction\020\3069\022=\n8EMsgClientUCMEnu"
  "meratePublishedFilesByUserActionResponse"
  "\020\3079\022\"\n\035EMsgUCMGetUserSubscribedFiles\020\3119\022"
  "*\n%EMsgUCMGetUserSubscribedFilesResponse"
  "\020\3129\022!\n\034EMsgUCMFixStatsPublishedFile\020\3139\0229"
  "\n4EMsgClientUCMEnumerateUserSubscribedFi"
  "lesWithUpdates\020\3229\022A\n<EMsgClientUCMEnumer"
  "ateUserSubscribedFilesWithUpdatesRespons"
  "e\020\3239\022\'\n\"EMsgUCMPublishedFileContentUpdat"
  "ed\020\3249\022&\n!EMsgClientUCMPublishedFileUpdat"
  "ed\020\3259\022\017\n\nEMsgFSBase\020\314:\022!\n\034EMsgClientRich"
  "PresenceUpload\020\315:\022\"\n\035EMsgClientRichPrese"
  "nceRequest\020\316:\022\037\n\032EMsgClientRichPresenceI"
  "nfo\020\317:\022\036\n\031EMsgFSRichPresenceRequest\020\320:\022\037"
  "\n\032EMsgFSRichPresenceResponse\020\321:\022\035\n\030EMsgF"
  "SComputeFrenematrix\020\322:\022%\n EMsgFSComputeF"
  "renematrixResponse\020\323:\022!\n\034EMsgFSPlayStatu"
  "sNotification\020\324:\022\036\n\031EMsgFSAddOrRemoveFol"
  "lower\020\326:\022&\n!EMsgFSAddOrRemoveFollowerRes"
  "ponse\020\327:\022\036\n\031EMsgFSUpdateFollowingList\020\330:"
  "\022\036\n\031EMsgFSCommentNotification\020\331:\022$\n\037EMsg"
  "FSCommentNotificationViewed\020\332:\022!\n\034EMsgCl"
  "ientFSGetFollowerCount\020\333:\022)\n$EMsgClientF"
  "SGetFollowerCountResponse\020\334:\022\037\n\032EMsgClie"
  "ntFSGetIsFollowing\020\335:\022\'\n\"EMsgClientFSGet"
  "IsFollowingResponse\020\336:\022\'\n\"EMsgClientFSEn"
  "umerateFollowingList\020\337:\022/\n*EMsgClientFSE"
  "numerateFollowingListResponse\020\340:\022&\n!EMsg"
  "FSGetPendingNotificationCount\020\341:\022.\n)EMsg"
  "FSGetPendingNotificationCountResponse\020\342:"
  "\022-\n(EMsgClientChatOfflineMessageNotifica"
  "tion\020\343:\022-\n(EMsgClientChatRequestOfflineM"
  "essageCount\020\344:\022*\n%EMsgClientChatGetFrien"
  "dMessageHistory\020\345:\0222\n-EMsgClientChatGetF"
  "riendMessageHistoryResponse\020\346:\022<\n7EMsgCl"
  "ientChatGetFriendMessageHistoryForOfflin"
  "eMessages\020\347:\022&\n!EMsgClientFSGetFriendsSt"
  "eamLevels\020\350:\022.\n)EMsgClientFSGetFriendsSt"
  "eamLevelsResponse\020\351:\022\034\n\027EMsgAMRequestFri"
  "endData\020\352:\022\022\n\rEMsgDRMRange2\020\260;\022*\n%EMsgCE"
  "GVersionSetEnableDisableRequest\020\260;\022+\n&EM"
  "sgCEGVersionSetEnableDisableResponse\020\261;\022"
  "!\n\034EMsgCEGPropStatusDRMSRequest\020\262;\022\"\n\035EM"
  "sgCEGPropStatusDRMSResponse\020\263;\022%\n EMsgCE"
  "GWhackFailureReportRequest\020\264;\022&\n!EMsgCEG"
  "WhackFailureReportResponse\020\265;\022\034\n\027EMsgDRM"
  "SFetchVersionSet\020\266;\022$\n\037EMsgDRMSFetchVers"
  "ionSetResponse\020\267;\022\021\n\014EMsgEconBase\020\224<\022)\n$"
  "EMsgEconTrading_InitiateTradeRequest\020\225<\022"
  "*\n%EMsgEconTrading_InitiateTradeProposed"
  "\020\226<\022*\n%EMsgEconTrading_InitiateTradeResp"
  "onse\020\227<\022(\n#EMsgEconTrading_InitiateTrade"
  "Result\020\230<\022!\n\034EMsgEconTrading_StartSessio"
  "n\020\231<\022\'\n\"EMsgEconTrading_CancelTradeReque"
  "st\020\232<\022 \n\033EMsgEconFlushInventoryCache\020\233<\022"
  "(\n#EMsgEconFlushInventoryCacheResponse\020\234"
  "<\022$\n\037EMsgEconCDKeyProcessTransaction\020\237<\022"
  ",\n\'EMsgEconCDKeyProcessTransactionRespon"
  "se\020\240<\022\031\n\024EMsgEconGetErrorLogs\020\241<\022!\n\034EMsg"
  "EconGetErrorLogsResponse\020\242<\022\020\n\013EMsgRMRan"
  "ge\020\370<\022\032\n\025EMsgRMTestVerisignOTP\020\370<\022\"\n\035EMs"
  "gRMTestVerisignOTPResponse\020\371<\022\036\n\031EMsgRMD"
  "eleteMemcachedKeys\020\373<\022\027\n\022EMsgRMRemoteInv"
  "oke\020\374<\022\027\n\022EMsgBadLoginIPList\020\375<\022\035\n\030EMsgR"
  "MMsgTraceAddTrigger\020\376<\022 \n\033EMsgRMMsgTrace"
  "RemoveTrigger\020\377<\022\030\n\023EMsgRMMsgTraceEvent\020"
  "\200=\022\020\n\013EMsgUGSBase\020\334=\022\035\n\030EMsgUGSUpdateGlo"
  "balStats\020\334=\022 \n\033EMsgClientUGSGetGlobalSta"
  "ts\020\335=\022(\n#EMsgClientUGSGetGlobalStatsResp"
  "onse\020\336=\022\022\n\rEMsgStoreBase\020\300>\022\020\n\013EMsgUMQBa"
  "se\020\244\?\022\025\n\020EMsgWorkshopBase\020\210@\022\023\n\016EMsgWebA"
  "PIBase\020\354@\022\"\n\035EMsgWebAPIValidateOAuth2Tok"
  "en\020\354@\022*\n%EMsgWebAPIValidateOAuth2TokenRe"
  "sponse\020\355@\022#\n\036EMsgWebAPIRegisterGCInterfa"
  "ces\020\357@\022)\n$EMsgWebAPIInvalidateOAuthClien"
  "tCache\020\360@\022(\n#EMsgWebAPIInvalidateOAuthTo"
  "kenCache\020\361@\022\031\n\024EMsgWebAPISetSecrets\020\362@\022\025"
  "\n\020EMsgBackpackBase\020\320A\022\036\n\031EMsgBackpackAdd"
  "ToCurrency\020\321A\022&\n!EMsgBackpackAddToCurren"
  "cyResponse\020\322A\022\020\n\013EMsgCREBase\020\264B\022\033\n\026EMsgC"
  "REItemVoteSummary\020\267B\022#\n\036EMsgCREItemVoteS"
  "ummaryResponse\020\270B\022\'\n\"EMsgCREUpdateUserPu"
  "blishedItemVote\020\273B\022/\n*EMsgCREUpdateUserP"
  "ublishedItemVoteResponse\020\274B\022+\n&EMsgCREGe"
  "tUserPublishedItemVoteDetails\020\275B\0223\n.EMsg"
  "CREGetUserPublishedItemVoteDetailsRespon"
  "se\020\276B\022\024\n\017EMsgSecretsBase\020\230C\022%\n EMsgSecre"
  "tsRequestCredentialPair\020\230C\022&\n!EMsgSecret"
  "sCredentialPairResponse\020\231C\022\027\n\022EMsgBoxMon"
  "itorBase\020\374C\022 \n\033EMsgBoxMonitorReportReque"
  "st\020\374C\022!\n\034EMsgBoxMonitorReportResponse\020\375C"
  "\022\024\n\017EMsgLogsinkBase\020\340D\022\033\n\026EMsgLogsinkWri"
  "teReport\020\340D\022\021\n\014EMsgPICSBase\020\304E\022&\n!EMsgCl"
  "ientPICSChangesSinceRequest\020\305E\022\'\n\"EMsgCl"
  "ientPICSChangesSinceResponse\020\306E\022%\n EMsgC"
  "lientPICSProductInfoRequest\020\307E\022&\n!EMsgCl"
  "ientPICSProductInfoResponse\020\310E\022%\n EMsgCl"
  "ientPICSAccessTokenRequest\020\311E\022&\n!EMsgCli"
  "entPICSAccessTokenResponse\020\312E\022%\n EMsgCli"
  "entPICSPrivateBetaRequest\020\313E\022&\n!EMsgClie"
  "ntPICSPrivateBetaResponse\020\314E\022\026\n\021EMsgWork"
  "erProcess\020\250F\022!\n\034EMsgWorkerProcessPingReq"
  "uest\020\250F\022\"\n\035EMsgWorkerProcessPingResponse"
  "\020\251F\022\036\n\031EMsgWorkerProcessShutdown\020\252F\022\031\n\024E"
  "MsgDRMWorkerProcess\020\214G\022#\n\036EMsgDRMWorkerP"
  "rocessDRMAndSign\020\214G\022+\n&EMsgDRMWorkerProc"
  "essDRMAndSignResponse\020\215G\022.\n)EMsgDRMWorke"
  "rProcessSteamworksInfoRequest\020\216G\022/\n*EMsg"
  "DRMWorkerProcessSteamworksInfoResponse\020\217"
  "G\022-\n(EMsgDRMWorkerProcessInstallDRMDLLRe"
  "quest\020\220G\022.\n)EMsgDRMWorkerProcessInstallD"
  "RMDLLResponse\020\221G\022.\n)EMsgDRMWorkerProcess"
  "SecretIdStringRequest\020\222G\022/\n*EMsgDRMWorke"
  "rProcessSecretIdStringResponse\020\223G\0225\n0EMs"
  "gDRMWorkerProcessInstallProcessedFilesRe"
  "quest\020\226G\0226\n1EMsgDRMWorkerProcessInstallP"
  "rocessedFilesResponse\020\227G\022+\n&EMsgDRMWorke"
  "rProcessExamineBlobRequest\020\230G\022,\n\'EMsgDRM"
  "WorkerProcessExamineBlobResponse\020\231G\022.\n)E"
  "MsgDRMWorkerProcessDescribeSecretRequest"
  "\020\232G\022/\n*EMsgDRMWorkerProcessDescribeSecre"
  "tResponse\020\233G\0220\n+EMsgDRMWorkerProcessBack"
  "fillOriginalRequest\020\234G\0221\n,EMsgDRMWorkerP"
  "rocessBackfillOriginalResponse\020\235G\022.\n)EMs"
  "gDRMWorkerProcessValidateDRMDLLRequest\020\236"
  "G\022/\n*EMsgDRMWorkerProcessValidateDRMDLLR"
  "esponse\020\237G\022,\n\'EMsgDRMWorkerProcessValida"
  "teFileRequest\020\240G\022-\n(EMsgDRMWorkerProcess"
  "ValidateFileResponse\020\241G\022/\n*EMsgDRMWorker"
  "ProcessSplitAndInstallRequest\020\242G\0220\n+EMsg"
  "DRMWorkerProcessSplitAndInstallResponse\020"
  "\243G\022\'\n\"EMsgDRMWorkerProcessGetBlobRequest"
  "\020\244G\022(\n#EMsgDRMWorkerProcessGetBlobRespon"
  "se\020\245G\022-\n(EMsgDRMWorkerProcessEvaluateCra"
  "shRequest\020\246G\022.\n)EMsgDRMWorkerProcessEval"
  "uateCrashResponse\020\247G\022+\n&EMsgDRMWorkerPro"
  "cessAnalyzeFileRequest\020\250G\022,\n\'EMsgDRMWork"
  "erProcessAnalyzeFileResponse\020\251G\022*\n%EMsgD"
  "RMWorkerProcessUnpackBlobRequest\020\252G\022+\n&E"
  "MsgDRMWorkerProcessUnpackBlobResponse\020\253G"
  "\022*\n%EMsgDRMWorkerProcessInstallAllReques"
  "t\020\254G\022+\n&EMsgDRMWorkerProcessInstallAllRe"
  "sponse\020\255G\022\032\n\025EMsgTestWorkerProcess\020\360G\0221\n"
  ",EMsgTestWorkerProcessLoadUnloadModuleRe"
  "quest\020\360G\0222\n-EMsgTestWorkerProcessLoadUnl"
  "oadModuleResponse\020\361G\0222\n-EMsgTestWorkerPr"
  "ocessServiceModuleCallRequest\020\362G\0223\n.EMsg"
  "TestWorkerProcessServiceModuleCallRespon"
  "se\020\363G\022\030\n\023EMsgQuestServerBase\020\324H\022\036\n\031EMsgC"
  "lientGetEmoticonList\020\362H\022\033\n\026EMsgClientEmo"
  "ticonList\020\363H\022\020\n\013EMsgSLCBase\020\270I\022\035\n\030EMsgSL"
  "CUserSessionStatus\020\270I\022$\n\037EMsgSLCRequestU"
  "serSessionStatus\020\271I\022$\n\037EMsgSLCSharedLice"
  "nsesLockStatus\020\272I\022&\n!EMsgClientSharedLib"
  "raryLockStatus\020\275I\022\'\n\"EMsgClientSharedLib"
  "raryStopPlaying\020\276I\022 \n\033EMsgSLCSharedLibra"
  "ryChanged\020\300I\022\031\n\024EMsgRemoteClientBase\020\234J\022"
  "\"\n\035EMsgRemoteClientAuth_OBSOLETE\020\234J\022*\n%E"
  "MsgRemoteClientAuthResponse_OBSOLETE\020\235J\022"
  "\036\n\031EMsgRemoteClientAppStatus\020\236J\022 \n\033EMsgR"
  "emoteClientStartStream\020\237J\022(\n#EMsgRemoteC"
  "lientStartStreamResponse\020\240J\022\031\n\024EMsgRemot"
  "eClientPing\020\241J\022!\n\034EMsgRemoteClientPingRe"
  "sponse\020\242J\022\031\n\024EMsgClientUnlockH264\020\243J\022!\n\034"
  "EMsgClientUnlockH264Response\020\244J\022\037\n\032EMsgR"
  "emoteClientAcceptEULA\020\245J\022(\n#EMsgRemoteCl"
  "ientGetControllerConfig\020\246J\0220\n+EMsgRemote"
  "ClientGetControllerConfigResponse\020\247J\022%\n "
  "EMsgRemoteClientStreamingEnabled\020\250J\022\"\n\035E"
  "MsgClientUnlockHEVC_OBSOLETE\020\251J\022*\n%EMsgC"
  "lientUnlockHEVCResponse_OBSOLETE\020\252J\022\"\n\035E"
  "MsgRemoteClientStatusRequest\020\253J\022#\n\036EMsgR"
  "emoteClientStatusResponse\020\254J\022)\n$EMsgRemo"
  "teClientAuthorizationRequest\020\255J\022*\n%EMsgR"
  "emoteClientAuthorizationResponse\020\256J\022/\n*E"
  "MsgRemoteClientAuthorizationCancelReques"
  "t\020\257J\022+\n&EMsgRemoteClientAuthorizationCon"
  "firmed\020\260J\022!\n\034EMsgRemoteClientProofReques"
  "t\020\261J\022\"\n\035EMsgRemoteClientProofResponse\020\262J"
  "\022%\n EMsgClientConcurrentSessionsBase\020\200K\022"
  "\"\n\035EMsgClientPlayingSessionState\020\200K\022!\n\034E"
  "MsgClientKickPlayingSession\020\201K\022\034\n\027EMsgCl"
  "ientBroadcastBase\020\344K\022\034\n\027EMsgClientBroadc"
  "astInit\020\344K\022\036\n\031EMsgClientBroadcastFrames\020"
  "\345K\022\"\n\035EMsgClientBroadcastDisconnect\020\346K\022$"
  "\n\037EMsgClientBroadcastUploadConfig\020\350K\022\024\n\017"
  "EMsgBaseClient3\020\310L\022$\n\037EMsgClientVoiceCal"
  "lPreAuthorize\020\310L\022,\n\'EMsgClientVoiceCallP"
  "reAuthorizeResponse\020\311L\022%\n EMsgClientServ"
  "erTimestampRequest\020\312L\022&\n!EMsgClientServe"
  "rTimestampResponse\020\313L\022-\n(EMsgServiceMeth"
  "odCallFromClientNonAuthed\020\314L\022\024\n\017EMsgClie"
  "ntHello\020\315L\022\'\n\"EMsgClientEnableOrDisableD"
  "ownloads\020\316L\022/\n*EMsgClientEnableOrDisable"
  "DownloadsResponse\020\317L\022\037\n\032EMsgClientFeatur"
  "eGroupInfo\020\320L\022\031\n\024EMsgClientLANP2PBase\020\254M"
  "\022!\n\034EMsgClientLANP2PRequestChunk\020\254M\022)\n$E"
  "MsgClientLANP2PRequestChunkResponse\020\255M\022\037"
  "\n\032EMsgClientPeerChunkRequest\020\256M\022 \n\033EMsgC"
  "lientPeerChunkResponse\020\257M\022\030\n\023EMsgClientL"
  "ANP2PMax\020\217N\022\033\n\026EMsgBaseWatchdogServer\020\220N"
  "\022\027\n\022EMsgNotifyWatchdog\020\220N\022\036\n\031EMsgClientS"
  "iteLicenseBase\020\364N\022.\n)EMsgClientSiteLicen"
  "seSiteInfoNotification\020\364N\022\"\n\035EMsgClientS"
  "iteLicenseCheckout\020\365N\022*\n%EMsgClientSiteL"
  "icenseCheckoutResponse\020\366N\022+\n&EMsgClientS"
  "iteLicenseGetAvailableSeats\020\367N\0223\n.EMsgCl"
  "ientSiteLicenseGetAvailableSeatsResponse"
  "\020\370N\022-\n(EMsgClientSiteLicenseGetContentCa"
  "cheInfo\020\371N\0225\n0EMsgClientSiteLicenseGetCo"
  "ntentCacheInfoResponse\020\372N\022\027\n\022EMsgBaseCha"
  "tServer\020\340]\022.\n)EMsgChatServerGetPendingNo"
  "tificationCount\020\340]\0226\n1EMsgChatServerGetP"
  "endingNotificationCountResponse\020\341]\022\031\n\024EM"
  "sgBaseSecretServer\020\304^\022\034\n\027EMsgServerSecre"
  "tChanged\020\304^\022\017\n\nEMsgBaseWG\020\250_\022\"\n\035EMsgWGCo"
  "nnectionProtocolError\020\250_\022&\n!EMsgWGConnec"
  "tionValidateUserToken\020\251_\022.\n)EMsgWGConnec"
  "tionValidateUserTokenResponse\020\252_\022$\n\037EMsg"
  "WGConnectionLegacyWGRequest\020\253_\022%\n EMsgWG"
  "ConnectionLegacyWGResponse\020\254_\022 \n\033EMsgCli"
  "entPendingGameLaunch\020\214`\022(\n#EMsgClientPen"
  "dingGameLaunchResponse\020\215`\032\002\020\001*\263\004\n\027EClien"
  "tPersonaStateFlag\022!\n\035EClientPersonaState"
  "FlagStatus\020\001\022%\n!EClientPersonaStateFlagP"
  "layerName\020\002\022$\n EClientPersonaStateFlagQu"
  "eryPort\020\004\022#\n\037EClientPersonaStateFlagSour"
  "ceID\020\010\022#\n\037EClientPersonaStateFlagPresenc"
  "e\020\020\022#\n\037EClientPersonaStateFlagLastSeen\020@"
  "\022(\n#EClientPersonaStateFlagUserClanRank\020"
  "\200\001\022%\n EClientPersonaStateGameExtraInfo\020\200"
  "\002\022$\n\037EClientPersonaStateGameDataBlob\020\200\004\022"
  "$\n\037EClientPersonaStateFlagClanData\020\200\010\022$\n"
  "\037EClientPersonaStateFlagFacebook\020\200\020\022(\n#E"
  "ClientPersonaStateFlagRichPresence\020\200 \022%\n"
  " EClientPersonaStateFlagBroadcast\020\200@\022%\n\037"
  "EClientPersonaStateFlagWatching\020\200\200\001*\257\001\n\024"
  "EMsgClanAccountFlags\022\035\n\031EMsgClanAccountF"
  "lagPublic\020\001\022\034\n\030EMsgClanAccountFlagLarge\020"
  "\002\022\035\n\031EMsgClanAccountFlagLocked\020\004\022\037\n\033EMsg"
  "ClanAccountFlagDisabled\020\010\022\032\n\026EMsgClanAcc"
  "ountFlagOGG\020\020*\374\002\n\021ESteamReviewScore\022,\n(E"
  "SteamReviewScore_OverwhelminglyPositive\020"
  "\t\022\"\n\036ESteamReviewScore_VeryPositive\020\010\022\036\n"
  "\032ESteamReviewScore_Positive\020\007\022$\n ESteamR"
  "eviewScore_MostlyPositive\020\006\022\033\n\027ESteamRev"
  "iewScore_Mixed\020\005\022$\n ESteamReviewScore_Mo"
  "stlyNegative\020\004\022\036\n\032ESteamReviewScore_Nega"
  "tive\020\003\022\"\n\036ESteamReviewScore_VeryNegative"
  "\020\002\022,\n(ESteamReviewScore_OverwhelminglyNe"
  "gative\020\001\022\032\n\026ESteamReviewScore_None\020\000*\263\001\n"
  "\023ECodecUsagePlatform\022\036\n\032ECodecUsagePlatf"
  "ormUnknown\020\000\022\036\n\032ECodecUsagePlatformWindo"
  "ws\020\001\022\034\n\030ECodecUsagePlatformMacOS\020\002\022\034\n\030EC"
  "odecUsagePlatformLinux\020\003\022 \n\034ECodecUsageP"
  "latformSteamDeck\020\004*\271\001\n\021ECodecUsageReason"
  "\022\034\n\030ECodecUsageReasonUnknown\020\000\022\037\n\033ECodec"
  "UsageReasonRemotePlay\020\001\022!\n\035ECodecUsageRe"
  "asonBroadcasting\020\002\022\036\n\032ECodecUsageReasonG"
  "ameVideo\020\003\022\"\n\036ECodecUsageReasonGameRecor"
  "ding\020\004B\037H\001\200\001\000\252\002\027OpenSteamworks.Protobuf"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_enums_5fclientserver_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_enums_5fclientserver_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_enums_5fclientserver_2eproto = {
  false, false, 50759, descriptor_table_protodef_enums_5fclientserver_2eproto, "enums_clientserver.proto", 
  &descriptor_table_enums_5fclientserver_2eproto_once, descriptor_table_enums_5fclientserver_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_enums_5fclientserver_2eproto::offsets,
  file_level_metadata_enums_5fclientserver_2eproto, file_level_enum_descriptors_enums_5fclientserver_2eproto, file_level_service_descriptors_enums_5fclientserver_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_enums_5fclientserver_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return descriptor_table_enums_5fclientserver_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_enums_5fclientserver_2eproto(&descriptor_table_enums_5fclientserver_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsg_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[0];
}
bool EMsg_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 100:
    case 113:
    case 115:
    case 120:
    case 121:
    case 123:
    case 124:
    case 126:
    case 127:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 215:
    case 221:
    case 225:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
    case 240:
    case 241:
    case 242:
    case 243:
    case 244:
    case 245:
    case 246:
    case 247:
    case 300:
    case 301:
    case 307:
    case 308:
    case 309:
    case 316:
    case 317:
    case 318:
    case 320:
    case 321:
    case 322:
    case 323:
    case 324:
    case 325:
    case 326:
    case 327:
    case 329:
    case 330:
    case 331:
    case 332:
    case 334:
    case 335:
    case 336:
    case 337:
    case 338:
    case 339:
    case 340:
    case 400:
    case 402:
    case 403:
    case 405:
    case 406:
    case 423:
    case 424:
    case 425:
    case 426:
    case 429:
    case 430:
    case 431:
    case 432:
    case 433:
    case 500:
    case 504:
    case 505:
    case 508:
    case 509:
    case 510:
    case 511:
    case 512:
    case 513:
    case 516:
    case 517:
    case 518:
    case 519:
    case 522:
    case 523:
    case 525:
    case 526:
    case 527:
    case 528:
    case 529:
    case 530:
    case 531:
    case 532:
    case 533:
    case 534:
    case 535:
    case 536:
    case 537:
    case 538:
    case 541:
    case 542:
    case 550:
    case 551:
    case 552:
    case 553:
    case 554:
    case 555:
    case 560:
    case 561:
    case 563:
    case 566:
    case 567:
    case 568:
    case 569:
    case 570:
    case 571:
    case 572:
    case 573:
    case 574:
    case 575:
    case 576:
    case 577:
    case 578:
    case 579:
    case 580:
    case 581:
    case 582:
    case 583:
    case 584:
    case 586:
    case 587:
    case 588:
    case 589:
    case 590:
    case 591:
    case 592:
    case 593:
    case 596:
    case 597:
    case 598:
    case 600:
    case 601:
    case 602:
    case 604:
    case 605:
    case 606:
    case 607:
    case 608:
    case 609:
    case 610:
    case 611:
    case 625:
    case 628:
    case 629:
    case 630:
    case 631:
    case 633:
    case 634:
    case 635:
    case 636:
    case 637:
    case 638:
    case 639:
    case 640:
    case 641:
    case 642:
    case 643:
    case 644:
    case 645:
    case 646:
    case 650:
    case 700:
    case 701:
    case 702:
    case 703:
    case 704:
    case 705:
    case 706:
    case 707:
    case 710:
    case 712:
    case 714:
    case 715:
    case 716:
    case 717:
    case 718:
    case 719:
    case 720:
    case 721:
    case 726:
    case 727:
    case 728:
    case 730:
    case 731:
    case 732:
    case 736:
    case 738:
    case 740:
    case 741:
    case 742:
    case 743:
    case 744:
    case 745:
    case 746:
    case 747:
    case 751:
    case 755:
    case 756:
    case 757:
    case 758:
    case 759:
    case 760:
    case 763:
    case 764:
    case 765:
    case 766:
    case 767:
    case 768:
    case 771:
    case 773:
    case 774:
    case 779:
    case 780:
    case 782:
    case 783:
    case 784:
    case 785:
    case 791:
    case 792:
    case 796:
    case 797:
    case 798:
    case 799:
    case 800:
    case 801:
    case 802:
    case 803:
    case 805:
    case 807:
    case 808:
    case 809:
    case 810:
    case 813:
    case 814:
    case 815:
    case 818:
    case 819:
    case 820:
    case 821:
    case 822:
    case 830:
    case 831:
    case 832:
    case 839:
    case 842:
    case 845:
    case 846:
    case 848:
    case 849:
    case 850:
    case 851:
    case 855:
    case 856:
    case 857:
    case 858:
    case 860:
    case 880:
    case 896:
    case 897:
    case 900:
    case 901:
    case 903:
    case 905:
    case 906:
    case 907:
    case 908:
    case 909:
    case 910:
    case 911:
    case 918:
    case 919:
    case 920:
    case 921:
    case 922:
    case 923:
    case 936:
    case 937:
    case 938:
    case 939:
    case 940:
    case 941:
    case 1000:
    case 1004:
    case 1005:
    case 1006:
    case 1010:
    case 1019:
    case 1020:
    case 1023:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1028:
    case 1100:
    case 1101:
    case 1102:
    case 1103:
    case 1104:
    case 1105:
    case 1106:
    case 1107:
    case 1108:
    case 1109:
    case 1110:
    case 1111:
    case 1112:
    case 1114:
    case 1115:
    case 1116:
    case 1117:
    case 1118:
    case 1119:
    case 1120:
    case 1121:
    case 1122:
    case 1123:
    case 1124:
    case 1125:
    case 1126:
    case 1127:
    case 1128:
    case 1129:
    case 1130:
    case 1131:
    case 1132:
    case 1133:
    case 1134:
    case 1200:
    case 1201:
    case 1202:
    case 1203:
    case 1204:
    case 1300:
    case 1301:
    case 1302:
    case 1303:
    case 1304:
    case 1305:
    case 1400:
    case 1401:
    case 1402:
    case 1403:
    case 1404:
    case 1406:
    case 1408:
    case 1409:
    case 1410:
    case 1411:
    case 1417:
    case 1418:
    case 1421:
    case 1422:
    case 1425:
    case 1426:
    case 1427:
    case 1433:
    case 1434:
    case 1435:
    case 1437:
    case 1438:
    case 1440:
    case 1441:
    case 1445:
    case 1446:
    case 1448:
    case 1449:
    case 1450:
    case 1451:
    case 1452:
    case 1453:
    case 1454:
    case 1455:
    case 1456:
    case 1457:
    case 1458:
    case 1459:
    case 1460:
    case 1461:
    case 1462:
    case 1463:
    case 1464:
    case 1465:
    case 1468:
    case 1469:
    case 1470:
    case 1471:
    case 1472:
    case 1473:
    case 1474:
    case 1475:
    case 1476:
    case 1477:
    case 1478:
    case 1479:
    case 1480:
    case 1481:
    case 1482:
    case 1483:
    case 1484:
    case 1485:
    case 1486:
    case 1487:
    case 1494:
    case 1495:
    case 1496:
    case 1497:
    case 1498:
    case 1499:
    case 1500:
    case 1501:
    case 1502:
    case 1503:
    case 1504:
    case 1505:
    case 1506:
    case 1507:
    case 1508:
    case 1509:
    case 1510:
    case 1511:
    case 1512:
    case 1513:
    case 1514:
    case 1515:
    case 1516:
    case 1517:
    case 1518:
    case 1519:
    case 1600:
    case 1601:
    case 1603:
    case 1612:
    case 1615:
    case 1616:
    case 1617:
    case 1620:
    case 1621:
    case 1622:
    case 1623:
    case 1624:
    case 1628:
    case 1629:
    case 1631:
    case 1700:
    case 1701:
    case 1702:
    case 1703:
    case 1704:
    case 1705:
    case 1706:
    case 2200:
    case 2203:
    case 2206:
    case 2207:
    case 2208:
    case 2209:
    case 2210:
    case 2212:
    case 2216:
    case 2217:
    case 2218:
    case 2219:
    case 2220:
    case 2221:
    case 2222:
    case 2223:
    case 2224:
    case 2225:
    case 2226:
    case 2227:
    case 2228:
    case 2229:
    case 2230:
    case 2231:
    case 2232:
    case 2233:
    case 2234:
    case 2235:
    case 2236:
    case 2237:
    case 2238:
    case 2239:
    case 2240:
    case 2241:
    case 2242:
    case 2243:
    case 2244:
    case 2245:
    case 2246:
    case 2247:
    case 2500:
    case 2502:
    case 2900:
    case 2902:
    case 2903:
    case 2905:
    case 2906:
    case 2907:
    case 2908:
    case 3000:
    case 3001:
    case 3002:
    case 3100:
    case 3150:
    case 3161:
    case 3162:
    case 3200:
    case 3201:
    case 3202:
    case 3203:
    case 3204:
    case 3205:
    case 3206:
    case 3207:
    case 3208:
    case 3209:
    case 3210:
    case 3211:
    case 3212:
    case 3213:
    case 3214:
    case 3400:
    case 3401:
    case 3402:
    case 3403:
    case 3404:
    case 3406:
    case 3600:
    case 4000:
    case 4001:
    case 4002:
    case 4006:
    case 4007:
    case 4008:
    case 4009:
    case 4010:
    case 4011:
    case 4012:
    case 4013:
    case 4015:
    case 4021:
    case 4022:
    case 4023:
    case 4024:
    case 4025:
    case 4026:
    case 4039:
    case 4040:
    case 4041:
    case 4042:
    case 4043:
    case 4044:
    case 4045:
    case 4046:
    case 4047:
    case 4050:
    case 4051:
    case 4052:
    case 4053:
    case 4054:
    case 4055:
    case 4056:
    case 4057:
    case 4059:
    case 4060:
    case 4061:
    case 4062:
    case 4064:
    case 4065:
    case 4066:
    case 4067:
    case 4068:
    case 4073:
    case 4074:
    case 4075:
    case 4076:
    case 4077:
    case 4079:
    case 4080:
    case 4081:
    case 4082:
    case 4083:
    case 4084:
    case 4085:
    case 4086:
    case 4087:
    case 4090:
    case 4091:
    case 4092:
    case 4095:
    case 4096:
    case 4097:
    case 4098:
    case 4099:
    case 4100:
    case 4101:
    case 4102:
    case 4103:
    case 4104:
    case 4105:
    case 4106:
    case 4107:
    case 4108:
    case 4110:
    case 4111:
    case 4112:
    case 4113:
    case 4114:
    case 4115:
    case 4116:
    case 4117:
    case 4118:
    case 4119:
    case 4120:
    case 4121:
    case 4122:
    case 4123:
    case 4124:
    case 4125:
    case 4126:
    case 4127:
    case 4128:
    case 4140:
    case 4143:
    case 4144:
    case 4145:
    case 4147:
    case 4148:
    case 4149:
    case 4152:
    case 4153:
    case 4158:
    case 4159:
    case 4160:
    case 4161:
    case 4162:
    case 4163:
    case 4164:
    case 4165:
    case 4166:
    case 4172:
    case 4173:
    case 4174:
    case 4175:
    case 4184:
    case 4185:
    case 4190:
    case 4191:
    case 4194:
    case 4195:
    case 4197:
    case 4198:
    case 4199:
    case 4206:
    case 4209:
    case 4210:
    case 4211:
    case 4213:
    case 4219:
    case 4220:
    case 4224:
    case 4231:
    case 4232:
    case 4236:
    case 4241:
    case 4242:
    case 4244:
    case 4245:
    case 4246:
    case 4247:
    case 4248:
    case 4249:
    case 4250:
    case 4251:
    case 4252:
    case 4255:
    case 4256:
    case 4258:
    case 4260:
    case 4262:
    case 4264:
    case 4265:
    case 4266:
    case 4267:
    case 4269:
    case 4270:
    case 4271:
    case 4272:
    case 4278:
    case 4279:
    case 4280:
    case 4281:
    case 4282:
    case 4283:
    case 4284:
    case 4285:
    case 4286:
    case 4287:
    case 4288:
    case 4289:
    case 4290:
    case 4294:
    case 4295:
    case 4298:
    case 4299:
    case 4300:
    case 4301:
    case 4302:
    case 4307:
    case 4308:
    case 4309:
    case 4310:
    case 4311:
    case 4312:
    case 4313:
    case 4314:
    case 4315:
    case 4316:
    case 4317:
    case 4320:
    case 4321:
    case 4322:
    case 4323:
    case 4324:
    case 4325:
    case 4326:
    case 4327:
    case 4328:
    case 4329:
    case 4330:
    case 4331:
    case 4332:
    case 4333:
    case 4334:
    case 4335:
    case 4336:
    case 4337:
    case 4338:
    case 4339:
    case 4340:
    case 4341:
    case 4342:
    case 4344:
    case 4345:
    case 4346:
    case 4347:
    case 4348:
    case 4349:
    case 4350:
    case 4351:
    case 4352:
    case 4353:
    case 4354:
    case 4355:
    case 4356:
    case 4357:
    case 4358:
    case 4359:
    case 4360:
    case 4361:
    case 4362:
    case 4365:
    case 4366:
    case 4367:
    case 4368:
    case 4372:
    case 4373:
    case 4374:
    case 4375:
    case 4376:
    case 4377:
    case 4380:
    case 4381:
    case 4383:
    case 4384:
    case 4385:
    case 4386:
    case 4389:
    case 4390:
    case 4391:
    case 4392:
    case 4393:
    case 4394:
    case 4395:
    case 4396:
    case 4397:
    case 4398:
    case 4399:
    case 4400:
    case 4401:
    case 4402:
    case 4403:
    case 4404:
    case 4405:
    case 4406:
    case 4407:
    case 4408:
    case 4409:
    case 4410:
    case 4411:
    case 4412:
    case 4413:
    case 4414:
    case 4415:
    case 4416:
    case 4417:
    case 4418:
    case 4419:
    case 4420:
    case 4421:
    case 4422:
    case 4423:
    case 4424:
    case 4425:
    case 5000:
    case 5003:
    case 5004:
    case 5009:
    case 5010:
    case 5011:
    case 5012:
    case 5013:
    case 5014:
    case 5200:
    case 5215:
    case 5217:
    case 5218:
    case 5226:
    case 5227:
    case 5228:
    case 5229:
    case 5230:
    case 5231:
    case 5232:
    case 5233:
    case 5234:
    case 5235:
    case 5236:
    case 5237:
    case 5238:
    case 5239:
    case 5240:
    case 5241:
    case 5242:
    case 5243:
    case 5244:
    case 5245:
    case 5246:
    case 5247:
    case 5248:
    case 5249:
    case 5250:
    case 5253:
    case 5254:
    case 5400:
    case 5401:
    case 5402:
    case 5403:
    case 5404:
    case 5405:
    case 5407:
    case 5408:
    case 5409:
    case 5410:
    case 5411:
    case 5412:
    case 5413:
    case 5414:
    case 5415:
    case 5416:
    case 5417:
    case 5418:
    case 5419:
    case 5426:
    case 5427:
    case 5428:
    case 5429:
    case 5430:
    case 5431:
    case 5432:
    case 5433:
    case 5434:
    case 5435:
    case 5438:
    case 5439:
    case 5443:
    case 5444:
    case 5445:
    case 5446:
    case 5448:
    case 5449:
    case 5450:
    case 5451:
    case 5452:
    case 5453:
    case 5456:
    case 5457:
    case 5458:
    case 5459:
    case 5460:
    case 5461:
    case 5463:
    case 5464:
    case 5465:
    case 5466:
    case 5467:
    case 5480:
    case 5481:
    case 5482:
    case 5483:
    case 5484:
    case 5485:
    case 5486:
    case 5487:
    case 5488:
    case 5489:
    case 5490:
    case 5491:
    case 5492:
    case 5493:
    case 5494:
    case 5495:
    case 5496:
    case 5497:
    case 5498:
    case 5500:
    case 5501:
    case 5502:
    case 5503:
    case 5504:
    case 5505:
    case 5506:
    case 5508:
    case 5509:
    case 5511:
    case 5512:
    case 5514:
    case 5515:
    case 5516:
    case 5517:
    case 5518:
    case 5519:
    case 5520:
    case 5521:
    case 5522:
    case 5523:
    case 5524:
    case 5525:
    case 5526:
    case 5527:
    case 5528:
    case 5529:
    case 5530:
    case 5531:
    case 5532:
    case 5535:
    case 5536:
    case 5537:
    case 5538:
    case 5539:
    case 5540:
    case 5541:
    case 5542:
    case 5543:
    case 5544:
    case 5545:
    case 5546:
    case 5547:
    case 5548:
    case 5549:
    case 5550:
    case 5551:
    case 5552:
    case 5553:
    case 5554:
    case 5555:
    case 5556:
    case 5557:
    case 5558:
    case 5559:
    case 5560:
    case 5561:
    case 5562:
    case 5563:
    case 5564:
    case 5565:
    case 5566:
    case 5567:
    case 5568:
    case 5569:
    case 5570:
    case 5571:
    case 5572:
    case 5573:
    case 5574:
    case 5575:
    case 5576:
    case 5577:
    case 5578:
    case 5582:
    case 5583:
    case 5584:
    case 5585:
    case 5586:
    case 5587:
    case 5588:
    case 5589:
    case 5592:
    case 5593:
    case 5594:
    case 5595:
    case 5596:
    case 5597:
    case 5598:
    case 5599:
    case 5600:
    case 5601:
    case 5602:
    case 5603:
    case 5604:
    case 5605:
    case 5606:
    case 5607:
    case 5608:
    case 5609:
    case 5610:
    case 5611:
    case 5612:
    case 5613:
    case 5614:
    case 5615:
    case 5616:
    case 5617:
    case 5618:
    case 5619:
    case 5620:
    case 5621:
    case 5622:
    case 5623:
    case 5624:
    case 5625:
    case 5626:
    case 5627:
    case 5800:
    case 5812:
    case 5813:
    case 5827:
    case 5828:
    case 5829:
    case 5830:
    case 5831:
    case 5844:
    case 5847:
    case 5848:
    case 5849:
    case 6200:
    case 6201:
    case 6202:
    case 6400:
    case 6401:
    case 6403:
    case 6404:
    case 6405:
    case 6406:
    case 6407:
    case 6500:
    case 6501:
    case 6502:
    case 6503:
    case 6504:
    case 6505:
    case 6506:
    case 6507:
    case 6508:
    case 6509:
    case 6600:
    case 6601:
    case 6602:
    case 6603:
    case 6604:
    case 6605:
    case 6606:
    case 6607:
    case 6608:
    case 6609:
    case 6610:
    case 6611:
    case 6612:
    case 6613:
    case 6614:
    case 6615:
    case 6616:
    case 6617:
    case 6618:
    case 6619:
    case 6620:
    case 6621:
    case 6622:
    case 6623:
    case 6624:
    case 6625:
    case 6626:
    case 6627:
    case 6628:
    case 6629:
    case 6800:
    case 6801:
    case 6802:
    case 6803:
    case 6804:
    case 6805:
    case 6806:
    case 6807:
    case 6808:
    case 6809:
    case 6810:
    case 6811:
    case 6812:
    case 6813:
    case 6814:
    case 6815:
    case 7000:
    case 7001:
    case 7002:
    case 7003:
    case 7004:
    case 7005:
    case 7006:
    case 7007:
    case 7100:
    case 7101:
    case 7200:
    case 7300:
    case 7301:
    case 7302:
    case 7307:
    case 7308:
    case 7309:
    case 7310:
    case 7311:
    case 7312:
    case 7315:
    case 7316:
    case 7325:
    case 7326:
    case 7327:
    case 7328:
    case 7331:
    case 7337:
    case 7338:
    case 7339:
    case 7341:
    case 7342:
    case 7343:
    case 7344:
    case 7349:
    case 7350:
    case 7351:
    case 7352:
    case 7353:
    case 7354:
    case 7355:
    case 7356:
    case 7359:
    case 7364:
    case 7365:
    case 7366:
    case 7367:
    case 7369:
    case 7370:
    case 7371:
    case 7378:
    case 7379:
    case 7380:
    case 7381:
    case 7500:
    case 7501:
    case 7502:
    case 7503:
    case 7504:
    case 7505:
    case 7506:
    case 7507:
    case 7508:
    case 7510:
    case 7511:
    case 7512:
    case 7513:
    case 7514:
    case 7515:
    case 7516:
    case 7517:
    case 7518:
    case 7519:
    case 7520:
    case 7521:
    case 7522:
    case 7523:
    case 7524:
    case 7525:
    case 7526:
    case 7527:
    case 7528:
    case 7529:
    case 7530:
    case 7600:
    case 7601:
    case 7602:
    case 7603:
    case 7604:
    case 7605:
    case 7606:
    case 7607:
    case 7700:
    case 7701:
    case 7702:
    case 7703:
    case 7704:
    case 7705:
    case 7706:
    case 7707:
    case 7708:
    case 7711:
    case 7712:
    case 7713:
    case 7714:
    case 7800:
    case 7801:
    case 7803:
    case 7804:
    case 7805:
    case 7806:
    case 7807:
    case 7808:
    case 7900:
    case 7901:
    case 7902:
    case 8000:
    case 8100:
    case 8200:
    case 8300:
    case 8301:
    case 8303:
    case 8304:
    case 8305:
    case 8306:
    case 8400:
    case 8401:
    case 8402:
    case 8500:
    case 8503:
    case 8504:
    case 8507:
    case 8508:
    case 8509:
    case 8510:
    case 8600:
    case 8601:
    case 8700:
    case 8701:
    case 8800:
    case 8900:
    case 8901:
    case 8902:
    case 8903:
    case 8904:
    case 8905:
    case 8906:
    case 8907:
    case 8908:
    case 9000:
    case 9001:
    case 9002:
    case 9100:
    case 9101:
    case 9102:
    case 9103:
    case 9104:
    case 9105:
    case 9106:
    case 9107:
    case 9110:
    case 9111:
    case 9112:
    case 9113:
    case 9114:
    case 9115:
    case 9116:
    case 9117:
    case 9118:
    case 9119:
    case 9120:
    case 9121:
    case 9122:
    case 9123:
    case 9124:
    case 9125:
    case 9126:
    case 9127:
    case 9128:
    case 9129:
    case 9130:
    case 9131:
    case 9132:
    case 9133:
    case 9200:
    case 9201:
    case 9202:
    case 9203:
    case 9300:
    case 9330:
    case 9331:
    case 9400:
    case 9401:
    case 9402:
    case 9405:
    case 9406:
    case 9408:
    case 9500:
    case 9501:
    case 9502:
    case 9503:
    case 9504:
    case 9505:
    case 9506:
    case 9507:
    case 9508:
    case 9509:
    case 9510:
    case 9511:
    case 9512:
    case 9513:
    case 9514:
    case 9515:
    case 9516:
    case 9517:
    case 9518:
    case 9519:
    case 9520:
    case 9521:
    case 9522:
    case 9600:
    case 9601:
    case 9700:
    case 9701:
    case 9702:
    case 9704:
    case 9800:
    case 9801:
    case 9802:
    case 9803:
    case 9804:
    case 9805:
    case 9806:
    case 9807:
    case 9808:
    case 9900:
    case 9901:
    case 9902:
    case 9903:
    case 9999:
    case 10000:
    case 10100:
    case 10101:
    case 10102:
    case 10103:
    case 10104:
    case 10105:
    case 10106:
    case 12000:
    case 12001:
    case 12100:
    case 12200:
    case 12201:
    case 12202:
    case 12203:
    case 12204:
    case 12300:
    case 12301:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EClientPersonaStateFlag_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[1];
}
bool EClientPersonaStateFlag_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsgClanAccountFlags_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[2];
}
bool EMsgClanAccountFlags_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ESteamReviewScore_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[3];
}
bool ESteamReviewScore_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECodecUsagePlatform_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[4];
}
bool ECodecUsagePlatform_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECodecUsageReason_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[5];
}
bool ECodecUsageReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
