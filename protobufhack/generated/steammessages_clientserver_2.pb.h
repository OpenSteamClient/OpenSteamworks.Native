// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_clientserver_2.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_steammessages_5fclientserver_5f2_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_steammessages_5fclientserver_5f2_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
#include "steammessages_base.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5f2_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fclientserver_5f2_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[127]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_steammessages_5fclientserver_5f2_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(int index);
class CMsgAMUnlockH264;
struct CMsgAMUnlockH264DefaultTypeInternal;
extern CMsgAMUnlockH264DefaultTypeInternal _CMsgAMUnlockH264_default_instance_;
class CMsgAMUnlockH264Response;
struct CMsgAMUnlockH264ResponseDefaultTypeInternal;
extern CMsgAMUnlockH264ResponseDefaultTypeInternal _CMsgAMUnlockH264Response_default_instance_;
class CMsgBadgeCraftedNotification;
struct CMsgBadgeCraftedNotificationDefaultTypeInternal;
extern CMsgBadgeCraftedNotificationDefaultTypeInternal _CMsgBadgeCraftedNotification_default_instance_;
class CMsgCREGetUserPublishedItemVoteDetails;
struct CMsgCREGetUserPublishedItemVoteDetailsDefaultTypeInternal;
extern CMsgCREGetUserPublishedItemVoteDetailsDefaultTypeInternal _CMsgCREGetUserPublishedItemVoteDetails_default_instance_;
class CMsgCREGetUserPublishedItemVoteDetailsResponse;
struct CMsgCREGetUserPublishedItemVoteDetailsResponseDefaultTypeInternal;
extern CMsgCREGetUserPublishedItemVoteDetailsResponseDefaultTypeInternal _CMsgCREGetUserPublishedItemVoteDetailsResponse_default_instance_;
class CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail;
struct CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetailDefaultTypeInternal;
extern CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetailDefaultTypeInternal _CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_default_instance_;
class CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId;
struct CMsgCREGetUserPublishedItemVoteDetails_PublishedFileIdDefaultTypeInternal;
extern CMsgCREGetUserPublishedItemVoteDetails_PublishedFileIdDefaultTypeInternal _CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId_default_instance_;
class CMsgCREItemVoteSummary;
struct CMsgCREItemVoteSummaryDefaultTypeInternal;
extern CMsgCREItemVoteSummaryDefaultTypeInternal _CMsgCREItemVoteSummary_default_instance_;
class CMsgCREItemVoteSummaryResponse;
struct CMsgCREItemVoteSummaryResponseDefaultTypeInternal;
extern CMsgCREItemVoteSummaryResponseDefaultTypeInternal _CMsgCREItemVoteSummaryResponse_default_instance_;
class CMsgCREItemVoteSummaryResponse_ItemVoteSummary;
struct CMsgCREItemVoteSummaryResponse_ItemVoteSummaryDefaultTypeInternal;
extern CMsgCREItemVoteSummaryResponse_ItemVoteSummaryDefaultTypeInternal _CMsgCREItemVoteSummaryResponse_ItemVoteSummary_default_instance_;
class CMsgCREItemVoteSummary_PublishedFileId;
struct CMsgCREItemVoteSummary_PublishedFileIdDefaultTypeInternal;
extern CMsgCREItemVoteSummary_PublishedFileIdDefaultTypeInternal _CMsgCREItemVoteSummary_PublishedFileId_default_instance_;
class CMsgCREUpdateUserPublishedItemVote;
struct CMsgCREUpdateUserPublishedItemVoteDefaultTypeInternal;
extern CMsgCREUpdateUserPublishedItemVoteDefaultTypeInternal _CMsgCREUpdateUserPublishedItemVote_default_instance_;
class CMsgCREUpdateUserPublishedItemVoteResponse;
struct CMsgCREUpdateUserPublishedItemVoteResponseDefaultTypeInternal;
extern CMsgCREUpdateUserPublishedItemVoteResponseDefaultTypeInternal _CMsgCREUpdateUserPublishedItemVoteResponse_default_instance_;
class CMsgClientActivateOEMLicense;
struct CMsgClientActivateOEMLicenseDefaultTypeInternal;
extern CMsgClientActivateOEMLicenseDefaultTypeInternal _CMsgClientActivateOEMLicense_default_instance_;
class CMsgClientAuthorizeLocalDevice;
struct CMsgClientAuthorizeLocalDeviceDefaultTypeInternal;
extern CMsgClientAuthorizeLocalDeviceDefaultTypeInternal _CMsgClientAuthorizeLocalDevice_default_instance_;
class CMsgClientAuthorizeLocalDeviceNotification;
struct CMsgClientAuthorizeLocalDeviceNotificationDefaultTypeInternal;
extern CMsgClientAuthorizeLocalDeviceNotificationDefaultTypeInternal _CMsgClientAuthorizeLocalDeviceNotification_default_instance_;
class CMsgClientAuthorizeLocalDeviceRequest;
struct CMsgClientAuthorizeLocalDeviceRequestDefaultTypeInternal;
extern CMsgClientAuthorizeLocalDeviceRequestDefaultTypeInternal _CMsgClientAuthorizeLocalDeviceRequest_default_instance_;
class CMsgClientChatGetFriendMessageHistory;
struct CMsgClientChatGetFriendMessageHistoryDefaultTypeInternal;
extern CMsgClientChatGetFriendMessageHistoryDefaultTypeInternal _CMsgClientChatGetFriendMessageHistory_default_instance_;
class CMsgClientChatGetFriendMessageHistoryForOfflineMessages;
struct CMsgClientChatGetFriendMessageHistoryForOfflineMessagesDefaultTypeInternal;
extern CMsgClientChatGetFriendMessageHistoryForOfflineMessagesDefaultTypeInternal _CMsgClientChatGetFriendMessageHistoryForOfflineMessages_default_instance_;
class CMsgClientChatGetFriendMessageHistoryResponse;
struct CMsgClientChatGetFriendMessageHistoryResponseDefaultTypeInternal;
extern CMsgClientChatGetFriendMessageHistoryResponseDefaultTypeInternal _CMsgClientChatGetFriendMessageHistoryResponse_default_instance_;
class CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage;
struct CMsgClientChatGetFriendMessageHistoryResponse_FriendMessageDefaultTypeInternal;
extern CMsgClientChatGetFriendMessageHistoryResponse_FriendMessageDefaultTypeInternal _CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage_default_instance_;
class CMsgClientCheckAppBetaPassword;
struct CMsgClientCheckAppBetaPasswordDefaultTypeInternal;
extern CMsgClientCheckAppBetaPasswordDefaultTypeInternal _CMsgClientCheckAppBetaPassword_default_instance_;
class CMsgClientCheckAppBetaPasswordResponse;
struct CMsgClientCheckAppBetaPasswordResponseDefaultTypeInternal;
extern CMsgClientCheckAppBetaPasswordResponseDefaultTypeInternal _CMsgClientCheckAppBetaPasswordResponse_default_instance_;
class CMsgClientCheckAppBetaPasswordResponse_BetaPassword;
struct CMsgClientCheckAppBetaPasswordResponse_BetaPasswordDefaultTypeInternal;
extern CMsgClientCheckAppBetaPasswordResponse_BetaPasswordDefaultTypeInternal _CMsgClientCheckAppBetaPasswordResponse_BetaPassword_default_instance_;
class CMsgClientCheckFileSignature;
struct CMsgClientCheckFileSignatureDefaultTypeInternal;
extern CMsgClientCheckFileSignatureDefaultTypeInternal _CMsgClientCheckFileSignature_default_instance_;
class CMsgClientCheckFileSignatureResponse;
struct CMsgClientCheckFileSignatureResponseDefaultTypeInternal;
extern CMsgClientCheckFileSignatureResponseDefaultTypeInternal _CMsgClientCheckFileSignatureResponse_default_instance_;
class CMsgClientCommentNotifications;
struct CMsgClientCommentNotificationsDefaultTypeInternal;
extern CMsgClientCommentNotificationsDefaultTypeInternal _CMsgClientCommentNotifications_default_instance_;
class CMsgClientDPCheckSpecialSurvey;
struct CMsgClientDPCheckSpecialSurveyDefaultTypeInternal;
extern CMsgClientDPCheckSpecialSurveyDefaultTypeInternal _CMsgClientDPCheckSpecialSurvey_default_instance_;
class CMsgClientDPCheckSpecialSurveyResponse;
struct CMsgClientDPCheckSpecialSurveyResponseDefaultTypeInternal;
extern CMsgClientDPCheckSpecialSurveyResponseDefaultTypeInternal _CMsgClientDPCheckSpecialSurveyResponse_default_instance_;
class CMsgClientDPSendSpecialSurveyResponse;
struct CMsgClientDPSendSpecialSurveyResponseDefaultTypeInternal;
extern CMsgClientDPSendSpecialSurveyResponseDefaultTypeInternal _CMsgClientDPSendSpecialSurveyResponse_default_instance_;
class CMsgClientDPSendSpecialSurveyResponseReply;
struct CMsgClientDPSendSpecialSurveyResponseReplyDefaultTypeInternal;
extern CMsgClientDPSendSpecialSurveyResponseReplyDefaultTypeInternal _CMsgClientDPSendSpecialSurveyResponseReply_default_instance_;
class CMsgClientDeauthorizeDevice;
struct CMsgClientDeauthorizeDeviceDefaultTypeInternal;
extern CMsgClientDeauthorizeDeviceDefaultTypeInternal _CMsgClientDeauthorizeDevice_default_instance_;
class CMsgClientDeauthorizeDeviceRequest;
struct CMsgClientDeauthorizeDeviceRequestDefaultTypeInternal;
extern CMsgClientDeauthorizeDeviceRequestDefaultTypeInternal _CMsgClientDeauthorizeDeviceRequest_default_instance_;
class CMsgClientEmailAddrInfo;
struct CMsgClientEmailAddrInfoDefaultTypeInternal;
extern CMsgClientEmailAddrInfoDefaultTypeInternal _CMsgClientEmailAddrInfo_default_instance_;
class CMsgClientFSGetFriendsSteamLevels;
struct CMsgClientFSGetFriendsSteamLevelsDefaultTypeInternal;
extern CMsgClientFSGetFriendsSteamLevelsDefaultTypeInternal _CMsgClientFSGetFriendsSteamLevels_default_instance_;
class CMsgClientFSGetFriendsSteamLevelsResponse;
struct CMsgClientFSGetFriendsSteamLevelsResponseDefaultTypeInternal;
extern CMsgClientFSGetFriendsSteamLevelsResponseDefaultTypeInternal _CMsgClientFSGetFriendsSteamLevelsResponse_default_instance_;
class CMsgClientFSGetFriendsSteamLevelsResponse_Friend;
struct CMsgClientFSGetFriendsSteamLevelsResponse_FriendDefaultTypeInternal;
extern CMsgClientFSGetFriendsSteamLevelsResponse_FriendDefaultTypeInternal _CMsgClientFSGetFriendsSteamLevelsResponse_Friend_default_instance_;
class CMsgClientFriendUserStatusPublished;
struct CMsgClientFriendUserStatusPublishedDefaultTypeInternal;
extern CMsgClientFriendUserStatusPublishedDefaultTypeInternal _CMsgClientFriendUserStatusPublished_default_instance_;
class CMsgClientGetAuthorizedDevices;
struct CMsgClientGetAuthorizedDevicesDefaultTypeInternal;
extern CMsgClientGetAuthorizedDevicesDefaultTypeInternal _CMsgClientGetAuthorizedDevices_default_instance_;
class CMsgClientGetAuthorizedDevicesResponse;
struct CMsgClientGetAuthorizedDevicesResponseDefaultTypeInternal;
extern CMsgClientGetAuthorizedDevicesResponseDefaultTypeInternal _CMsgClientGetAuthorizedDevicesResponse_default_instance_;
class CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice;
struct CMsgClientGetAuthorizedDevicesResponse_AuthorizedDeviceDefaultTypeInternal;
extern CMsgClientGetAuthorizedDevicesResponse_AuthorizedDeviceDefaultTypeInternal _CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice_default_instance_;
class CMsgClientGetCDNAuthToken;
struct CMsgClientGetCDNAuthTokenDefaultTypeInternal;
extern CMsgClientGetCDNAuthTokenDefaultTypeInternal _CMsgClientGetCDNAuthToken_default_instance_;
class CMsgClientGetCDNAuthTokenResponse;
struct CMsgClientGetCDNAuthTokenResponseDefaultTypeInternal;
extern CMsgClientGetCDNAuthTokenResponseDefaultTypeInternal _CMsgClientGetCDNAuthTokenResponse_default_instance_;
class CMsgClientGetClanActivityCounts;
struct CMsgClientGetClanActivityCountsDefaultTypeInternal;
extern CMsgClientGetClanActivityCountsDefaultTypeInternal _CMsgClientGetClanActivityCounts_default_instance_;
class CMsgClientGetClanActivityCountsResponse;
struct CMsgClientGetClanActivityCountsResponseDefaultTypeInternal;
extern CMsgClientGetClanActivityCountsResponseDefaultTypeInternal _CMsgClientGetClanActivityCountsResponse_default_instance_;
class CMsgClientGetDepotDecryptionKey;
struct CMsgClientGetDepotDecryptionKeyDefaultTypeInternal;
extern CMsgClientGetDepotDecryptionKeyDefaultTypeInternal _CMsgClientGetDepotDecryptionKey_default_instance_;
class CMsgClientGetDepotDecryptionKeyResponse;
struct CMsgClientGetDepotDecryptionKeyResponseDefaultTypeInternal;
extern CMsgClientGetDepotDecryptionKeyResponseDefaultTypeInternal _CMsgClientGetDepotDecryptionKeyResponse_default_instance_;
class CMsgClientGetPeerContentInfo;
struct CMsgClientGetPeerContentInfoDefaultTypeInternal;
extern CMsgClientGetPeerContentInfoDefaultTypeInternal _CMsgClientGetPeerContentInfo_default_instance_;
class CMsgClientGetPeerContentInfoResponse;
struct CMsgClientGetPeerContentInfoResponseDefaultTypeInternal;
extern CMsgClientGetPeerContentInfoResponseDefaultTypeInternal _CMsgClientGetPeerContentInfoResponse_default_instance_;
class CMsgClientItemAnnouncements;
struct CMsgClientItemAnnouncementsDefaultTypeInternal;
extern CMsgClientItemAnnouncementsDefaultTypeInternal _CMsgClientItemAnnouncements_default_instance_;
class CMsgClientItemAnnouncements_UnseenItem;
struct CMsgClientItemAnnouncements_UnseenItemDefaultTypeInternal;
extern CMsgClientItemAnnouncements_UnseenItemDefaultTypeInternal _CMsgClientItemAnnouncements_UnseenItem_default_instance_;
class CMsgClientKickPlayingSession;
struct CMsgClientKickPlayingSessionDefaultTypeInternal;
extern CMsgClientKickPlayingSessionDefaultTypeInternal _CMsgClientKickPlayingSession_default_instance_;
class CMsgClientOGSReportBug;
struct CMsgClientOGSReportBugDefaultTypeInternal;
extern CMsgClientOGSReportBugDefaultTypeInternal _CMsgClientOGSReportBug_default_instance_;
class CMsgClientOGSReportString;
struct CMsgClientOGSReportStringDefaultTypeInternal;
extern CMsgClientOGSReportStringDefaultTypeInternal _CMsgClientOGSReportString_default_instance_;
class CMsgClientOfflineMessageNotification;
struct CMsgClientOfflineMessageNotificationDefaultTypeInternal;
extern CMsgClientOfflineMessageNotificationDefaultTypeInternal _CMsgClientOfflineMessageNotification_default_instance_;
class CMsgClientPendingGameLaunch;
struct CMsgClientPendingGameLaunchDefaultTypeInternal;
extern CMsgClientPendingGameLaunchDefaultTypeInternal _CMsgClientPendingGameLaunch_default_instance_;
class CMsgClientPendingGameLaunchResponse;
struct CMsgClientPendingGameLaunchResponseDefaultTypeInternal;
extern CMsgClientPendingGameLaunchResponseDefaultTypeInternal _CMsgClientPendingGameLaunchResponse_default_instance_;
class CMsgClientPlayingSessionState;
struct CMsgClientPlayingSessionStateDefaultTypeInternal;
extern CMsgClientPlayingSessionStateDefaultTypeInternal _CMsgClientPlayingSessionState_default_instance_;
class CMsgClientPurchaseResponse;
struct CMsgClientPurchaseResponseDefaultTypeInternal;
extern CMsgClientPurchaseResponseDefaultTypeInternal _CMsgClientPurchaseResponse_default_instance_;
class CMsgClientPurchaseWithMachineID;
struct CMsgClientPurchaseWithMachineIDDefaultTypeInternal;
extern CMsgClientPurchaseWithMachineIDDefaultTypeInternal _CMsgClientPurchaseWithMachineID_default_instance_;
class CMsgClientReadMachineAuth;
struct CMsgClientReadMachineAuthDefaultTypeInternal;
extern CMsgClientReadMachineAuthDefaultTypeInternal _CMsgClientReadMachineAuth_default_instance_;
class CMsgClientReadMachineAuthResponse;
struct CMsgClientReadMachineAuthResponseDefaultTypeInternal;
extern CMsgClientReadMachineAuthResponseDefaultTypeInternal _CMsgClientReadMachineAuthResponse_default_instance_;
class CMsgClientRedeemGuestPass;
struct CMsgClientRedeemGuestPassDefaultTypeInternal;
extern CMsgClientRedeemGuestPassDefaultTypeInternal _CMsgClientRedeemGuestPass_default_instance_;
class CMsgClientRedeemGuestPassResponse;
struct CMsgClientRedeemGuestPassResponseDefaultTypeInternal;
extern CMsgClientRedeemGuestPassResponseDefaultTypeInternal _CMsgClientRedeemGuestPassResponse_default_instance_;
class CMsgClientRegisterKey;
struct CMsgClientRegisterKeyDefaultTypeInternal;
extern CMsgClientRegisterKeyDefaultTypeInternal _CMsgClientRegisterKey_default_instance_;
class CMsgClientRegisterOEMMachine;
struct CMsgClientRegisterOEMMachineDefaultTypeInternal;
extern CMsgClientRegisterOEMMachineDefaultTypeInternal _CMsgClientRegisterOEMMachine_default_instance_;
class CMsgClientRegisterOEMMachineResponse;
struct CMsgClientRegisterOEMMachineResponseDefaultTypeInternal;
extern CMsgClientRegisterOEMMachineResponseDefaultTypeInternal _CMsgClientRegisterOEMMachineResponse_default_instance_;
class CMsgClientRequestAccountData;
struct CMsgClientRequestAccountDataDefaultTypeInternal;
extern CMsgClientRequestAccountDataDefaultTypeInternal _CMsgClientRequestAccountData_default_instance_;
class CMsgClientRequestAccountDataResponse;
struct CMsgClientRequestAccountDataResponseDefaultTypeInternal;
extern CMsgClientRequestAccountDataResponseDefaultTypeInternal _CMsgClientRequestAccountDataResponse_default_instance_;
class CMsgClientRequestCommentNotifications;
struct CMsgClientRequestCommentNotificationsDefaultTypeInternal;
extern CMsgClientRequestCommentNotificationsDefaultTypeInternal _CMsgClientRequestCommentNotifications_default_instance_;
class CMsgClientRequestForgottenPasswordEmail;
struct CMsgClientRequestForgottenPasswordEmailDefaultTypeInternal;
extern CMsgClientRequestForgottenPasswordEmailDefaultTypeInternal _CMsgClientRequestForgottenPasswordEmail_default_instance_;
class CMsgClientRequestForgottenPasswordEmailResponse;
struct CMsgClientRequestForgottenPasswordEmailResponseDefaultTypeInternal;
extern CMsgClientRequestForgottenPasswordEmailResponseDefaultTypeInternal _CMsgClientRequestForgottenPasswordEmailResponse_default_instance_;
class CMsgClientRequestFreeLicense;
struct CMsgClientRequestFreeLicenseDefaultTypeInternal;
extern CMsgClientRequestFreeLicenseDefaultTypeInternal _CMsgClientRequestFreeLicense_default_instance_;
class CMsgClientRequestFreeLicenseResponse;
struct CMsgClientRequestFreeLicenseResponseDefaultTypeInternal;
extern CMsgClientRequestFreeLicenseResponseDefaultTypeInternal _CMsgClientRequestFreeLicenseResponse_default_instance_;
class CMsgClientRequestItemAnnouncements;
struct CMsgClientRequestItemAnnouncementsDefaultTypeInternal;
extern CMsgClientRequestItemAnnouncementsDefaultTypeInternal _CMsgClientRequestItemAnnouncements_default_instance_;
class CMsgClientRequestMachineAuth;
struct CMsgClientRequestMachineAuthDefaultTypeInternal;
extern CMsgClientRequestMachineAuthDefaultTypeInternal _CMsgClientRequestMachineAuth_default_instance_;
class CMsgClientRequestMachineAuthResponse;
struct CMsgClientRequestMachineAuthResponseDefaultTypeInternal;
extern CMsgClientRequestMachineAuthResponseDefaultTypeInternal _CMsgClientRequestMachineAuthResponse_default_instance_;
class CMsgClientRequestOfflineMessageCount;
struct CMsgClientRequestOfflineMessageCountDefaultTypeInternal;
extern CMsgClientRequestOfflineMessageCountDefaultTypeInternal _CMsgClientRequestOfflineMessageCount_default_instance_;
class CMsgClientRichPresenceInfo;
struct CMsgClientRichPresenceInfoDefaultTypeInternal;
extern CMsgClientRichPresenceInfoDefaultTypeInternal _CMsgClientRichPresenceInfo_default_instance_;
class CMsgClientRichPresenceInfo_RichPresence;
struct CMsgClientRichPresenceInfo_RichPresenceDefaultTypeInternal;
extern CMsgClientRichPresenceInfo_RichPresenceDefaultTypeInternal _CMsgClientRichPresenceInfo_RichPresence_default_instance_;
class CMsgClientRichPresenceRequest;
struct CMsgClientRichPresenceRequestDefaultTypeInternal;
extern CMsgClientRichPresenceRequestDefaultTypeInternal _CMsgClientRichPresenceRequest_default_instance_;
class CMsgClientRichPresenceUpload;
struct CMsgClientRichPresenceUploadDefaultTypeInternal;
extern CMsgClientRichPresenceUploadDefaultTypeInternal _CMsgClientRichPresenceUpload_default_instance_;
class CMsgClientSentLogs;
struct CMsgClientSentLogsDefaultTypeInternal;
extern CMsgClientSentLogsDefaultTypeInternal _CMsgClientSentLogs_default_instance_;
class CMsgClientServiceCall;
struct CMsgClientServiceCallDefaultTypeInternal;
extern CMsgClientServiceCallDefaultTypeInternal _CMsgClientServiceCall_default_instance_;
class CMsgClientServiceCallResponse;
struct CMsgClientServiceCallResponseDefaultTypeInternal;
extern CMsgClientServiceCallResponseDefaultTypeInternal _CMsgClientServiceCallResponse_default_instance_;
class CMsgClientServiceMethodLegacy;
struct CMsgClientServiceMethodLegacyDefaultTypeInternal;
extern CMsgClientServiceMethodLegacyDefaultTypeInternal _CMsgClientServiceMethodLegacy_default_instance_;
class CMsgClientServiceMethodLegacyResponse;
struct CMsgClientServiceMethodLegacyResponseDefaultTypeInternal;
extern CMsgClientServiceMethodLegacyResponseDefaultTypeInternal _CMsgClientServiceMethodLegacyResponse_default_instance_;
class CMsgClientServiceModule;
struct CMsgClientServiceModuleDefaultTypeInternal;
extern CMsgClientServiceModuleDefaultTypeInternal _CMsgClientServiceModule_default_instance_;
class CMsgClientSharedLibraryLockStatus;
struct CMsgClientSharedLibraryLockStatusDefaultTypeInternal;
extern CMsgClientSharedLibraryLockStatusDefaultTypeInternal _CMsgClientSharedLibraryLockStatus_default_instance_;
class CMsgClientSharedLibraryLockStatus_LockedLibrary;
struct CMsgClientSharedLibraryLockStatus_LockedLibraryDefaultTypeInternal;
extern CMsgClientSharedLibraryLockStatus_LockedLibraryDefaultTypeInternal _CMsgClientSharedLibraryLockStatus_LockedLibrary_default_instance_;
class CMsgClientSharedLibraryStopPlaying;
struct CMsgClientSharedLibraryStopPlayingDefaultTypeInternal;
extern CMsgClientSharedLibraryStopPlayingDefaultTypeInternal _CMsgClientSharedLibraryStopPlaying_default_instance_;
class CMsgClientSharedLibraryStopPlaying_StopApp;
struct CMsgClientSharedLibraryStopPlaying_StopAppDefaultTypeInternal;
extern CMsgClientSharedLibraryStopPlaying_StopAppDefaultTypeInternal _CMsgClientSharedLibraryStopPlaying_StopApp_default_instance_;
class CMsgClientStartPeerContentServer;
struct CMsgClientStartPeerContentServerDefaultTypeInternal;
extern CMsgClientStartPeerContentServerDefaultTypeInternal _CMsgClientStartPeerContentServer_default_instance_;
class CMsgClientStartPeerContentServerResponse;
struct CMsgClientStartPeerContentServerResponseDefaultTypeInternal;
extern CMsgClientStartPeerContentServerResponseDefaultTypeInternal _CMsgClientStartPeerContentServerResponse_default_instance_;
class CMsgClientUGSGetGlobalStats;
struct CMsgClientUGSGetGlobalStatsDefaultTypeInternal;
extern CMsgClientUGSGetGlobalStatsDefaultTypeInternal _CMsgClientUGSGetGlobalStats_default_instance_;
class CMsgClientUGSGetGlobalStatsResponse;
struct CMsgClientUGSGetGlobalStatsResponseDefaultTypeInternal;
extern CMsgClientUGSGetGlobalStatsResponseDefaultTypeInternal _CMsgClientUGSGetGlobalStatsResponse_default_instance_;
class CMsgClientUGSGetGlobalStatsResponse_Day;
struct CMsgClientUGSGetGlobalStatsResponse_DayDefaultTypeInternal;
extern CMsgClientUGSGetGlobalStatsResponse_DayDefaultTypeInternal _CMsgClientUGSGetGlobalStatsResponse_Day_default_instance_;
class CMsgClientUGSGetGlobalStatsResponse_Day_Stat;
struct CMsgClientUGSGetGlobalStatsResponse_Day_StatDefaultTypeInternal;
extern CMsgClientUGSGetGlobalStatsResponse_Day_StatDefaultTypeInternal _CMsgClientUGSGetGlobalStatsResponse_Day_Stat_default_instance_;
class CMsgClientUIMode;
struct CMsgClientUIModeDefaultTypeInternal;
extern CMsgClientUIModeDefaultTypeInternal _CMsgClientUIMode_default_instance_;
class CMsgClientUpdateMachineAuth;
struct CMsgClientUpdateMachineAuthDefaultTypeInternal;
extern CMsgClientUpdateMachineAuthDefaultTypeInternal _CMsgClientUpdateMachineAuth_default_instance_;
class CMsgClientUpdateMachineAuthResponse;
struct CMsgClientUpdateMachineAuthResponseDefaultTypeInternal;
extern CMsgClientUpdateMachineAuthResponseDefaultTypeInternal _CMsgClientUpdateMachineAuthResponse_default_instance_;
class CMsgClientUpdateUserGameInfo;
struct CMsgClientUpdateUserGameInfoDefaultTypeInternal;
extern CMsgClientUpdateUserGameInfoDefaultTypeInternal _CMsgClientUpdateUserGameInfo_default_instance_;
class CMsgClientUseLocalDeviceAuthorizations;
struct CMsgClientUseLocalDeviceAuthorizationsDefaultTypeInternal;
extern CMsgClientUseLocalDeviceAuthorizationsDefaultTypeInternal _CMsgClientUseLocalDeviceAuthorizations_default_instance_;
class CMsgClientUseLocalDeviceAuthorizations_DeviceToken;
struct CMsgClientUseLocalDeviceAuthorizations_DeviceTokenDefaultTypeInternal;
extern CMsgClientUseLocalDeviceAuthorizations_DeviceTokenDefaultTypeInternal _CMsgClientUseLocalDeviceAuthorizations_DeviceToken_default_instance_;
class CMsgClientUserNotifications;
struct CMsgClientUserNotificationsDefaultTypeInternal;
extern CMsgClientUserNotificationsDefaultTypeInternal _CMsgClientUserNotifications_default_instance_;
class CMsgClientUserNotifications_Notification;
struct CMsgClientUserNotifications_NotificationDefaultTypeInternal;
extern CMsgClientUserNotifications_NotificationDefaultTypeInternal _CMsgClientUserNotifications_Notification_default_instance_;
class CMsgClientVanityURLChangedNotification;
struct CMsgClientVanityURLChangedNotificationDefaultTypeInternal;
extern CMsgClientVanityURLChangedNotificationDefaultTypeInternal _CMsgClientVanityURLChangedNotification_default_instance_;
class CMsgClientVoiceCallPreAuthorize;
struct CMsgClientVoiceCallPreAuthorizeDefaultTypeInternal;
extern CMsgClientVoiceCallPreAuthorizeDefaultTypeInternal _CMsgClientVoiceCallPreAuthorize_default_instance_;
class CMsgClientVoiceCallPreAuthorizeResponse;
struct CMsgClientVoiceCallPreAuthorizeResponseDefaultTypeInternal;
extern CMsgClientVoiceCallPreAuthorizeResponseDefaultTypeInternal _CMsgClientVoiceCallPreAuthorizeResponse_default_instance_;
class CMsgDPGetNumberOfCurrentPlayers;
struct CMsgDPGetNumberOfCurrentPlayersDefaultTypeInternal;
extern CMsgDPGetNumberOfCurrentPlayersDefaultTypeInternal _CMsgDPGetNumberOfCurrentPlayers_default_instance_;
class CMsgDPGetNumberOfCurrentPlayersResponse;
struct CMsgDPGetNumberOfCurrentPlayersResponseDefaultTypeInternal;
extern CMsgDPGetNumberOfCurrentPlayersResponseDefaultTypeInternal _CMsgDPGetNumberOfCurrentPlayersResponse_default_instance_;
class CMsgDRMDownloadRequestWithCrashData;
struct CMsgDRMDownloadRequestWithCrashDataDefaultTypeInternal;
extern CMsgDRMDownloadRequestWithCrashDataDefaultTypeInternal _CMsgDRMDownloadRequestWithCrashData_default_instance_;
class CMsgDRMDownloadResponse;
struct CMsgDRMDownloadResponseDefaultTypeInternal;
extern CMsgDRMDownloadResponseDefaultTypeInternal _CMsgDRMDownloadResponse_default_instance_;
class CMsgDRMFinalResult;
struct CMsgDRMFinalResultDefaultTypeInternal;
extern CMsgDRMFinalResultDefaultTypeInternal _CMsgDRMFinalResult_default_instance_;
class CMsgDownloadRateStatistics;
struct CMsgDownloadRateStatisticsDefaultTypeInternal;
extern CMsgDownloadRateStatisticsDefaultTypeInternal _CMsgDownloadRateStatistics_default_instance_;
class CMsgDownloadRateStatistics_StatsInfo;
struct CMsgDownloadRateStatistics_StatsInfoDefaultTypeInternal;
extern CMsgDownloadRateStatistics_StatsInfoDefaultTypeInternal _CMsgDownloadRateStatistics_StatsInfo_default_instance_;
class CMsgFSEnumerateFollowingList;
struct CMsgFSEnumerateFollowingListDefaultTypeInternal;
extern CMsgFSEnumerateFollowingListDefaultTypeInternal _CMsgFSEnumerateFollowingList_default_instance_;
class CMsgFSEnumerateFollowingListResponse;
struct CMsgFSEnumerateFollowingListResponseDefaultTypeInternal;
extern CMsgFSEnumerateFollowingListResponseDefaultTypeInternal _CMsgFSEnumerateFollowingListResponse_default_instance_;
class CMsgFSGetFollowerCount;
struct CMsgFSGetFollowerCountDefaultTypeInternal;
extern CMsgFSGetFollowerCountDefaultTypeInternal _CMsgFSGetFollowerCount_default_instance_;
class CMsgFSGetFollowerCountResponse;
struct CMsgFSGetFollowerCountResponseDefaultTypeInternal;
extern CMsgFSGetFollowerCountResponseDefaultTypeInternal _CMsgFSGetFollowerCountResponse_default_instance_;
class CMsgFSGetIsFollowing;
struct CMsgFSGetIsFollowingDefaultTypeInternal;
extern CMsgFSGetIsFollowingDefaultTypeInternal _CMsgFSGetIsFollowing_default_instance_;
class CMsgFSGetIsFollowingResponse;
struct CMsgFSGetIsFollowingResponseDefaultTypeInternal;
extern CMsgFSGetIsFollowingResponseDefaultTypeInternal _CMsgFSGetIsFollowingResponse_default_instance_;
class CMsgGCClient;
struct CMsgGCClientDefaultTypeInternal;
extern CMsgGCClientDefaultTypeInternal _CMsgGCClient_default_instance_;
class CMsgTrading_CancelTradeRequest;
struct CMsgTrading_CancelTradeRequestDefaultTypeInternal;
extern CMsgTrading_CancelTradeRequestDefaultTypeInternal _CMsgTrading_CancelTradeRequest_default_instance_;
class CMsgTrading_InitiateTradeRequest;
struct CMsgTrading_InitiateTradeRequestDefaultTypeInternal;
extern CMsgTrading_InitiateTradeRequestDefaultTypeInternal _CMsgTrading_InitiateTradeRequest_default_instance_;
class CMsgTrading_InitiateTradeResponse;
struct CMsgTrading_InitiateTradeResponseDefaultTypeInternal;
extern CMsgTrading_InitiateTradeResponseDefaultTypeInternal _CMsgTrading_InitiateTradeResponse_default_instance_;
class CMsgTrading_StartSession;
struct CMsgTrading_StartSessionDefaultTypeInternal;
extern CMsgTrading_StartSessionDefaultTypeInternal _CMsgTrading_StartSession_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CMsgAMUnlockH264* Arena::CreateMaybeMessage<::CMsgAMUnlockH264>(Arena*);
template<> ::CMsgAMUnlockH264Response* Arena::CreateMaybeMessage<::CMsgAMUnlockH264Response>(Arena*);
template<> ::CMsgBadgeCraftedNotification* Arena::CreateMaybeMessage<::CMsgBadgeCraftedNotification>(Arena*);
template<> ::CMsgCREGetUserPublishedItemVoteDetails* Arena::CreateMaybeMessage<::CMsgCREGetUserPublishedItemVoteDetails>(Arena*);
template<> ::CMsgCREGetUserPublishedItemVoteDetailsResponse* Arena::CreateMaybeMessage<::CMsgCREGetUserPublishedItemVoteDetailsResponse>(Arena*);
template<> ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* Arena::CreateMaybeMessage<::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail>(Arena*);
template<> ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* Arena::CreateMaybeMessage<::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId>(Arena*);
template<> ::CMsgCREItemVoteSummary* Arena::CreateMaybeMessage<::CMsgCREItemVoteSummary>(Arena*);
template<> ::CMsgCREItemVoteSummaryResponse* Arena::CreateMaybeMessage<::CMsgCREItemVoteSummaryResponse>(Arena*);
template<> ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary* Arena::CreateMaybeMessage<::CMsgCREItemVoteSummaryResponse_ItemVoteSummary>(Arena*);
template<> ::CMsgCREItemVoteSummary_PublishedFileId* Arena::CreateMaybeMessage<::CMsgCREItemVoteSummary_PublishedFileId>(Arena*);
template<> ::CMsgCREUpdateUserPublishedItemVote* Arena::CreateMaybeMessage<::CMsgCREUpdateUserPublishedItemVote>(Arena*);
template<> ::CMsgCREUpdateUserPublishedItemVoteResponse* Arena::CreateMaybeMessage<::CMsgCREUpdateUserPublishedItemVoteResponse>(Arena*);
template<> ::CMsgClientActivateOEMLicense* Arena::CreateMaybeMessage<::CMsgClientActivateOEMLicense>(Arena*);
template<> ::CMsgClientAuthorizeLocalDevice* Arena::CreateMaybeMessage<::CMsgClientAuthorizeLocalDevice>(Arena*);
template<> ::CMsgClientAuthorizeLocalDeviceNotification* Arena::CreateMaybeMessage<::CMsgClientAuthorizeLocalDeviceNotification>(Arena*);
template<> ::CMsgClientAuthorizeLocalDeviceRequest* Arena::CreateMaybeMessage<::CMsgClientAuthorizeLocalDeviceRequest>(Arena*);
template<> ::CMsgClientChatGetFriendMessageHistory* Arena::CreateMaybeMessage<::CMsgClientChatGetFriendMessageHistory>(Arena*);
template<> ::CMsgClientChatGetFriendMessageHistoryForOfflineMessages* Arena::CreateMaybeMessage<::CMsgClientChatGetFriendMessageHistoryForOfflineMessages>(Arena*);
template<> ::CMsgClientChatGetFriendMessageHistoryResponse* Arena::CreateMaybeMessage<::CMsgClientChatGetFriendMessageHistoryResponse>(Arena*);
template<> ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* Arena::CreateMaybeMessage<::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage>(Arena*);
template<> ::CMsgClientCheckAppBetaPassword* Arena::CreateMaybeMessage<::CMsgClientCheckAppBetaPassword>(Arena*);
template<> ::CMsgClientCheckAppBetaPasswordResponse* Arena::CreateMaybeMessage<::CMsgClientCheckAppBetaPasswordResponse>(Arena*);
template<> ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword* Arena::CreateMaybeMessage<::CMsgClientCheckAppBetaPasswordResponse_BetaPassword>(Arena*);
template<> ::CMsgClientCheckFileSignature* Arena::CreateMaybeMessage<::CMsgClientCheckFileSignature>(Arena*);
template<> ::CMsgClientCheckFileSignatureResponse* Arena::CreateMaybeMessage<::CMsgClientCheckFileSignatureResponse>(Arena*);
template<> ::CMsgClientCommentNotifications* Arena::CreateMaybeMessage<::CMsgClientCommentNotifications>(Arena*);
template<> ::CMsgClientDPCheckSpecialSurvey* Arena::CreateMaybeMessage<::CMsgClientDPCheckSpecialSurvey>(Arena*);
template<> ::CMsgClientDPCheckSpecialSurveyResponse* Arena::CreateMaybeMessage<::CMsgClientDPCheckSpecialSurveyResponse>(Arena*);
template<> ::CMsgClientDPSendSpecialSurveyResponse* Arena::CreateMaybeMessage<::CMsgClientDPSendSpecialSurveyResponse>(Arena*);
template<> ::CMsgClientDPSendSpecialSurveyResponseReply* Arena::CreateMaybeMessage<::CMsgClientDPSendSpecialSurveyResponseReply>(Arena*);
template<> ::CMsgClientDeauthorizeDevice* Arena::CreateMaybeMessage<::CMsgClientDeauthorizeDevice>(Arena*);
template<> ::CMsgClientDeauthorizeDeviceRequest* Arena::CreateMaybeMessage<::CMsgClientDeauthorizeDeviceRequest>(Arena*);
template<> ::CMsgClientEmailAddrInfo* Arena::CreateMaybeMessage<::CMsgClientEmailAddrInfo>(Arena*);
template<> ::CMsgClientFSGetFriendsSteamLevels* Arena::CreateMaybeMessage<::CMsgClientFSGetFriendsSteamLevels>(Arena*);
template<> ::CMsgClientFSGetFriendsSteamLevelsResponse* Arena::CreateMaybeMessage<::CMsgClientFSGetFriendsSteamLevelsResponse>(Arena*);
template<> ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend* Arena::CreateMaybeMessage<::CMsgClientFSGetFriendsSteamLevelsResponse_Friend>(Arena*);
template<> ::CMsgClientFriendUserStatusPublished* Arena::CreateMaybeMessage<::CMsgClientFriendUserStatusPublished>(Arena*);
template<> ::CMsgClientGetAuthorizedDevices* Arena::CreateMaybeMessage<::CMsgClientGetAuthorizedDevices>(Arena*);
template<> ::CMsgClientGetAuthorizedDevicesResponse* Arena::CreateMaybeMessage<::CMsgClientGetAuthorizedDevicesResponse>(Arena*);
template<> ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* Arena::CreateMaybeMessage<::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice>(Arena*);
template<> ::CMsgClientGetCDNAuthToken* Arena::CreateMaybeMessage<::CMsgClientGetCDNAuthToken>(Arena*);
template<> ::CMsgClientGetCDNAuthTokenResponse* Arena::CreateMaybeMessage<::CMsgClientGetCDNAuthTokenResponse>(Arena*);
template<> ::CMsgClientGetClanActivityCounts* Arena::CreateMaybeMessage<::CMsgClientGetClanActivityCounts>(Arena*);
template<> ::CMsgClientGetClanActivityCountsResponse* Arena::CreateMaybeMessage<::CMsgClientGetClanActivityCountsResponse>(Arena*);
template<> ::CMsgClientGetDepotDecryptionKey* Arena::CreateMaybeMessage<::CMsgClientGetDepotDecryptionKey>(Arena*);
template<> ::CMsgClientGetDepotDecryptionKeyResponse* Arena::CreateMaybeMessage<::CMsgClientGetDepotDecryptionKeyResponse>(Arena*);
template<> ::CMsgClientGetPeerContentInfo* Arena::CreateMaybeMessage<::CMsgClientGetPeerContentInfo>(Arena*);
template<> ::CMsgClientGetPeerContentInfoResponse* Arena::CreateMaybeMessage<::CMsgClientGetPeerContentInfoResponse>(Arena*);
template<> ::CMsgClientItemAnnouncements* Arena::CreateMaybeMessage<::CMsgClientItemAnnouncements>(Arena*);
template<> ::CMsgClientItemAnnouncements_UnseenItem* Arena::CreateMaybeMessage<::CMsgClientItemAnnouncements_UnseenItem>(Arena*);
template<> ::CMsgClientKickPlayingSession* Arena::CreateMaybeMessage<::CMsgClientKickPlayingSession>(Arena*);
template<> ::CMsgClientOGSReportBug* Arena::CreateMaybeMessage<::CMsgClientOGSReportBug>(Arena*);
template<> ::CMsgClientOGSReportString* Arena::CreateMaybeMessage<::CMsgClientOGSReportString>(Arena*);
template<> ::CMsgClientOfflineMessageNotification* Arena::CreateMaybeMessage<::CMsgClientOfflineMessageNotification>(Arena*);
template<> ::CMsgClientPendingGameLaunch* Arena::CreateMaybeMessage<::CMsgClientPendingGameLaunch>(Arena*);
template<> ::CMsgClientPendingGameLaunchResponse* Arena::CreateMaybeMessage<::CMsgClientPendingGameLaunchResponse>(Arena*);
template<> ::CMsgClientPlayingSessionState* Arena::CreateMaybeMessage<::CMsgClientPlayingSessionState>(Arena*);
template<> ::CMsgClientPurchaseResponse* Arena::CreateMaybeMessage<::CMsgClientPurchaseResponse>(Arena*);
template<> ::CMsgClientPurchaseWithMachineID* Arena::CreateMaybeMessage<::CMsgClientPurchaseWithMachineID>(Arena*);
template<> ::CMsgClientReadMachineAuth* Arena::CreateMaybeMessage<::CMsgClientReadMachineAuth>(Arena*);
template<> ::CMsgClientReadMachineAuthResponse* Arena::CreateMaybeMessage<::CMsgClientReadMachineAuthResponse>(Arena*);
template<> ::CMsgClientRedeemGuestPass* Arena::CreateMaybeMessage<::CMsgClientRedeemGuestPass>(Arena*);
template<> ::CMsgClientRedeemGuestPassResponse* Arena::CreateMaybeMessage<::CMsgClientRedeemGuestPassResponse>(Arena*);
template<> ::CMsgClientRegisterKey* Arena::CreateMaybeMessage<::CMsgClientRegisterKey>(Arena*);
template<> ::CMsgClientRegisterOEMMachine* Arena::CreateMaybeMessage<::CMsgClientRegisterOEMMachine>(Arena*);
template<> ::CMsgClientRegisterOEMMachineResponse* Arena::CreateMaybeMessage<::CMsgClientRegisterOEMMachineResponse>(Arena*);
template<> ::CMsgClientRequestAccountData* Arena::CreateMaybeMessage<::CMsgClientRequestAccountData>(Arena*);
template<> ::CMsgClientRequestAccountDataResponse* Arena::CreateMaybeMessage<::CMsgClientRequestAccountDataResponse>(Arena*);
template<> ::CMsgClientRequestCommentNotifications* Arena::CreateMaybeMessage<::CMsgClientRequestCommentNotifications>(Arena*);
template<> ::CMsgClientRequestForgottenPasswordEmail* Arena::CreateMaybeMessage<::CMsgClientRequestForgottenPasswordEmail>(Arena*);
template<> ::CMsgClientRequestForgottenPasswordEmailResponse* Arena::CreateMaybeMessage<::CMsgClientRequestForgottenPasswordEmailResponse>(Arena*);
template<> ::CMsgClientRequestFreeLicense* Arena::CreateMaybeMessage<::CMsgClientRequestFreeLicense>(Arena*);
template<> ::CMsgClientRequestFreeLicenseResponse* Arena::CreateMaybeMessage<::CMsgClientRequestFreeLicenseResponse>(Arena*);
template<> ::CMsgClientRequestItemAnnouncements* Arena::CreateMaybeMessage<::CMsgClientRequestItemAnnouncements>(Arena*);
template<> ::CMsgClientRequestMachineAuth* Arena::CreateMaybeMessage<::CMsgClientRequestMachineAuth>(Arena*);
template<> ::CMsgClientRequestMachineAuthResponse* Arena::CreateMaybeMessage<::CMsgClientRequestMachineAuthResponse>(Arena*);
template<> ::CMsgClientRequestOfflineMessageCount* Arena::CreateMaybeMessage<::CMsgClientRequestOfflineMessageCount>(Arena*);
template<> ::CMsgClientRichPresenceInfo* Arena::CreateMaybeMessage<::CMsgClientRichPresenceInfo>(Arena*);
template<> ::CMsgClientRichPresenceInfo_RichPresence* Arena::CreateMaybeMessage<::CMsgClientRichPresenceInfo_RichPresence>(Arena*);
template<> ::CMsgClientRichPresenceRequest* Arena::CreateMaybeMessage<::CMsgClientRichPresenceRequest>(Arena*);
template<> ::CMsgClientRichPresenceUpload* Arena::CreateMaybeMessage<::CMsgClientRichPresenceUpload>(Arena*);
template<> ::CMsgClientSentLogs* Arena::CreateMaybeMessage<::CMsgClientSentLogs>(Arena*);
template<> ::CMsgClientServiceCall* Arena::CreateMaybeMessage<::CMsgClientServiceCall>(Arena*);
template<> ::CMsgClientServiceCallResponse* Arena::CreateMaybeMessage<::CMsgClientServiceCallResponse>(Arena*);
template<> ::CMsgClientServiceMethodLegacy* Arena::CreateMaybeMessage<::CMsgClientServiceMethodLegacy>(Arena*);
template<> ::CMsgClientServiceMethodLegacyResponse* Arena::CreateMaybeMessage<::CMsgClientServiceMethodLegacyResponse>(Arena*);
template<> ::CMsgClientServiceModule* Arena::CreateMaybeMessage<::CMsgClientServiceModule>(Arena*);
template<> ::CMsgClientSharedLibraryLockStatus* Arena::CreateMaybeMessage<::CMsgClientSharedLibraryLockStatus>(Arena*);
template<> ::CMsgClientSharedLibraryLockStatus_LockedLibrary* Arena::CreateMaybeMessage<::CMsgClientSharedLibraryLockStatus_LockedLibrary>(Arena*);
template<> ::CMsgClientSharedLibraryStopPlaying* Arena::CreateMaybeMessage<::CMsgClientSharedLibraryStopPlaying>(Arena*);
template<> ::CMsgClientSharedLibraryStopPlaying_StopApp* Arena::CreateMaybeMessage<::CMsgClientSharedLibraryStopPlaying_StopApp>(Arena*);
template<> ::CMsgClientStartPeerContentServer* Arena::CreateMaybeMessage<::CMsgClientStartPeerContentServer>(Arena*);
template<> ::CMsgClientStartPeerContentServerResponse* Arena::CreateMaybeMessage<::CMsgClientStartPeerContentServerResponse>(Arena*);
template<> ::CMsgClientUGSGetGlobalStats* Arena::CreateMaybeMessage<::CMsgClientUGSGetGlobalStats>(Arena*);
template<> ::CMsgClientUGSGetGlobalStatsResponse* Arena::CreateMaybeMessage<::CMsgClientUGSGetGlobalStatsResponse>(Arena*);
template<> ::CMsgClientUGSGetGlobalStatsResponse_Day* Arena::CreateMaybeMessage<::CMsgClientUGSGetGlobalStatsResponse_Day>(Arena*);
template<> ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat* Arena::CreateMaybeMessage<::CMsgClientUGSGetGlobalStatsResponse_Day_Stat>(Arena*);
template<> ::CMsgClientUIMode* Arena::CreateMaybeMessage<::CMsgClientUIMode>(Arena*);
template<> ::CMsgClientUpdateMachineAuth* Arena::CreateMaybeMessage<::CMsgClientUpdateMachineAuth>(Arena*);
template<> ::CMsgClientUpdateMachineAuthResponse* Arena::CreateMaybeMessage<::CMsgClientUpdateMachineAuthResponse>(Arena*);
template<> ::CMsgClientUpdateUserGameInfo* Arena::CreateMaybeMessage<::CMsgClientUpdateUserGameInfo>(Arena*);
template<> ::CMsgClientUseLocalDeviceAuthorizations* Arena::CreateMaybeMessage<::CMsgClientUseLocalDeviceAuthorizations>(Arena*);
template<> ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken* Arena::CreateMaybeMessage<::CMsgClientUseLocalDeviceAuthorizations_DeviceToken>(Arena*);
template<> ::CMsgClientUserNotifications* Arena::CreateMaybeMessage<::CMsgClientUserNotifications>(Arena*);
template<> ::CMsgClientUserNotifications_Notification* Arena::CreateMaybeMessage<::CMsgClientUserNotifications_Notification>(Arena*);
template<> ::CMsgClientVanityURLChangedNotification* Arena::CreateMaybeMessage<::CMsgClientVanityURLChangedNotification>(Arena*);
template<> ::CMsgClientVoiceCallPreAuthorize* Arena::CreateMaybeMessage<::CMsgClientVoiceCallPreAuthorize>(Arena*);
template<> ::CMsgClientVoiceCallPreAuthorizeResponse* Arena::CreateMaybeMessage<::CMsgClientVoiceCallPreAuthorizeResponse>(Arena*);
template<> ::CMsgDPGetNumberOfCurrentPlayers* Arena::CreateMaybeMessage<::CMsgDPGetNumberOfCurrentPlayers>(Arena*);
template<> ::CMsgDPGetNumberOfCurrentPlayersResponse* Arena::CreateMaybeMessage<::CMsgDPGetNumberOfCurrentPlayersResponse>(Arena*);
template<> ::CMsgDRMDownloadRequestWithCrashData* Arena::CreateMaybeMessage<::CMsgDRMDownloadRequestWithCrashData>(Arena*);
template<> ::CMsgDRMDownloadResponse* Arena::CreateMaybeMessage<::CMsgDRMDownloadResponse>(Arena*);
template<> ::CMsgDRMFinalResult* Arena::CreateMaybeMessage<::CMsgDRMFinalResult>(Arena*);
template<> ::CMsgDownloadRateStatistics* Arena::CreateMaybeMessage<::CMsgDownloadRateStatistics>(Arena*);
template<> ::CMsgDownloadRateStatistics_StatsInfo* Arena::CreateMaybeMessage<::CMsgDownloadRateStatistics_StatsInfo>(Arena*);
template<> ::CMsgFSEnumerateFollowingList* Arena::CreateMaybeMessage<::CMsgFSEnumerateFollowingList>(Arena*);
template<> ::CMsgFSEnumerateFollowingListResponse* Arena::CreateMaybeMessage<::CMsgFSEnumerateFollowingListResponse>(Arena*);
template<> ::CMsgFSGetFollowerCount* Arena::CreateMaybeMessage<::CMsgFSGetFollowerCount>(Arena*);
template<> ::CMsgFSGetFollowerCountResponse* Arena::CreateMaybeMessage<::CMsgFSGetFollowerCountResponse>(Arena*);
template<> ::CMsgFSGetIsFollowing* Arena::CreateMaybeMessage<::CMsgFSGetIsFollowing>(Arena*);
template<> ::CMsgFSGetIsFollowingResponse* Arena::CreateMaybeMessage<::CMsgFSGetIsFollowingResponse>(Arena*);
template<> ::CMsgGCClient* Arena::CreateMaybeMessage<::CMsgGCClient>(Arena*);
template<> ::CMsgTrading_CancelTradeRequest* Arena::CreateMaybeMessage<::CMsgTrading_CancelTradeRequest>(Arena*);
template<> ::CMsgTrading_InitiateTradeRequest* Arena::CreateMaybeMessage<::CMsgTrading_InitiateTradeRequest>(Arena*);
template<> ::CMsgTrading_InitiateTradeResponse* Arena::CreateMaybeMessage<::CMsgTrading_InitiateTradeResponse>(Arena*);
template<> ::CMsgTrading_StartSession* Arena::CreateMaybeMessage<::CMsgTrading_StartSession>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class CMsgClientUpdateUserGameInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUpdateUserGameInfo) */ {
 public:
  inline CMsgClientUpdateUserGameInfo() : CMsgClientUpdateUserGameInfo(nullptr) {}
  virtual ~CMsgClientUpdateUserGameInfo();
  explicit constexpr CMsgClientUpdateUserGameInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUpdateUserGameInfo(const CMsgClientUpdateUserGameInfo& from);
  CMsgClientUpdateUserGameInfo(CMsgClientUpdateUserGameInfo&& from) noexcept
    : CMsgClientUpdateUserGameInfo() {
    *this = ::std::move(from);
  }

  inline CMsgClientUpdateUserGameInfo& operator=(const CMsgClientUpdateUserGameInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUpdateUserGameInfo& operator=(CMsgClientUpdateUserGameInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUpdateUserGameInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUpdateUserGameInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUpdateUserGameInfo*>(
               &_CMsgClientUpdateUserGameInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CMsgClientUpdateUserGameInfo& a, CMsgClientUpdateUserGameInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUpdateUserGameInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUpdateUserGameInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUpdateUserGameInfo* New() const final {
    return CreateMaybeMessage<CMsgClientUpdateUserGameInfo>(nullptr);
  }

  CMsgClientUpdateUserGameInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUpdateUserGameInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUpdateUserGameInfo& from);
  void MergeFrom(const CMsgClientUpdateUserGameInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUpdateUserGameInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUpdateUserGameInfo";
  }
  protected:
  explicit CMsgClientUpdateUserGameInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTokenFieldNumber = 5,
    kSteamidIdgsFieldNumber = 1,
    kGameidFieldNumber = 2,
    kGameIpFieldNumber = 3,
    kGamePortFieldNumber = 4,
  };
  // optional bytes token = 5;
  bool has_token() const;
  private:
  bool _internal_has_token() const;
  public:
  void clear_token();
  const std::string& token() const;
  void set_token(const std::string& value);
  void set_token(std::string&& value);
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  std::string* mutable_token();
  std::string* release_token();
  void set_allocated_token(std::string* token);
  private:
  const std::string& _internal_token() const;
  void _internal_set_token(const std::string& value);
  std::string* _internal_mutable_token();
  public:

  // optional fixed64 steamid_idgs = 1;
  bool has_steamid_idgs() const;
  private:
  bool _internal_has_steamid_idgs() const;
  public:
  void clear_steamid_idgs();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_idgs() const;
  void set_steamid_idgs(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid_idgs() const;
  void _internal_set_steamid_idgs(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 gameid = 2;
  bool has_gameid() const;
  private:
  bool _internal_has_gameid() const;
  public:
  void clear_gameid();
  ::PROTOBUF_NAMESPACE_ID::uint64 gameid() const;
  void set_gameid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gameid() const;
  void _internal_set_gameid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 game_ip = 3;
  bool has_game_ip() const;
  private:
  bool _internal_has_game_ip() const;
  public:
  void clear_game_ip();
  ::PROTOBUF_NAMESPACE_ID::uint32 game_ip() const;
  void set_game_ip(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_game_ip() const;
  void _internal_set_game_ip(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 game_port = 4;
  bool has_game_port() const;
  private:
  bool _internal_has_game_port() const;
  public:
  void clear_game_port();
  ::PROTOBUF_NAMESPACE_ID::uint32 game_port() const;
  void set_game_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_game_port() const;
  void _internal_set_game_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUpdateUserGameInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr token_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_idgs_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gameid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 game_ip_;
  ::PROTOBUF_NAMESPACE_ID::uint32 game_port_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientRichPresenceUpload PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientRichPresenceUpload) */ {
 public:
  inline CMsgClientRichPresenceUpload() : CMsgClientRichPresenceUpload(nullptr) {}
  virtual ~CMsgClientRichPresenceUpload();
  explicit constexpr CMsgClientRichPresenceUpload(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientRichPresenceUpload(const CMsgClientRichPresenceUpload& from);
  CMsgClientRichPresenceUpload(CMsgClientRichPresenceUpload&& from) noexcept
    : CMsgClientRichPresenceUpload() {
    *this = ::std::move(from);
  }

  inline CMsgClientRichPresenceUpload& operator=(const CMsgClientRichPresenceUpload& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientRichPresenceUpload& operator=(CMsgClientRichPresenceUpload&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientRichPresenceUpload& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientRichPresenceUpload* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRichPresenceUpload*>(
               &_CMsgClientRichPresenceUpload_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CMsgClientRichPresenceUpload& a, CMsgClientRichPresenceUpload& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientRichPresenceUpload* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientRichPresenceUpload* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientRichPresenceUpload* New() const final {
    return CreateMaybeMessage<CMsgClientRichPresenceUpload>(nullptr);
  }

  CMsgClientRichPresenceUpload* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientRichPresenceUpload>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientRichPresenceUpload& from);
  void MergeFrom(const CMsgClientRichPresenceUpload& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientRichPresenceUpload* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientRichPresenceUpload";
  }
  protected:
  explicit CMsgClientRichPresenceUpload(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamidBroadcastFieldNumber = 2,
    kRichPresenceKvFieldNumber = 1,
  };
  // repeated fixed64 steamid_broadcast = 2;
  int steamid_broadcast_size() const;
  private:
  int _internal_steamid_broadcast_size() const;
  public:
  void clear_steamid_broadcast();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid_broadcast(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_steamid_broadcast() const;
  void _internal_add_steamid_broadcast(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_steamid_broadcast();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_broadcast(int index) const;
  void set_steamid_broadcast(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_steamid_broadcast(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      steamid_broadcast() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_steamid_broadcast();

  // optional bytes rich_presence_kv = 1;
  bool has_rich_presence_kv() const;
  private:
  bool _internal_has_rich_presence_kv() const;
  public:
  void clear_rich_presence_kv();
  const std::string& rich_presence_kv() const;
  void set_rich_presence_kv(const std::string& value);
  void set_rich_presence_kv(std::string&& value);
  void set_rich_presence_kv(const char* value);
  void set_rich_presence_kv(const void* value, size_t size);
  std::string* mutable_rich_presence_kv();
  std::string* release_rich_presence_kv();
  void set_allocated_rich_presence_kv(std::string* rich_presence_kv);
  private:
  const std::string& _internal_rich_presence_kv() const;
  void _internal_set_rich_presence_kv(const std::string& value);
  std::string* _internal_mutable_rich_presence_kv();
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientRichPresenceUpload)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > steamid_broadcast_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rich_presence_kv_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientRichPresenceRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientRichPresenceRequest) */ {
 public:
  inline CMsgClientRichPresenceRequest() : CMsgClientRichPresenceRequest(nullptr) {}
  virtual ~CMsgClientRichPresenceRequest();
  explicit constexpr CMsgClientRichPresenceRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientRichPresenceRequest(const CMsgClientRichPresenceRequest& from);
  CMsgClientRichPresenceRequest(CMsgClientRichPresenceRequest&& from) noexcept
    : CMsgClientRichPresenceRequest() {
    *this = ::std::move(from);
  }

  inline CMsgClientRichPresenceRequest& operator=(const CMsgClientRichPresenceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientRichPresenceRequest& operator=(CMsgClientRichPresenceRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientRichPresenceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientRichPresenceRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRichPresenceRequest*>(
               &_CMsgClientRichPresenceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CMsgClientRichPresenceRequest& a, CMsgClientRichPresenceRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientRichPresenceRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientRichPresenceRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientRichPresenceRequest* New() const final {
    return CreateMaybeMessage<CMsgClientRichPresenceRequest>(nullptr);
  }

  CMsgClientRichPresenceRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientRichPresenceRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientRichPresenceRequest& from);
  void MergeFrom(const CMsgClientRichPresenceRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientRichPresenceRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientRichPresenceRequest";
  }
  protected:
  explicit CMsgClientRichPresenceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamidRequestFieldNumber = 1,
  };
  // repeated fixed64 steamid_request = 1;
  int steamid_request_size() const;
  private:
  int _internal_steamid_request_size() const;
  public:
  void clear_steamid_request();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid_request(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_steamid_request() const;
  void _internal_add_steamid_request(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_steamid_request();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_request(int index) const;
  void set_steamid_request(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_steamid_request(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      steamid_request() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_steamid_request();

  // @@protoc_insertion_point(class_scope:CMsgClientRichPresenceRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > steamid_request_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientRichPresenceInfo_RichPresence PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientRichPresenceInfo.RichPresence) */ {
 public:
  inline CMsgClientRichPresenceInfo_RichPresence() : CMsgClientRichPresenceInfo_RichPresence(nullptr) {}
  virtual ~CMsgClientRichPresenceInfo_RichPresence();
  explicit constexpr CMsgClientRichPresenceInfo_RichPresence(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientRichPresenceInfo_RichPresence(const CMsgClientRichPresenceInfo_RichPresence& from);
  CMsgClientRichPresenceInfo_RichPresence(CMsgClientRichPresenceInfo_RichPresence&& from) noexcept
    : CMsgClientRichPresenceInfo_RichPresence() {
    *this = ::std::move(from);
  }

  inline CMsgClientRichPresenceInfo_RichPresence& operator=(const CMsgClientRichPresenceInfo_RichPresence& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientRichPresenceInfo_RichPresence& operator=(CMsgClientRichPresenceInfo_RichPresence&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientRichPresenceInfo_RichPresence& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientRichPresenceInfo_RichPresence* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRichPresenceInfo_RichPresence*>(
               &_CMsgClientRichPresenceInfo_RichPresence_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CMsgClientRichPresenceInfo_RichPresence& a, CMsgClientRichPresenceInfo_RichPresence& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientRichPresenceInfo_RichPresence* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientRichPresenceInfo_RichPresence* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientRichPresenceInfo_RichPresence* New() const final {
    return CreateMaybeMessage<CMsgClientRichPresenceInfo_RichPresence>(nullptr);
  }

  CMsgClientRichPresenceInfo_RichPresence* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientRichPresenceInfo_RichPresence>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientRichPresenceInfo_RichPresence& from);
  void MergeFrom(const CMsgClientRichPresenceInfo_RichPresence& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientRichPresenceInfo_RichPresence* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientRichPresenceInfo.RichPresence";
  }
  protected:
  explicit CMsgClientRichPresenceInfo_RichPresence(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRichPresenceKvFieldNumber = 2,
    kSteamidUserFieldNumber = 1,
  };
  // optional bytes rich_presence_kv = 2;
  bool has_rich_presence_kv() const;
  private:
  bool _internal_has_rich_presence_kv() const;
  public:
  void clear_rich_presence_kv();
  const std::string& rich_presence_kv() const;
  void set_rich_presence_kv(const std::string& value);
  void set_rich_presence_kv(std::string&& value);
  void set_rich_presence_kv(const char* value);
  void set_rich_presence_kv(const void* value, size_t size);
  std::string* mutable_rich_presence_kv();
  std::string* release_rich_presence_kv();
  void set_allocated_rich_presence_kv(std::string* rich_presence_kv);
  private:
  const std::string& _internal_rich_presence_kv() const;
  void _internal_set_rich_presence_kv(const std::string& value);
  std::string* _internal_mutable_rich_presence_kv();
  public:

  // optional fixed64 steamid_user = 1;
  bool has_steamid_user() const;
  private:
  bool _internal_has_steamid_user() const;
  public:
  void clear_steamid_user();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_user() const;
  void set_steamid_user(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid_user() const;
  void _internal_set_steamid_user(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientRichPresenceInfo.RichPresence)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rich_presence_kv_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_user_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientRichPresenceInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientRichPresenceInfo) */ {
 public:
  inline CMsgClientRichPresenceInfo() : CMsgClientRichPresenceInfo(nullptr) {}
  virtual ~CMsgClientRichPresenceInfo();
  explicit constexpr CMsgClientRichPresenceInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientRichPresenceInfo(const CMsgClientRichPresenceInfo& from);
  CMsgClientRichPresenceInfo(CMsgClientRichPresenceInfo&& from) noexcept
    : CMsgClientRichPresenceInfo() {
    *this = ::std::move(from);
  }

  inline CMsgClientRichPresenceInfo& operator=(const CMsgClientRichPresenceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientRichPresenceInfo& operator=(CMsgClientRichPresenceInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientRichPresenceInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientRichPresenceInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRichPresenceInfo*>(
               &_CMsgClientRichPresenceInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CMsgClientRichPresenceInfo& a, CMsgClientRichPresenceInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientRichPresenceInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientRichPresenceInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientRichPresenceInfo* New() const final {
    return CreateMaybeMessage<CMsgClientRichPresenceInfo>(nullptr);
  }

  CMsgClientRichPresenceInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientRichPresenceInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientRichPresenceInfo& from);
  void MergeFrom(const CMsgClientRichPresenceInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientRichPresenceInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientRichPresenceInfo";
  }
  protected:
  explicit CMsgClientRichPresenceInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientRichPresenceInfo_RichPresence RichPresence;

  // accessors -------------------------------------------------------

  enum : int {
    kRichPresenceFieldNumber = 1,
  };
  // repeated .CMsgClientRichPresenceInfo.RichPresence rich_presence = 1;
  int rich_presence_size() const;
  private:
  int _internal_rich_presence_size() const;
  public:
  void clear_rich_presence();
  ::CMsgClientRichPresenceInfo_RichPresence* mutable_rich_presence(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientRichPresenceInfo_RichPresence >*
      mutable_rich_presence();
  private:
  const ::CMsgClientRichPresenceInfo_RichPresence& _internal_rich_presence(int index) const;
  ::CMsgClientRichPresenceInfo_RichPresence* _internal_add_rich_presence();
  public:
  const ::CMsgClientRichPresenceInfo_RichPresence& rich_presence(int index) const;
  ::CMsgClientRichPresenceInfo_RichPresence* add_rich_presence();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientRichPresenceInfo_RichPresence >&
      rich_presence() const;

  // @@protoc_insertion_point(class_scope:CMsgClientRichPresenceInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientRichPresenceInfo_RichPresence > rich_presence_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientCheckFileSignature PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientCheckFileSignature) */ {
 public:
  inline CMsgClientCheckFileSignature() : CMsgClientCheckFileSignature(nullptr) {}
  virtual ~CMsgClientCheckFileSignature();
  explicit constexpr CMsgClientCheckFileSignature(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientCheckFileSignature(const CMsgClientCheckFileSignature& from);
  CMsgClientCheckFileSignature(CMsgClientCheckFileSignature&& from) noexcept
    : CMsgClientCheckFileSignature() {
    *this = ::std::move(from);
  }

  inline CMsgClientCheckFileSignature& operator=(const CMsgClientCheckFileSignature& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientCheckFileSignature& operator=(CMsgClientCheckFileSignature&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientCheckFileSignature& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientCheckFileSignature* internal_default_instance() {
    return reinterpret_cast<const CMsgClientCheckFileSignature*>(
               &_CMsgClientCheckFileSignature_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CMsgClientCheckFileSignature& a, CMsgClientCheckFileSignature& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientCheckFileSignature* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientCheckFileSignature* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientCheckFileSignature* New() const final {
    return CreateMaybeMessage<CMsgClientCheckFileSignature>(nullptr);
  }

  CMsgClientCheckFileSignature* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientCheckFileSignature>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientCheckFileSignature& from);
  void MergeFrom(const CMsgClientCheckFileSignature& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientCheckFileSignature* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientCheckFileSignature";
  }
  protected:
  explicit CMsgClientCheckFileSignature(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppIdFieldNumber = 1,
  };
  // optional uint32 app_id = 1;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientCheckFileSignature)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientCheckFileSignatureResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientCheckFileSignatureResponse) */ {
 public:
  inline CMsgClientCheckFileSignatureResponse() : CMsgClientCheckFileSignatureResponse(nullptr) {}
  virtual ~CMsgClientCheckFileSignatureResponse();
  explicit constexpr CMsgClientCheckFileSignatureResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientCheckFileSignatureResponse(const CMsgClientCheckFileSignatureResponse& from);
  CMsgClientCheckFileSignatureResponse(CMsgClientCheckFileSignatureResponse&& from) noexcept
    : CMsgClientCheckFileSignatureResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientCheckFileSignatureResponse& operator=(const CMsgClientCheckFileSignatureResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientCheckFileSignatureResponse& operator=(CMsgClientCheckFileSignatureResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientCheckFileSignatureResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientCheckFileSignatureResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientCheckFileSignatureResponse*>(
               &_CMsgClientCheckFileSignatureResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CMsgClientCheckFileSignatureResponse& a, CMsgClientCheckFileSignatureResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientCheckFileSignatureResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientCheckFileSignatureResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientCheckFileSignatureResponse* New() const final {
    return CreateMaybeMessage<CMsgClientCheckFileSignatureResponse>(nullptr);
  }

  CMsgClientCheckFileSignatureResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientCheckFileSignatureResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientCheckFileSignatureResponse& from);
  void MergeFrom(const CMsgClientCheckFileSignatureResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientCheckFileSignatureResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientCheckFileSignatureResponse";
  }
  protected:
  explicit CMsgClientCheckFileSignatureResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilenameFieldNumber = 4,
    kShaFileFieldNumber = 6,
    kSignatureheaderFieldNumber = 7,
    kAppIdFieldNumber = 1,
    kPidFieldNumber = 2,
    kEresultFieldNumber = 3,
    kEsignatureresultFieldNumber = 5,
    kFilesizeFieldNumber = 8,
    kGetlasterrorFieldNumber = 9,
    kEvalvesignaturecheckdetailFieldNumber = 10,
  };
  // optional string filename = 4;
  bool has_filename() const;
  private:
  bool _internal_has_filename() const;
  public:
  void clear_filename();
  const std::string& filename() const;
  void set_filename(const std::string& value);
  void set_filename(std::string&& value);
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  std::string* mutable_filename();
  std::string* release_filename();
  void set_allocated_filename(std::string* filename);
  private:
  const std::string& _internal_filename() const;
  void _internal_set_filename(const std::string& value);
  std::string* _internal_mutable_filename();
  public:

  // optional bytes sha_file = 6;
  bool has_sha_file() const;
  private:
  bool _internal_has_sha_file() const;
  public:
  void clear_sha_file();
  const std::string& sha_file() const;
  void set_sha_file(const std::string& value);
  void set_sha_file(std::string&& value);
  void set_sha_file(const char* value);
  void set_sha_file(const void* value, size_t size);
  std::string* mutable_sha_file();
  std::string* release_sha_file();
  void set_allocated_sha_file(std::string* sha_file);
  private:
  const std::string& _internal_sha_file() const;
  void _internal_set_sha_file(const std::string& value);
  std::string* _internal_mutable_sha_file();
  public:

  // optional bytes signatureheader = 7;
  bool has_signatureheader() const;
  private:
  bool _internal_has_signatureheader() const;
  public:
  void clear_signatureheader();
  const std::string& signatureheader() const;
  void set_signatureheader(const std::string& value);
  void set_signatureheader(std::string&& value);
  void set_signatureheader(const char* value);
  void set_signatureheader(const void* value, size_t size);
  std::string* mutable_signatureheader();
  std::string* release_signatureheader();
  void set_allocated_signatureheader(std::string* signatureheader);
  private:
  const std::string& _internal_signatureheader() const;
  void _internal_set_signatureheader(const std::string& value);
  std::string* _internal_mutable_signatureheader();
  public:

  // optional uint32 app_id = 1;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 pid = 2;
  bool has_pid() const;
  private:
  bool _internal_has_pid() const;
  public:
  void clear_pid();
  ::PROTOBUF_NAMESPACE_ID::uint32 pid() const;
  void set_pid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pid() const;
  void _internal_set_pid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 eresult = 3;
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 esignatureresult = 5;
  bool has_esignatureresult() const;
  private:
  bool _internal_has_esignatureresult() const;
  public:
  void clear_esignatureresult();
  ::PROTOBUF_NAMESPACE_ID::uint32 esignatureresult() const;
  void set_esignatureresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_esignatureresult() const;
  void _internal_set_esignatureresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 filesize = 8;
  bool has_filesize() const;
  private:
  bool _internal_has_filesize() const;
  public:
  void clear_filesize();
  ::PROTOBUF_NAMESPACE_ID::uint32 filesize() const;
  void set_filesize(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_filesize() const;
  void _internal_set_filesize(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 getlasterror = 9;
  bool has_getlasterror() const;
  private:
  bool _internal_has_getlasterror() const;
  public:
  void clear_getlasterror();
  ::PROTOBUF_NAMESPACE_ID::uint32 getlasterror() const;
  void set_getlasterror(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_getlasterror() const;
  void _internal_set_getlasterror(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 evalvesignaturecheckdetail = 10;
  bool has_evalvesignaturecheckdetail() const;
  private:
  bool _internal_has_evalvesignaturecheckdetail() const;
  public:
  void clear_evalvesignaturecheckdetail();
  ::PROTOBUF_NAMESPACE_ID::uint32 evalvesignaturecheckdetail() const;
  void set_evalvesignaturecheckdetail(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_evalvesignaturecheckdetail() const;
  void _internal_set_evalvesignaturecheckdetail(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientCheckFileSignatureResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filename_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sha_file_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr signatureheader_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 pid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult_;
  ::PROTOBUF_NAMESPACE_ID::uint32 esignatureresult_;
  ::PROTOBUF_NAMESPACE_ID::uint32 filesize_;
  ::PROTOBUF_NAMESPACE_ID::uint32 getlasterror_;
  ::PROTOBUF_NAMESPACE_ID::uint32 evalvesignaturecheckdetail_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientReadMachineAuth PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientReadMachineAuth) */ {
 public:
  inline CMsgClientReadMachineAuth() : CMsgClientReadMachineAuth(nullptr) {}
  virtual ~CMsgClientReadMachineAuth();
  explicit constexpr CMsgClientReadMachineAuth(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientReadMachineAuth(const CMsgClientReadMachineAuth& from);
  CMsgClientReadMachineAuth(CMsgClientReadMachineAuth&& from) noexcept
    : CMsgClientReadMachineAuth() {
    *this = ::std::move(from);
  }

  inline CMsgClientReadMachineAuth& operator=(const CMsgClientReadMachineAuth& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientReadMachineAuth& operator=(CMsgClientReadMachineAuth&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientReadMachineAuth& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientReadMachineAuth* internal_default_instance() {
    return reinterpret_cast<const CMsgClientReadMachineAuth*>(
               &_CMsgClientReadMachineAuth_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CMsgClientReadMachineAuth& a, CMsgClientReadMachineAuth& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientReadMachineAuth* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientReadMachineAuth* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientReadMachineAuth* New() const final {
    return CreateMaybeMessage<CMsgClientReadMachineAuth>(nullptr);
  }

  CMsgClientReadMachineAuth* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientReadMachineAuth>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientReadMachineAuth& from);
  void MergeFrom(const CMsgClientReadMachineAuth& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientReadMachineAuth* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientReadMachineAuth";
  }
  protected:
  explicit CMsgClientReadMachineAuth(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilenameFieldNumber = 1,
    kOffsetFieldNumber = 2,
    kCubtoreadFieldNumber = 3,
  };
  // optional string filename = 1;
  bool has_filename() const;
  private:
  bool _internal_has_filename() const;
  public:
  void clear_filename();
  const std::string& filename() const;
  void set_filename(const std::string& value);
  void set_filename(std::string&& value);
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  std::string* mutable_filename();
  std::string* release_filename();
  void set_allocated_filename(std::string* filename);
  private:
  const std::string& _internal_filename() const;
  void _internal_set_filename(const std::string& value);
  std::string* _internal_mutable_filename();
  public:

  // optional uint32 offset = 2;
  bool has_offset() const;
  private:
  bool _internal_has_offset() const;
  public:
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_offset() const;
  void _internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 cubtoread = 3;
  bool has_cubtoread() const;
  private:
  bool _internal_has_cubtoread() const;
  public:
  void clear_cubtoread();
  ::PROTOBUF_NAMESPACE_ID::uint32 cubtoread() const;
  void set_cubtoread(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cubtoread() const;
  void _internal_set_cubtoread(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientReadMachineAuth)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filename_;
  ::PROTOBUF_NAMESPACE_ID::uint32 offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cubtoread_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientReadMachineAuthResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientReadMachineAuthResponse) */ {
 public:
  inline CMsgClientReadMachineAuthResponse() : CMsgClientReadMachineAuthResponse(nullptr) {}
  virtual ~CMsgClientReadMachineAuthResponse();
  explicit constexpr CMsgClientReadMachineAuthResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientReadMachineAuthResponse(const CMsgClientReadMachineAuthResponse& from);
  CMsgClientReadMachineAuthResponse(CMsgClientReadMachineAuthResponse&& from) noexcept
    : CMsgClientReadMachineAuthResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientReadMachineAuthResponse& operator=(const CMsgClientReadMachineAuthResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientReadMachineAuthResponse& operator=(CMsgClientReadMachineAuthResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientReadMachineAuthResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientReadMachineAuthResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientReadMachineAuthResponse*>(
               &_CMsgClientReadMachineAuthResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CMsgClientReadMachineAuthResponse& a, CMsgClientReadMachineAuthResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientReadMachineAuthResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientReadMachineAuthResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientReadMachineAuthResponse* New() const final {
    return CreateMaybeMessage<CMsgClientReadMachineAuthResponse>(nullptr);
  }

  CMsgClientReadMachineAuthResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientReadMachineAuthResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientReadMachineAuthResponse& from);
  void MergeFrom(const CMsgClientReadMachineAuthResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientReadMachineAuthResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientReadMachineAuthResponse";
  }
  protected:
  explicit CMsgClientReadMachineAuthResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilenameFieldNumber = 1,
    kShaFileFieldNumber = 4,
    kBytesReadFieldNumber = 8,
    kFilenameSentryFieldNumber = 9,
    kEresultFieldNumber = 2,
    kFilesizeFieldNumber = 3,
    kGetlasterrorFieldNumber = 5,
    kOffsetFieldNumber = 6,
    kCubreadFieldNumber = 7,
  };
  // optional string filename = 1;
  bool has_filename() const;
  private:
  bool _internal_has_filename() const;
  public:
  void clear_filename();
  const std::string& filename() const;
  void set_filename(const std::string& value);
  void set_filename(std::string&& value);
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  std::string* mutable_filename();
  std::string* release_filename();
  void set_allocated_filename(std::string* filename);
  private:
  const std::string& _internal_filename() const;
  void _internal_set_filename(const std::string& value);
  std::string* _internal_mutable_filename();
  public:

  // optional bytes sha_file = 4;
  bool has_sha_file() const;
  private:
  bool _internal_has_sha_file() const;
  public:
  void clear_sha_file();
  const std::string& sha_file() const;
  void set_sha_file(const std::string& value);
  void set_sha_file(std::string&& value);
  void set_sha_file(const char* value);
  void set_sha_file(const void* value, size_t size);
  std::string* mutable_sha_file();
  std::string* release_sha_file();
  void set_allocated_sha_file(std::string* sha_file);
  private:
  const std::string& _internal_sha_file() const;
  void _internal_set_sha_file(const std::string& value);
  std::string* _internal_mutable_sha_file();
  public:

  // optional bytes bytes_read = 8;
  bool has_bytes_read() const;
  private:
  bool _internal_has_bytes_read() const;
  public:
  void clear_bytes_read();
  const std::string& bytes_read() const;
  void set_bytes_read(const std::string& value);
  void set_bytes_read(std::string&& value);
  void set_bytes_read(const char* value);
  void set_bytes_read(const void* value, size_t size);
  std::string* mutable_bytes_read();
  std::string* release_bytes_read();
  void set_allocated_bytes_read(std::string* bytes_read);
  private:
  const std::string& _internal_bytes_read() const;
  void _internal_set_bytes_read(const std::string& value);
  std::string* _internal_mutable_bytes_read();
  public:

  // optional string filename_sentry = 9;
  bool has_filename_sentry() const;
  private:
  bool _internal_has_filename_sentry() const;
  public:
  void clear_filename_sentry();
  const std::string& filename_sentry() const;
  void set_filename_sentry(const std::string& value);
  void set_filename_sentry(std::string&& value);
  void set_filename_sentry(const char* value);
  void set_filename_sentry(const char* value, size_t size);
  std::string* mutable_filename_sentry();
  std::string* release_filename_sentry();
  void set_allocated_filename_sentry(std::string* filename_sentry);
  private:
  const std::string& _internal_filename_sentry() const;
  void _internal_set_filename_sentry(const std::string& value);
  std::string* _internal_mutable_filename_sentry();
  public:

  // optional uint32 eresult = 2;
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 filesize = 3;
  bool has_filesize() const;
  private:
  bool _internal_has_filesize() const;
  public:
  void clear_filesize();
  ::PROTOBUF_NAMESPACE_ID::uint32 filesize() const;
  void set_filesize(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_filesize() const;
  void _internal_set_filesize(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 getlasterror = 5;
  bool has_getlasterror() const;
  private:
  bool _internal_has_getlasterror() const;
  public:
  void clear_getlasterror();
  ::PROTOBUF_NAMESPACE_ID::uint32 getlasterror() const;
  void set_getlasterror(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_getlasterror() const;
  void _internal_set_getlasterror(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 offset = 6;
  bool has_offset() const;
  private:
  bool _internal_has_offset() const;
  public:
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_offset() const;
  void _internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 cubread = 7;
  bool has_cubread() const;
  private:
  bool _internal_has_cubread() const;
  public:
  void clear_cubread();
  ::PROTOBUF_NAMESPACE_ID::uint32 cubread() const;
  void set_cubread(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cubread() const;
  void _internal_set_cubread(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientReadMachineAuthResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filename_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sha_file_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bytes_read_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filename_sentry_;
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult_;
  ::PROTOBUF_NAMESPACE_ID::uint32 filesize_;
  ::PROTOBUF_NAMESPACE_ID::uint32 getlasterror_;
  ::PROTOBUF_NAMESPACE_ID::uint32 offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cubread_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUpdateMachineAuth PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUpdateMachineAuth) */ {
 public:
  inline CMsgClientUpdateMachineAuth() : CMsgClientUpdateMachineAuth(nullptr) {}
  virtual ~CMsgClientUpdateMachineAuth();
  explicit constexpr CMsgClientUpdateMachineAuth(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUpdateMachineAuth(const CMsgClientUpdateMachineAuth& from);
  CMsgClientUpdateMachineAuth(CMsgClientUpdateMachineAuth&& from) noexcept
    : CMsgClientUpdateMachineAuth() {
    *this = ::std::move(from);
  }

  inline CMsgClientUpdateMachineAuth& operator=(const CMsgClientUpdateMachineAuth& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUpdateMachineAuth& operator=(CMsgClientUpdateMachineAuth&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUpdateMachineAuth& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUpdateMachineAuth* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUpdateMachineAuth*>(
               &_CMsgClientUpdateMachineAuth_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CMsgClientUpdateMachineAuth& a, CMsgClientUpdateMachineAuth& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUpdateMachineAuth* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUpdateMachineAuth* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUpdateMachineAuth* New() const final {
    return CreateMaybeMessage<CMsgClientUpdateMachineAuth>(nullptr);
  }

  CMsgClientUpdateMachineAuth* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUpdateMachineAuth>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUpdateMachineAuth& from);
  void MergeFrom(const CMsgClientUpdateMachineAuth& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUpdateMachineAuth* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUpdateMachineAuth";
  }
  protected:
  explicit CMsgClientUpdateMachineAuth(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilenameFieldNumber = 1,
    kBytesFieldNumber = 4,
    kOtpIdentifierFieldNumber = 6,
    kOtpSharedsecretFieldNumber = 7,
    kOffsetFieldNumber = 2,
    kCubtowriteFieldNumber = 3,
    kOtpTypeFieldNumber = 5,
    kOtpTimedriftFieldNumber = 8,
  };
  // optional string filename = 1;
  bool has_filename() const;
  private:
  bool _internal_has_filename() const;
  public:
  void clear_filename();
  const std::string& filename() const;
  void set_filename(const std::string& value);
  void set_filename(std::string&& value);
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  std::string* mutable_filename();
  std::string* release_filename();
  void set_allocated_filename(std::string* filename);
  private:
  const std::string& _internal_filename() const;
  void _internal_set_filename(const std::string& value);
  std::string* _internal_mutable_filename();
  public:

  // optional bytes bytes = 4;
  bool has_bytes() const;
  private:
  bool _internal_has_bytes() const;
  public:
  void clear_bytes();
  const std::string& bytes() const;
  void set_bytes(const std::string& value);
  void set_bytes(std::string&& value);
  void set_bytes(const char* value);
  void set_bytes(const void* value, size_t size);
  std::string* mutable_bytes();
  std::string* release_bytes();
  void set_allocated_bytes(std::string* bytes);
  private:
  const std::string& _internal_bytes() const;
  void _internal_set_bytes(const std::string& value);
  std::string* _internal_mutable_bytes();
  public:

  // optional string otp_identifier = 6;
  bool has_otp_identifier() const;
  private:
  bool _internal_has_otp_identifier() const;
  public:
  void clear_otp_identifier();
  const std::string& otp_identifier() const;
  void set_otp_identifier(const std::string& value);
  void set_otp_identifier(std::string&& value);
  void set_otp_identifier(const char* value);
  void set_otp_identifier(const char* value, size_t size);
  std::string* mutable_otp_identifier();
  std::string* release_otp_identifier();
  void set_allocated_otp_identifier(std::string* otp_identifier);
  private:
  const std::string& _internal_otp_identifier() const;
  void _internal_set_otp_identifier(const std::string& value);
  std::string* _internal_mutable_otp_identifier();
  public:

  // optional bytes otp_sharedsecret = 7;
  bool has_otp_sharedsecret() const;
  private:
  bool _internal_has_otp_sharedsecret() const;
  public:
  void clear_otp_sharedsecret();
  const std::string& otp_sharedsecret() const;
  void set_otp_sharedsecret(const std::string& value);
  void set_otp_sharedsecret(std::string&& value);
  void set_otp_sharedsecret(const char* value);
  void set_otp_sharedsecret(const void* value, size_t size);
  std::string* mutable_otp_sharedsecret();
  std::string* release_otp_sharedsecret();
  void set_allocated_otp_sharedsecret(std::string* otp_sharedsecret);
  private:
  const std::string& _internal_otp_sharedsecret() const;
  void _internal_set_otp_sharedsecret(const std::string& value);
  std::string* _internal_mutable_otp_sharedsecret();
  public:

  // optional uint32 offset = 2;
  bool has_offset() const;
  private:
  bool _internal_has_offset() const;
  public:
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_offset() const;
  void _internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 cubtowrite = 3;
  bool has_cubtowrite() const;
  private:
  bool _internal_has_cubtowrite() const;
  public:
  void clear_cubtowrite();
  ::PROTOBUF_NAMESPACE_ID::uint32 cubtowrite() const;
  void set_cubtowrite(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cubtowrite() const;
  void _internal_set_cubtowrite(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 otp_type = 5;
  bool has_otp_type() const;
  private:
  bool _internal_has_otp_type() const;
  public:
  void clear_otp_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 otp_type() const;
  void set_otp_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_otp_type() const;
  void _internal_set_otp_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 otp_timedrift = 8;
  bool has_otp_timedrift() const;
  private:
  bool _internal_has_otp_timedrift() const;
  public:
  void clear_otp_timedrift();
  ::PROTOBUF_NAMESPACE_ID::uint32 otp_timedrift() const;
  void set_otp_timedrift(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_otp_timedrift() const;
  void _internal_set_otp_timedrift(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUpdateMachineAuth)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filename_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bytes_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr otp_identifier_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr otp_sharedsecret_;
  ::PROTOBUF_NAMESPACE_ID::uint32 offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cubtowrite_;
  ::PROTOBUF_NAMESPACE_ID::uint32 otp_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 otp_timedrift_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUpdateMachineAuthResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUpdateMachineAuthResponse) */ {
 public:
  inline CMsgClientUpdateMachineAuthResponse() : CMsgClientUpdateMachineAuthResponse(nullptr) {}
  virtual ~CMsgClientUpdateMachineAuthResponse();
  explicit constexpr CMsgClientUpdateMachineAuthResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUpdateMachineAuthResponse(const CMsgClientUpdateMachineAuthResponse& from);
  CMsgClientUpdateMachineAuthResponse(CMsgClientUpdateMachineAuthResponse&& from) noexcept
    : CMsgClientUpdateMachineAuthResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientUpdateMachineAuthResponse& operator=(const CMsgClientUpdateMachineAuthResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUpdateMachineAuthResponse& operator=(CMsgClientUpdateMachineAuthResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUpdateMachineAuthResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUpdateMachineAuthResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUpdateMachineAuthResponse*>(
               &_CMsgClientUpdateMachineAuthResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CMsgClientUpdateMachineAuthResponse& a, CMsgClientUpdateMachineAuthResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUpdateMachineAuthResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUpdateMachineAuthResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUpdateMachineAuthResponse* New() const final {
    return CreateMaybeMessage<CMsgClientUpdateMachineAuthResponse>(nullptr);
  }

  CMsgClientUpdateMachineAuthResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUpdateMachineAuthResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUpdateMachineAuthResponse& from);
  void MergeFrom(const CMsgClientUpdateMachineAuthResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUpdateMachineAuthResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUpdateMachineAuthResponse";
  }
  protected:
  explicit CMsgClientUpdateMachineAuthResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilenameFieldNumber = 1,
    kShaFileFieldNumber = 4,
    kOtpIdentifierFieldNumber = 10,
    kEresultFieldNumber = 2,
    kFilesizeFieldNumber = 3,
    kGetlasterrorFieldNumber = 5,
    kOffsetFieldNumber = 6,
    kCubwroteFieldNumber = 7,
    kOtpTypeFieldNumber = 8,
    kOtpValueFieldNumber = 9,
  };
  // optional string filename = 1;
  bool has_filename() const;
  private:
  bool _internal_has_filename() const;
  public:
  void clear_filename();
  const std::string& filename() const;
  void set_filename(const std::string& value);
  void set_filename(std::string&& value);
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  std::string* mutable_filename();
  std::string* release_filename();
  void set_allocated_filename(std::string* filename);
  private:
  const std::string& _internal_filename() const;
  void _internal_set_filename(const std::string& value);
  std::string* _internal_mutable_filename();
  public:

  // optional bytes sha_file = 4;
  bool has_sha_file() const;
  private:
  bool _internal_has_sha_file() const;
  public:
  void clear_sha_file();
  const std::string& sha_file() const;
  void set_sha_file(const std::string& value);
  void set_sha_file(std::string&& value);
  void set_sha_file(const char* value);
  void set_sha_file(const void* value, size_t size);
  std::string* mutable_sha_file();
  std::string* release_sha_file();
  void set_allocated_sha_file(std::string* sha_file);
  private:
  const std::string& _internal_sha_file() const;
  void _internal_set_sha_file(const std::string& value);
  std::string* _internal_mutable_sha_file();
  public:

  // optional string otp_identifier = 10;
  bool has_otp_identifier() const;
  private:
  bool _internal_has_otp_identifier() const;
  public:
  void clear_otp_identifier();
  const std::string& otp_identifier() const;
  void set_otp_identifier(const std::string& value);
  void set_otp_identifier(std::string&& value);
  void set_otp_identifier(const char* value);
  void set_otp_identifier(const char* value, size_t size);
  std::string* mutable_otp_identifier();
  std::string* release_otp_identifier();
  void set_allocated_otp_identifier(std::string* otp_identifier);
  private:
  const std::string& _internal_otp_identifier() const;
  void _internal_set_otp_identifier(const std::string& value);
  std::string* _internal_mutable_otp_identifier();
  public:

  // optional uint32 eresult = 2;
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 filesize = 3;
  bool has_filesize() const;
  private:
  bool _internal_has_filesize() const;
  public:
  void clear_filesize();
  ::PROTOBUF_NAMESPACE_ID::uint32 filesize() const;
  void set_filesize(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_filesize() const;
  void _internal_set_filesize(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 getlasterror = 5;
  bool has_getlasterror() const;
  private:
  bool _internal_has_getlasterror() const;
  public:
  void clear_getlasterror();
  ::PROTOBUF_NAMESPACE_ID::uint32 getlasterror() const;
  void set_getlasterror(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_getlasterror() const;
  void _internal_set_getlasterror(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 offset = 6;
  bool has_offset() const;
  private:
  bool _internal_has_offset() const;
  public:
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_offset() const;
  void _internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 cubwrote = 7;
  bool has_cubwrote() const;
  private:
  bool _internal_has_cubwrote() const;
  public:
  void clear_cubwrote();
  ::PROTOBUF_NAMESPACE_ID::uint32 cubwrote() const;
  void set_cubwrote(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cubwrote() const;
  void _internal_set_cubwrote(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 otp_type = 8;
  bool has_otp_type() const;
  private:
  bool _internal_has_otp_type() const;
  public:
  void clear_otp_type();
  ::PROTOBUF_NAMESPACE_ID::int32 otp_type() const;
  void set_otp_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_otp_type() const;
  void _internal_set_otp_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 otp_value = 9;
  bool has_otp_value() const;
  private:
  bool _internal_has_otp_value() const;
  public:
  void clear_otp_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 otp_value() const;
  void set_otp_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_otp_value() const;
  void _internal_set_otp_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUpdateMachineAuthResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filename_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sha_file_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr otp_identifier_;
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult_;
  ::PROTOBUF_NAMESPACE_ID::uint32 filesize_;
  ::PROTOBUF_NAMESPACE_ID::uint32 getlasterror_;
  ::PROTOBUF_NAMESPACE_ID::uint32 offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cubwrote_;
  ::PROTOBUF_NAMESPACE_ID::int32 otp_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 otp_value_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientRequestMachineAuth PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientRequestMachineAuth) */ {
 public:
  inline CMsgClientRequestMachineAuth() : CMsgClientRequestMachineAuth(nullptr) {}
  virtual ~CMsgClientRequestMachineAuth();
  explicit constexpr CMsgClientRequestMachineAuth(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientRequestMachineAuth(const CMsgClientRequestMachineAuth& from);
  CMsgClientRequestMachineAuth(CMsgClientRequestMachineAuth&& from) noexcept
    : CMsgClientRequestMachineAuth() {
    *this = ::std::move(from);
  }

  inline CMsgClientRequestMachineAuth& operator=(const CMsgClientRequestMachineAuth& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientRequestMachineAuth& operator=(CMsgClientRequestMachineAuth&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientRequestMachineAuth& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientRequestMachineAuth* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRequestMachineAuth*>(
               &_CMsgClientRequestMachineAuth_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CMsgClientRequestMachineAuth& a, CMsgClientRequestMachineAuth& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientRequestMachineAuth* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientRequestMachineAuth* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientRequestMachineAuth* New() const final {
    return CreateMaybeMessage<CMsgClientRequestMachineAuth>(nullptr);
  }

  CMsgClientRequestMachineAuth* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientRequestMachineAuth>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientRequestMachineAuth& from);
  void MergeFrom(const CMsgClientRequestMachineAuth& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientRequestMachineAuth* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientRequestMachineAuth";
  }
  protected:
  explicit CMsgClientRequestMachineAuth(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilenameFieldNumber = 1,
    kShaSentryfileFieldNumber = 4,
    kOtpIdentifierFieldNumber = 8,
    kOtpSharedsecretFieldNumber = 9,
    kMachineNameFieldNumber = 11,
    kMachineNameUserchosenFieldNumber = 12,
    kEresultSentryfileFieldNumber = 2,
    kFilesizeFieldNumber = 3,
    kLocaccountActionFieldNumber = 6,
    kOtpTypeFieldNumber = 7,
    kOtpValueFieldNumber = 10,
  };
  // optional string filename = 1;
  bool has_filename() const;
  private:
  bool _internal_has_filename() const;
  public:
  void clear_filename();
  const std::string& filename() const;
  void set_filename(const std::string& value);
  void set_filename(std::string&& value);
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  std::string* mutable_filename();
  std::string* release_filename();
  void set_allocated_filename(std::string* filename);
  private:
  const std::string& _internal_filename() const;
  void _internal_set_filename(const std::string& value);
  std::string* _internal_mutable_filename();
  public:

  // optional bytes sha_sentryfile = 4;
  bool has_sha_sentryfile() const;
  private:
  bool _internal_has_sha_sentryfile() const;
  public:
  void clear_sha_sentryfile();
  const std::string& sha_sentryfile() const;
  void set_sha_sentryfile(const std::string& value);
  void set_sha_sentryfile(std::string&& value);
  void set_sha_sentryfile(const char* value);
  void set_sha_sentryfile(const void* value, size_t size);
  std::string* mutable_sha_sentryfile();
  std::string* release_sha_sentryfile();
  void set_allocated_sha_sentryfile(std::string* sha_sentryfile);
  private:
  const std::string& _internal_sha_sentryfile() const;
  void _internal_set_sha_sentryfile(const std::string& value);
  std::string* _internal_mutable_sha_sentryfile();
  public:

  // optional string otp_identifier = 8;
  bool has_otp_identifier() const;
  private:
  bool _internal_has_otp_identifier() const;
  public:
  void clear_otp_identifier();
  const std::string& otp_identifier() const;
  void set_otp_identifier(const std::string& value);
  void set_otp_identifier(std::string&& value);
  void set_otp_identifier(const char* value);
  void set_otp_identifier(const char* value, size_t size);
  std::string* mutable_otp_identifier();
  std::string* release_otp_identifier();
  void set_allocated_otp_identifier(std::string* otp_identifier);
  private:
  const std::string& _internal_otp_identifier() const;
  void _internal_set_otp_identifier(const std::string& value);
  std::string* _internal_mutable_otp_identifier();
  public:

  // optional bytes otp_sharedsecret = 9;
  bool has_otp_sharedsecret() const;
  private:
  bool _internal_has_otp_sharedsecret() const;
  public:
  void clear_otp_sharedsecret();
  const std::string& otp_sharedsecret() const;
  void set_otp_sharedsecret(const std::string& value);
  void set_otp_sharedsecret(std::string&& value);
  void set_otp_sharedsecret(const char* value);
  void set_otp_sharedsecret(const void* value, size_t size);
  std::string* mutable_otp_sharedsecret();
  std::string* release_otp_sharedsecret();
  void set_allocated_otp_sharedsecret(std::string* otp_sharedsecret);
  private:
  const std::string& _internal_otp_sharedsecret() const;
  void _internal_set_otp_sharedsecret(const std::string& value);
  std::string* _internal_mutable_otp_sharedsecret();
  public:

  // optional string machine_name = 11;
  bool has_machine_name() const;
  private:
  bool _internal_has_machine_name() const;
  public:
  void clear_machine_name();
  const std::string& machine_name() const;
  void set_machine_name(const std::string& value);
  void set_machine_name(std::string&& value);
  void set_machine_name(const char* value);
  void set_machine_name(const char* value, size_t size);
  std::string* mutable_machine_name();
  std::string* release_machine_name();
  void set_allocated_machine_name(std::string* machine_name);
  private:
  const std::string& _internal_machine_name() const;
  void _internal_set_machine_name(const std::string& value);
  std::string* _internal_mutable_machine_name();
  public:

  // optional string machine_name_userchosen = 12;
  bool has_machine_name_userchosen() const;
  private:
  bool _internal_has_machine_name_userchosen() const;
  public:
  void clear_machine_name_userchosen();
  const std::string& machine_name_userchosen() const;
  void set_machine_name_userchosen(const std::string& value);
  void set_machine_name_userchosen(std::string&& value);
  void set_machine_name_userchosen(const char* value);
  void set_machine_name_userchosen(const char* value, size_t size);
  std::string* mutable_machine_name_userchosen();
  std::string* release_machine_name_userchosen();
  void set_allocated_machine_name_userchosen(std::string* machine_name_userchosen);
  private:
  const std::string& _internal_machine_name_userchosen() const;
  void _internal_set_machine_name_userchosen(const std::string& value);
  std::string* _internal_mutable_machine_name_userchosen();
  public:

  // optional uint32 eresult_sentryfile = 2;
  bool has_eresult_sentryfile() const;
  private:
  bool _internal_has_eresult_sentryfile() const;
  public:
  void clear_eresult_sentryfile();
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult_sentryfile() const;
  void set_eresult_sentryfile(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_eresult_sentryfile() const;
  void _internal_set_eresult_sentryfile(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 filesize = 3;
  bool has_filesize() const;
  private:
  bool _internal_has_filesize() const;
  public:
  void clear_filesize();
  ::PROTOBUF_NAMESPACE_ID::uint32 filesize() const;
  void set_filesize(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_filesize() const;
  void _internal_set_filesize(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 locaccount_action = 6;
  bool has_locaccount_action() const;
  private:
  bool _internal_has_locaccount_action() const;
  public:
  void clear_locaccount_action();
  ::PROTOBUF_NAMESPACE_ID::int32 locaccount_action() const;
  void set_locaccount_action(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_locaccount_action() const;
  void _internal_set_locaccount_action(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 otp_type = 7;
  bool has_otp_type() const;
  private:
  bool _internal_has_otp_type() const;
  public:
  void clear_otp_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 otp_type() const;
  void set_otp_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_otp_type() const;
  void _internal_set_otp_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 otp_value = 10;
  bool has_otp_value() const;
  private:
  bool _internal_has_otp_value() const;
  public:
  void clear_otp_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 otp_value() const;
  void set_otp_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_otp_value() const;
  void _internal_set_otp_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientRequestMachineAuth)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filename_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sha_sentryfile_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr otp_identifier_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr otp_sharedsecret_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr machine_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr machine_name_userchosen_;
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult_sentryfile_;
  ::PROTOBUF_NAMESPACE_ID::uint32 filesize_;
  ::PROTOBUF_NAMESPACE_ID::int32 locaccount_action_;
  ::PROTOBUF_NAMESPACE_ID::uint32 otp_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 otp_value_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientRequestMachineAuthResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientRequestMachineAuthResponse) */ {
 public:
  inline CMsgClientRequestMachineAuthResponse() : CMsgClientRequestMachineAuthResponse(nullptr) {}
  virtual ~CMsgClientRequestMachineAuthResponse();
  explicit constexpr CMsgClientRequestMachineAuthResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientRequestMachineAuthResponse(const CMsgClientRequestMachineAuthResponse& from);
  CMsgClientRequestMachineAuthResponse(CMsgClientRequestMachineAuthResponse&& from) noexcept
    : CMsgClientRequestMachineAuthResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientRequestMachineAuthResponse& operator=(const CMsgClientRequestMachineAuthResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientRequestMachineAuthResponse& operator=(CMsgClientRequestMachineAuthResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientRequestMachineAuthResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientRequestMachineAuthResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRequestMachineAuthResponse*>(
               &_CMsgClientRequestMachineAuthResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CMsgClientRequestMachineAuthResponse& a, CMsgClientRequestMachineAuthResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientRequestMachineAuthResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientRequestMachineAuthResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientRequestMachineAuthResponse* New() const final {
    return CreateMaybeMessage<CMsgClientRequestMachineAuthResponse>(nullptr);
  }

  CMsgClientRequestMachineAuthResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientRequestMachineAuthResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientRequestMachineAuthResponse& from);
  void MergeFrom(const CMsgClientRequestMachineAuthResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientRequestMachineAuthResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientRequestMachineAuthResponse";
  }
  protected:
  explicit CMsgClientRequestMachineAuthResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEresultFieldNumber = 1,
  };
  // optional uint32 eresult = 1;
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientRequestMachineAuthResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientRegisterKey PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientRegisterKey) */ {
 public:
  inline CMsgClientRegisterKey() : CMsgClientRegisterKey(nullptr) {}
  virtual ~CMsgClientRegisterKey();
  explicit constexpr CMsgClientRegisterKey(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientRegisterKey(const CMsgClientRegisterKey& from);
  CMsgClientRegisterKey(CMsgClientRegisterKey&& from) noexcept
    : CMsgClientRegisterKey() {
    *this = ::std::move(from);
  }

  inline CMsgClientRegisterKey& operator=(const CMsgClientRegisterKey& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientRegisterKey& operator=(CMsgClientRegisterKey&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientRegisterKey& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientRegisterKey* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRegisterKey*>(
               &_CMsgClientRegisterKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CMsgClientRegisterKey& a, CMsgClientRegisterKey& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientRegisterKey* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientRegisterKey* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientRegisterKey* New() const final {
    return CreateMaybeMessage<CMsgClientRegisterKey>(nullptr);
  }

  CMsgClientRegisterKey* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientRegisterKey>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientRegisterKey& from);
  void MergeFrom(const CMsgClientRegisterKey& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientRegisterKey* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientRegisterKey";
  }
  protected:
  explicit CMsgClientRegisterKey(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
  };
  // optional string key = 1;
  bool has_key() const;
  private:
  bool _internal_has_key() const;
  public:
  void clear_key();
  const std::string& key() const;
  void set_key(const std::string& value);
  void set_key(std::string&& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  std::string* mutable_key();
  std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientRegisterKey)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientPurchaseResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientPurchaseResponse) */ {
 public:
  inline CMsgClientPurchaseResponse() : CMsgClientPurchaseResponse(nullptr) {}
  virtual ~CMsgClientPurchaseResponse();
  explicit constexpr CMsgClientPurchaseResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientPurchaseResponse(const CMsgClientPurchaseResponse& from);
  CMsgClientPurchaseResponse(CMsgClientPurchaseResponse&& from) noexcept
    : CMsgClientPurchaseResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientPurchaseResponse& operator=(const CMsgClientPurchaseResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientPurchaseResponse& operator=(CMsgClientPurchaseResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientPurchaseResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientPurchaseResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientPurchaseResponse*>(
               &_CMsgClientPurchaseResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CMsgClientPurchaseResponse& a, CMsgClientPurchaseResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientPurchaseResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientPurchaseResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientPurchaseResponse* New() const final {
    return CreateMaybeMessage<CMsgClientPurchaseResponse>(nullptr);
  }

  CMsgClientPurchaseResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientPurchaseResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientPurchaseResponse& from);
  void MergeFrom(const CMsgClientPurchaseResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientPurchaseResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientPurchaseResponse";
  }
  protected:
  explicit CMsgClientPurchaseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPurchaseReceiptInfoFieldNumber = 3,
    kPurchaseResultDetailsFieldNumber = 2,
    kEresultFieldNumber = 1,
  };
  // optional bytes purchase_receipt_info = 3;
  bool has_purchase_receipt_info() const;
  private:
  bool _internal_has_purchase_receipt_info() const;
  public:
  void clear_purchase_receipt_info();
  const std::string& purchase_receipt_info() const;
  void set_purchase_receipt_info(const std::string& value);
  void set_purchase_receipt_info(std::string&& value);
  void set_purchase_receipt_info(const char* value);
  void set_purchase_receipt_info(const void* value, size_t size);
  std::string* mutable_purchase_receipt_info();
  std::string* release_purchase_receipt_info();
  void set_allocated_purchase_receipt_info(std::string* purchase_receipt_info);
  private:
  const std::string& _internal_purchase_receipt_info() const;
  void _internal_set_purchase_receipt_info(const std::string& value);
  std::string* _internal_mutable_purchase_receipt_info();
  public:

  // optional int32 purchase_result_details = 2;
  bool has_purchase_result_details() const;
  private:
  bool _internal_has_purchase_result_details() const;
  public:
  void clear_purchase_result_details();
  ::PROTOBUF_NAMESPACE_ID::int32 purchase_result_details() const;
  void set_purchase_result_details(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_purchase_result_details() const;
  void _internal_set_purchase_result_details(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientPurchaseResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr purchase_receipt_info_;
  ::PROTOBUF_NAMESPACE_ID::int32 purchase_result_details_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientActivateOEMLicense PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientActivateOEMLicense) */ {
 public:
  inline CMsgClientActivateOEMLicense() : CMsgClientActivateOEMLicense(nullptr) {}
  virtual ~CMsgClientActivateOEMLicense();
  explicit constexpr CMsgClientActivateOEMLicense(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientActivateOEMLicense(const CMsgClientActivateOEMLicense& from);
  CMsgClientActivateOEMLicense(CMsgClientActivateOEMLicense&& from) noexcept
    : CMsgClientActivateOEMLicense() {
    *this = ::std::move(from);
  }

  inline CMsgClientActivateOEMLicense& operator=(const CMsgClientActivateOEMLicense& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientActivateOEMLicense& operator=(CMsgClientActivateOEMLicense&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientActivateOEMLicense& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientActivateOEMLicense* internal_default_instance() {
    return reinterpret_cast<const CMsgClientActivateOEMLicense*>(
               &_CMsgClientActivateOEMLicense_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CMsgClientActivateOEMLicense& a, CMsgClientActivateOEMLicense& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientActivateOEMLicense* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientActivateOEMLicense* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientActivateOEMLicense* New() const final {
    return CreateMaybeMessage<CMsgClientActivateOEMLicense>(nullptr);
  }

  CMsgClientActivateOEMLicense* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientActivateOEMLicense>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientActivateOEMLicense& from);
  void MergeFrom(const CMsgClientActivateOEMLicense& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientActivateOEMLicense* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientActivateOEMLicense";
  }
  protected:
  explicit CMsgClientActivateOEMLicense(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBiosManufacturerFieldNumber = 1,
    kBiosSerialnumberFieldNumber = 2,
    kLicenseFileFieldNumber = 3,
    kMainboardManufacturerFieldNumber = 4,
    kMainboardProductFieldNumber = 5,
    kMainboardSerialnumberFieldNumber = 6,
  };
  // optional string bios_manufacturer = 1;
  bool has_bios_manufacturer() const;
  private:
  bool _internal_has_bios_manufacturer() const;
  public:
  void clear_bios_manufacturer();
  const std::string& bios_manufacturer() const;
  void set_bios_manufacturer(const std::string& value);
  void set_bios_manufacturer(std::string&& value);
  void set_bios_manufacturer(const char* value);
  void set_bios_manufacturer(const char* value, size_t size);
  std::string* mutable_bios_manufacturer();
  std::string* release_bios_manufacturer();
  void set_allocated_bios_manufacturer(std::string* bios_manufacturer);
  private:
  const std::string& _internal_bios_manufacturer() const;
  void _internal_set_bios_manufacturer(const std::string& value);
  std::string* _internal_mutable_bios_manufacturer();
  public:

  // optional string bios_serialnumber = 2;
  bool has_bios_serialnumber() const;
  private:
  bool _internal_has_bios_serialnumber() const;
  public:
  void clear_bios_serialnumber();
  const std::string& bios_serialnumber() const;
  void set_bios_serialnumber(const std::string& value);
  void set_bios_serialnumber(std::string&& value);
  void set_bios_serialnumber(const char* value);
  void set_bios_serialnumber(const char* value, size_t size);
  std::string* mutable_bios_serialnumber();
  std::string* release_bios_serialnumber();
  void set_allocated_bios_serialnumber(std::string* bios_serialnumber);
  private:
  const std::string& _internal_bios_serialnumber() const;
  void _internal_set_bios_serialnumber(const std::string& value);
  std::string* _internal_mutable_bios_serialnumber();
  public:

  // optional bytes license_file = 3;
  bool has_license_file() const;
  private:
  bool _internal_has_license_file() const;
  public:
  void clear_license_file();
  const std::string& license_file() const;
  void set_license_file(const std::string& value);
  void set_license_file(std::string&& value);
  void set_license_file(const char* value);
  void set_license_file(const void* value, size_t size);
  std::string* mutable_license_file();
  std::string* release_license_file();
  void set_allocated_license_file(std::string* license_file);
  private:
  const std::string& _internal_license_file() const;
  void _internal_set_license_file(const std::string& value);
  std::string* _internal_mutable_license_file();
  public:

  // optional string mainboard_manufacturer = 4;
  bool has_mainboard_manufacturer() const;
  private:
  bool _internal_has_mainboard_manufacturer() const;
  public:
  void clear_mainboard_manufacturer();
  const std::string& mainboard_manufacturer() const;
  void set_mainboard_manufacturer(const std::string& value);
  void set_mainboard_manufacturer(std::string&& value);
  void set_mainboard_manufacturer(const char* value);
  void set_mainboard_manufacturer(const char* value, size_t size);
  std::string* mutable_mainboard_manufacturer();
  std::string* release_mainboard_manufacturer();
  void set_allocated_mainboard_manufacturer(std::string* mainboard_manufacturer);
  private:
  const std::string& _internal_mainboard_manufacturer() const;
  void _internal_set_mainboard_manufacturer(const std::string& value);
  std::string* _internal_mutable_mainboard_manufacturer();
  public:

  // optional string mainboard_product = 5;
  bool has_mainboard_product() const;
  private:
  bool _internal_has_mainboard_product() const;
  public:
  void clear_mainboard_product();
  const std::string& mainboard_product() const;
  void set_mainboard_product(const std::string& value);
  void set_mainboard_product(std::string&& value);
  void set_mainboard_product(const char* value);
  void set_mainboard_product(const char* value, size_t size);
  std::string* mutable_mainboard_product();
  std::string* release_mainboard_product();
  void set_allocated_mainboard_product(std::string* mainboard_product);
  private:
  const std::string& _internal_mainboard_product() const;
  void _internal_set_mainboard_product(const std::string& value);
  std::string* _internal_mutable_mainboard_product();
  public:

  // optional string mainboard_serialnumber = 6;
  bool has_mainboard_serialnumber() const;
  private:
  bool _internal_has_mainboard_serialnumber() const;
  public:
  void clear_mainboard_serialnumber();
  const std::string& mainboard_serialnumber() const;
  void set_mainboard_serialnumber(const std::string& value);
  void set_mainboard_serialnumber(std::string&& value);
  void set_mainboard_serialnumber(const char* value);
  void set_mainboard_serialnumber(const char* value, size_t size);
  std::string* mutable_mainboard_serialnumber();
  std::string* release_mainboard_serialnumber();
  void set_allocated_mainboard_serialnumber(std::string* mainboard_serialnumber);
  private:
  const std::string& _internal_mainboard_serialnumber() const;
  void _internal_set_mainboard_serialnumber(const std::string& value);
  std::string* _internal_mutable_mainboard_serialnumber();
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientActivateOEMLicense)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bios_manufacturer_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bios_serialnumber_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr license_file_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mainboard_manufacturer_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mainboard_product_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mainboard_serialnumber_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientRegisterOEMMachine PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientRegisterOEMMachine) */ {
 public:
  inline CMsgClientRegisterOEMMachine() : CMsgClientRegisterOEMMachine(nullptr) {}
  virtual ~CMsgClientRegisterOEMMachine();
  explicit constexpr CMsgClientRegisterOEMMachine(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientRegisterOEMMachine(const CMsgClientRegisterOEMMachine& from);
  CMsgClientRegisterOEMMachine(CMsgClientRegisterOEMMachine&& from) noexcept
    : CMsgClientRegisterOEMMachine() {
    *this = ::std::move(from);
  }

  inline CMsgClientRegisterOEMMachine& operator=(const CMsgClientRegisterOEMMachine& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientRegisterOEMMachine& operator=(CMsgClientRegisterOEMMachine&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientRegisterOEMMachine& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientRegisterOEMMachine* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRegisterOEMMachine*>(
               &_CMsgClientRegisterOEMMachine_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CMsgClientRegisterOEMMachine& a, CMsgClientRegisterOEMMachine& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientRegisterOEMMachine* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientRegisterOEMMachine* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientRegisterOEMMachine* New() const final {
    return CreateMaybeMessage<CMsgClientRegisterOEMMachine>(nullptr);
  }

  CMsgClientRegisterOEMMachine* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientRegisterOEMMachine>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientRegisterOEMMachine& from);
  void MergeFrom(const CMsgClientRegisterOEMMachine& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientRegisterOEMMachine* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientRegisterOEMMachine";
  }
  protected:
  explicit CMsgClientRegisterOEMMachine(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOemRegisterFileFieldNumber = 1,
  };
  // optional bytes oem_register_file = 1;
  bool has_oem_register_file() const;
  private:
  bool _internal_has_oem_register_file() const;
  public:
  void clear_oem_register_file();
  const std::string& oem_register_file() const;
  void set_oem_register_file(const std::string& value);
  void set_oem_register_file(std::string&& value);
  void set_oem_register_file(const char* value);
  void set_oem_register_file(const void* value, size_t size);
  std::string* mutable_oem_register_file();
  std::string* release_oem_register_file();
  void set_allocated_oem_register_file(std::string* oem_register_file);
  private:
  const std::string& _internal_oem_register_file() const;
  void _internal_set_oem_register_file(const std::string& value);
  std::string* _internal_mutable_oem_register_file();
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientRegisterOEMMachine)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr oem_register_file_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientRegisterOEMMachineResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientRegisterOEMMachineResponse) */ {
 public:
  inline CMsgClientRegisterOEMMachineResponse() : CMsgClientRegisterOEMMachineResponse(nullptr) {}
  virtual ~CMsgClientRegisterOEMMachineResponse();
  explicit constexpr CMsgClientRegisterOEMMachineResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientRegisterOEMMachineResponse(const CMsgClientRegisterOEMMachineResponse& from);
  CMsgClientRegisterOEMMachineResponse(CMsgClientRegisterOEMMachineResponse&& from) noexcept
    : CMsgClientRegisterOEMMachineResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientRegisterOEMMachineResponse& operator=(const CMsgClientRegisterOEMMachineResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientRegisterOEMMachineResponse& operator=(CMsgClientRegisterOEMMachineResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientRegisterOEMMachineResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientRegisterOEMMachineResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRegisterOEMMachineResponse*>(
               &_CMsgClientRegisterOEMMachineResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CMsgClientRegisterOEMMachineResponse& a, CMsgClientRegisterOEMMachineResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientRegisterOEMMachineResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientRegisterOEMMachineResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientRegisterOEMMachineResponse* New() const final {
    return CreateMaybeMessage<CMsgClientRegisterOEMMachineResponse>(nullptr);
  }

  CMsgClientRegisterOEMMachineResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientRegisterOEMMachineResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientRegisterOEMMachineResponse& from);
  void MergeFrom(const CMsgClientRegisterOEMMachineResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientRegisterOEMMachineResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientRegisterOEMMachineResponse";
  }
  protected:
  explicit CMsgClientRegisterOEMMachineResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEresultFieldNumber = 1,
  };
  // optional uint32 eresult = 1;
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientRegisterOEMMachineResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientPurchaseWithMachineID PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientPurchaseWithMachineID) */ {
 public:
  inline CMsgClientPurchaseWithMachineID() : CMsgClientPurchaseWithMachineID(nullptr) {}
  virtual ~CMsgClientPurchaseWithMachineID();
  explicit constexpr CMsgClientPurchaseWithMachineID(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientPurchaseWithMachineID(const CMsgClientPurchaseWithMachineID& from);
  CMsgClientPurchaseWithMachineID(CMsgClientPurchaseWithMachineID&& from) noexcept
    : CMsgClientPurchaseWithMachineID() {
    *this = ::std::move(from);
  }

  inline CMsgClientPurchaseWithMachineID& operator=(const CMsgClientPurchaseWithMachineID& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientPurchaseWithMachineID& operator=(CMsgClientPurchaseWithMachineID&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientPurchaseWithMachineID& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientPurchaseWithMachineID* internal_default_instance() {
    return reinterpret_cast<const CMsgClientPurchaseWithMachineID*>(
               &_CMsgClientPurchaseWithMachineID_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CMsgClientPurchaseWithMachineID& a, CMsgClientPurchaseWithMachineID& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientPurchaseWithMachineID* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientPurchaseWithMachineID* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientPurchaseWithMachineID* New() const final {
    return CreateMaybeMessage<CMsgClientPurchaseWithMachineID>(nullptr);
  }

  CMsgClientPurchaseWithMachineID* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientPurchaseWithMachineID>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientPurchaseWithMachineID& from);
  void MergeFrom(const CMsgClientPurchaseWithMachineID& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientPurchaseWithMachineID* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientPurchaseWithMachineID";
  }
  protected:
  explicit CMsgClientPurchaseWithMachineID(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMachineInfoFieldNumber = 2,
    kPackageIdFieldNumber = 1,
  };
  // optional bytes machine_info = 2;
  bool has_machine_info() const;
  private:
  bool _internal_has_machine_info() const;
  public:
  void clear_machine_info();
  const std::string& machine_info() const;
  void set_machine_info(const std::string& value);
  void set_machine_info(std::string&& value);
  void set_machine_info(const char* value);
  void set_machine_info(const void* value, size_t size);
  std::string* mutable_machine_info();
  std::string* release_machine_info();
  void set_allocated_machine_info(std::string* machine_info);
  private:
  const std::string& _internal_machine_info() const;
  void _internal_set_machine_info(const std::string& value);
  std::string* _internal_mutable_machine_info();
  public:

  // optional uint32 package_id = 1;
  bool has_package_id() const;
  private:
  bool _internal_has_package_id() const;
  public:
  void clear_package_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 package_id() const;
  void set_package_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_package_id() const;
  void _internal_set_package_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientPurchaseWithMachineID)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr machine_info_;
  ::PROTOBUF_NAMESPACE_ID::uint32 package_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgTrading_InitiateTradeRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgTrading_InitiateTradeRequest) */ {
 public:
  inline CMsgTrading_InitiateTradeRequest() : CMsgTrading_InitiateTradeRequest(nullptr) {}
  virtual ~CMsgTrading_InitiateTradeRequest();
  explicit constexpr CMsgTrading_InitiateTradeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgTrading_InitiateTradeRequest(const CMsgTrading_InitiateTradeRequest& from);
  CMsgTrading_InitiateTradeRequest(CMsgTrading_InitiateTradeRequest&& from) noexcept
    : CMsgTrading_InitiateTradeRequest() {
    *this = ::std::move(from);
  }

  inline CMsgTrading_InitiateTradeRequest& operator=(const CMsgTrading_InitiateTradeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgTrading_InitiateTradeRequest& operator=(CMsgTrading_InitiateTradeRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgTrading_InitiateTradeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgTrading_InitiateTradeRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgTrading_InitiateTradeRequest*>(
               &_CMsgTrading_InitiateTradeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CMsgTrading_InitiateTradeRequest& a, CMsgTrading_InitiateTradeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgTrading_InitiateTradeRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgTrading_InitiateTradeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgTrading_InitiateTradeRequest* New() const final {
    return CreateMaybeMessage<CMsgTrading_InitiateTradeRequest>(nullptr);
  }

  CMsgTrading_InitiateTradeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgTrading_InitiateTradeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgTrading_InitiateTradeRequest& from);
  void MergeFrom(const CMsgTrading_InitiateTradeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgTrading_InitiateTradeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgTrading_InitiateTradeRequest";
  }
  protected:
  explicit CMsgTrading_InitiateTradeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOtherNameFieldNumber = 3,
    kOtherSteamidFieldNumber = 2,
    kTradeRequestIdFieldNumber = 1,
  };
  // optional string other_name = 3;
  bool has_other_name() const;
  private:
  bool _internal_has_other_name() const;
  public:
  void clear_other_name();
  const std::string& other_name() const;
  void set_other_name(const std::string& value);
  void set_other_name(std::string&& value);
  void set_other_name(const char* value);
  void set_other_name(const char* value, size_t size);
  std::string* mutable_other_name();
  std::string* release_other_name();
  void set_allocated_other_name(std::string* other_name);
  private:
  const std::string& _internal_other_name() const;
  void _internal_set_other_name(const std::string& value);
  std::string* _internal_mutable_other_name();
  public:

  // optional uint64 other_steamid = 2;
  bool has_other_steamid() const;
  private:
  bool _internal_has_other_steamid() const;
  public:
  void clear_other_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 other_steamid() const;
  void set_other_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_other_steamid() const;
  void _internal_set_other_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 trade_request_id = 1;
  bool has_trade_request_id() const;
  private:
  bool _internal_has_trade_request_id() const;
  public:
  void clear_trade_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 trade_request_id() const;
  void set_trade_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_trade_request_id() const;
  void _internal_set_trade_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgTrading_InitiateTradeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr other_name_;
  ::PROTOBUF_NAMESPACE_ID::uint64 other_steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 trade_request_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgTrading_InitiateTradeResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgTrading_InitiateTradeResponse) */ {
 public:
  inline CMsgTrading_InitiateTradeResponse() : CMsgTrading_InitiateTradeResponse(nullptr) {}
  virtual ~CMsgTrading_InitiateTradeResponse();
  explicit constexpr CMsgTrading_InitiateTradeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgTrading_InitiateTradeResponse(const CMsgTrading_InitiateTradeResponse& from);
  CMsgTrading_InitiateTradeResponse(CMsgTrading_InitiateTradeResponse&& from) noexcept
    : CMsgTrading_InitiateTradeResponse() {
    *this = ::std::move(from);
  }

  inline CMsgTrading_InitiateTradeResponse& operator=(const CMsgTrading_InitiateTradeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgTrading_InitiateTradeResponse& operator=(CMsgTrading_InitiateTradeResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgTrading_InitiateTradeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgTrading_InitiateTradeResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgTrading_InitiateTradeResponse*>(
               &_CMsgTrading_InitiateTradeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CMsgTrading_InitiateTradeResponse& a, CMsgTrading_InitiateTradeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgTrading_InitiateTradeResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgTrading_InitiateTradeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgTrading_InitiateTradeResponse* New() const final {
    return CreateMaybeMessage<CMsgTrading_InitiateTradeResponse>(nullptr);
  }

  CMsgTrading_InitiateTradeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgTrading_InitiateTradeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgTrading_InitiateTradeResponse& from);
  void MergeFrom(const CMsgTrading_InitiateTradeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgTrading_InitiateTradeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgTrading_InitiateTradeResponse";
  }
  protected:
  explicit CMsgTrading_InitiateTradeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResponseFieldNumber = 1,
    kTradeRequestIdFieldNumber = 2,
    kOtherSteamidFieldNumber = 3,
    kSteamguardRequiredDaysFieldNumber = 4,
    kNewDeviceCooldownDaysFieldNumber = 5,
    kDefaultPasswordResetProbationDaysFieldNumber = 6,
    kPasswordResetProbationDaysFieldNumber = 7,
    kDefaultEmailChangeProbationDaysFieldNumber = 8,
    kEmailChangeProbationDaysFieldNumber = 9,
  };
  // optional uint32 response = 1;
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::PROTOBUF_NAMESPACE_ID::uint32 response() const;
  void set_response(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_response() const;
  void _internal_set_response(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 trade_request_id = 2;
  bool has_trade_request_id() const;
  private:
  bool _internal_has_trade_request_id() const;
  public:
  void clear_trade_request_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 trade_request_id() const;
  void set_trade_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_trade_request_id() const;
  void _internal_set_trade_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 other_steamid = 3;
  bool has_other_steamid() const;
  private:
  bool _internal_has_other_steamid() const;
  public:
  void clear_other_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 other_steamid() const;
  void set_other_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_other_steamid() const;
  void _internal_set_other_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 steamguard_required_days = 4;
  bool has_steamguard_required_days() const;
  private:
  bool _internal_has_steamguard_required_days() const;
  public:
  void clear_steamguard_required_days();
  ::PROTOBUF_NAMESPACE_ID::uint32 steamguard_required_days() const;
  void set_steamguard_required_days(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_steamguard_required_days() const;
  void _internal_set_steamguard_required_days(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 new_device_cooldown_days = 5;
  bool has_new_device_cooldown_days() const;
  private:
  bool _internal_has_new_device_cooldown_days() const;
  public:
  void clear_new_device_cooldown_days();
  ::PROTOBUF_NAMESPACE_ID::uint32 new_device_cooldown_days() const;
  void set_new_device_cooldown_days(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_new_device_cooldown_days() const;
  void _internal_set_new_device_cooldown_days(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 default_password_reset_probation_days = 6;
  bool has_default_password_reset_probation_days() const;
  private:
  bool _internal_has_default_password_reset_probation_days() const;
  public:
  void clear_default_password_reset_probation_days();
  ::PROTOBUF_NAMESPACE_ID::uint32 default_password_reset_probation_days() const;
  void set_default_password_reset_probation_days(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_default_password_reset_probation_days() const;
  void _internal_set_default_password_reset_probation_days(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 password_reset_probation_days = 7;
  bool has_password_reset_probation_days() const;
  private:
  bool _internal_has_password_reset_probation_days() const;
  public:
  void clear_password_reset_probation_days();
  ::PROTOBUF_NAMESPACE_ID::uint32 password_reset_probation_days() const;
  void set_password_reset_probation_days(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_password_reset_probation_days() const;
  void _internal_set_password_reset_probation_days(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 default_email_change_probation_days = 8;
  bool has_default_email_change_probation_days() const;
  private:
  bool _internal_has_default_email_change_probation_days() const;
  public:
  void clear_default_email_change_probation_days();
  ::PROTOBUF_NAMESPACE_ID::uint32 default_email_change_probation_days() const;
  void set_default_email_change_probation_days(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_default_email_change_probation_days() const;
  void _internal_set_default_email_change_probation_days(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 email_change_probation_days = 9;
  bool has_email_change_probation_days() const;
  private:
  bool _internal_has_email_change_probation_days() const;
  public:
  void clear_email_change_probation_days();
  ::PROTOBUF_NAMESPACE_ID::uint32 email_change_probation_days() const;
  void set_email_change_probation_days(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_email_change_probation_days() const;
  void _internal_set_email_change_probation_days(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgTrading_InitiateTradeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 response_;
  ::PROTOBUF_NAMESPACE_ID::uint32 trade_request_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 other_steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 steamguard_required_days_;
  ::PROTOBUF_NAMESPACE_ID::uint32 new_device_cooldown_days_;
  ::PROTOBUF_NAMESPACE_ID::uint32 default_password_reset_probation_days_;
  ::PROTOBUF_NAMESPACE_ID::uint32 password_reset_probation_days_;
  ::PROTOBUF_NAMESPACE_ID::uint32 default_email_change_probation_days_;
  ::PROTOBUF_NAMESPACE_ID::uint32 email_change_probation_days_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgTrading_CancelTradeRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgTrading_CancelTradeRequest) */ {
 public:
  inline CMsgTrading_CancelTradeRequest() : CMsgTrading_CancelTradeRequest(nullptr) {}
  virtual ~CMsgTrading_CancelTradeRequest();
  explicit constexpr CMsgTrading_CancelTradeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgTrading_CancelTradeRequest(const CMsgTrading_CancelTradeRequest& from);
  CMsgTrading_CancelTradeRequest(CMsgTrading_CancelTradeRequest&& from) noexcept
    : CMsgTrading_CancelTradeRequest() {
    *this = ::std::move(from);
  }

  inline CMsgTrading_CancelTradeRequest& operator=(const CMsgTrading_CancelTradeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgTrading_CancelTradeRequest& operator=(CMsgTrading_CancelTradeRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgTrading_CancelTradeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgTrading_CancelTradeRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgTrading_CancelTradeRequest*>(
               &_CMsgTrading_CancelTradeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CMsgTrading_CancelTradeRequest& a, CMsgTrading_CancelTradeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgTrading_CancelTradeRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgTrading_CancelTradeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgTrading_CancelTradeRequest* New() const final {
    return CreateMaybeMessage<CMsgTrading_CancelTradeRequest>(nullptr);
  }

  CMsgTrading_CancelTradeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgTrading_CancelTradeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgTrading_CancelTradeRequest& from);
  void MergeFrom(const CMsgTrading_CancelTradeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgTrading_CancelTradeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgTrading_CancelTradeRequest";
  }
  protected:
  explicit CMsgTrading_CancelTradeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOtherSteamidFieldNumber = 1,
  };
  // optional uint64 other_steamid = 1;
  bool has_other_steamid() const;
  private:
  bool _internal_has_other_steamid() const;
  public:
  void clear_other_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 other_steamid() const;
  void set_other_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_other_steamid() const;
  void _internal_set_other_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgTrading_CancelTradeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 other_steamid_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgTrading_StartSession PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgTrading_StartSession) */ {
 public:
  inline CMsgTrading_StartSession() : CMsgTrading_StartSession(nullptr) {}
  virtual ~CMsgTrading_StartSession();
  explicit constexpr CMsgTrading_StartSession(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgTrading_StartSession(const CMsgTrading_StartSession& from);
  CMsgTrading_StartSession(CMsgTrading_StartSession&& from) noexcept
    : CMsgTrading_StartSession() {
    *this = ::std::move(from);
  }

  inline CMsgTrading_StartSession& operator=(const CMsgTrading_StartSession& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgTrading_StartSession& operator=(CMsgTrading_StartSession&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgTrading_StartSession& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgTrading_StartSession* internal_default_instance() {
    return reinterpret_cast<const CMsgTrading_StartSession*>(
               &_CMsgTrading_StartSession_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CMsgTrading_StartSession& a, CMsgTrading_StartSession& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgTrading_StartSession* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgTrading_StartSession* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgTrading_StartSession* New() const final {
    return CreateMaybeMessage<CMsgTrading_StartSession>(nullptr);
  }

  CMsgTrading_StartSession* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgTrading_StartSession>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgTrading_StartSession& from);
  void MergeFrom(const CMsgTrading_StartSession& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgTrading_StartSession* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgTrading_StartSession";
  }
  protected:
  explicit CMsgTrading_StartSession(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOtherSteamidFieldNumber = 1,
  };
  // optional uint64 other_steamid = 1;
  bool has_other_steamid() const;
  private:
  bool _internal_has_other_steamid() const;
  public:
  void clear_other_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 other_steamid() const;
  void set_other_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_other_steamid() const;
  void _internal_set_other_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgTrading_StartSession)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 other_steamid_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientGetCDNAuthToken PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientGetCDNAuthToken) */ {
 public:
  inline CMsgClientGetCDNAuthToken() : CMsgClientGetCDNAuthToken(nullptr) {}
  virtual ~CMsgClientGetCDNAuthToken();
  explicit constexpr CMsgClientGetCDNAuthToken(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientGetCDNAuthToken(const CMsgClientGetCDNAuthToken& from);
  CMsgClientGetCDNAuthToken(CMsgClientGetCDNAuthToken&& from) noexcept
    : CMsgClientGetCDNAuthToken() {
    *this = ::std::move(from);
  }

  inline CMsgClientGetCDNAuthToken& operator=(const CMsgClientGetCDNAuthToken& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientGetCDNAuthToken& operator=(CMsgClientGetCDNAuthToken&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientGetCDNAuthToken& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientGetCDNAuthToken* internal_default_instance() {
    return reinterpret_cast<const CMsgClientGetCDNAuthToken*>(
               &_CMsgClientGetCDNAuthToken_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CMsgClientGetCDNAuthToken& a, CMsgClientGetCDNAuthToken& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientGetCDNAuthToken* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientGetCDNAuthToken* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientGetCDNAuthToken* New() const final {
    return CreateMaybeMessage<CMsgClientGetCDNAuthToken>(nullptr);
  }

  CMsgClientGetCDNAuthToken* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientGetCDNAuthToken>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientGetCDNAuthToken& from);
  void MergeFrom(const CMsgClientGetCDNAuthToken& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientGetCDNAuthToken* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientGetCDNAuthToken";
  }
  protected:
  explicit CMsgClientGetCDNAuthToken(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHostNameFieldNumber = 2,
    kDepotIdFieldNumber = 1,
    kAppIdFieldNumber = 3,
  };
  // optional string host_name = 2;
  bool has_host_name() const;
  private:
  bool _internal_has_host_name() const;
  public:
  void clear_host_name();
  const std::string& host_name() const;
  void set_host_name(const std::string& value);
  void set_host_name(std::string&& value);
  void set_host_name(const char* value);
  void set_host_name(const char* value, size_t size);
  std::string* mutable_host_name();
  std::string* release_host_name();
  void set_allocated_host_name(std::string* host_name);
  private:
  const std::string& _internal_host_name() const;
  void _internal_set_host_name(const std::string& value);
  std::string* _internal_mutable_host_name();
  public:

  // optional uint32 depot_id = 1;
  bool has_depot_id() const;
  private:
  bool _internal_has_depot_id() const;
  public:
  void clear_depot_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 depot_id() const;
  void set_depot_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_depot_id() const;
  void _internal_set_depot_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 app_id = 3;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientGetCDNAuthToken)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr host_name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 depot_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientGetDepotDecryptionKey PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientGetDepotDecryptionKey) */ {
 public:
  inline CMsgClientGetDepotDecryptionKey() : CMsgClientGetDepotDecryptionKey(nullptr) {}
  virtual ~CMsgClientGetDepotDecryptionKey();
  explicit constexpr CMsgClientGetDepotDecryptionKey(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientGetDepotDecryptionKey(const CMsgClientGetDepotDecryptionKey& from);
  CMsgClientGetDepotDecryptionKey(CMsgClientGetDepotDecryptionKey&& from) noexcept
    : CMsgClientGetDepotDecryptionKey() {
    *this = ::std::move(from);
  }

  inline CMsgClientGetDepotDecryptionKey& operator=(const CMsgClientGetDepotDecryptionKey& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientGetDepotDecryptionKey& operator=(CMsgClientGetDepotDecryptionKey&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientGetDepotDecryptionKey& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientGetDepotDecryptionKey* internal_default_instance() {
    return reinterpret_cast<const CMsgClientGetDepotDecryptionKey*>(
               &_CMsgClientGetDepotDecryptionKey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CMsgClientGetDepotDecryptionKey& a, CMsgClientGetDepotDecryptionKey& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientGetDepotDecryptionKey* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientGetDepotDecryptionKey* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientGetDepotDecryptionKey* New() const final {
    return CreateMaybeMessage<CMsgClientGetDepotDecryptionKey>(nullptr);
  }

  CMsgClientGetDepotDecryptionKey* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientGetDepotDecryptionKey>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientGetDepotDecryptionKey& from);
  void MergeFrom(const CMsgClientGetDepotDecryptionKey& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientGetDepotDecryptionKey* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientGetDepotDecryptionKey";
  }
  protected:
  explicit CMsgClientGetDepotDecryptionKey(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDepotIdFieldNumber = 1,
    kAppIdFieldNumber = 2,
  };
  // optional uint32 depot_id = 1;
  bool has_depot_id() const;
  private:
  bool _internal_has_depot_id() const;
  public:
  void clear_depot_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 depot_id() const;
  void set_depot_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_depot_id() const;
  void _internal_set_depot_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 app_id = 2;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientGetDepotDecryptionKey)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 depot_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientGetDepotDecryptionKeyResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientGetDepotDecryptionKeyResponse) */ {
 public:
  inline CMsgClientGetDepotDecryptionKeyResponse() : CMsgClientGetDepotDecryptionKeyResponse(nullptr) {}
  virtual ~CMsgClientGetDepotDecryptionKeyResponse();
  explicit constexpr CMsgClientGetDepotDecryptionKeyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientGetDepotDecryptionKeyResponse(const CMsgClientGetDepotDecryptionKeyResponse& from);
  CMsgClientGetDepotDecryptionKeyResponse(CMsgClientGetDepotDecryptionKeyResponse&& from) noexcept
    : CMsgClientGetDepotDecryptionKeyResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientGetDepotDecryptionKeyResponse& operator=(const CMsgClientGetDepotDecryptionKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientGetDepotDecryptionKeyResponse& operator=(CMsgClientGetDepotDecryptionKeyResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientGetDepotDecryptionKeyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientGetDepotDecryptionKeyResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientGetDepotDecryptionKeyResponse*>(
               &_CMsgClientGetDepotDecryptionKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CMsgClientGetDepotDecryptionKeyResponse& a, CMsgClientGetDepotDecryptionKeyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientGetDepotDecryptionKeyResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientGetDepotDecryptionKeyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientGetDepotDecryptionKeyResponse* New() const final {
    return CreateMaybeMessage<CMsgClientGetDepotDecryptionKeyResponse>(nullptr);
  }

  CMsgClientGetDepotDecryptionKeyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientGetDepotDecryptionKeyResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientGetDepotDecryptionKeyResponse& from);
  void MergeFrom(const CMsgClientGetDepotDecryptionKeyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientGetDepotDecryptionKeyResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientGetDepotDecryptionKeyResponse";
  }
  protected:
  explicit CMsgClientGetDepotDecryptionKeyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDepotEncryptionKeyFieldNumber = 3,
    kDepotIdFieldNumber = 2,
    kEresultFieldNumber = 1,
  };
  // optional bytes depot_encryption_key = 3;
  bool has_depot_encryption_key() const;
  private:
  bool _internal_has_depot_encryption_key() const;
  public:
  void clear_depot_encryption_key();
  const std::string& depot_encryption_key() const;
  void set_depot_encryption_key(const std::string& value);
  void set_depot_encryption_key(std::string&& value);
  void set_depot_encryption_key(const char* value);
  void set_depot_encryption_key(const void* value, size_t size);
  std::string* mutable_depot_encryption_key();
  std::string* release_depot_encryption_key();
  void set_allocated_depot_encryption_key(std::string* depot_encryption_key);
  private:
  const std::string& _internal_depot_encryption_key() const;
  void _internal_set_depot_encryption_key(const std::string& value);
  std::string* _internal_mutable_depot_encryption_key();
  public:

  // optional uint32 depot_id = 2;
  bool has_depot_id() const;
  private:
  bool _internal_has_depot_id() const;
  public:
  void clear_depot_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 depot_id() const;
  void set_depot_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_depot_id() const;
  void _internal_set_depot_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientGetDepotDecryptionKeyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr depot_encryption_key_;
  ::PROTOBUF_NAMESPACE_ID::uint32 depot_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientCheckAppBetaPassword PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientCheckAppBetaPassword) */ {
 public:
  inline CMsgClientCheckAppBetaPassword() : CMsgClientCheckAppBetaPassword(nullptr) {}
  virtual ~CMsgClientCheckAppBetaPassword();
  explicit constexpr CMsgClientCheckAppBetaPassword(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientCheckAppBetaPassword(const CMsgClientCheckAppBetaPassword& from);
  CMsgClientCheckAppBetaPassword(CMsgClientCheckAppBetaPassword&& from) noexcept
    : CMsgClientCheckAppBetaPassword() {
    *this = ::std::move(from);
  }

  inline CMsgClientCheckAppBetaPassword& operator=(const CMsgClientCheckAppBetaPassword& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientCheckAppBetaPassword& operator=(CMsgClientCheckAppBetaPassword&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientCheckAppBetaPassword& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientCheckAppBetaPassword* internal_default_instance() {
    return reinterpret_cast<const CMsgClientCheckAppBetaPassword*>(
               &_CMsgClientCheckAppBetaPassword_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(CMsgClientCheckAppBetaPassword& a, CMsgClientCheckAppBetaPassword& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientCheckAppBetaPassword* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientCheckAppBetaPassword* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientCheckAppBetaPassword* New() const final {
    return CreateMaybeMessage<CMsgClientCheckAppBetaPassword>(nullptr);
  }

  CMsgClientCheckAppBetaPassword* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientCheckAppBetaPassword>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientCheckAppBetaPassword& from);
  void MergeFrom(const CMsgClientCheckAppBetaPassword& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientCheckAppBetaPassword* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientCheckAppBetaPassword";
  }
  protected:
  explicit CMsgClientCheckAppBetaPassword(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBetapasswordFieldNumber = 2,
    kAppIdFieldNumber = 1,
    kLanguageFieldNumber = 3,
  };
  // optional string betapassword = 2;
  bool has_betapassword() const;
  private:
  bool _internal_has_betapassword() const;
  public:
  void clear_betapassword();
  const std::string& betapassword() const;
  void set_betapassword(const std::string& value);
  void set_betapassword(std::string&& value);
  void set_betapassword(const char* value);
  void set_betapassword(const char* value, size_t size);
  std::string* mutable_betapassword();
  std::string* release_betapassword();
  void set_allocated_betapassword(std::string* betapassword);
  private:
  const std::string& _internal_betapassword() const;
  void _internal_set_betapassword(const std::string& value);
  std::string* _internal_mutable_betapassword();
  public:

  // optional uint32 app_id = 1;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 language = 3;
  bool has_language() const;
  private:
  bool _internal_has_language() const;
  public:
  void clear_language();
  ::PROTOBUF_NAMESPACE_ID::int32 language() const;
  void set_language(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_language() const;
  void _internal_set_language(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientCheckAppBetaPassword)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr betapassword_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 language_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientCheckAppBetaPasswordResponse_BetaPassword PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientCheckAppBetaPasswordResponse.BetaPassword) */ {
 public:
  inline CMsgClientCheckAppBetaPasswordResponse_BetaPassword() : CMsgClientCheckAppBetaPasswordResponse_BetaPassword(nullptr) {}
  virtual ~CMsgClientCheckAppBetaPasswordResponse_BetaPassword();
  explicit constexpr CMsgClientCheckAppBetaPasswordResponse_BetaPassword(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientCheckAppBetaPasswordResponse_BetaPassword(const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& from);
  CMsgClientCheckAppBetaPasswordResponse_BetaPassword(CMsgClientCheckAppBetaPasswordResponse_BetaPassword&& from) noexcept
    : CMsgClientCheckAppBetaPasswordResponse_BetaPassword() {
    *this = ::std::move(from);
  }

  inline CMsgClientCheckAppBetaPasswordResponse_BetaPassword& operator=(const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientCheckAppBetaPasswordResponse_BetaPassword& operator=(CMsgClientCheckAppBetaPasswordResponse_BetaPassword&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientCheckAppBetaPasswordResponse_BetaPassword* internal_default_instance() {
    return reinterpret_cast<const CMsgClientCheckAppBetaPasswordResponse_BetaPassword*>(
               &_CMsgClientCheckAppBetaPasswordResponse_BetaPassword_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(CMsgClientCheckAppBetaPasswordResponse_BetaPassword& a, CMsgClientCheckAppBetaPasswordResponse_BetaPassword& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientCheckAppBetaPasswordResponse_BetaPassword* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientCheckAppBetaPasswordResponse_BetaPassword* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientCheckAppBetaPasswordResponse_BetaPassword* New() const final {
    return CreateMaybeMessage<CMsgClientCheckAppBetaPasswordResponse_BetaPassword>(nullptr);
  }

  CMsgClientCheckAppBetaPasswordResponse_BetaPassword* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientCheckAppBetaPasswordResponse_BetaPassword>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& from);
  void MergeFrom(const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientCheckAppBetaPasswordResponse_BetaPassword* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientCheckAppBetaPasswordResponse.BetaPassword";
  }
  protected:
  explicit CMsgClientCheckAppBetaPasswordResponse_BetaPassword(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBetanameFieldNumber = 1,
    kBetapasswordFieldNumber = 2,
    kBetadescriptionFieldNumber = 3,
  };
  // optional string betaname = 1;
  bool has_betaname() const;
  private:
  bool _internal_has_betaname() const;
  public:
  void clear_betaname();
  const std::string& betaname() const;
  void set_betaname(const std::string& value);
  void set_betaname(std::string&& value);
  void set_betaname(const char* value);
  void set_betaname(const char* value, size_t size);
  std::string* mutable_betaname();
  std::string* release_betaname();
  void set_allocated_betaname(std::string* betaname);
  private:
  const std::string& _internal_betaname() const;
  void _internal_set_betaname(const std::string& value);
  std::string* _internal_mutable_betaname();
  public:

  // optional string betapassword = 2;
  bool has_betapassword() const;
  private:
  bool _internal_has_betapassword() const;
  public:
  void clear_betapassword();
  const std::string& betapassword() const;
  void set_betapassword(const std::string& value);
  void set_betapassword(std::string&& value);
  void set_betapassword(const char* value);
  void set_betapassword(const char* value, size_t size);
  std::string* mutable_betapassword();
  std::string* release_betapassword();
  void set_allocated_betapassword(std::string* betapassword);
  private:
  const std::string& _internal_betapassword() const;
  void _internal_set_betapassword(const std::string& value);
  std::string* _internal_mutable_betapassword();
  public:

  // optional string betadescription = 3;
  bool has_betadescription() const;
  private:
  bool _internal_has_betadescription() const;
  public:
  void clear_betadescription();
  const std::string& betadescription() const;
  void set_betadescription(const std::string& value);
  void set_betadescription(std::string&& value);
  void set_betadescription(const char* value);
  void set_betadescription(const char* value, size_t size);
  std::string* mutable_betadescription();
  std::string* release_betadescription();
  void set_allocated_betadescription(std::string* betadescription);
  private:
  const std::string& _internal_betadescription() const;
  void _internal_set_betadescription(const std::string& value);
  std::string* _internal_mutable_betadescription();
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr betaname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr betapassword_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr betadescription_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientCheckAppBetaPasswordResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientCheckAppBetaPasswordResponse) */ {
 public:
  inline CMsgClientCheckAppBetaPasswordResponse() : CMsgClientCheckAppBetaPasswordResponse(nullptr) {}
  virtual ~CMsgClientCheckAppBetaPasswordResponse();
  explicit constexpr CMsgClientCheckAppBetaPasswordResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientCheckAppBetaPasswordResponse(const CMsgClientCheckAppBetaPasswordResponse& from);
  CMsgClientCheckAppBetaPasswordResponse(CMsgClientCheckAppBetaPasswordResponse&& from) noexcept
    : CMsgClientCheckAppBetaPasswordResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientCheckAppBetaPasswordResponse& operator=(const CMsgClientCheckAppBetaPasswordResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientCheckAppBetaPasswordResponse& operator=(CMsgClientCheckAppBetaPasswordResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientCheckAppBetaPasswordResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientCheckAppBetaPasswordResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientCheckAppBetaPasswordResponse*>(
               &_CMsgClientCheckAppBetaPasswordResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(CMsgClientCheckAppBetaPasswordResponse& a, CMsgClientCheckAppBetaPasswordResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientCheckAppBetaPasswordResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientCheckAppBetaPasswordResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientCheckAppBetaPasswordResponse* New() const final {
    return CreateMaybeMessage<CMsgClientCheckAppBetaPasswordResponse>(nullptr);
  }

  CMsgClientCheckAppBetaPasswordResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientCheckAppBetaPasswordResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientCheckAppBetaPasswordResponse& from);
  void MergeFrom(const CMsgClientCheckAppBetaPasswordResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientCheckAppBetaPasswordResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientCheckAppBetaPasswordResponse";
  }
  protected:
  explicit CMsgClientCheckAppBetaPasswordResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientCheckAppBetaPasswordResponse_BetaPassword BetaPassword;

  // accessors -------------------------------------------------------

  enum : int {
    kBetapasswordsFieldNumber = 4,
    kEresultFieldNumber = 1,
  };
  // repeated .CMsgClientCheckAppBetaPasswordResponse.BetaPassword betapasswords = 4;
  int betapasswords_size() const;
  private:
  int _internal_betapasswords_size() const;
  public:
  void clear_betapasswords();
  ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword* mutable_betapasswords(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword >*
      mutable_betapasswords();
  private:
  const ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword& _internal_betapasswords(int index) const;
  ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword* _internal_add_betapasswords();
  public:
  const ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword& betapasswords(int index) const;
  ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword* add_betapasswords();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword >&
      betapasswords() const;

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientCheckAppBetaPasswordResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword > betapasswords_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientGetCDNAuthTokenResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientGetCDNAuthTokenResponse) */ {
 public:
  inline CMsgClientGetCDNAuthTokenResponse() : CMsgClientGetCDNAuthTokenResponse(nullptr) {}
  virtual ~CMsgClientGetCDNAuthTokenResponse();
  explicit constexpr CMsgClientGetCDNAuthTokenResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientGetCDNAuthTokenResponse(const CMsgClientGetCDNAuthTokenResponse& from);
  CMsgClientGetCDNAuthTokenResponse(CMsgClientGetCDNAuthTokenResponse&& from) noexcept
    : CMsgClientGetCDNAuthTokenResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientGetCDNAuthTokenResponse& operator=(const CMsgClientGetCDNAuthTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientGetCDNAuthTokenResponse& operator=(CMsgClientGetCDNAuthTokenResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientGetCDNAuthTokenResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientGetCDNAuthTokenResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientGetCDNAuthTokenResponse*>(
               &_CMsgClientGetCDNAuthTokenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(CMsgClientGetCDNAuthTokenResponse& a, CMsgClientGetCDNAuthTokenResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientGetCDNAuthTokenResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientGetCDNAuthTokenResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientGetCDNAuthTokenResponse* New() const final {
    return CreateMaybeMessage<CMsgClientGetCDNAuthTokenResponse>(nullptr);
  }

  CMsgClientGetCDNAuthTokenResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientGetCDNAuthTokenResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientGetCDNAuthTokenResponse& from);
  void MergeFrom(const CMsgClientGetCDNAuthTokenResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientGetCDNAuthTokenResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientGetCDNAuthTokenResponse";
  }
  protected:
  explicit CMsgClientGetCDNAuthTokenResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTokenFieldNumber = 2,
    kExpirationTimeFieldNumber = 3,
    kEresultFieldNumber = 1,
  };
  // optional string token = 2;
  bool has_token() const;
  private:
  bool _internal_has_token() const;
  public:
  void clear_token();
  const std::string& token() const;
  void set_token(const std::string& value);
  void set_token(std::string&& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  std::string* mutable_token();
  std::string* release_token();
  void set_allocated_token(std::string* token);
  private:
  const std::string& _internal_token() const;
  void _internal_set_token(const std::string& value);
  std::string* _internal_mutable_token();
  public:

  // optional uint32 expiration_time = 3;
  bool has_expiration_time() const;
  private:
  bool _internal_has_expiration_time() const;
  public:
  void clear_expiration_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 expiration_time() const;
  void set_expiration_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_expiration_time() const;
  void _internal_set_expiration_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientGetCDNAuthTokenResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr token_;
  ::PROTOBUF_NAMESPACE_ID::uint32 expiration_time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgDownloadRateStatistics_StatsInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgDownloadRateStatistics.StatsInfo) */ {
 public:
  inline CMsgDownloadRateStatistics_StatsInfo() : CMsgDownloadRateStatistics_StatsInfo(nullptr) {}
  virtual ~CMsgDownloadRateStatistics_StatsInfo();
  explicit constexpr CMsgDownloadRateStatistics_StatsInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgDownloadRateStatistics_StatsInfo(const CMsgDownloadRateStatistics_StatsInfo& from);
  CMsgDownloadRateStatistics_StatsInfo(CMsgDownloadRateStatistics_StatsInfo&& from) noexcept
    : CMsgDownloadRateStatistics_StatsInfo() {
    *this = ::std::move(from);
  }

  inline CMsgDownloadRateStatistics_StatsInfo& operator=(const CMsgDownloadRateStatistics_StatsInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgDownloadRateStatistics_StatsInfo& operator=(CMsgDownloadRateStatistics_StatsInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgDownloadRateStatistics_StatsInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgDownloadRateStatistics_StatsInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgDownloadRateStatistics_StatsInfo*>(
               &_CMsgDownloadRateStatistics_StatsInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(CMsgDownloadRateStatistics_StatsInfo& a, CMsgDownloadRateStatistics_StatsInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgDownloadRateStatistics_StatsInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgDownloadRateStatistics_StatsInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgDownloadRateStatistics_StatsInfo* New() const final {
    return CreateMaybeMessage<CMsgDownloadRateStatistics_StatsInfo>(nullptr);
  }

  CMsgDownloadRateStatistics_StatsInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDownloadRateStatistics_StatsInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgDownloadRateStatistics_StatsInfo& from);
  void MergeFrom(const CMsgDownloadRateStatistics_StatsInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDownloadRateStatistics_StatsInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgDownloadRateStatistics.StatsInfo";
  }
  protected:
  explicit CMsgDownloadRateStatistics_StatsInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHostNameFieldNumber = 5,
    kSourceTypeFieldNumber = 1,
    kSourceIdFieldNumber = 2,
    kBytesFieldNumber = 4,
    kMicrosecondsFieldNumber = 6,
    kSecondsFieldNumber = 3,
    kUsedIpv6FieldNumber = 7,
    kProxiedFieldNumber = 8,
  };
  // optional string host_name = 5;
  bool has_host_name() const;
  private:
  bool _internal_has_host_name() const;
  public:
  void clear_host_name();
  const std::string& host_name() const;
  void set_host_name(const std::string& value);
  void set_host_name(std::string&& value);
  void set_host_name(const char* value);
  void set_host_name(const char* value, size_t size);
  std::string* mutable_host_name();
  std::string* release_host_name();
  void set_allocated_host_name(std::string* host_name);
  private:
  const std::string& _internal_host_name() const;
  void _internal_set_host_name(const std::string& value);
  std::string* _internal_mutable_host_name();
  public:

  // optional uint32 source_type = 1;
  bool has_source_type() const;
  private:
  bool _internal_has_source_type() const;
  public:
  void clear_source_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 source_type() const;
  void set_source_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_source_type() const;
  void _internal_set_source_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 source_id = 2;
  bool has_source_id() const;
  private:
  bool _internal_has_source_id() const;
  public:
  void clear_source_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 source_id() const;
  void set_source_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_source_id() const;
  void _internal_set_source_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 bytes = 4;
  bool has_bytes() const;
  private:
  bool _internal_has_bytes() const;
  public:
  void clear_bytes();
  ::PROTOBUF_NAMESPACE_ID::uint64 bytes() const;
  void set_bytes(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_bytes() const;
  void _internal_set_bytes(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 microseconds = 6;
  bool has_microseconds() const;
  private:
  bool _internal_has_microseconds() const;
  public:
  void clear_microseconds();
  ::PROTOBUF_NAMESPACE_ID::uint64 microseconds() const;
  void set_microseconds(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_microseconds() const;
  void _internal_set_microseconds(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 seconds = 3;
  bool has_seconds() const;
  private:
  bool _internal_has_seconds() const;
  public:
  void clear_seconds();
  ::PROTOBUF_NAMESPACE_ID::uint32 seconds() const;
  void set_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_seconds() const;
  void _internal_set_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool used_ipv6 = 7;
  bool has_used_ipv6() const;
  private:
  bool _internal_has_used_ipv6() const;
  public:
  void clear_used_ipv6();
  bool used_ipv6() const;
  void set_used_ipv6(bool value);
  private:
  bool _internal_used_ipv6() const;
  void _internal_set_used_ipv6(bool value);
  public:

  // optional bool proxied = 8;
  bool has_proxied() const;
  private:
  bool _internal_has_proxied() const;
  public:
  void clear_proxied();
  bool proxied() const;
  void set_proxied(bool value);
  private:
  bool _internal_proxied() const;
  void _internal_set_proxied(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgDownloadRateStatistics.StatsInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr host_name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 source_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 source_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 bytes_;
  ::PROTOBUF_NAMESPACE_ID::uint64 microseconds_;
  ::PROTOBUF_NAMESPACE_ID::uint32 seconds_;
  bool used_ipv6_;
  bool proxied_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgDownloadRateStatistics PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgDownloadRateStatistics) */ {
 public:
  inline CMsgDownloadRateStatistics() : CMsgDownloadRateStatistics(nullptr) {}
  virtual ~CMsgDownloadRateStatistics();
  explicit constexpr CMsgDownloadRateStatistics(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgDownloadRateStatistics(const CMsgDownloadRateStatistics& from);
  CMsgDownloadRateStatistics(CMsgDownloadRateStatistics&& from) noexcept
    : CMsgDownloadRateStatistics() {
    *this = ::std::move(from);
  }

  inline CMsgDownloadRateStatistics& operator=(const CMsgDownloadRateStatistics& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgDownloadRateStatistics& operator=(CMsgDownloadRateStatistics&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgDownloadRateStatistics& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgDownloadRateStatistics* internal_default_instance() {
    return reinterpret_cast<const CMsgDownloadRateStatistics*>(
               &_CMsgDownloadRateStatistics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(CMsgDownloadRateStatistics& a, CMsgDownloadRateStatistics& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgDownloadRateStatistics* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgDownloadRateStatistics* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgDownloadRateStatistics* New() const final {
    return CreateMaybeMessage<CMsgDownloadRateStatistics>(nullptr);
  }

  CMsgDownloadRateStatistics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDownloadRateStatistics>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgDownloadRateStatistics& from);
  void MergeFrom(const CMsgDownloadRateStatistics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDownloadRateStatistics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgDownloadRateStatistics";
  }
  protected:
  explicit CMsgDownloadRateStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgDownloadRateStatistics_StatsInfo StatsInfo;

  // accessors -------------------------------------------------------

  enum : int {
    kStatsFieldNumber = 2,
    kCellIdFieldNumber = 1,
    kThrottlingKbpsFieldNumber = 3,
    kSteamRealmFieldNumber = 4,
  };
  // repeated .CMsgDownloadRateStatistics.StatsInfo stats = 2;
  int stats_size() const;
  private:
  int _internal_stats_size() const;
  public:
  void clear_stats();
  ::CMsgDownloadRateStatistics_StatsInfo* mutable_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgDownloadRateStatistics_StatsInfo >*
      mutable_stats();
  private:
  const ::CMsgDownloadRateStatistics_StatsInfo& _internal_stats(int index) const;
  ::CMsgDownloadRateStatistics_StatsInfo* _internal_add_stats();
  public:
  const ::CMsgDownloadRateStatistics_StatsInfo& stats(int index) const;
  ::CMsgDownloadRateStatistics_StatsInfo* add_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgDownloadRateStatistics_StatsInfo >&
      stats() const;

  // optional uint32 cell_id = 1;
  bool has_cell_id() const;
  private:
  bool _internal_has_cell_id() const;
  public:
  void clear_cell_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 cell_id() const;
  void set_cell_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cell_id() const;
  void _internal_set_cell_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 throttling_kbps = 3;
  bool has_throttling_kbps() const;
  private:
  bool _internal_has_throttling_kbps() const;
  public:
  void clear_throttling_kbps();
  ::PROTOBUF_NAMESPACE_ID::uint32 throttling_kbps() const;
  void set_throttling_kbps(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_throttling_kbps() const;
  void _internal_set_throttling_kbps(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 steam_realm = 4;
  bool has_steam_realm() const;
  private:
  bool _internal_has_steam_realm() const;
  public:
  void clear_steam_realm();
  ::PROTOBUF_NAMESPACE_ID::uint32 steam_realm() const;
  void set_steam_realm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_steam_realm() const;
  void _internal_set_steam_realm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgDownloadRateStatistics)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgDownloadRateStatistics_StatsInfo > stats_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cell_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 throttling_kbps_;
  ::PROTOBUF_NAMESPACE_ID::uint32 steam_realm_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientRequestAccountData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientRequestAccountData) */ {
 public:
  inline CMsgClientRequestAccountData() : CMsgClientRequestAccountData(nullptr) {}
  virtual ~CMsgClientRequestAccountData();
  explicit constexpr CMsgClientRequestAccountData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientRequestAccountData(const CMsgClientRequestAccountData& from);
  CMsgClientRequestAccountData(CMsgClientRequestAccountData&& from) noexcept
    : CMsgClientRequestAccountData() {
    *this = ::std::move(from);
  }

  inline CMsgClientRequestAccountData& operator=(const CMsgClientRequestAccountData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientRequestAccountData& operator=(CMsgClientRequestAccountData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientRequestAccountData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientRequestAccountData* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRequestAccountData*>(
               &_CMsgClientRequestAccountData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(CMsgClientRequestAccountData& a, CMsgClientRequestAccountData& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientRequestAccountData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientRequestAccountData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientRequestAccountData* New() const final {
    return CreateMaybeMessage<CMsgClientRequestAccountData>(nullptr);
  }

  CMsgClientRequestAccountData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientRequestAccountData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientRequestAccountData& from);
  void MergeFrom(const CMsgClientRequestAccountData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientRequestAccountData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientRequestAccountData";
  }
  protected:
  explicit CMsgClientRequestAccountData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountOrEmailFieldNumber = 1,
    kActionFieldNumber = 2,
  };
  // optional string account_or_email = 1;
  bool has_account_or_email() const;
  private:
  bool _internal_has_account_or_email() const;
  public:
  void clear_account_or_email();
  const std::string& account_or_email() const;
  void set_account_or_email(const std::string& value);
  void set_account_or_email(std::string&& value);
  void set_account_or_email(const char* value);
  void set_account_or_email(const char* value, size_t size);
  std::string* mutable_account_or_email();
  std::string* release_account_or_email();
  void set_allocated_account_or_email(std::string* account_or_email);
  private:
  const std::string& _internal_account_or_email() const;
  void _internal_set_account_or_email(const std::string& value);
  std::string* _internal_mutable_account_or_email();
  public:

  // optional uint32 action = 2;
  bool has_action() const;
  private:
  bool _internal_has_action() const;
  public:
  void clear_action();
  ::PROTOBUF_NAMESPACE_ID::uint32 action() const;
  void set_action(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_action() const;
  void _internal_set_action(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientRequestAccountData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr account_or_email_;
  ::PROTOBUF_NAMESPACE_ID::uint32 action_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientRequestAccountDataResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientRequestAccountDataResponse) */ {
 public:
  inline CMsgClientRequestAccountDataResponse() : CMsgClientRequestAccountDataResponse(nullptr) {}
  virtual ~CMsgClientRequestAccountDataResponse();
  explicit constexpr CMsgClientRequestAccountDataResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientRequestAccountDataResponse(const CMsgClientRequestAccountDataResponse& from);
  CMsgClientRequestAccountDataResponse(CMsgClientRequestAccountDataResponse&& from) noexcept
    : CMsgClientRequestAccountDataResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientRequestAccountDataResponse& operator=(const CMsgClientRequestAccountDataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientRequestAccountDataResponse& operator=(CMsgClientRequestAccountDataResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientRequestAccountDataResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientRequestAccountDataResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRequestAccountDataResponse*>(
               &_CMsgClientRequestAccountDataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(CMsgClientRequestAccountDataResponse& a, CMsgClientRequestAccountDataResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientRequestAccountDataResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientRequestAccountDataResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientRequestAccountDataResponse* New() const final {
    return CreateMaybeMessage<CMsgClientRequestAccountDataResponse>(nullptr);
  }

  CMsgClientRequestAccountDataResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientRequestAccountDataResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientRequestAccountDataResponse& from);
  void MergeFrom(const CMsgClientRequestAccountDataResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientRequestAccountDataResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientRequestAccountDataResponse";
  }
  protected:
  explicit CMsgClientRequestAccountDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountNameFieldNumber = 3,
    kAccountNameSuggestion1FieldNumber = 5,
    kAccountNameSuggestion2FieldNumber = 6,
    kAccountNameSuggestion3FieldNumber = 7,
    kActionFieldNumber = 1,
    kEresultFieldNumber = 2,
    kCtMatchesFieldNumber = 4,
  };
  // optional string account_name = 3;
  bool has_account_name() const;
  private:
  bool _internal_has_account_name() const;
  public:
  void clear_account_name();
  const std::string& account_name() const;
  void set_account_name(const std::string& value);
  void set_account_name(std::string&& value);
  void set_account_name(const char* value);
  void set_account_name(const char* value, size_t size);
  std::string* mutable_account_name();
  std::string* release_account_name();
  void set_allocated_account_name(std::string* account_name);
  private:
  const std::string& _internal_account_name() const;
  void _internal_set_account_name(const std::string& value);
  std::string* _internal_mutable_account_name();
  public:

  // optional string account_name_suggestion1 = 5;
  bool has_account_name_suggestion1() const;
  private:
  bool _internal_has_account_name_suggestion1() const;
  public:
  void clear_account_name_suggestion1();
  const std::string& account_name_suggestion1() const;
  void set_account_name_suggestion1(const std::string& value);
  void set_account_name_suggestion1(std::string&& value);
  void set_account_name_suggestion1(const char* value);
  void set_account_name_suggestion1(const char* value, size_t size);
  std::string* mutable_account_name_suggestion1();
  std::string* release_account_name_suggestion1();
  void set_allocated_account_name_suggestion1(std::string* account_name_suggestion1);
  private:
  const std::string& _internal_account_name_suggestion1() const;
  void _internal_set_account_name_suggestion1(const std::string& value);
  std::string* _internal_mutable_account_name_suggestion1();
  public:

  // optional string account_name_suggestion2 = 6;
  bool has_account_name_suggestion2() const;
  private:
  bool _internal_has_account_name_suggestion2() const;
  public:
  void clear_account_name_suggestion2();
  const std::string& account_name_suggestion2() const;
  void set_account_name_suggestion2(const std::string& value);
  void set_account_name_suggestion2(std::string&& value);
  void set_account_name_suggestion2(const char* value);
  void set_account_name_suggestion2(const char* value, size_t size);
  std::string* mutable_account_name_suggestion2();
  std::string* release_account_name_suggestion2();
  void set_allocated_account_name_suggestion2(std::string* account_name_suggestion2);
  private:
  const std::string& _internal_account_name_suggestion2() const;
  void _internal_set_account_name_suggestion2(const std::string& value);
  std::string* _internal_mutable_account_name_suggestion2();
  public:

  // optional string account_name_suggestion3 = 7;
  bool has_account_name_suggestion3() const;
  private:
  bool _internal_has_account_name_suggestion3() const;
  public:
  void clear_account_name_suggestion3();
  const std::string& account_name_suggestion3() const;
  void set_account_name_suggestion3(const std::string& value);
  void set_account_name_suggestion3(std::string&& value);
  void set_account_name_suggestion3(const char* value);
  void set_account_name_suggestion3(const char* value, size_t size);
  std::string* mutable_account_name_suggestion3();
  std::string* release_account_name_suggestion3();
  void set_allocated_account_name_suggestion3(std::string* account_name_suggestion3);
  private:
  const std::string& _internal_account_name_suggestion3() const;
  void _internal_set_account_name_suggestion3(const std::string& value);
  std::string* _internal_mutable_account_name_suggestion3();
  public:

  // optional uint32 action = 1;
  bool has_action() const;
  private:
  bool _internal_has_action() const;
  public:
  void clear_action();
  ::PROTOBUF_NAMESPACE_ID::uint32 action() const;
  void set_action(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_action() const;
  void _internal_set_action(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 eresult = 2;
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 ct_matches = 4;
  bool has_ct_matches() const;
  private:
  bool _internal_has_ct_matches() const;
  public:
  void clear_ct_matches();
  ::PROTOBUF_NAMESPACE_ID::uint32 ct_matches() const;
  void set_ct_matches(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ct_matches() const;
  void _internal_set_ct_matches(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientRequestAccountDataResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr account_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr account_name_suggestion1_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr account_name_suggestion2_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr account_name_suggestion3_;
  ::PROTOBUF_NAMESPACE_ID::uint32 action_;
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ct_matches_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUGSGetGlobalStats PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUGSGetGlobalStats) */ {
 public:
  inline CMsgClientUGSGetGlobalStats() : CMsgClientUGSGetGlobalStats(nullptr) {}
  virtual ~CMsgClientUGSGetGlobalStats();
  explicit constexpr CMsgClientUGSGetGlobalStats(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUGSGetGlobalStats(const CMsgClientUGSGetGlobalStats& from);
  CMsgClientUGSGetGlobalStats(CMsgClientUGSGetGlobalStats&& from) noexcept
    : CMsgClientUGSGetGlobalStats() {
    *this = ::std::move(from);
  }

  inline CMsgClientUGSGetGlobalStats& operator=(const CMsgClientUGSGetGlobalStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUGSGetGlobalStats& operator=(CMsgClientUGSGetGlobalStats&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUGSGetGlobalStats& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUGSGetGlobalStats* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUGSGetGlobalStats*>(
               &_CMsgClientUGSGetGlobalStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(CMsgClientUGSGetGlobalStats& a, CMsgClientUGSGetGlobalStats& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUGSGetGlobalStats* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUGSGetGlobalStats* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUGSGetGlobalStats* New() const final {
    return CreateMaybeMessage<CMsgClientUGSGetGlobalStats>(nullptr);
  }

  CMsgClientUGSGetGlobalStats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUGSGetGlobalStats>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUGSGetGlobalStats& from);
  void MergeFrom(const CMsgClientUGSGetGlobalStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUGSGetGlobalStats* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUGSGetGlobalStats";
  }
  protected:
  explicit CMsgClientUGSGetGlobalStats(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGameidFieldNumber = 1,
    kHistoryDaysRequestedFieldNumber = 2,
    kTimeLastRequestedFieldNumber = 3,
    kFirstDayCachedFieldNumber = 4,
    kDaysCachedFieldNumber = 5,
  };
  // optional uint64 gameid = 1;
  bool has_gameid() const;
  private:
  bool _internal_has_gameid() const;
  public:
  void clear_gameid();
  ::PROTOBUF_NAMESPACE_ID::uint64 gameid() const;
  void set_gameid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gameid() const;
  void _internal_set_gameid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 history_days_requested = 2;
  bool has_history_days_requested() const;
  private:
  bool _internal_has_history_days_requested() const;
  public:
  void clear_history_days_requested();
  ::PROTOBUF_NAMESPACE_ID::uint32 history_days_requested() const;
  void set_history_days_requested(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_history_days_requested() const;
  void _internal_set_history_days_requested(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed32 time_last_requested = 3;
  bool has_time_last_requested() const;
  private:
  bool _internal_has_time_last_requested() const;
  public:
  void clear_time_last_requested();
  ::PROTOBUF_NAMESPACE_ID::uint32 time_last_requested() const;
  void set_time_last_requested(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_time_last_requested() const;
  void _internal_set_time_last_requested(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 first_day_cached = 4;
  bool has_first_day_cached() const;
  private:
  bool _internal_has_first_day_cached() const;
  public:
  void clear_first_day_cached();
  ::PROTOBUF_NAMESPACE_ID::uint32 first_day_cached() const;
  void set_first_day_cached(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_first_day_cached() const;
  void _internal_set_first_day_cached(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 days_cached = 5;
  bool has_days_cached() const;
  private:
  bool _internal_has_days_cached() const;
  public:
  void clear_days_cached();
  ::PROTOBUF_NAMESPACE_ID::uint32 days_cached() const;
  void set_days_cached(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_days_cached() const;
  void _internal_set_days_cached(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUGSGetGlobalStats)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gameid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 history_days_requested_;
  ::PROTOBUF_NAMESPACE_ID::uint32 time_last_requested_;
  ::PROTOBUF_NAMESPACE_ID::uint32 first_day_cached_;
  ::PROTOBUF_NAMESPACE_ID::uint32 days_cached_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUGSGetGlobalStatsResponse_Day_Stat PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUGSGetGlobalStatsResponse.Day.Stat) */ {
 public:
  inline CMsgClientUGSGetGlobalStatsResponse_Day_Stat() : CMsgClientUGSGetGlobalStatsResponse_Day_Stat(nullptr) {}
  virtual ~CMsgClientUGSGetGlobalStatsResponse_Day_Stat();
  explicit constexpr CMsgClientUGSGetGlobalStatsResponse_Day_Stat(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUGSGetGlobalStatsResponse_Day_Stat(const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& from);
  CMsgClientUGSGetGlobalStatsResponse_Day_Stat(CMsgClientUGSGetGlobalStatsResponse_Day_Stat&& from) noexcept
    : CMsgClientUGSGetGlobalStatsResponse_Day_Stat() {
    *this = ::std::move(from);
  }

  inline CMsgClientUGSGetGlobalStatsResponse_Day_Stat& operator=(const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUGSGetGlobalStatsResponse_Day_Stat& operator=(CMsgClientUGSGetGlobalStatsResponse_Day_Stat&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUGSGetGlobalStatsResponse_Day_Stat* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUGSGetGlobalStatsResponse_Day_Stat*>(
               &_CMsgClientUGSGetGlobalStatsResponse_Day_Stat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(CMsgClientUGSGetGlobalStatsResponse_Day_Stat& a, CMsgClientUGSGetGlobalStatsResponse_Day_Stat& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUGSGetGlobalStatsResponse_Day_Stat* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUGSGetGlobalStatsResponse_Day_Stat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUGSGetGlobalStatsResponse_Day_Stat* New() const final {
    return CreateMaybeMessage<CMsgClientUGSGetGlobalStatsResponse_Day_Stat>(nullptr);
  }

  CMsgClientUGSGetGlobalStatsResponse_Day_Stat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUGSGetGlobalStatsResponse_Day_Stat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& from);
  void MergeFrom(const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUGSGetGlobalStatsResponse_Day_Stat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUGSGetGlobalStatsResponse.Day.Stat";
  }
  protected:
  explicit CMsgClientUGSGetGlobalStatsResponse_Day_Stat(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2,
    kStatIdFieldNumber = 1,
  };
  // optional int64 data = 2;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  ::PROTOBUF_NAMESPACE_ID::int64 data() const;
  void set_data(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_data() const;
  void _internal_set_data(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int32 stat_id = 1;
  bool has_stat_id() const;
  private:
  bool _internal_has_stat_id() const;
  public:
  void clear_stat_id();
  ::PROTOBUF_NAMESPACE_ID::int32 stat_id() const;
  void set_stat_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_stat_id() const;
  void _internal_set_stat_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 data_;
  ::PROTOBUF_NAMESPACE_ID::int32 stat_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUGSGetGlobalStatsResponse_Day PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUGSGetGlobalStatsResponse.Day) */ {
 public:
  inline CMsgClientUGSGetGlobalStatsResponse_Day() : CMsgClientUGSGetGlobalStatsResponse_Day(nullptr) {}
  virtual ~CMsgClientUGSGetGlobalStatsResponse_Day();
  explicit constexpr CMsgClientUGSGetGlobalStatsResponse_Day(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUGSGetGlobalStatsResponse_Day(const CMsgClientUGSGetGlobalStatsResponse_Day& from);
  CMsgClientUGSGetGlobalStatsResponse_Day(CMsgClientUGSGetGlobalStatsResponse_Day&& from) noexcept
    : CMsgClientUGSGetGlobalStatsResponse_Day() {
    *this = ::std::move(from);
  }

  inline CMsgClientUGSGetGlobalStatsResponse_Day& operator=(const CMsgClientUGSGetGlobalStatsResponse_Day& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUGSGetGlobalStatsResponse_Day& operator=(CMsgClientUGSGetGlobalStatsResponse_Day&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUGSGetGlobalStatsResponse_Day& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUGSGetGlobalStatsResponse_Day* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUGSGetGlobalStatsResponse_Day*>(
               &_CMsgClientUGSGetGlobalStatsResponse_Day_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(CMsgClientUGSGetGlobalStatsResponse_Day& a, CMsgClientUGSGetGlobalStatsResponse_Day& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUGSGetGlobalStatsResponse_Day* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUGSGetGlobalStatsResponse_Day* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUGSGetGlobalStatsResponse_Day* New() const final {
    return CreateMaybeMessage<CMsgClientUGSGetGlobalStatsResponse_Day>(nullptr);
  }

  CMsgClientUGSGetGlobalStatsResponse_Day* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUGSGetGlobalStatsResponse_Day>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUGSGetGlobalStatsResponse_Day& from);
  void MergeFrom(const CMsgClientUGSGetGlobalStatsResponse_Day& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUGSGetGlobalStatsResponse_Day* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUGSGetGlobalStatsResponse.Day";
  }
  protected:
  explicit CMsgClientUGSGetGlobalStatsResponse_Day(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientUGSGetGlobalStatsResponse_Day_Stat Stat;

  // accessors -------------------------------------------------------

  enum : int {
    kStatsFieldNumber = 2,
    kDayIdFieldNumber = 1,
  };
  // repeated .CMsgClientUGSGetGlobalStatsResponse.Day.Stat stats = 2;
  int stats_size() const;
  private:
  int _internal_stats_size() const;
  public:
  void clear_stats();
  ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat* mutable_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat >*
      mutable_stats();
  private:
  const ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat& _internal_stats(int index) const;
  ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat* _internal_add_stats();
  public:
  const ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat& stats(int index) const;
  ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat* add_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat >&
      stats() const;

  // optional uint32 day_id = 1;
  bool has_day_id() const;
  private:
  bool _internal_has_day_id() const;
  public:
  void clear_day_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 day_id() const;
  void set_day_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_day_id() const;
  void _internal_set_day_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUGSGetGlobalStatsResponse.Day)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat > stats_;
  ::PROTOBUF_NAMESPACE_ID::uint32 day_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUGSGetGlobalStatsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUGSGetGlobalStatsResponse) */ {
 public:
  inline CMsgClientUGSGetGlobalStatsResponse() : CMsgClientUGSGetGlobalStatsResponse(nullptr) {}
  virtual ~CMsgClientUGSGetGlobalStatsResponse();
  explicit constexpr CMsgClientUGSGetGlobalStatsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUGSGetGlobalStatsResponse(const CMsgClientUGSGetGlobalStatsResponse& from);
  CMsgClientUGSGetGlobalStatsResponse(CMsgClientUGSGetGlobalStatsResponse&& from) noexcept
    : CMsgClientUGSGetGlobalStatsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientUGSGetGlobalStatsResponse& operator=(const CMsgClientUGSGetGlobalStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUGSGetGlobalStatsResponse& operator=(CMsgClientUGSGetGlobalStatsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUGSGetGlobalStatsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUGSGetGlobalStatsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUGSGetGlobalStatsResponse*>(
               &_CMsgClientUGSGetGlobalStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(CMsgClientUGSGetGlobalStatsResponse& a, CMsgClientUGSGetGlobalStatsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUGSGetGlobalStatsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUGSGetGlobalStatsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUGSGetGlobalStatsResponse* New() const final {
    return CreateMaybeMessage<CMsgClientUGSGetGlobalStatsResponse>(nullptr);
  }

  CMsgClientUGSGetGlobalStatsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUGSGetGlobalStatsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUGSGetGlobalStatsResponse& from);
  void MergeFrom(const CMsgClientUGSGetGlobalStatsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUGSGetGlobalStatsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUGSGetGlobalStatsResponse";
  }
  protected:
  explicit CMsgClientUGSGetGlobalStatsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientUGSGetGlobalStatsResponse_Day Day;

  // accessors -------------------------------------------------------

  enum : int {
    kDaysFieldNumber = 4,
    kTimestampFieldNumber = 2,
    kDayCurrentFieldNumber = 3,
    kEresultFieldNumber = 1,
  };
  // repeated .CMsgClientUGSGetGlobalStatsResponse.Day days = 4;
  int days_size() const;
  private:
  int _internal_days_size() const;
  public:
  void clear_days();
  ::CMsgClientUGSGetGlobalStatsResponse_Day* mutable_days(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUGSGetGlobalStatsResponse_Day >*
      mutable_days();
  private:
  const ::CMsgClientUGSGetGlobalStatsResponse_Day& _internal_days(int index) const;
  ::CMsgClientUGSGetGlobalStatsResponse_Day* _internal_add_days();
  public:
  const ::CMsgClientUGSGetGlobalStatsResponse_Day& days(int index) const;
  ::CMsgClientUGSGetGlobalStatsResponse_Day* add_days();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUGSGetGlobalStatsResponse_Day >&
      days() const;

  // optional fixed32 timestamp = 2;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint32 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 day_current = 3;
  bool has_day_current() const;
  private:
  bool _internal_has_day_current() const;
  public:
  void clear_day_current();
  ::PROTOBUF_NAMESPACE_ID::int32 day_current() const;
  void set_day_current(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_day_current() const;
  void _internal_set_day_current(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUGSGetGlobalStatsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUGSGetGlobalStatsResponse_Day > days_;
  ::PROTOBUF_NAMESPACE_ID::uint32 timestamp_;
  ::PROTOBUF_NAMESPACE_ID::int32 day_current_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientRedeemGuestPass PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientRedeemGuestPass) */ {
 public:
  inline CMsgClientRedeemGuestPass() : CMsgClientRedeemGuestPass(nullptr) {}
  virtual ~CMsgClientRedeemGuestPass();
  explicit constexpr CMsgClientRedeemGuestPass(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientRedeemGuestPass(const CMsgClientRedeemGuestPass& from);
  CMsgClientRedeemGuestPass(CMsgClientRedeemGuestPass&& from) noexcept
    : CMsgClientRedeemGuestPass() {
    *this = ::std::move(from);
  }

  inline CMsgClientRedeemGuestPass& operator=(const CMsgClientRedeemGuestPass& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientRedeemGuestPass& operator=(CMsgClientRedeemGuestPass&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientRedeemGuestPass& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientRedeemGuestPass* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRedeemGuestPass*>(
               &_CMsgClientRedeemGuestPass_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(CMsgClientRedeemGuestPass& a, CMsgClientRedeemGuestPass& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientRedeemGuestPass* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientRedeemGuestPass* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientRedeemGuestPass* New() const final {
    return CreateMaybeMessage<CMsgClientRedeemGuestPass>(nullptr);
  }

  CMsgClientRedeemGuestPass* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientRedeemGuestPass>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientRedeemGuestPass& from);
  void MergeFrom(const CMsgClientRedeemGuestPass& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientRedeemGuestPass* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientRedeemGuestPass";
  }
  protected:
  explicit CMsgClientRedeemGuestPass(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuestPassIdFieldNumber = 1,
  };
  // optional fixed64 guest_pass_id = 1;
  bool has_guest_pass_id() const;
  private:
  bool _internal_has_guest_pass_id() const;
  public:
  void clear_guest_pass_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 guest_pass_id() const;
  void set_guest_pass_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guest_pass_id() const;
  void _internal_set_guest_pass_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientRedeemGuestPass)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guest_pass_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientRedeemGuestPassResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientRedeemGuestPassResponse) */ {
 public:
  inline CMsgClientRedeemGuestPassResponse() : CMsgClientRedeemGuestPassResponse(nullptr) {}
  virtual ~CMsgClientRedeemGuestPassResponse();
  explicit constexpr CMsgClientRedeemGuestPassResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientRedeemGuestPassResponse(const CMsgClientRedeemGuestPassResponse& from);
  CMsgClientRedeemGuestPassResponse(CMsgClientRedeemGuestPassResponse&& from) noexcept
    : CMsgClientRedeemGuestPassResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientRedeemGuestPassResponse& operator=(const CMsgClientRedeemGuestPassResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientRedeemGuestPassResponse& operator=(CMsgClientRedeemGuestPassResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientRedeemGuestPassResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientRedeemGuestPassResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRedeemGuestPassResponse*>(
               &_CMsgClientRedeemGuestPassResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(CMsgClientRedeemGuestPassResponse& a, CMsgClientRedeemGuestPassResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientRedeemGuestPassResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientRedeemGuestPassResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientRedeemGuestPassResponse* New() const final {
    return CreateMaybeMessage<CMsgClientRedeemGuestPassResponse>(nullptr);
  }

  CMsgClientRedeemGuestPassResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientRedeemGuestPassResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientRedeemGuestPassResponse& from);
  void MergeFrom(const CMsgClientRedeemGuestPassResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientRedeemGuestPassResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientRedeemGuestPassResponse";
  }
  protected:
  explicit CMsgClientRedeemGuestPassResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPackageIdFieldNumber = 2,
    kMustOwnAppidFieldNumber = 3,
    kEresultFieldNumber = 1,
  };
  // optional uint32 package_id = 2;
  bool has_package_id() const;
  private:
  bool _internal_has_package_id() const;
  public:
  void clear_package_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 package_id() const;
  void set_package_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_package_id() const;
  void _internal_set_package_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 must_own_appid = 3;
  bool has_must_own_appid() const;
  private:
  bool _internal_has_must_own_appid() const;
  public:
  void clear_must_own_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 must_own_appid() const;
  void set_must_own_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_must_own_appid() const;
  void _internal_set_must_own_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientRedeemGuestPassResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 package_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 must_own_appid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientGetClanActivityCounts PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientGetClanActivityCounts) */ {
 public:
  inline CMsgClientGetClanActivityCounts() : CMsgClientGetClanActivityCounts(nullptr) {}
  virtual ~CMsgClientGetClanActivityCounts();
  explicit constexpr CMsgClientGetClanActivityCounts(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientGetClanActivityCounts(const CMsgClientGetClanActivityCounts& from);
  CMsgClientGetClanActivityCounts(CMsgClientGetClanActivityCounts&& from) noexcept
    : CMsgClientGetClanActivityCounts() {
    *this = ::std::move(from);
  }

  inline CMsgClientGetClanActivityCounts& operator=(const CMsgClientGetClanActivityCounts& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientGetClanActivityCounts& operator=(CMsgClientGetClanActivityCounts&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientGetClanActivityCounts& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientGetClanActivityCounts* internal_default_instance() {
    return reinterpret_cast<const CMsgClientGetClanActivityCounts*>(
               &_CMsgClientGetClanActivityCounts_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(CMsgClientGetClanActivityCounts& a, CMsgClientGetClanActivityCounts& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientGetClanActivityCounts* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientGetClanActivityCounts* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientGetClanActivityCounts* New() const final {
    return CreateMaybeMessage<CMsgClientGetClanActivityCounts>(nullptr);
  }

  CMsgClientGetClanActivityCounts* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientGetClanActivityCounts>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientGetClanActivityCounts& from);
  void MergeFrom(const CMsgClientGetClanActivityCounts& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientGetClanActivityCounts* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientGetClanActivityCounts";
  }
  protected:
  explicit CMsgClientGetClanActivityCounts(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamidClansFieldNumber = 1,
  };
  // repeated uint64 steamid_clans = 1;
  int steamid_clans_size() const;
  private:
  int _internal_steamid_clans_size() const;
  public:
  void clear_steamid_clans();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid_clans(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_steamid_clans() const;
  void _internal_add_steamid_clans(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_steamid_clans();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_clans(int index) const;
  void set_steamid_clans(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_steamid_clans(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      steamid_clans() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_steamid_clans();

  // @@protoc_insertion_point(class_scope:CMsgClientGetClanActivityCounts)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > steamid_clans_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientGetClanActivityCountsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientGetClanActivityCountsResponse) */ {
 public:
  inline CMsgClientGetClanActivityCountsResponse() : CMsgClientGetClanActivityCountsResponse(nullptr) {}
  virtual ~CMsgClientGetClanActivityCountsResponse();
  explicit constexpr CMsgClientGetClanActivityCountsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientGetClanActivityCountsResponse(const CMsgClientGetClanActivityCountsResponse& from);
  CMsgClientGetClanActivityCountsResponse(CMsgClientGetClanActivityCountsResponse&& from) noexcept
    : CMsgClientGetClanActivityCountsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientGetClanActivityCountsResponse& operator=(const CMsgClientGetClanActivityCountsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientGetClanActivityCountsResponse& operator=(CMsgClientGetClanActivityCountsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientGetClanActivityCountsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientGetClanActivityCountsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientGetClanActivityCountsResponse*>(
               &_CMsgClientGetClanActivityCountsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(CMsgClientGetClanActivityCountsResponse& a, CMsgClientGetClanActivityCountsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientGetClanActivityCountsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientGetClanActivityCountsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientGetClanActivityCountsResponse* New() const final {
    return CreateMaybeMessage<CMsgClientGetClanActivityCountsResponse>(nullptr);
  }

  CMsgClientGetClanActivityCountsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientGetClanActivityCountsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientGetClanActivityCountsResponse& from);
  void MergeFrom(const CMsgClientGetClanActivityCountsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientGetClanActivityCountsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientGetClanActivityCountsResponse";
  }
  protected:
  explicit CMsgClientGetClanActivityCountsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEresultFieldNumber = 1,
  };
  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientGetClanActivityCountsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientOGSReportString PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientOGSReportString) */ {
 public:
  inline CMsgClientOGSReportString() : CMsgClientOGSReportString(nullptr) {}
  virtual ~CMsgClientOGSReportString();
  explicit constexpr CMsgClientOGSReportString(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientOGSReportString(const CMsgClientOGSReportString& from);
  CMsgClientOGSReportString(CMsgClientOGSReportString&& from) noexcept
    : CMsgClientOGSReportString() {
    *this = ::std::move(from);
  }

  inline CMsgClientOGSReportString& operator=(const CMsgClientOGSReportString& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientOGSReportString& operator=(CMsgClientOGSReportString&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientOGSReportString& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientOGSReportString* internal_default_instance() {
    return reinterpret_cast<const CMsgClientOGSReportString*>(
               &_CMsgClientOGSReportString_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(CMsgClientOGSReportString& a, CMsgClientOGSReportString& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientOGSReportString* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientOGSReportString* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientOGSReportString* New() const final {
    return CreateMaybeMessage<CMsgClientOGSReportString>(nullptr);
  }

  CMsgClientOGSReportString* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientOGSReportString>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientOGSReportString& from);
  void MergeFrom(const CMsgClientOGSReportString& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientOGSReportString* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientOGSReportString";
  }
  protected:
  explicit CMsgClientOGSReportString(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFormatterFieldNumber = 4,
    kVarargsFieldNumber = 5,
    kSessionidFieldNumber = 2,
    kAccumulatedFieldNumber = 1,
    kSeverityFieldNumber = 3,
  };
  // optional string formatter = 4;
  bool has_formatter() const;
  private:
  bool _internal_has_formatter() const;
  public:
  void clear_formatter();
  const std::string& formatter() const;
  void set_formatter(const std::string& value);
  void set_formatter(std::string&& value);
  void set_formatter(const char* value);
  void set_formatter(const char* value, size_t size);
  std::string* mutable_formatter();
  std::string* release_formatter();
  void set_allocated_formatter(std::string* formatter);
  private:
  const std::string& _internal_formatter() const;
  void _internal_set_formatter(const std::string& value);
  std::string* _internal_mutable_formatter();
  public:

  // optional bytes varargs = 5;
  bool has_varargs() const;
  private:
  bool _internal_has_varargs() const;
  public:
  void clear_varargs();
  const std::string& varargs() const;
  void set_varargs(const std::string& value);
  void set_varargs(std::string&& value);
  void set_varargs(const char* value);
  void set_varargs(const void* value, size_t size);
  std::string* mutable_varargs();
  std::string* release_varargs();
  void set_allocated_varargs(std::string* varargs);
  private:
  const std::string& _internal_varargs() const;
  void _internal_set_varargs(const std::string& value);
  std::string* _internal_mutable_varargs();
  public:

  // optional uint64 sessionid = 2;
  bool has_sessionid() const;
  private:
  bool _internal_has_sessionid() const;
  public:
  void clear_sessionid();
  ::PROTOBUF_NAMESPACE_ID::uint64 sessionid() const;
  void set_sessionid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_sessionid() const;
  void _internal_set_sessionid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool accumulated = 1;
  bool has_accumulated() const;
  private:
  bool _internal_has_accumulated() const;
  public:
  void clear_accumulated();
  bool accumulated() const;
  void set_accumulated(bool value);
  private:
  bool _internal_accumulated() const;
  void _internal_set_accumulated(bool value);
  public:

  // optional int32 severity = 3;
  bool has_severity() const;
  private:
  bool _internal_has_severity() const;
  public:
  void clear_severity();
  ::PROTOBUF_NAMESPACE_ID::int32 severity() const;
  void set_severity(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_severity() const;
  void _internal_set_severity(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientOGSReportString)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr formatter_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr varargs_;
  ::PROTOBUF_NAMESPACE_ID::uint64 sessionid_;
  bool accumulated_;
  ::PROTOBUF_NAMESPACE_ID::int32 severity_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientOGSReportBug PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientOGSReportBug) */ {
 public:
  inline CMsgClientOGSReportBug() : CMsgClientOGSReportBug(nullptr) {}
  virtual ~CMsgClientOGSReportBug();
  explicit constexpr CMsgClientOGSReportBug(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientOGSReportBug(const CMsgClientOGSReportBug& from);
  CMsgClientOGSReportBug(CMsgClientOGSReportBug&& from) noexcept
    : CMsgClientOGSReportBug() {
    *this = ::std::move(from);
  }

  inline CMsgClientOGSReportBug& operator=(const CMsgClientOGSReportBug& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientOGSReportBug& operator=(CMsgClientOGSReportBug&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientOGSReportBug& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientOGSReportBug* internal_default_instance() {
    return reinterpret_cast<const CMsgClientOGSReportBug*>(
               &_CMsgClientOGSReportBug_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(CMsgClientOGSReportBug& a, CMsgClientOGSReportBug& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientOGSReportBug* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientOGSReportBug* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientOGSReportBug* New() const final {
    return CreateMaybeMessage<CMsgClientOGSReportBug>(nullptr);
  }

  CMsgClientOGSReportBug* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientOGSReportBug>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientOGSReportBug& from);
  void MergeFrom(const CMsgClientOGSReportBug& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientOGSReportBug* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientOGSReportBug";
  }
  protected:
  explicit CMsgClientOGSReportBug(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBugtextFieldNumber = 2,
    kScreenshotFieldNumber = 3,
    kSessionidFieldNumber = 1,
  };
  // optional string bugtext = 2;
  bool has_bugtext() const;
  private:
  bool _internal_has_bugtext() const;
  public:
  void clear_bugtext();
  const std::string& bugtext() const;
  void set_bugtext(const std::string& value);
  void set_bugtext(std::string&& value);
  void set_bugtext(const char* value);
  void set_bugtext(const char* value, size_t size);
  std::string* mutable_bugtext();
  std::string* release_bugtext();
  void set_allocated_bugtext(std::string* bugtext);
  private:
  const std::string& _internal_bugtext() const;
  void _internal_set_bugtext(const std::string& value);
  std::string* _internal_mutable_bugtext();
  public:

  // optional bytes screenshot = 3;
  bool has_screenshot() const;
  private:
  bool _internal_has_screenshot() const;
  public:
  void clear_screenshot();
  const std::string& screenshot() const;
  void set_screenshot(const std::string& value);
  void set_screenshot(std::string&& value);
  void set_screenshot(const char* value);
  void set_screenshot(const void* value, size_t size);
  std::string* mutable_screenshot();
  std::string* release_screenshot();
  void set_allocated_screenshot(std::string* screenshot);
  private:
  const std::string& _internal_screenshot() const;
  void _internal_set_screenshot(const std::string& value);
  std::string* _internal_mutable_screenshot();
  public:

  // optional uint64 sessionid = 1;
  bool has_sessionid() const;
  private:
  bool _internal_has_sessionid() const;
  public:
  void clear_sessionid();
  ::PROTOBUF_NAMESPACE_ID::uint64 sessionid() const;
  void set_sessionid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_sessionid() const;
  void _internal_set_sessionid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientOGSReportBug)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bugtext_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr screenshot_;
  ::PROTOBUF_NAMESPACE_ID::uint64 sessionid_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientSentLogs PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientSentLogs) */ {
 public:
  inline CMsgClientSentLogs() : CMsgClientSentLogs(nullptr) {}
  virtual ~CMsgClientSentLogs();
  explicit constexpr CMsgClientSentLogs(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientSentLogs(const CMsgClientSentLogs& from);
  CMsgClientSentLogs(CMsgClientSentLogs&& from) noexcept
    : CMsgClientSentLogs() {
    *this = ::std::move(from);
  }

  inline CMsgClientSentLogs& operator=(const CMsgClientSentLogs& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientSentLogs& operator=(CMsgClientSentLogs&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientSentLogs& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientSentLogs* internal_default_instance() {
    return reinterpret_cast<const CMsgClientSentLogs*>(
               &_CMsgClientSentLogs_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(CMsgClientSentLogs& a, CMsgClientSentLogs& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientSentLogs* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientSentLogs* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientSentLogs* New() const final {
    return CreateMaybeMessage<CMsgClientSentLogs>(nullptr);
  }

  CMsgClientSentLogs* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientSentLogs>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientSentLogs& from);
  void MergeFrom(const CMsgClientSentLogs& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientSentLogs* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientSentLogs";
  }
  protected:
  explicit CMsgClientSentLogs(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientSentLogs)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCClient PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCClient) */ {
 public:
  inline CMsgGCClient() : CMsgGCClient(nullptr) {}
  virtual ~CMsgGCClient();
  explicit constexpr CMsgGCClient(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCClient(const CMsgGCClient& from);
  CMsgGCClient(CMsgGCClient&& from) noexcept
    : CMsgGCClient() {
    *this = ::std::move(from);
  }

  inline CMsgGCClient& operator=(const CMsgGCClient& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCClient& operator=(CMsgGCClient&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCClient& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCClient* internal_default_instance() {
    return reinterpret_cast<const CMsgGCClient*>(
               &_CMsgGCClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(CMsgGCClient& a, CMsgGCClient& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCClient* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCClient* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCClient* New() const final {
    return CreateMaybeMessage<CMsgGCClient>(nullptr);
  }

  CMsgGCClient* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCClient>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCClient& from);
  void MergeFrom(const CMsgGCClient& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCClient* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCClient";
  }
  protected:
  explicit CMsgGCClient(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPayloadFieldNumber = 3,
    kGcnameFieldNumber = 5,
    kAppidFieldNumber = 1,
    kMsgtypeFieldNumber = 2,
    kSteamidFieldNumber = 4,
    kIpFieldNumber = 6,
  };
  // optional bytes payload = 3;
  bool has_payload() const;
  private:
  bool _internal_has_payload() const;
  public:
  void clear_payload();
  const std::string& payload() const;
  void set_payload(const std::string& value);
  void set_payload(std::string&& value);
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  std::string* mutable_payload();
  std::string* release_payload();
  void set_allocated_payload(std::string* payload);
  private:
  const std::string& _internal_payload() const;
  void _internal_set_payload(const std::string& value);
  std::string* _internal_mutable_payload();
  public:

  // optional string gcname = 5;
  bool has_gcname() const;
  private:
  bool _internal_has_gcname() const;
  public:
  void clear_gcname();
  const std::string& gcname() const;
  void set_gcname(const std::string& value);
  void set_gcname(std::string&& value);
  void set_gcname(const char* value);
  void set_gcname(const char* value, size_t size);
  std::string* mutable_gcname();
  std::string* release_gcname();
  void set_allocated_gcname(std::string* gcname);
  private:
  const std::string& _internal_gcname() const;
  void _internal_set_gcname(const std::string& value);
  std::string* _internal_mutable_gcname();
  public:

  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 msgtype = 2;
  bool has_msgtype() const;
  private:
  bool _internal_has_msgtype() const;
  public:
  void clear_msgtype();
  ::PROTOBUF_NAMESPACE_ID::uint32 msgtype() const;
  void set_msgtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_msgtype() const;
  void _internal_set_msgtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed64 steamid = 4;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 ip = 6;
  bool has_ip() const;
  private:
  bool _internal_has_ip() const;
  public:
  void clear_ip();
  ::PROTOBUF_NAMESPACE_ID::uint32 ip() const;
  void set_ip(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ip() const;
  void _internal_set_ip(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCClient)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr payload_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gcname_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 msgtype_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ip_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientRequestFreeLicense PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientRequestFreeLicense) */ {
 public:
  inline CMsgClientRequestFreeLicense() : CMsgClientRequestFreeLicense(nullptr) {}
  virtual ~CMsgClientRequestFreeLicense();
  explicit constexpr CMsgClientRequestFreeLicense(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientRequestFreeLicense(const CMsgClientRequestFreeLicense& from);
  CMsgClientRequestFreeLicense(CMsgClientRequestFreeLicense&& from) noexcept
    : CMsgClientRequestFreeLicense() {
    *this = ::std::move(from);
  }

  inline CMsgClientRequestFreeLicense& operator=(const CMsgClientRequestFreeLicense& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientRequestFreeLicense& operator=(CMsgClientRequestFreeLicense&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientRequestFreeLicense& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientRequestFreeLicense* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRequestFreeLicense*>(
               &_CMsgClientRequestFreeLicense_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(CMsgClientRequestFreeLicense& a, CMsgClientRequestFreeLicense& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientRequestFreeLicense* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientRequestFreeLicense* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientRequestFreeLicense* New() const final {
    return CreateMaybeMessage<CMsgClientRequestFreeLicense>(nullptr);
  }

  CMsgClientRequestFreeLicense* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientRequestFreeLicense>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientRequestFreeLicense& from);
  void MergeFrom(const CMsgClientRequestFreeLicense& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientRequestFreeLicense* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientRequestFreeLicense";
  }
  protected:
  explicit CMsgClientRequestFreeLicense(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppidsFieldNumber = 2,
  };
  // repeated uint32 appids = 2;
  int appids_size() const;
  private:
  int _internal_appids_size() const;
  public:
  void clear_appids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_appids() const;
  void _internal_add_appids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_appids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 appids(int index) const;
  void set_appids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_appids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      appids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_appids();

  // @@protoc_insertion_point(class_scope:CMsgClientRequestFreeLicense)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > appids_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientRequestFreeLicenseResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientRequestFreeLicenseResponse) */ {
 public:
  inline CMsgClientRequestFreeLicenseResponse() : CMsgClientRequestFreeLicenseResponse(nullptr) {}
  virtual ~CMsgClientRequestFreeLicenseResponse();
  explicit constexpr CMsgClientRequestFreeLicenseResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientRequestFreeLicenseResponse(const CMsgClientRequestFreeLicenseResponse& from);
  CMsgClientRequestFreeLicenseResponse(CMsgClientRequestFreeLicenseResponse&& from) noexcept
    : CMsgClientRequestFreeLicenseResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientRequestFreeLicenseResponse& operator=(const CMsgClientRequestFreeLicenseResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientRequestFreeLicenseResponse& operator=(CMsgClientRequestFreeLicenseResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientRequestFreeLicenseResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientRequestFreeLicenseResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRequestFreeLicenseResponse*>(
               &_CMsgClientRequestFreeLicenseResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(CMsgClientRequestFreeLicenseResponse& a, CMsgClientRequestFreeLicenseResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientRequestFreeLicenseResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientRequestFreeLicenseResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientRequestFreeLicenseResponse* New() const final {
    return CreateMaybeMessage<CMsgClientRequestFreeLicenseResponse>(nullptr);
  }

  CMsgClientRequestFreeLicenseResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientRequestFreeLicenseResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientRequestFreeLicenseResponse& from);
  void MergeFrom(const CMsgClientRequestFreeLicenseResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientRequestFreeLicenseResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientRequestFreeLicenseResponse";
  }
  protected:
  explicit CMsgClientRequestFreeLicenseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGrantedPackageidsFieldNumber = 2,
    kGrantedAppidsFieldNumber = 3,
    kEresultFieldNumber = 1,
  };
  // repeated uint32 granted_packageids = 2;
  int granted_packageids_size() const;
  private:
  int _internal_granted_packageids_size() const;
  public:
  void clear_granted_packageids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_granted_packageids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_granted_packageids() const;
  void _internal_add_granted_packageids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_granted_packageids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 granted_packageids(int index) const;
  void set_granted_packageids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_granted_packageids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      granted_packageids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_granted_packageids();

  // repeated uint32 granted_appids = 3;
  int granted_appids_size() const;
  private:
  int _internal_granted_appids_size() const;
  public:
  void clear_granted_appids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_granted_appids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_granted_appids() const;
  void _internal_add_granted_appids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_granted_appids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 granted_appids(int index) const;
  void set_granted_appids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_granted_appids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      granted_appids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_granted_appids();

  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientRequestFreeLicenseResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > granted_packageids_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > granted_appids_;
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgDRMDownloadRequestWithCrashData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgDRMDownloadRequestWithCrashData) */ {
 public:
  inline CMsgDRMDownloadRequestWithCrashData() : CMsgDRMDownloadRequestWithCrashData(nullptr) {}
  virtual ~CMsgDRMDownloadRequestWithCrashData();
  explicit constexpr CMsgDRMDownloadRequestWithCrashData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgDRMDownloadRequestWithCrashData(const CMsgDRMDownloadRequestWithCrashData& from);
  CMsgDRMDownloadRequestWithCrashData(CMsgDRMDownloadRequestWithCrashData&& from) noexcept
    : CMsgDRMDownloadRequestWithCrashData() {
    *this = ::std::move(from);
  }

  inline CMsgDRMDownloadRequestWithCrashData& operator=(const CMsgDRMDownloadRequestWithCrashData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgDRMDownloadRequestWithCrashData& operator=(CMsgDRMDownloadRequestWithCrashData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgDRMDownloadRequestWithCrashData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgDRMDownloadRequestWithCrashData* internal_default_instance() {
    return reinterpret_cast<const CMsgDRMDownloadRequestWithCrashData*>(
               &_CMsgDRMDownloadRequestWithCrashData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(CMsgDRMDownloadRequestWithCrashData& a, CMsgDRMDownloadRequestWithCrashData& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgDRMDownloadRequestWithCrashData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgDRMDownloadRequestWithCrashData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgDRMDownloadRequestWithCrashData* New() const final {
    return CreateMaybeMessage<CMsgDRMDownloadRequestWithCrashData>(nullptr);
  }

  CMsgDRMDownloadRequestWithCrashData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDRMDownloadRequestWithCrashData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgDRMDownloadRequestWithCrashData& from);
  void MergeFrom(const CMsgDRMDownloadRequestWithCrashData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDRMDownloadRequestWithCrashData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgDRMDownloadRequestWithCrashData";
  }
  protected:
  explicit CMsgDRMDownloadRequestWithCrashData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuidDrmFieldNumber = 3,
    kGuidSplitFieldNumber = 4,
    kGuidMergeFieldNumber = 5,
    kModuleNameFieldNumber = 6,
    kModulePathFieldNumber = 7,
    kCrashDataFieldNumber = 8,
    kDownloadFlagsFieldNumber = 1,
    kDownloadTypesKnownFieldNumber = 2,
  };
  // optional bytes guid_drm = 3;
  bool has_guid_drm() const;
  private:
  bool _internal_has_guid_drm() const;
  public:
  void clear_guid_drm();
  const std::string& guid_drm() const;
  void set_guid_drm(const std::string& value);
  void set_guid_drm(std::string&& value);
  void set_guid_drm(const char* value);
  void set_guid_drm(const void* value, size_t size);
  std::string* mutable_guid_drm();
  std::string* release_guid_drm();
  void set_allocated_guid_drm(std::string* guid_drm);
  private:
  const std::string& _internal_guid_drm() const;
  void _internal_set_guid_drm(const std::string& value);
  std::string* _internal_mutable_guid_drm();
  public:

  // optional bytes guid_split = 4;
  bool has_guid_split() const;
  private:
  bool _internal_has_guid_split() const;
  public:
  void clear_guid_split();
  const std::string& guid_split() const;
  void set_guid_split(const std::string& value);
  void set_guid_split(std::string&& value);
  void set_guid_split(const char* value);
  void set_guid_split(const void* value, size_t size);
  std::string* mutable_guid_split();
  std::string* release_guid_split();
  void set_allocated_guid_split(std::string* guid_split);
  private:
  const std::string& _internal_guid_split() const;
  void _internal_set_guid_split(const std::string& value);
  std::string* _internal_mutable_guid_split();
  public:

  // optional bytes guid_merge = 5;
  bool has_guid_merge() const;
  private:
  bool _internal_has_guid_merge() const;
  public:
  void clear_guid_merge();
  const std::string& guid_merge() const;
  void set_guid_merge(const std::string& value);
  void set_guid_merge(std::string&& value);
  void set_guid_merge(const char* value);
  void set_guid_merge(const void* value, size_t size);
  std::string* mutable_guid_merge();
  std::string* release_guid_merge();
  void set_allocated_guid_merge(std::string* guid_merge);
  private:
  const std::string& _internal_guid_merge() const;
  void _internal_set_guid_merge(const std::string& value);
  std::string* _internal_mutable_guid_merge();
  public:

  // optional string module_name = 6;
  bool has_module_name() const;
  private:
  bool _internal_has_module_name() const;
  public:
  void clear_module_name();
  const std::string& module_name() const;
  void set_module_name(const std::string& value);
  void set_module_name(std::string&& value);
  void set_module_name(const char* value);
  void set_module_name(const char* value, size_t size);
  std::string* mutable_module_name();
  std::string* release_module_name();
  void set_allocated_module_name(std::string* module_name);
  private:
  const std::string& _internal_module_name() const;
  void _internal_set_module_name(const std::string& value);
  std::string* _internal_mutable_module_name();
  public:

  // optional string module_path = 7;
  bool has_module_path() const;
  private:
  bool _internal_has_module_path() const;
  public:
  void clear_module_path();
  const std::string& module_path() const;
  void set_module_path(const std::string& value);
  void set_module_path(std::string&& value);
  void set_module_path(const char* value);
  void set_module_path(const char* value, size_t size);
  std::string* mutable_module_path();
  std::string* release_module_path();
  void set_allocated_module_path(std::string* module_path);
  private:
  const std::string& _internal_module_path() const;
  void _internal_set_module_path(const std::string& value);
  std::string* _internal_mutable_module_path();
  public:

  // optional bytes crash_data = 8;
  bool has_crash_data() const;
  private:
  bool _internal_has_crash_data() const;
  public:
  void clear_crash_data();
  const std::string& crash_data() const;
  void set_crash_data(const std::string& value);
  void set_crash_data(std::string&& value);
  void set_crash_data(const char* value);
  void set_crash_data(const void* value, size_t size);
  std::string* mutable_crash_data();
  std::string* release_crash_data();
  void set_allocated_crash_data(std::string* crash_data);
  private:
  const std::string& _internal_crash_data() const;
  void _internal_set_crash_data(const std::string& value);
  std::string* _internal_mutable_crash_data();
  public:

  // optional uint32 download_flags = 1;
  bool has_download_flags() const;
  private:
  bool _internal_has_download_flags() const;
  public:
  void clear_download_flags();
  ::PROTOBUF_NAMESPACE_ID::uint32 download_flags() const;
  void set_download_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_download_flags() const;
  void _internal_set_download_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 download_types_known = 2;
  bool has_download_types_known() const;
  private:
  bool _internal_has_download_types_known() const;
  public:
  void clear_download_types_known();
  ::PROTOBUF_NAMESPACE_ID::uint32 download_types_known() const;
  void set_download_types_known(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_download_types_known() const;
  void _internal_set_download_types_known(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgDRMDownloadRequestWithCrashData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guid_drm_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guid_split_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guid_merge_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr module_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr module_path_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr crash_data_;
  ::PROTOBUF_NAMESPACE_ID::uint32 download_flags_;
  ::PROTOBUF_NAMESPACE_ID::uint32 download_types_known_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgDRMDownloadResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgDRMDownloadResponse) */ {
 public:
  inline CMsgDRMDownloadResponse() : CMsgDRMDownloadResponse(nullptr) {}
  virtual ~CMsgDRMDownloadResponse();
  explicit constexpr CMsgDRMDownloadResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgDRMDownloadResponse(const CMsgDRMDownloadResponse& from);
  CMsgDRMDownloadResponse(CMsgDRMDownloadResponse&& from) noexcept
    : CMsgDRMDownloadResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDRMDownloadResponse& operator=(const CMsgDRMDownloadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgDRMDownloadResponse& operator=(CMsgDRMDownloadResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgDRMDownloadResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgDRMDownloadResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDRMDownloadResponse*>(
               &_CMsgDRMDownloadResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(CMsgDRMDownloadResponse& a, CMsgDRMDownloadResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgDRMDownloadResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgDRMDownloadResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgDRMDownloadResponse* New() const final {
    return CreateMaybeMessage<CMsgDRMDownloadResponse>(nullptr);
  }

  CMsgDRMDownloadResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDRMDownloadResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgDRMDownloadResponse& from);
  void MergeFrom(const CMsgDRMDownloadResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDRMDownloadResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgDRMDownloadResponse";
  }
  protected:
  explicit CMsgDRMDownloadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMergeGuidFieldNumber = 4,
    kDownloadFileUrlFieldNumber = 7,
    kModulePathFieldNumber = 8,
    kAppIdFieldNumber = 2,
    kBlobDownloadTypeFieldNumber = 3,
    kDownloadFileDfsIpFieldNumber = 5,
    kDownloadFileDfsPortFieldNumber = 6,
    kEresultFieldNumber = 1,
  };
  // optional bytes merge_guid = 4;
  bool has_merge_guid() const;
  private:
  bool _internal_has_merge_guid() const;
  public:
  void clear_merge_guid();
  const std::string& merge_guid() const;
  void set_merge_guid(const std::string& value);
  void set_merge_guid(std::string&& value);
  void set_merge_guid(const char* value);
  void set_merge_guid(const void* value, size_t size);
  std::string* mutable_merge_guid();
  std::string* release_merge_guid();
  void set_allocated_merge_guid(std::string* merge_guid);
  private:
  const std::string& _internal_merge_guid() const;
  void _internal_set_merge_guid(const std::string& value);
  std::string* _internal_mutable_merge_guid();
  public:

  // optional string download_file_url = 7;
  bool has_download_file_url() const;
  private:
  bool _internal_has_download_file_url() const;
  public:
  void clear_download_file_url();
  const std::string& download_file_url() const;
  void set_download_file_url(const std::string& value);
  void set_download_file_url(std::string&& value);
  void set_download_file_url(const char* value);
  void set_download_file_url(const char* value, size_t size);
  std::string* mutable_download_file_url();
  std::string* release_download_file_url();
  void set_allocated_download_file_url(std::string* download_file_url);
  private:
  const std::string& _internal_download_file_url() const;
  void _internal_set_download_file_url(const std::string& value);
  std::string* _internal_mutable_download_file_url();
  public:

  // optional string module_path = 8;
  bool has_module_path() const;
  private:
  bool _internal_has_module_path() const;
  public:
  void clear_module_path();
  const std::string& module_path() const;
  void set_module_path(const std::string& value);
  void set_module_path(std::string&& value);
  void set_module_path(const char* value);
  void set_module_path(const char* value, size_t size);
  std::string* mutable_module_path();
  std::string* release_module_path();
  void set_allocated_module_path(std::string* module_path);
  private:
  const std::string& _internal_module_path() const;
  void _internal_set_module_path(const std::string& value);
  std::string* _internal_mutable_module_path();
  public:

  // optional uint32 app_id = 2;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 blob_download_type = 3;
  bool has_blob_download_type() const;
  private:
  bool _internal_has_blob_download_type() const;
  public:
  void clear_blob_download_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 blob_download_type() const;
  void set_blob_download_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_blob_download_type() const;
  void _internal_set_blob_download_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 download_file_dfs_ip = 5;
  bool has_download_file_dfs_ip() const;
  private:
  bool _internal_has_download_file_dfs_ip() const;
  public:
  void clear_download_file_dfs_ip();
  ::PROTOBUF_NAMESPACE_ID::uint32 download_file_dfs_ip() const;
  void set_download_file_dfs_ip(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_download_file_dfs_ip() const;
  void _internal_set_download_file_dfs_ip(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 download_file_dfs_port = 6;
  bool has_download_file_dfs_port() const;
  private:
  bool _internal_has_download_file_dfs_port() const;
  public:
  void clear_download_file_dfs_port();
  ::PROTOBUF_NAMESPACE_ID::uint32 download_file_dfs_port() const;
  void set_download_file_dfs_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_download_file_dfs_port() const;
  void _internal_set_download_file_dfs_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgDRMDownloadResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr merge_guid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr download_file_url_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr module_path_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 blob_download_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 download_file_dfs_ip_;
  ::PROTOBUF_NAMESPACE_ID::uint32 download_file_dfs_port_;
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgDRMFinalResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgDRMFinalResult) */ {
 public:
  inline CMsgDRMFinalResult() : CMsgDRMFinalResult(nullptr) {}
  virtual ~CMsgDRMFinalResult();
  explicit constexpr CMsgDRMFinalResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgDRMFinalResult(const CMsgDRMFinalResult& from);
  CMsgDRMFinalResult(CMsgDRMFinalResult&& from) noexcept
    : CMsgDRMFinalResult() {
    *this = ::std::move(from);
  }

  inline CMsgDRMFinalResult& operator=(const CMsgDRMFinalResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgDRMFinalResult& operator=(CMsgDRMFinalResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgDRMFinalResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgDRMFinalResult* internal_default_instance() {
    return reinterpret_cast<const CMsgDRMFinalResult*>(
               &_CMsgDRMFinalResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(CMsgDRMFinalResult& a, CMsgDRMFinalResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgDRMFinalResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgDRMFinalResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgDRMFinalResult* New() const final {
    return CreateMaybeMessage<CMsgDRMFinalResult>(nullptr);
  }

  CMsgDRMFinalResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDRMFinalResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgDRMFinalResult& from);
  void MergeFrom(const CMsgDRMFinalResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDRMFinalResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgDRMFinalResult";
  }
  protected:
  explicit CMsgDRMFinalResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMergeGuidFieldNumber = 5,
    kDownloadFileUrlFieldNumber = 8,
    kAppIdFieldNumber = 2,
    kBlobDownloadTypeFieldNumber = 3,
    kErrorDetailFieldNumber = 4,
    kDownloadFileDfsIpFieldNumber = 6,
    kDownloadFileDfsPortFieldNumber = 7,
    kEResultFieldNumber = 1,
  };
  // optional bytes merge_guid = 5;
  bool has_merge_guid() const;
  private:
  bool _internal_has_merge_guid() const;
  public:
  void clear_merge_guid();
  const std::string& merge_guid() const;
  void set_merge_guid(const std::string& value);
  void set_merge_guid(std::string&& value);
  void set_merge_guid(const char* value);
  void set_merge_guid(const void* value, size_t size);
  std::string* mutable_merge_guid();
  std::string* release_merge_guid();
  void set_allocated_merge_guid(std::string* merge_guid);
  private:
  const std::string& _internal_merge_guid() const;
  void _internal_set_merge_guid(const std::string& value);
  std::string* _internal_mutable_merge_guid();
  public:

  // optional string download_file_url = 8;
  bool has_download_file_url() const;
  private:
  bool _internal_has_download_file_url() const;
  public:
  void clear_download_file_url();
  const std::string& download_file_url() const;
  void set_download_file_url(const std::string& value);
  void set_download_file_url(std::string&& value);
  void set_download_file_url(const char* value);
  void set_download_file_url(const char* value, size_t size);
  std::string* mutable_download_file_url();
  std::string* release_download_file_url();
  void set_allocated_download_file_url(std::string* download_file_url);
  private:
  const std::string& _internal_download_file_url() const;
  void _internal_set_download_file_url(const std::string& value);
  std::string* _internal_mutable_download_file_url();
  public:

  // optional uint32 app_id = 2;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 blob_download_type = 3;
  bool has_blob_download_type() const;
  private:
  bool _internal_has_blob_download_type() const;
  public:
  void clear_blob_download_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 blob_download_type() const;
  void set_blob_download_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_blob_download_type() const;
  void _internal_set_blob_download_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 error_detail = 4;
  bool has_error_detail() const;
  private:
  bool _internal_has_error_detail() const;
  public:
  void clear_error_detail();
  ::PROTOBUF_NAMESPACE_ID::uint32 error_detail() const;
  void set_error_detail(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_error_detail() const;
  void _internal_set_error_detail(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 download_file_dfs_ip = 6;
  bool has_download_file_dfs_ip() const;
  private:
  bool _internal_has_download_file_dfs_ip() const;
  public:
  void clear_download_file_dfs_ip();
  ::PROTOBUF_NAMESPACE_ID::uint32 download_file_dfs_ip() const;
  void set_download_file_dfs_ip(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_download_file_dfs_ip() const;
  void _internal_set_download_file_dfs_ip(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 download_file_dfs_port = 7;
  bool has_download_file_dfs_port() const;
  private:
  bool _internal_has_download_file_dfs_port() const;
  public:
  void clear_download_file_dfs_port();
  ::PROTOBUF_NAMESPACE_ID::uint32 download_file_dfs_port() const;
  void set_download_file_dfs_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_download_file_dfs_port() const;
  void _internal_set_download_file_dfs_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 eResult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgDRMFinalResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr merge_guid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr download_file_url_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 blob_download_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 error_detail_;
  ::PROTOBUF_NAMESPACE_ID::uint32 download_file_dfs_ip_;
  ::PROTOBUF_NAMESPACE_ID::uint32 download_file_dfs_port_;
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientDPCheckSpecialSurvey PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientDPCheckSpecialSurvey) */ {
 public:
  inline CMsgClientDPCheckSpecialSurvey() : CMsgClientDPCheckSpecialSurvey(nullptr) {}
  virtual ~CMsgClientDPCheckSpecialSurvey();
  explicit constexpr CMsgClientDPCheckSpecialSurvey(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientDPCheckSpecialSurvey(const CMsgClientDPCheckSpecialSurvey& from);
  CMsgClientDPCheckSpecialSurvey(CMsgClientDPCheckSpecialSurvey&& from) noexcept
    : CMsgClientDPCheckSpecialSurvey() {
    *this = ::std::move(from);
  }

  inline CMsgClientDPCheckSpecialSurvey& operator=(const CMsgClientDPCheckSpecialSurvey& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientDPCheckSpecialSurvey& operator=(CMsgClientDPCheckSpecialSurvey&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientDPCheckSpecialSurvey& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientDPCheckSpecialSurvey* internal_default_instance() {
    return reinterpret_cast<const CMsgClientDPCheckSpecialSurvey*>(
               &_CMsgClientDPCheckSpecialSurvey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(CMsgClientDPCheckSpecialSurvey& a, CMsgClientDPCheckSpecialSurvey& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientDPCheckSpecialSurvey* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientDPCheckSpecialSurvey* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientDPCheckSpecialSurvey* New() const final {
    return CreateMaybeMessage<CMsgClientDPCheckSpecialSurvey>(nullptr);
  }

  CMsgClientDPCheckSpecialSurvey* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientDPCheckSpecialSurvey>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientDPCheckSpecialSurvey& from);
  void MergeFrom(const CMsgClientDPCheckSpecialSurvey& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientDPCheckSpecialSurvey* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientDPCheckSpecialSurvey";
  }
  protected:
  explicit CMsgClientDPCheckSpecialSurvey(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSurveyIdFieldNumber = 1,
  };
  // optional uint32 survey_id = 1;
  bool has_survey_id() const;
  private:
  bool _internal_has_survey_id() const;
  public:
  void clear_survey_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 survey_id() const;
  void set_survey_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_survey_id() const;
  void _internal_set_survey_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientDPCheckSpecialSurvey)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 survey_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientDPCheckSpecialSurveyResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientDPCheckSpecialSurveyResponse) */ {
 public:
  inline CMsgClientDPCheckSpecialSurveyResponse() : CMsgClientDPCheckSpecialSurveyResponse(nullptr) {}
  virtual ~CMsgClientDPCheckSpecialSurveyResponse();
  explicit constexpr CMsgClientDPCheckSpecialSurveyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientDPCheckSpecialSurveyResponse(const CMsgClientDPCheckSpecialSurveyResponse& from);
  CMsgClientDPCheckSpecialSurveyResponse(CMsgClientDPCheckSpecialSurveyResponse&& from) noexcept
    : CMsgClientDPCheckSpecialSurveyResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientDPCheckSpecialSurveyResponse& operator=(const CMsgClientDPCheckSpecialSurveyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientDPCheckSpecialSurveyResponse& operator=(CMsgClientDPCheckSpecialSurveyResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientDPCheckSpecialSurveyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientDPCheckSpecialSurveyResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientDPCheckSpecialSurveyResponse*>(
               &_CMsgClientDPCheckSpecialSurveyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(CMsgClientDPCheckSpecialSurveyResponse& a, CMsgClientDPCheckSpecialSurveyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientDPCheckSpecialSurveyResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientDPCheckSpecialSurveyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientDPCheckSpecialSurveyResponse* New() const final {
    return CreateMaybeMessage<CMsgClientDPCheckSpecialSurveyResponse>(nullptr);
  }

  CMsgClientDPCheckSpecialSurveyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientDPCheckSpecialSurveyResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientDPCheckSpecialSurveyResponse& from);
  void MergeFrom(const CMsgClientDPCheckSpecialSurveyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientDPCheckSpecialSurveyResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientDPCheckSpecialSurveyResponse";
  }
  protected:
  explicit CMsgClientDPCheckSpecialSurveyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 3,
    kCustomUrlFieldNumber = 4,
    kTokenFieldNumber = 6,
    kStateFieldNumber = 2,
    kIncludeSoftwareFieldNumber = 5,
    kEResultFieldNumber = 1,
  };
  // optional string name = 3;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string custom_url = 4;
  bool has_custom_url() const;
  private:
  bool _internal_has_custom_url() const;
  public:
  void clear_custom_url();
  const std::string& custom_url() const;
  void set_custom_url(const std::string& value);
  void set_custom_url(std::string&& value);
  void set_custom_url(const char* value);
  void set_custom_url(const char* value, size_t size);
  std::string* mutable_custom_url();
  std::string* release_custom_url();
  void set_allocated_custom_url(std::string* custom_url);
  private:
  const std::string& _internal_custom_url() const;
  void _internal_set_custom_url(const std::string& value);
  std::string* _internal_mutable_custom_url();
  public:

  // optional bytes token = 6;
  bool has_token() const;
  private:
  bool _internal_has_token() const;
  public:
  void clear_token();
  const std::string& token() const;
  void set_token(const std::string& value);
  void set_token(std::string&& value);
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  std::string* mutable_token();
  std::string* release_token();
  void set_allocated_token(std::string* token);
  private:
  const std::string& _internal_token() const;
  void _internal_set_token(const std::string& value);
  std::string* _internal_mutable_token();
  public:

  // optional uint32 state = 2;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::uint32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool include_software = 5;
  bool has_include_software() const;
  private:
  bool _internal_has_include_software() const;
  public:
  void clear_include_software();
  bool include_software() const;
  void set_include_software(bool value);
  private:
  bool _internal_include_software() const;
  void _internal_set_include_software(bool value);
  public:

  // optional uint32 eResult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientDPCheckSpecialSurveyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr custom_url_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr token_;
  ::PROTOBUF_NAMESPACE_ID::uint32 state_;
  bool include_software_;
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientDPSendSpecialSurveyResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientDPSendSpecialSurveyResponse) */ {
 public:
  inline CMsgClientDPSendSpecialSurveyResponse() : CMsgClientDPSendSpecialSurveyResponse(nullptr) {}
  virtual ~CMsgClientDPSendSpecialSurveyResponse();
  explicit constexpr CMsgClientDPSendSpecialSurveyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientDPSendSpecialSurveyResponse(const CMsgClientDPSendSpecialSurveyResponse& from);
  CMsgClientDPSendSpecialSurveyResponse(CMsgClientDPSendSpecialSurveyResponse&& from) noexcept
    : CMsgClientDPSendSpecialSurveyResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientDPSendSpecialSurveyResponse& operator=(const CMsgClientDPSendSpecialSurveyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientDPSendSpecialSurveyResponse& operator=(CMsgClientDPSendSpecialSurveyResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientDPSendSpecialSurveyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientDPSendSpecialSurveyResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientDPSendSpecialSurveyResponse*>(
               &_CMsgClientDPSendSpecialSurveyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(CMsgClientDPSendSpecialSurveyResponse& a, CMsgClientDPSendSpecialSurveyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientDPSendSpecialSurveyResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientDPSendSpecialSurveyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientDPSendSpecialSurveyResponse* New() const final {
    return CreateMaybeMessage<CMsgClientDPSendSpecialSurveyResponse>(nullptr);
  }

  CMsgClientDPSendSpecialSurveyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientDPSendSpecialSurveyResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientDPSendSpecialSurveyResponse& from);
  void MergeFrom(const CMsgClientDPSendSpecialSurveyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientDPSendSpecialSurveyResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientDPSendSpecialSurveyResponse";
  }
  protected:
  explicit CMsgClientDPSendSpecialSurveyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2,
    kSurveyIdFieldNumber = 1,
  };
  // optional bytes data = 2;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const std::string& data() const;
  void set_data(const std::string& value);
  void set_data(std::string&& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  std::string* mutable_data();
  std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // optional uint32 survey_id = 1;
  bool has_survey_id() const;
  private:
  bool _internal_has_survey_id() const;
  public:
  void clear_survey_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 survey_id() const;
  void set_survey_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_survey_id() const;
  void _internal_set_survey_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientDPSendSpecialSurveyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  ::PROTOBUF_NAMESPACE_ID::uint32 survey_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientDPSendSpecialSurveyResponseReply PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientDPSendSpecialSurveyResponseReply) */ {
 public:
  inline CMsgClientDPSendSpecialSurveyResponseReply() : CMsgClientDPSendSpecialSurveyResponseReply(nullptr) {}
  virtual ~CMsgClientDPSendSpecialSurveyResponseReply();
  explicit constexpr CMsgClientDPSendSpecialSurveyResponseReply(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientDPSendSpecialSurveyResponseReply(const CMsgClientDPSendSpecialSurveyResponseReply& from);
  CMsgClientDPSendSpecialSurveyResponseReply(CMsgClientDPSendSpecialSurveyResponseReply&& from) noexcept
    : CMsgClientDPSendSpecialSurveyResponseReply() {
    *this = ::std::move(from);
  }

  inline CMsgClientDPSendSpecialSurveyResponseReply& operator=(const CMsgClientDPSendSpecialSurveyResponseReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientDPSendSpecialSurveyResponseReply& operator=(CMsgClientDPSendSpecialSurveyResponseReply&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientDPSendSpecialSurveyResponseReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientDPSendSpecialSurveyResponseReply* internal_default_instance() {
    return reinterpret_cast<const CMsgClientDPSendSpecialSurveyResponseReply*>(
               &_CMsgClientDPSendSpecialSurveyResponseReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(CMsgClientDPSendSpecialSurveyResponseReply& a, CMsgClientDPSendSpecialSurveyResponseReply& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientDPSendSpecialSurveyResponseReply* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientDPSendSpecialSurveyResponseReply* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientDPSendSpecialSurveyResponseReply* New() const final {
    return CreateMaybeMessage<CMsgClientDPSendSpecialSurveyResponseReply>(nullptr);
  }

  CMsgClientDPSendSpecialSurveyResponseReply* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientDPSendSpecialSurveyResponseReply>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientDPSendSpecialSurveyResponseReply& from);
  void MergeFrom(const CMsgClientDPSendSpecialSurveyResponseReply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientDPSendSpecialSurveyResponseReply* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientDPSendSpecialSurveyResponseReply";
  }
  protected:
  explicit CMsgClientDPSendSpecialSurveyResponseReply(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTokenFieldNumber = 2,
    kEResultFieldNumber = 1,
  };
  // optional bytes token = 2;
  bool has_token() const;
  private:
  bool _internal_has_token() const;
  public:
  void clear_token();
  const std::string& token() const;
  void set_token(const std::string& value);
  void set_token(std::string&& value);
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  std::string* mutable_token();
  std::string* release_token();
  void set_allocated_token(std::string* token);
  private:
  const std::string& _internal_token() const;
  void _internal_set_token(const std::string& value);
  std::string* _internal_mutable_token();
  public:

  // optional uint32 eResult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientDPSendSpecialSurveyResponseReply)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr token_;
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientRequestForgottenPasswordEmail PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientRequestForgottenPasswordEmail) */ {
 public:
  inline CMsgClientRequestForgottenPasswordEmail() : CMsgClientRequestForgottenPasswordEmail(nullptr) {}
  virtual ~CMsgClientRequestForgottenPasswordEmail();
  explicit constexpr CMsgClientRequestForgottenPasswordEmail(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientRequestForgottenPasswordEmail(const CMsgClientRequestForgottenPasswordEmail& from);
  CMsgClientRequestForgottenPasswordEmail(CMsgClientRequestForgottenPasswordEmail&& from) noexcept
    : CMsgClientRequestForgottenPasswordEmail() {
    *this = ::std::move(from);
  }

  inline CMsgClientRequestForgottenPasswordEmail& operator=(const CMsgClientRequestForgottenPasswordEmail& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientRequestForgottenPasswordEmail& operator=(CMsgClientRequestForgottenPasswordEmail&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientRequestForgottenPasswordEmail& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientRequestForgottenPasswordEmail* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRequestForgottenPasswordEmail*>(
               &_CMsgClientRequestForgottenPasswordEmail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(CMsgClientRequestForgottenPasswordEmail& a, CMsgClientRequestForgottenPasswordEmail& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientRequestForgottenPasswordEmail* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientRequestForgottenPasswordEmail* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientRequestForgottenPasswordEmail* New() const final {
    return CreateMaybeMessage<CMsgClientRequestForgottenPasswordEmail>(nullptr);
  }

  CMsgClientRequestForgottenPasswordEmail* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientRequestForgottenPasswordEmail>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientRequestForgottenPasswordEmail& from);
  void MergeFrom(const CMsgClientRequestForgottenPasswordEmail& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientRequestForgottenPasswordEmail* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientRequestForgottenPasswordEmail";
  }
  protected:
  explicit CMsgClientRequestForgottenPasswordEmail(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountNameFieldNumber = 1,
    kPasswordTriedFieldNumber = 2,
  };
  // optional string account_name = 1;
  bool has_account_name() const;
  private:
  bool _internal_has_account_name() const;
  public:
  void clear_account_name();
  const std::string& account_name() const;
  void set_account_name(const std::string& value);
  void set_account_name(std::string&& value);
  void set_account_name(const char* value);
  void set_account_name(const char* value, size_t size);
  std::string* mutable_account_name();
  std::string* release_account_name();
  void set_allocated_account_name(std::string* account_name);
  private:
  const std::string& _internal_account_name() const;
  void _internal_set_account_name(const std::string& value);
  std::string* _internal_mutable_account_name();
  public:

  // optional string password_tried = 2;
  bool has_password_tried() const;
  private:
  bool _internal_has_password_tried() const;
  public:
  void clear_password_tried();
  const std::string& password_tried() const;
  void set_password_tried(const std::string& value);
  void set_password_tried(std::string&& value);
  void set_password_tried(const char* value);
  void set_password_tried(const char* value, size_t size);
  std::string* mutable_password_tried();
  std::string* release_password_tried();
  void set_allocated_password_tried(std::string* password_tried);
  private:
  const std::string& _internal_password_tried() const;
  void _internal_set_password_tried(const std::string& value);
  std::string* _internal_mutable_password_tried();
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientRequestForgottenPasswordEmail)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr account_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr password_tried_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientRequestForgottenPasswordEmailResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientRequestForgottenPasswordEmailResponse) */ {
 public:
  inline CMsgClientRequestForgottenPasswordEmailResponse() : CMsgClientRequestForgottenPasswordEmailResponse(nullptr) {}
  virtual ~CMsgClientRequestForgottenPasswordEmailResponse();
  explicit constexpr CMsgClientRequestForgottenPasswordEmailResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientRequestForgottenPasswordEmailResponse(const CMsgClientRequestForgottenPasswordEmailResponse& from);
  CMsgClientRequestForgottenPasswordEmailResponse(CMsgClientRequestForgottenPasswordEmailResponse&& from) noexcept
    : CMsgClientRequestForgottenPasswordEmailResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientRequestForgottenPasswordEmailResponse& operator=(const CMsgClientRequestForgottenPasswordEmailResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientRequestForgottenPasswordEmailResponse& operator=(CMsgClientRequestForgottenPasswordEmailResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientRequestForgottenPasswordEmailResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientRequestForgottenPasswordEmailResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRequestForgottenPasswordEmailResponse*>(
               &_CMsgClientRequestForgottenPasswordEmailResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(CMsgClientRequestForgottenPasswordEmailResponse& a, CMsgClientRequestForgottenPasswordEmailResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientRequestForgottenPasswordEmailResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientRequestForgottenPasswordEmailResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientRequestForgottenPasswordEmailResponse* New() const final {
    return CreateMaybeMessage<CMsgClientRequestForgottenPasswordEmailResponse>(nullptr);
  }

  CMsgClientRequestForgottenPasswordEmailResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientRequestForgottenPasswordEmailResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientRequestForgottenPasswordEmailResponse& from);
  void MergeFrom(const CMsgClientRequestForgottenPasswordEmailResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientRequestForgottenPasswordEmailResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientRequestForgottenPasswordEmailResponse";
  }
  protected:
  explicit CMsgClientRequestForgottenPasswordEmailResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEResultFieldNumber = 1,
    kUseSecretQuestionFieldNumber = 2,
  };
  // optional uint32 eResult = 1;
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool use_secret_question = 2;
  bool has_use_secret_question() const;
  private:
  bool _internal_has_use_secret_question() const;
  public:
  void clear_use_secret_question();
  bool use_secret_question() const;
  void set_use_secret_question(bool value);
  private:
  bool _internal_use_secret_question() const;
  void _internal_set_use_secret_question(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientRequestForgottenPasswordEmailResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 eresult_;
  bool use_secret_question_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientItemAnnouncements_UnseenItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientItemAnnouncements.UnseenItem) */ {
 public:
  inline CMsgClientItemAnnouncements_UnseenItem() : CMsgClientItemAnnouncements_UnseenItem(nullptr) {}
  virtual ~CMsgClientItemAnnouncements_UnseenItem();
  explicit constexpr CMsgClientItemAnnouncements_UnseenItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientItemAnnouncements_UnseenItem(const CMsgClientItemAnnouncements_UnseenItem& from);
  CMsgClientItemAnnouncements_UnseenItem(CMsgClientItemAnnouncements_UnseenItem&& from) noexcept
    : CMsgClientItemAnnouncements_UnseenItem() {
    *this = ::std::move(from);
  }

  inline CMsgClientItemAnnouncements_UnseenItem& operator=(const CMsgClientItemAnnouncements_UnseenItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientItemAnnouncements_UnseenItem& operator=(CMsgClientItemAnnouncements_UnseenItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientItemAnnouncements_UnseenItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientItemAnnouncements_UnseenItem* internal_default_instance() {
    return reinterpret_cast<const CMsgClientItemAnnouncements_UnseenItem*>(
               &_CMsgClientItemAnnouncements_UnseenItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(CMsgClientItemAnnouncements_UnseenItem& a, CMsgClientItemAnnouncements_UnseenItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientItemAnnouncements_UnseenItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientItemAnnouncements_UnseenItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientItemAnnouncements_UnseenItem* New() const final {
    return CreateMaybeMessage<CMsgClientItemAnnouncements_UnseenItem>(nullptr);
  }

  CMsgClientItemAnnouncements_UnseenItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientItemAnnouncements_UnseenItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientItemAnnouncements_UnseenItem& from);
  void MergeFrom(const CMsgClientItemAnnouncements_UnseenItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientItemAnnouncements_UnseenItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientItemAnnouncements.UnseenItem";
  }
  protected:
  explicit CMsgClientItemAnnouncements_UnseenItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContextIdFieldNumber = 2,
    kAssetIdFieldNumber = 3,
    kAppidFieldNumber = 1,
    kRtime32GainedFieldNumber = 5,
    kAmountFieldNumber = 4,
    kSourceAppidFieldNumber = 6,
  };
  // optional uint64 context_id = 2;
  bool has_context_id() const;
  private:
  bool _internal_has_context_id() const;
  public:
  void clear_context_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 context_id() const;
  void set_context_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_context_id() const;
  void _internal_set_context_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 asset_id = 3;
  bool has_asset_id() const;
  private:
  bool _internal_has_asset_id() const;
  public:
  void clear_asset_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 asset_id() const;
  void set_asset_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_asset_id() const;
  void _internal_set_asset_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed32 rtime32_gained = 5;
  bool has_rtime32_gained() const;
  private:
  bool _internal_has_rtime32_gained() const;
  public:
  void clear_rtime32_gained();
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime32_gained() const;
  void set_rtime32_gained(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rtime32_gained() const;
  void _internal_set_rtime32_gained(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 amount = 4;
  bool has_amount() const;
  private:
  bool _internal_has_amount() const;
  public:
  void clear_amount();
  ::PROTOBUF_NAMESPACE_ID::uint64 amount() const;
  void set_amount(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_amount() const;
  void _internal_set_amount(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 source_appid = 6;
  bool has_source_appid() const;
  private:
  bool _internal_has_source_appid() const;
  public:
  void clear_source_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 source_appid() const;
  void set_source_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_source_appid() const;
  void _internal_set_source_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientItemAnnouncements.UnseenItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 context_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 asset_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime32_gained_;
  ::PROTOBUF_NAMESPACE_ID::uint64 amount_;
  ::PROTOBUF_NAMESPACE_ID::uint32 source_appid_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientItemAnnouncements PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientItemAnnouncements) */ {
 public:
  inline CMsgClientItemAnnouncements() : CMsgClientItemAnnouncements(nullptr) {}
  virtual ~CMsgClientItemAnnouncements();
  explicit constexpr CMsgClientItemAnnouncements(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientItemAnnouncements(const CMsgClientItemAnnouncements& from);
  CMsgClientItemAnnouncements(CMsgClientItemAnnouncements&& from) noexcept
    : CMsgClientItemAnnouncements() {
    *this = ::std::move(from);
  }

  inline CMsgClientItemAnnouncements& operator=(const CMsgClientItemAnnouncements& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientItemAnnouncements& operator=(CMsgClientItemAnnouncements&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientItemAnnouncements& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientItemAnnouncements* internal_default_instance() {
    return reinterpret_cast<const CMsgClientItemAnnouncements*>(
               &_CMsgClientItemAnnouncements_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(CMsgClientItemAnnouncements& a, CMsgClientItemAnnouncements& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientItemAnnouncements* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientItemAnnouncements* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientItemAnnouncements* New() const final {
    return CreateMaybeMessage<CMsgClientItemAnnouncements>(nullptr);
  }

  CMsgClientItemAnnouncements* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientItemAnnouncements>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientItemAnnouncements& from);
  void MergeFrom(const CMsgClientItemAnnouncements& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientItemAnnouncements* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientItemAnnouncements";
  }
  protected:
  explicit CMsgClientItemAnnouncements(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientItemAnnouncements_UnseenItem UnseenItem;

  // accessors -------------------------------------------------------

  enum : int {
    kUnseenItemsFieldNumber = 2,
    kCountNewItemsFieldNumber = 1,
  };
  // repeated .CMsgClientItemAnnouncements.UnseenItem unseen_items = 2;
  int unseen_items_size() const;
  private:
  int _internal_unseen_items_size() const;
  public:
  void clear_unseen_items();
  ::CMsgClientItemAnnouncements_UnseenItem* mutable_unseen_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientItemAnnouncements_UnseenItem >*
      mutable_unseen_items();
  private:
  const ::CMsgClientItemAnnouncements_UnseenItem& _internal_unseen_items(int index) const;
  ::CMsgClientItemAnnouncements_UnseenItem* _internal_add_unseen_items();
  public:
  const ::CMsgClientItemAnnouncements_UnseenItem& unseen_items(int index) const;
  ::CMsgClientItemAnnouncements_UnseenItem* add_unseen_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientItemAnnouncements_UnseenItem >&
      unseen_items() const;

  // optional uint32 count_new_items = 1;
  bool has_count_new_items() const;
  private:
  bool _internal_has_count_new_items() const;
  public:
  void clear_count_new_items();
  ::PROTOBUF_NAMESPACE_ID::uint32 count_new_items() const;
  void set_count_new_items(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count_new_items() const;
  void _internal_set_count_new_items(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientItemAnnouncements)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientItemAnnouncements_UnseenItem > unseen_items_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_new_items_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientRequestItemAnnouncements PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientRequestItemAnnouncements) */ {
 public:
  inline CMsgClientRequestItemAnnouncements() : CMsgClientRequestItemAnnouncements(nullptr) {}
  virtual ~CMsgClientRequestItemAnnouncements();
  explicit constexpr CMsgClientRequestItemAnnouncements(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientRequestItemAnnouncements(const CMsgClientRequestItemAnnouncements& from);
  CMsgClientRequestItemAnnouncements(CMsgClientRequestItemAnnouncements&& from) noexcept
    : CMsgClientRequestItemAnnouncements() {
    *this = ::std::move(from);
  }

  inline CMsgClientRequestItemAnnouncements& operator=(const CMsgClientRequestItemAnnouncements& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientRequestItemAnnouncements& operator=(CMsgClientRequestItemAnnouncements&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientRequestItemAnnouncements& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientRequestItemAnnouncements* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRequestItemAnnouncements*>(
               &_CMsgClientRequestItemAnnouncements_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(CMsgClientRequestItemAnnouncements& a, CMsgClientRequestItemAnnouncements& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientRequestItemAnnouncements* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientRequestItemAnnouncements* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientRequestItemAnnouncements* New() const final {
    return CreateMaybeMessage<CMsgClientRequestItemAnnouncements>(nullptr);
  }

  CMsgClientRequestItemAnnouncements* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientRequestItemAnnouncements>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientRequestItemAnnouncements& from);
  void MergeFrom(const CMsgClientRequestItemAnnouncements& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientRequestItemAnnouncements* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientRequestItemAnnouncements";
  }
  protected:
  explicit CMsgClientRequestItemAnnouncements(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientRequestItemAnnouncements)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUserNotifications_Notification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUserNotifications.Notification) */ {
 public:
  inline CMsgClientUserNotifications_Notification() : CMsgClientUserNotifications_Notification(nullptr) {}
  virtual ~CMsgClientUserNotifications_Notification();
  explicit constexpr CMsgClientUserNotifications_Notification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUserNotifications_Notification(const CMsgClientUserNotifications_Notification& from);
  CMsgClientUserNotifications_Notification(CMsgClientUserNotifications_Notification&& from) noexcept
    : CMsgClientUserNotifications_Notification() {
    *this = ::std::move(from);
  }

  inline CMsgClientUserNotifications_Notification& operator=(const CMsgClientUserNotifications_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUserNotifications_Notification& operator=(CMsgClientUserNotifications_Notification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUserNotifications_Notification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUserNotifications_Notification* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUserNotifications_Notification*>(
               &_CMsgClientUserNotifications_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(CMsgClientUserNotifications_Notification& a, CMsgClientUserNotifications_Notification& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUserNotifications_Notification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUserNotifications_Notification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUserNotifications_Notification* New() const final {
    return CreateMaybeMessage<CMsgClientUserNotifications_Notification>(nullptr);
  }

  CMsgClientUserNotifications_Notification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUserNotifications_Notification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUserNotifications_Notification& from);
  void MergeFrom(const CMsgClientUserNotifications_Notification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUserNotifications_Notification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUserNotifications.Notification";
  }
  protected:
  explicit CMsgClientUserNotifications_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserNotificationTypeFieldNumber = 1,
    kCountFieldNumber = 2,
  };
  // optional uint32 user_notification_type = 1;
  bool has_user_notification_type() const;
  private:
  bool _internal_has_user_notification_type() const;
  public:
  void clear_user_notification_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_notification_type() const;
  void set_user_notification_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_notification_type() const;
  void _internal_set_user_notification_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 count = 2;
  bool has_count() const;
  private:
  bool _internal_has_count() const;
  public:
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUserNotifications.Notification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_notification_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUserNotifications PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUserNotifications) */ {
 public:
  inline CMsgClientUserNotifications() : CMsgClientUserNotifications(nullptr) {}
  virtual ~CMsgClientUserNotifications();
  explicit constexpr CMsgClientUserNotifications(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUserNotifications(const CMsgClientUserNotifications& from);
  CMsgClientUserNotifications(CMsgClientUserNotifications&& from) noexcept
    : CMsgClientUserNotifications() {
    *this = ::std::move(from);
  }

  inline CMsgClientUserNotifications& operator=(const CMsgClientUserNotifications& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUserNotifications& operator=(CMsgClientUserNotifications&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUserNotifications& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUserNotifications* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUserNotifications*>(
               &_CMsgClientUserNotifications_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(CMsgClientUserNotifications& a, CMsgClientUserNotifications& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUserNotifications* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUserNotifications* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUserNotifications* New() const final {
    return CreateMaybeMessage<CMsgClientUserNotifications>(nullptr);
  }

  CMsgClientUserNotifications* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUserNotifications>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUserNotifications& from);
  void MergeFrom(const CMsgClientUserNotifications& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUserNotifications* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUserNotifications";
  }
  protected:
  explicit CMsgClientUserNotifications(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientUserNotifications_Notification Notification;

  // accessors -------------------------------------------------------

  enum : int {
    kNotificationsFieldNumber = 1,
  };
  // repeated .CMsgClientUserNotifications.Notification notifications = 1;
  int notifications_size() const;
  private:
  int _internal_notifications_size() const;
  public:
  void clear_notifications();
  ::CMsgClientUserNotifications_Notification* mutable_notifications(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUserNotifications_Notification >*
      mutable_notifications();
  private:
  const ::CMsgClientUserNotifications_Notification& _internal_notifications(int index) const;
  ::CMsgClientUserNotifications_Notification* _internal_add_notifications();
  public:
  const ::CMsgClientUserNotifications_Notification& notifications(int index) const;
  ::CMsgClientUserNotifications_Notification* add_notifications();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUserNotifications_Notification >&
      notifications() const;

  // @@protoc_insertion_point(class_scope:CMsgClientUserNotifications)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUserNotifications_Notification > notifications_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientCommentNotifications PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientCommentNotifications) */ {
 public:
  inline CMsgClientCommentNotifications() : CMsgClientCommentNotifications(nullptr) {}
  virtual ~CMsgClientCommentNotifications();
  explicit constexpr CMsgClientCommentNotifications(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientCommentNotifications(const CMsgClientCommentNotifications& from);
  CMsgClientCommentNotifications(CMsgClientCommentNotifications&& from) noexcept
    : CMsgClientCommentNotifications() {
    *this = ::std::move(from);
  }

  inline CMsgClientCommentNotifications& operator=(const CMsgClientCommentNotifications& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientCommentNotifications& operator=(CMsgClientCommentNotifications&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientCommentNotifications& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientCommentNotifications* internal_default_instance() {
    return reinterpret_cast<const CMsgClientCommentNotifications*>(
               &_CMsgClientCommentNotifications_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(CMsgClientCommentNotifications& a, CMsgClientCommentNotifications& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientCommentNotifications* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientCommentNotifications* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientCommentNotifications* New() const final {
    return CreateMaybeMessage<CMsgClientCommentNotifications>(nullptr);
  }

  CMsgClientCommentNotifications* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientCommentNotifications>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientCommentNotifications& from);
  void MergeFrom(const CMsgClientCommentNotifications& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientCommentNotifications* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientCommentNotifications";
  }
  protected:
  explicit CMsgClientCommentNotifications(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCountNewCommentsFieldNumber = 1,
    kCountNewCommentsOwnerFieldNumber = 2,
    kCountNewCommentsSubscriptionsFieldNumber = 3,
  };
  // optional uint32 count_new_comments = 1;
  bool has_count_new_comments() const;
  private:
  bool _internal_has_count_new_comments() const;
  public:
  void clear_count_new_comments();
  ::PROTOBUF_NAMESPACE_ID::uint32 count_new_comments() const;
  void set_count_new_comments(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count_new_comments() const;
  void _internal_set_count_new_comments(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 count_new_comments_owner = 2;
  bool has_count_new_comments_owner() const;
  private:
  bool _internal_has_count_new_comments_owner() const;
  public:
  void clear_count_new_comments_owner();
  ::PROTOBUF_NAMESPACE_ID::uint32 count_new_comments_owner() const;
  void set_count_new_comments_owner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count_new_comments_owner() const;
  void _internal_set_count_new_comments_owner(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 count_new_comments_subscriptions = 3;
  bool has_count_new_comments_subscriptions() const;
  private:
  bool _internal_has_count_new_comments_subscriptions() const;
  public:
  void clear_count_new_comments_subscriptions();
  ::PROTOBUF_NAMESPACE_ID::uint32 count_new_comments_subscriptions() const;
  void set_count_new_comments_subscriptions(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count_new_comments_subscriptions() const;
  void _internal_set_count_new_comments_subscriptions(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientCommentNotifications)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_new_comments_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_new_comments_owner_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_new_comments_subscriptions_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientRequestCommentNotifications PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientRequestCommentNotifications) */ {
 public:
  inline CMsgClientRequestCommentNotifications() : CMsgClientRequestCommentNotifications(nullptr) {}
  virtual ~CMsgClientRequestCommentNotifications();
  explicit constexpr CMsgClientRequestCommentNotifications(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientRequestCommentNotifications(const CMsgClientRequestCommentNotifications& from);
  CMsgClientRequestCommentNotifications(CMsgClientRequestCommentNotifications&& from) noexcept
    : CMsgClientRequestCommentNotifications() {
    *this = ::std::move(from);
  }

  inline CMsgClientRequestCommentNotifications& operator=(const CMsgClientRequestCommentNotifications& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientRequestCommentNotifications& operator=(CMsgClientRequestCommentNotifications&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientRequestCommentNotifications& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientRequestCommentNotifications* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRequestCommentNotifications*>(
               &_CMsgClientRequestCommentNotifications_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(CMsgClientRequestCommentNotifications& a, CMsgClientRequestCommentNotifications& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientRequestCommentNotifications* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientRequestCommentNotifications* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientRequestCommentNotifications* New() const final {
    return CreateMaybeMessage<CMsgClientRequestCommentNotifications>(nullptr);
  }

  CMsgClientRequestCommentNotifications* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientRequestCommentNotifications>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientRequestCommentNotifications& from);
  void MergeFrom(const CMsgClientRequestCommentNotifications& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientRequestCommentNotifications* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientRequestCommentNotifications";
  }
  protected:
  explicit CMsgClientRequestCommentNotifications(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientRequestCommentNotifications)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientOfflineMessageNotification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientOfflineMessageNotification) */ {
 public:
  inline CMsgClientOfflineMessageNotification() : CMsgClientOfflineMessageNotification(nullptr) {}
  virtual ~CMsgClientOfflineMessageNotification();
  explicit constexpr CMsgClientOfflineMessageNotification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientOfflineMessageNotification(const CMsgClientOfflineMessageNotification& from);
  CMsgClientOfflineMessageNotification(CMsgClientOfflineMessageNotification&& from) noexcept
    : CMsgClientOfflineMessageNotification() {
    *this = ::std::move(from);
  }

  inline CMsgClientOfflineMessageNotification& operator=(const CMsgClientOfflineMessageNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientOfflineMessageNotification& operator=(CMsgClientOfflineMessageNotification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientOfflineMessageNotification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientOfflineMessageNotification* internal_default_instance() {
    return reinterpret_cast<const CMsgClientOfflineMessageNotification*>(
               &_CMsgClientOfflineMessageNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(CMsgClientOfflineMessageNotification& a, CMsgClientOfflineMessageNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientOfflineMessageNotification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientOfflineMessageNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientOfflineMessageNotification* New() const final {
    return CreateMaybeMessage<CMsgClientOfflineMessageNotification>(nullptr);
  }

  CMsgClientOfflineMessageNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientOfflineMessageNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientOfflineMessageNotification& from);
  void MergeFrom(const CMsgClientOfflineMessageNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientOfflineMessageNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientOfflineMessageNotification";
  }
  protected:
  explicit CMsgClientOfflineMessageNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFriendsWithOfflineMessagesFieldNumber = 2,
    kOfflineMessagesFieldNumber = 1,
  };
  // repeated uint32 friends_with_offline_messages = 2;
  int friends_with_offline_messages_size() const;
  private:
  int _internal_friends_with_offline_messages_size() const;
  public:
  void clear_friends_with_offline_messages();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_friends_with_offline_messages(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_friends_with_offline_messages() const;
  void _internal_add_friends_with_offline_messages(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_friends_with_offline_messages();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 friends_with_offline_messages(int index) const;
  void set_friends_with_offline_messages(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_friends_with_offline_messages(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      friends_with_offline_messages() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_friends_with_offline_messages();

  // optional uint32 offline_messages = 1;
  bool has_offline_messages() const;
  private:
  bool _internal_has_offline_messages() const;
  public:
  void clear_offline_messages();
  ::PROTOBUF_NAMESPACE_ID::uint32 offline_messages() const;
  void set_offline_messages(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_offline_messages() const;
  void _internal_set_offline_messages(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientOfflineMessageNotification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > friends_with_offline_messages_;
  ::PROTOBUF_NAMESPACE_ID::uint32 offline_messages_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientRequestOfflineMessageCount PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientRequestOfflineMessageCount) */ {
 public:
  inline CMsgClientRequestOfflineMessageCount() : CMsgClientRequestOfflineMessageCount(nullptr) {}
  virtual ~CMsgClientRequestOfflineMessageCount();
  explicit constexpr CMsgClientRequestOfflineMessageCount(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientRequestOfflineMessageCount(const CMsgClientRequestOfflineMessageCount& from);
  CMsgClientRequestOfflineMessageCount(CMsgClientRequestOfflineMessageCount&& from) noexcept
    : CMsgClientRequestOfflineMessageCount() {
    *this = ::std::move(from);
  }

  inline CMsgClientRequestOfflineMessageCount& operator=(const CMsgClientRequestOfflineMessageCount& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientRequestOfflineMessageCount& operator=(CMsgClientRequestOfflineMessageCount&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientRequestOfflineMessageCount& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientRequestOfflineMessageCount* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRequestOfflineMessageCount*>(
               &_CMsgClientRequestOfflineMessageCount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(CMsgClientRequestOfflineMessageCount& a, CMsgClientRequestOfflineMessageCount& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientRequestOfflineMessageCount* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientRequestOfflineMessageCount* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientRequestOfflineMessageCount* New() const final {
    return CreateMaybeMessage<CMsgClientRequestOfflineMessageCount>(nullptr);
  }

  CMsgClientRequestOfflineMessageCount* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientRequestOfflineMessageCount>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientRequestOfflineMessageCount& from);
  void MergeFrom(const CMsgClientRequestOfflineMessageCount& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientRequestOfflineMessageCount* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientRequestOfflineMessageCount";
  }
  protected:
  explicit CMsgClientRequestOfflineMessageCount(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientRequestOfflineMessageCount)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientChatGetFriendMessageHistory PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientChatGetFriendMessageHistory) */ {
 public:
  inline CMsgClientChatGetFriendMessageHistory() : CMsgClientChatGetFriendMessageHistory(nullptr) {}
  virtual ~CMsgClientChatGetFriendMessageHistory();
  explicit constexpr CMsgClientChatGetFriendMessageHistory(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientChatGetFriendMessageHistory(const CMsgClientChatGetFriendMessageHistory& from);
  CMsgClientChatGetFriendMessageHistory(CMsgClientChatGetFriendMessageHistory&& from) noexcept
    : CMsgClientChatGetFriendMessageHistory() {
    *this = ::std::move(from);
  }

  inline CMsgClientChatGetFriendMessageHistory& operator=(const CMsgClientChatGetFriendMessageHistory& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientChatGetFriendMessageHistory& operator=(CMsgClientChatGetFriendMessageHistory&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientChatGetFriendMessageHistory& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientChatGetFriendMessageHistory* internal_default_instance() {
    return reinterpret_cast<const CMsgClientChatGetFriendMessageHistory*>(
               &_CMsgClientChatGetFriendMessageHistory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(CMsgClientChatGetFriendMessageHistory& a, CMsgClientChatGetFriendMessageHistory& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientChatGetFriendMessageHistory* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientChatGetFriendMessageHistory* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientChatGetFriendMessageHistory* New() const final {
    return CreateMaybeMessage<CMsgClientChatGetFriendMessageHistory>(nullptr);
  }

  CMsgClientChatGetFriendMessageHistory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientChatGetFriendMessageHistory>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientChatGetFriendMessageHistory& from);
  void MergeFrom(const CMsgClientChatGetFriendMessageHistory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientChatGetFriendMessageHistory* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientChatGetFriendMessageHistory";
  }
  protected:
  explicit CMsgClientChatGetFriendMessageHistory(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamidFieldNumber = 1,
  };
  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientChatGetFriendMessageHistory)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage) */ {
 public:
  inline CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage() : CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage(nullptr) {}
  virtual ~CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage();
  explicit constexpr CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage(const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& from);
  CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage&& from) noexcept
    : CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage() {
    *this = ::std::move(from);
  }

  inline CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& operator=(const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& operator=(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* internal_default_instance() {
    return reinterpret_cast<const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage*>(
               &_CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& a, CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* New() const final {
    return CreateMaybeMessage<CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage>(nullptr);
  }

  CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& from);
  void MergeFrom(const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage";
  }
  protected:
  explicit CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 3,
    kAccountidFieldNumber = 1,
    kTimestampFieldNumber = 2,
    kUnreadFieldNumber = 4,
  };
  // optional string message = 3;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // optional uint32 accountid = 1;
  bool has_accountid() const;
  private:
  bool _internal_has_accountid() const;
  public:
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint32 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 timestamp = 2;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint32 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool unread = 4;
  bool has_unread() const;
  private:
  bool _internal_has_unread() const;
  public:
  void clear_unread();
  bool unread() const;
  void set_unread(bool value);
  private:
  bool _internal_unread() const;
  void _internal_set_unread(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  ::PROTOBUF_NAMESPACE_ID::uint32 accountid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 timestamp_;
  bool unread_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientChatGetFriendMessageHistoryResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientChatGetFriendMessageHistoryResponse) */ {
 public:
  inline CMsgClientChatGetFriendMessageHistoryResponse() : CMsgClientChatGetFriendMessageHistoryResponse(nullptr) {}
  virtual ~CMsgClientChatGetFriendMessageHistoryResponse();
  explicit constexpr CMsgClientChatGetFriendMessageHistoryResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientChatGetFriendMessageHistoryResponse(const CMsgClientChatGetFriendMessageHistoryResponse& from);
  CMsgClientChatGetFriendMessageHistoryResponse(CMsgClientChatGetFriendMessageHistoryResponse&& from) noexcept
    : CMsgClientChatGetFriendMessageHistoryResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientChatGetFriendMessageHistoryResponse& operator=(const CMsgClientChatGetFriendMessageHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientChatGetFriendMessageHistoryResponse& operator=(CMsgClientChatGetFriendMessageHistoryResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientChatGetFriendMessageHistoryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientChatGetFriendMessageHistoryResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientChatGetFriendMessageHistoryResponse*>(
               &_CMsgClientChatGetFriendMessageHistoryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  friend void swap(CMsgClientChatGetFriendMessageHistoryResponse& a, CMsgClientChatGetFriendMessageHistoryResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientChatGetFriendMessageHistoryResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientChatGetFriendMessageHistoryResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientChatGetFriendMessageHistoryResponse* New() const final {
    return CreateMaybeMessage<CMsgClientChatGetFriendMessageHistoryResponse>(nullptr);
  }

  CMsgClientChatGetFriendMessageHistoryResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientChatGetFriendMessageHistoryResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientChatGetFriendMessageHistoryResponse& from);
  void MergeFrom(const CMsgClientChatGetFriendMessageHistoryResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientChatGetFriendMessageHistoryResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientChatGetFriendMessageHistoryResponse";
  }
  protected:
  explicit CMsgClientChatGetFriendMessageHistoryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage FriendMessage;

  // accessors -------------------------------------------------------

  enum : int {
    kMessagesFieldNumber = 3,
    kSteamidFieldNumber = 1,
    kSuccessFieldNumber = 2,
  };
  // repeated .CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage messages = 3;
  int messages_size() const;
  private:
  int _internal_messages_size() const;
  public:
  void clear_messages();
  ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* mutable_messages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage >*
      mutable_messages();
  private:
  const ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& _internal_messages(int index) const;
  ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* _internal_add_messages();
  public:
  const ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& messages(int index) const;
  ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* add_messages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage >&
      messages() const;

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 success = 2;
  bool has_success() const;
  private:
  bool _internal_has_success() const;
  public:
  void clear_success();
  ::PROTOBUF_NAMESPACE_ID::uint32 success() const;
  void set_success(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_success() const;
  void _internal_set_success(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientChatGetFriendMessageHistoryResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage > messages_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 success_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientChatGetFriendMessageHistoryForOfflineMessages PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientChatGetFriendMessageHistoryForOfflineMessages) */ {
 public:
  inline CMsgClientChatGetFriendMessageHistoryForOfflineMessages() : CMsgClientChatGetFriendMessageHistoryForOfflineMessages(nullptr) {}
  virtual ~CMsgClientChatGetFriendMessageHistoryForOfflineMessages();
  explicit constexpr CMsgClientChatGetFriendMessageHistoryForOfflineMessages(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientChatGetFriendMessageHistoryForOfflineMessages(const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& from);
  CMsgClientChatGetFriendMessageHistoryForOfflineMessages(CMsgClientChatGetFriendMessageHistoryForOfflineMessages&& from) noexcept
    : CMsgClientChatGetFriendMessageHistoryForOfflineMessages() {
    *this = ::std::move(from);
  }

  inline CMsgClientChatGetFriendMessageHistoryForOfflineMessages& operator=(const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientChatGetFriendMessageHistoryForOfflineMessages& operator=(CMsgClientChatGetFriendMessageHistoryForOfflineMessages&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientChatGetFriendMessageHistoryForOfflineMessages* internal_default_instance() {
    return reinterpret_cast<const CMsgClientChatGetFriendMessageHistoryForOfflineMessages*>(
               &_CMsgClientChatGetFriendMessageHistoryForOfflineMessages_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  friend void swap(CMsgClientChatGetFriendMessageHistoryForOfflineMessages& a, CMsgClientChatGetFriendMessageHistoryForOfflineMessages& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientChatGetFriendMessageHistoryForOfflineMessages* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientChatGetFriendMessageHistoryForOfflineMessages* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientChatGetFriendMessageHistoryForOfflineMessages* New() const final {
    return CreateMaybeMessage<CMsgClientChatGetFriendMessageHistoryForOfflineMessages>(nullptr);
  }

  CMsgClientChatGetFriendMessageHistoryForOfflineMessages* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientChatGetFriendMessageHistoryForOfflineMessages>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& from);
  void MergeFrom(const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientChatGetFriendMessageHistoryForOfflineMessages* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientChatGetFriendMessageHistoryForOfflineMessages";
  }
  protected:
  explicit CMsgClientChatGetFriendMessageHistoryForOfflineMessages(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientFSGetFriendsSteamLevels PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientFSGetFriendsSteamLevels) */ {
 public:
  inline CMsgClientFSGetFriendsSteamLevels() : CMsgClientFSGetFriendsSteamLevels(nullptr) {}
  virtual ~CMsgClientFSGetFriendsSteamLevels();
  explicit constexpr CMsgClientFSGetFriendsSteamLevels(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientFSGetFriendsSteamLevels(const CMsgClientFSGetFriendsSteamLevels& from);
  CMsgClientFSGetFriendsSteamLevels(CMsgClientFSGetFriendsSteamLevels&& from) noexcept
    : CMsgClientFSGetFriendsSteamLevels() {
    *this = ::std::move(from);
  }

  inline CMsgClientFSGetFriendsSteamLevels& operator=(const CMsgClientFSGetFriendsSteamLevels& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientFSGetFriendsSteamLevels& operator=(CMsgClientFSGetFriendsSteamLevels&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientFSGetFriendsSteamLevels& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientFSGetFriendsSteamLevels* internal_default_instance() {
    return reinterpret_cast<const CMsgClientFSGetFriendsSteamLevels*>(
               &_CMsgClientFSGetFriendsSteamLevels_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  friend void swap(CMsgClientFSGetFriendsSteamLevels& a, CMsgClientFSGetFriendsSteamLevels& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientFSGetFriendsSteamLevels* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientFSGetFriendsSteamLevels* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientFSGetFriendsSteamLevels* New() const final {
    return CreateMaybeMessage<CMsgClientFSGetFriendsSteamLevels>(nullptr);
  }

  CMsgClientFSGetFriendsSteamLevels* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientFSGetFriendsSteamLevels>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientFSGetFriendsSteamLevels& from);
  void MergeFrom(const CMsgClientFSGetFriendsSteamLevels& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientFSGetFriendsSteamLevels* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientFSGetFriendsSteamLevels";
  }
  protected:
  explicit CMsgClientFSGetFriendsSteamLevels(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountidsFieldNumber = 1,
  };
  // repeated uint32 accountids = 1;
  int accountids_size() const;
  private:
  int _internal_accountids_size() const;
  public:
  void clear_accountids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accountids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_accountids() const;
  void _internal_add_accountids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_accountids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 accountids(int index) const;
  void set_accountids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_accountids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      accountids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_accountids();

  // @@protoc_insertion_point(class_scope:CMsgClientFSGetFriendsSteamLevels)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > accountids_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientFSGetFriendsSteamLevelsResponse_Friend PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientFSGetFriendsSteamLevelsResponse.Friend) */ {
 public:
  inline CMsgClientFSGetFriendsSteamLevelsResponse_Friend() : CMsgClientFSGetFriendsSteamLevelsResponse_Friend(nullptr) {}
  virtual ~CMsgClientFSGetFriendsSteamLevelsResponse_Friend();
  explicit constexpr CMsgClientFSGetFriendsSteamLevelsResponse_Friend(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientFSGetFriendsSteamLevelsResponse_Friend(const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& from);
  CMsgClientFSGetFriendsSteamLevelsResponse_Friend(CMsgClientFSGetFriendsSteamLevelsResponse_Friend&& from) noexcept
    : CMsgClientFSGetFriendsSteamLevelsResponse_Friend() {
    *this = ::std::move(from);
  }

  inline CMsgClientFSGetFriendsSteamLevelsResponse_Friend& operator=(const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientFSGetFriendsSteamLevelsResponse_Friend& operator=(CMsgClientFSGetFriendsSteamLevelsResponse_Friend&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientFSGetFriendsSteamLevelsResponse_Friend* internal_default_instance() {
    return reinterpret_cast<const CMsgClientFSGetFriendsSteamLevelsResponse_Friend*>(
               &_CMsgClientFSGetFriendsSteamLevelsResponse_Friend_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  friend void swap(CMsgClientFSGetFriendsSteamLevelsResponse_Friend& a, CMsgClientFSGetFriendsSteamLevelsResponse_Friend& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientFSGetFriendsSteamLevelsResponse_Friend* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientFSGetFriendsSteamLevelsResponse_Friend* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientFSGetFriendsSteamLevelsResponse_Friend* New() const final {
    return CreateMaybeMessage<CMsgClientFSGetFriendsSteamLevelsResponse_Friend>(nullptr);
  }

  CMsgClientFSGetFriendsSteamLevelsResponse_Friend* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientFSGetFriendsSteamLevelsResponse_Friend>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& from);
  void MergeFrom(const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientFSGetFriendsSteamLevelsResponse_Friend* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientFSGetFriendsSteamLevelsResponse.Friend";
  }
  protected:
  explicit CMsgClientFSGetFriendsSteamLevelsResponse_Friend(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountidFieldNumber = 1,
    kLevelFieldNumber = 2,
  };
  // optional uint32 accountid = 1;
  bool has_accountid() const;
  private:
  bool _internal_has_accountid() const;
  public:
  void clear_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint32 accountid() const;
  void set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accountid() const;
  void _internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 level = 2;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 accountid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientFSGetFriendsSteamLevelsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientFSGetFriendsSteamLevelsResponse) */ {
 public:
  inline CMsgClientFSGetFriendsSteamLevelsResponse() : CMsgClientFSGetFriendsSteamLevelsResponse(nullptr) {}
  virtual ~CMsgClientFSGetFriendsSteamLevelsResponse();
  explicit constexpr CMsgClientFSGetFriendsSteamLevelsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientFSGetFriendsSteamLevelsResponse(const CMsgClientFSGetFriendsSteamLevelsResponse& from);
  CMsgClientFSGetFriendsSteamLevelsResponse(CMsgClientFSGetFriendsSteamLevelsResponse&& from) noexcept
    : CMsgClientFSGetFriendsSteamLevelsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientFSGetFriendsSteamLevelsResponse& operator=(const CMsgClientFSGetFriendsSteamLevelsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientFSGetFriendsSteamLevelsResponse& operator=(CMsgClientFSGetFriendsSteamLevelsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientFSGetFriendsSteamLevelsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientFSGetFriendsSteamLevelsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientFSGetFriendsSteamLevelsResponse*>(
               &_CMsgClientFSGetFriendsSteamLevelsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  friend void swap(CMsgClientFSGetFriendsSteamLevelsResponse& a, CMsgClientFSGetFriendsSteamLevelsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientFSGetFriendsSteamLevelsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientFSGetFriendsSteamLevelsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientFSGetFriendsSteamLevelsResponse* New() const final {
    return CreateMaybeMessage<CMsgClientFSGetFriendsSteamLevelsResponse>(nullptr);
  }

  CMsgClientFSGetFriendsSteamLevelsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientFSGetFriendsSteamLevelsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientFSGetFriendsSteamLevelsResponse& from);
  void MergeFrom(const CMsgClientFSGetFriendsSteamLevelsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientFSGetFriendsSteamLevelsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientFSGetFriendsSteamLevelsResponse";
  }
  protected:
  explicit CMsgClientFSGetFriendsSteamLevelsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientFSGetFriendsSteamLevelsResponse_Friend Friend;

  // accessors -------------------------------------------------------

  enum : int {
    kFriendsFieldNumber = 1,
  };
  // repeated .CMsgClientFSGetFriendsSteamLevelsResponse.Friend friends = 1;
  int friends_size() const;
  private:
  int _internal_friends_size() const;
  public:
  void clear_friends();
  ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend* mutable_friends(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend >*
      mutable_friends();
  private:
  const ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend& _internal_friends(int index) const;
  ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend* _internal_add_friends();
  public:
  const ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend& friends(int index) const;
  ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend* add_friends();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend >&
      friends() const;

  // @@protoc_insertion_point(class_scope:CMsgClientFSGetFriendsSteamLevelsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend > friends_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientEmailAddrInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientEmailAddrInfo) */ {
 public:
  inline CMsgClientEmailAddrInfo() : CMsgClientEmailAddrInfo(nullptr) {}
  virtual ~CMsgClientEmailAddrInfo();
  explicit constexpr CMsgClientEmailAddrInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientEmailAddrInfo(const CMsgClientEmailAddrInfo& from);
  CMsgClientEmailAddrInfo(CMsgClientEmailAddrInfo&& from) noexcept
    : CMsgClientEmailAddrInfo() {
    *this = ::std::move(from);
  }

  inline CMsgClientEmailAddrInfo& operator=(const CMsgClientEmailAddrInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientEmailAddrInfo& operator=(CMsgClientEmailAddrInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientEmailAddrInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientEmailAddrInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgClientEmailAddrInfo*>(
               &_CMsgClientEmailAddrInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  friend void swap(CMsgClientEmailAddrInfo& a, CMsgClientEmailAddrInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientEmailAddrInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientEmailAddrInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientEmailAddrInfo* New() const final {
    return CreateMaybeMessage<CMsgClientEmailAddrInfo>(nullptr);
  }

  CMsgClientEmailAddrInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientEmailAddrInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientEmailAddrInfo& from);
  void MergeFrom(const CMsgClientEmailAddrInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientEmailAddrInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientEmailAddrInfo";
  }
  protected:
  explicit CMsgClientEmailAddrInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEmailAddressFieldNumber = 1,
    kEmailIsValidatedFieldNumber = 2,
    kEmailValidationChangedFieldNumber = 3,
    kCredentialChangeRequiresCodeFieldNumber = 4,
    kPasswordOrSecretqaChangeRequiresCodeFieldNumber = 5,
  };
  // optional string email_address = 1;
  bool has_email_address() const;
  private:
  bool _internal_has_email_address() const;
  public:
  void clear_email_address();
  const std::string& email_address() const;
  void set_email_address(const std::string& value);
  void set_email_address(std::string&& value);
  void set_email_address(const char* value);
  void set_email_address(const char* value, size_t size);
  std::string* mutable_email_address();
  std::string* release_email_address();
  void set_allocated_email_address(std::string* email_address);
  private:
  const std::string& _internal_email_address() const;
  void _internal_set_email_address(const std::string& value);
  std::string* _internal_mutable_email_address();
  public:

  // optional bool email_is_validated = 2;
  bool has_email_is_validated() const;
  private:
  bool _internal_has_email_is_validated() const;
  public:
  void clear_email_is_validated();
  bool email_is_validated() const;
  void set_email_is_validated(bool value);
  private:
  bool _internal_email_is_validated() const;
  void _internal_set_email_is_validated(bool value);
  public:

  // optional bool email_validation_changed = 3;
  bool has_email_validation_changed() const;
  private:
  bool _internal_has_email_validation_changed() const;
  public:
  void clear_email_validation_changed();
  bool email_validation_changed() const;
  void set_email_validation_changed(bool value);
  private:
  bool _internal_email_validation_changed() const;
  void _internal_set_email_validation_changed(bool value);
  public:

  // optional bool credential_change_requires_code = 4;
  bool has_credential_change_requires_code() const;
  private:
  bool _internal_has_credential_change_requires_code() const;
  public:
  void clear_credential_change_requires_code();
  bool credential_change_requires_code() const;
  void set_credential_change_requires_code(bool value);
  private:
  bool _internal_credential_change_requires_code() const;
  void _internal_set_credential_change_requires_code(bool value);
  public:

  // optional bool password_or_secretqa_change_requires_code = 5;
  bool has_password_or_secretqa_change_requires_code() const;
  private:
  bool _internal_has_password_or_secretqa_change_requires_code() const;
  public:
  void clear_password_or_secretqa_change_requires_code();
  bool password_or_secretqa_change_requires_code() const;
  void set_password_or_secretqa_change_requires_code(bool value);
  private:
  bool _internal_password_or_secretqa_change_requires_code() const;
  void _internal_set_password_or_secretqa_change_requires_code(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientEmailAddrInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr email_address_;
  bool email_is_validated_;
  bool email_validation_changed_;
  bool credential_change_requires_code_;
  bool password_or_secretqa_change_requires_code_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgCREItemVoteSummary_PublishedFileId PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgCREItemVoteSummary.PublishedFileId) */ {
 public:
  inline CMsgCREItemVoteSummary_PublishedFileId() : CMsgCREItemVoteSummary_PublishedFileId(nullptr) {}
  virtual ~CMsgCREItemVoteSummary_PublishedFileId();
  explicit constexpr CMsgCREItemVoteSummary_PublishedFileId(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCREItemVoteSummary_PublishedFileId(const CMsgCREItemVoteSummary_PublishedFileId& from);
  CMsgCREItemVoteSummary_PublishedFileId(CMsgCREItemVoteSummary_PublishedFileId&& from) noexcept
    : CMsgCREItemVoteSummary_PublishedFileId() {
    *this = ::std::move(from);
  }

  inline CMsgCREItemVoteSummary_PublishedFileId& operator=(const CMsgCREItemVoteSummary_PublishedFileId& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCREItemVoteSummary_PublishedFileId& operator=(CMsgCREItemVoteSummary_PublishedFileId&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgCREItemVoteSummary_PublishedFileId& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCREItemVoteSummary_PublishedFileId* internal_default_instance() {
    return reinterpret_cast<const CMsgCREItemVoteSummary_PublishedFileId*>(
               &_CMsgCREItemVoteSummary_PublishedFileId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  friend void swap(CMsgCREItemVoteSummary_PublishedFileId& a, CMsgCREItemVoteSummary_PublishedFileId& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCREItemVoteSummary_PublishedFileId* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCREItemVoteSummary_PublishedFileId* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgCREItemVoteSummary_PublishedFileId* New() const final {
    return CreateMaybeMessage<CMsgCREItemVoteSummary_PublishedFileId>(nullptr);
  }

  CMsgCREItemVoteSummary_PublishedFileId* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgCREItemVoteSummary_PublishedFileId>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgCREItemVoteSummary_PublishedFileId& from);
  void MergeFrom(const CMsgCREItemVoteSummary_PublishedFileId& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCREItemVoteSummary_PublishedFileId* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCREItemVoteSummary.PublishedFileId";
  }
  protected:
  explicit CMsgCREItemVoteSummary_PublishedFileId(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPublishedFileIdFieldNumber = 1,
  };
  // optional fixed64 published_file_id = 1;
  bool has_published_file_id() const;
  private:
  bool _internal_has_published_file_id() const;
  public:
  void clear_published_file_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id() const;
  void set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_published_file_id() const;
  void _internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgCREItemVoteSummary.PublishedFileId)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgCREItemVoteSummary PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgCREItemVoteSummary) */ {
 public:
  inline CMsgCREItemVoteSummary() : CMsgCREItemVoteSummary(nullptr) {}
  virtual ~CMsgCREItemVoteSummary();
  explicit constexpr CMsgCREItemVoteSummary(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCREItemVoteSummary(const CMsgCREItemVoteSummary& from);
  CMsgCREItemVoteSummary(CMsgCREItemVoteSummary&& from) noexcept
    : CMsgCREItemVoteSummary() {
    *this = ::std::move(from);
  }

  inline CMsgCREItemVoteSummary& operator=(const CMsgCREItemVoteSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCREItemVoteSummary& operator=(CMsgCREItemVoteSummary&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgCREItemVoteSummary& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCREItemVoteSummary* internal_default_instance() {
    return reinterpret_cast<const CMsgCREItemVoteSummary*>(
               &_CMsgCREItemVoteSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  friend void swap(CMsgCREItemVoteSummary& a, CMsgCREItemVoteSummary& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCREItemVoteSummary* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCREItemVoteSummary* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgCREItemVoteSummary* New() const final {
    return CreateMaybeMessage<CMsgCREItemVoteSummary>(nullptr);
  }

  CMsgCREItemVoteSummary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgCREItemVoteSummary>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgCREItemVoteSummary& from);
  void MergeFrom(const CMsgCREItemVoteSummary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCREItemVoteSummary* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCREItemVoteSummary";
  }
  protected:
  explicit CMsgCREItemVoteSummary(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgCREItemVoteSummary_PublishedFileId PublishedFileId;

  // accessors -------------------------------------------------------

  enum : int {
    kPublishedFileIdsFieldNumber = 1,
  };
  // repeated .CMsgCREItemVoteSummary.PublishedFileId published_file_ids = 1;
  int published_file_ids_size() const;
  private:
  int _internal_published_file_ids_size() const;
  public:
  void clear_published_file_ids();
  ::CMsgCREItemVoteSummary_PublishedFileId* mutable_published_file_ids(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCREItemVoteSummary_PublishedFileId >*
      mutable_published_file_ids();
  private:
  const ::CMsgCREItemVoteSummary_PublishedFileId& _internal_published_file_ids(int index) const;
  ::CMsgCREItemVoteSummary_PublishedFileId* _internal_add_published_file_ids();
  public:
  const ::CMsgCREItemVoteSummary_PublishedFileId& published_file_ids(int index) const;
  ::CMsgCREItemVoteSummary_PublishedFileId* add_published_file_ids();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCREItemVoteSummary_PublishedFileId >&
      published_file_ids() const;

  // @@protoc_insertion_point(class_scope:CMsgCREItemVoteSummary)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCREItemVoteSummary_PublishedFileId > published_file_ids_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgCREItemVoteSummaryResponse_ItemVoteSummary PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgCREItemVoteSummaryResponse.ItemVoteSummary) */ {
 public:
  inline CMsgCREItemVoteSummaryResponse_ItemVoteSummary() : CMsgCREItemVoteSummaryResponse_ItemVoteSummary(nullptr) {}
  virtual ~CMsgCREItemVoteSummaryResponse_ItemVoteSummary();
  explicit constexpr CMsgCREItemVoteSummaryResponse_ItemVoteSummary(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCREItemVoteSummaryResponse_ItemVoteSummary(const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& from);
  CMsgCREItemVoteSummaryResponse_ItemVoteSummary(CMsgCREItemVoteSummaryResponse_ItemVoteSummary&& from) noexcept
    : CMsgCREItemVoteSummaryResponse_ItemVoteSummary() {
    *this = ::std::move(from);
  }

  inline CMsgCREItemVoteSummaryResponse_ItemVoteSummary& operator=(const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCREItemVoteSummaryResponse_ItemVoteSummary& operator=(CMsgCREItemVoteSummaryResponse_ItemVoteSummary&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCREItemVoteSummaryResponse_ItemVoteSummary* internal_default_instance() {
    return reinterpret_cast<const CMsgCREItemVoteSummaryResponse_ItemVoteSummary*>(
               &_CMsgCREItemVoteSummaryResponse_ItemVoteSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  friend void swap(CMsgCREItemVoteSummaryResponse_ItemVoteSummary& a, CMsgCREItemVoteSummaryResponse_ItemVoteSummary& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCREItemVoteSummaryResponse_ItemVoteSummary* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCREItemVoteSummaryResponse_ItemVoteSummary* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgCREItemVoteSummaryResponse_ItemVoteSummary* New() const final {
    return CreateMaybeMessage<CMsgCREItemVoteSummaryResponse_ItemVoteSummary>(nullptr);
  }

  CMsgCREItemVoteSummaryResponse_ItemVoteSummary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgCREItemVoteSummaryResponse_ItemVoteSummary>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& from);
  void MergeFrom(const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCREItemVoteSummaryResponse_ItemVoteSummary* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCREItemVoteSummaryResponse.ItemVoteSummary";
  }
  protected:
  explicit CMsgCREItemVoteSummaryResponse_ItemVoteSummary(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPublishedFileIdFieldNumber = 1,
    kVotesForFieldNumber = 2,
    kVotesAgainstFieldNumber = 3,
    kReportsFieldNumber = 4,
    kScoreFieldNumber = 5,
  };
  // optional fixed64 published_file_id = 1;
  bool has_published_file_id() const;
  private:
  bool _internal_has_published_file_id() const;
  public:
  void clear_published_file_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id() const;
  void set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_published_file_id() const;
  void _internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional int32 votes_for = 2;
  bool has_votes_for() const;
  private:
  bool _internal_has_votes_for() const;
  public:
  void clear_votes_for();
  ::PROTOBUF_NAMESPACE_ID::int32 votes_for() const;
  void set_votes_for(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_votes_for() const;
  void _internal_set_votes_for(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 votes_against = 3;
  bool has_votes_against() const;
  private:
  bool _internal_has_votes_against() const;
  public:
  void clear_votes_against();
  ::PROTOBUF_NAMESPACE_ID::int32 votes_against() const;
  void set_votes_against(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_votes_against() const;
  void _internal_set_votes_against(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 reports = 4;
  bool has_reports() const;
  private:
  bool _internal_has_reports() const;
  public:
  void clear_reports();
  ::PROTOBUF_NAMESPACE_ID::int32 reports() const;
  void set_reports(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_reports() const;
  void _internal_set_reports(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float score = 5;
  bool has_score() const;
  private:
  bool _internal_has_score() const;
  public:
  void clear_score();
  float score() const;
  void set_score(float value);
  private:
  float _internal_score() const;
  void _internal_set_score(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 votes_for_;
  ::PROTOBUF_NAMESPACE_ID::int32 votes_against_;
  ::PROTOBUF_NAMESPACE_ID::int32 reports_;
  float score_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgCREItemVoteSummaryResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgCREItemVoteSummaryResponse) */ {
 public:
  inline CMsgCREItemVoteSummaryResponse() : CMsgCREItemVoteSummaryResponse(nullptr) {}
  virtual ~CMsgCREItemVoteSummaryResponse();
  explicit constexpr CMsgCREItemVoteSummaryResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCREItemVoteSummaryResponse(const CMsgCREItemVoteSummaryResponse& from);
  CMsgCREItemVoteSummaryResponse(CMsgCREItemVoteSummaryResponse&& from) noexcept
    : CMsgCREItemVoteSummaryResponse() {
    *this = ::std::move(from);
  }

  inline CMsgCREItemVoteSummaryResponse& operator=(const CMsgCREItemVoteSummaryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCREItemVoteSummaryResponse& operator=(CMsgCREItemVoteSummaryResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgCREItemVoteSummaryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCREItemVoteSummaryResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgCREItemVoteSummaryResponse*>(
               &_CMsgCREItemVoteSummaryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  friend void swap(CMsgCREItemVoteSummaryResponse& a, CMsgCREItemVoteSummaryResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCREItemVoteSummaryResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCREItemVoteSummaryResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgCREItemVoteSummaryResponse* New() const final {
    return CreateMaybeMessage<CMsgCREItemVoteSummaryResponse>(nullptr);
  }

  CMsgCREItemVoteSummaryResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgCREItemVoteSummaryResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgCREItemVoteSummaryResponse& from);
  void MergeFrom(const CMsgCREItemVoteSummaryResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCREItemVoteSummaryResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCREItemVoteSummaryResponse";
  }
  protected:
  explicit CMsgCREItemVoteSummaryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgCREItemVoteSummaryResponse_ItemVoteSummary ItemVoteSummary;

  // accessors -------------------------------------------------------

  enum : int {
    kItemVoteSummariesFieldNumber = 2,
    kEresultFieldNumber = 1,
  };
  // repeated .CMsgCREItemVoteSummaryResponse.ItemVoteSummary item_vote_summaries = 2;
  int item_vote_summaries_size() const;
  private:
  int _internal_item_vote_summaries_size() const;
  public:
  void clear_item_vote_summaries();
  ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary* mutable_item_vote_summaries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary >*
      mutable_item_vote_summaries();
  private:
  const ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary& _internal_item_vote_summaries(int index) const;
  ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary* _internal_add_item_vote_summaries();
  public:
  const ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary& item_vote_summaries(int index) const;
  ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary* add_item_vote_summaries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary >&
      item_vote_summaries() const;

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgCREItemVoteSummaryResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary > item_vote_summaries_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgCREUpdateUserPublishedItemVote PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgCREUpdateUserPublishedItemVote) */ {
 public:
  inline CMsgCREUpdateUserPublishedItemVote() : CMsgCREUpdateUserPublishedItemVote(nullptr) {}
  virtual ~CMsgCREUpdateUserPublishedItemVote();
  explicit constexpr CMsgCREUpdateUserPublishedItemVote(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCREUpdateUserPublishedItemVote(const CMsgCREUpdateUserPublishedItemVote& from);
  CMsgCREUpdateUserPublishedItemVote(CMsgCREUpdateUserPublishedItemVote&& from) noexcept
    : CMsgCREUpdateUserPublishedItemVote() {
    *this = ::std::move(from);
  }

  inline CMsgCREUpdateUserPublishedItemVote& operator=(const CMsgCREUpdateUserPublishedItemVote& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCREUpdateUserPublishedItemVote& operator=(CMsgCREUpdateUserPublishedItemVote&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgCREUpdateUserPublishedItemVote& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCREUpdateUserPublishedItemVote* internal_default_instance() {
    return reinterpret_cast<const CMsgCREUpdateUserPublishedItemVote*>(
               &_CMsgCREUpdateUserPublishedItemVote_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  friend void swap(CMsgCREUpdateUserPublishedItemVote& a, CMsgCREUpdateUserPublishedItemVote& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCREUpdateUserPublishedItemVote* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCREUpdateUserPublishedItemVote* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgCREUpdateUserPublishedItemVote* New() const final {
    return CreateMaybeMessage<CMsgCREUpdateUserPublishedItemVote>(nullptr);
  }

  CMsgCREUpdateUserPublishedItemVote* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgCREUpdateUserPublishedItemVote>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgCREUpdateUserPublishedItemVote& from);
  void MergeFrom(const CMsgCREUpdateUserPublishedItemVote& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCREUpdateUserPublishedItemVote* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCREUpdateUserPublishedItemVote";
  }
  protected:
  explicit CMsgCREUpdateUserPublishedItemVote(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPublishedFileIdFieldNumber = 1,
    kVoteUpFieldNumber = 2,
  };
  // optional fixed64 published_file_id = 1;
  bool has_published_file_id() const;
  private:
  bool _internal_has_published_file_id() const;
  public:
  void clear_published_file_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id() const;
  void set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_published_file_id() const;
  void _internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool vote_up = 2;
  bool has_vote_up() const;
  private:
  bool _internal_has_vote_up() const;
  public:
  void clear_vote_up();
  bool vote_up() const;
  void set_vote_up(bool value);
  private:
  bool _internal_vote_up() const;
  void _internal_set_vote_up(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgCREUpdateUserPublishedItemVote)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id_;
  bool vote_up_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgCREUpdateUserPublishedItemVoteResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgCREUpdateUserPublishedItemVoteResponse) */ {
 public:
  inline CMsgCREUpdateUserPublishedItemVoteResponse() : CMsgCREUpdateUserPublishedItemVoteResponse(nullptr) {}
  virtual ~CMsgCREUpdateUserPublishedItemVoteResponse();
  explicit constexpr CMsgCREUpdateUserPublishedItemVoteResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCREUpdateUserPublishedItemVoteResponse(const CMsgCREUpdateUserPublishedItemVoteResponse& from);
  CMsgCREUpdateUserPublishedItemVoteResponse(CMsgCREUpdateUserPublishedItemVoteResponse&& from) noexcept
    : CMsgCREUpdateUserPublishedItemVoteResponse() {
    *this = ::std::move(from);
  }

  inline CMsgCREUpdateUserPublishedItemVoteResponse& operator=(const CMsgCREUpdateUserPublishedItemVoteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCREUpdateUserPublishedItemVoteResponse& operator=(CMsgCREUpdateUserPublishedItemVoteResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgCREUpdateUserPublishedItemVoteResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCREUpdateUserPublishedItemVoteResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgCREUpdateUserPublishedItemVoteResponse*>(
               &_CMsgCREUpdateUserPublishedItemVoteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  friend void swap(CMsgCREUpdateUserPublishedItemVoteResponse& a, CMsgCREUpdateUserPublishedItemVoteResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCREUpdateUserPublishedItemVoteResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCREUpdateUserPublishedItemVoteResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgCREUpdateUserPublishedItemVoteResponse* New() const final {
    return CreateMaybeMessage<CMsgCREUpdateUserPublishedItemVoteResponse>(nullptr);
  }

  CMsgCREUpdateUserPublishedItemVoteResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgCREUpdateUserPublishedItemVoteResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgCREUpdateUserPublishedItemVoteResponse& from);
  void MergeFrom(const CMsgCREUpdateUserPublishedItemVoteResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCREUpdateUserPublishedItemVoteResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCREUpdateUserPublishedItemVoteResponse";
  }
  protected:
  explicit CMsgCREUpdateUserPublishedItemVoteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEresultFieldNumber = 1,
  };
  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgCREUpdateUserPublishedItemVoteResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId) */ {
 public:
  inline CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId() : CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId(nullptr) {}
  virtual ~CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId();
  explicit constexpr CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId(const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& from);
  CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId(CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId&& from) noexcept
    : CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId() {
    *this = ::std::move(from);
  }

  inline CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& operator=(const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& operator=(CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* internal_default_instance() {
    return reinterpret_cast<const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId*>(
               &_CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  friend void swap(CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& a, CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* New() const final {
    return CreateMaybeMessage<CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId>(nullptr);
  }

  CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& from);
  void MergeFrom(const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId";
  }
  protected:
  explicit CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPublishedFileIdFieldNumber = 1,
  };
  // optional fixed64 published_file_id = 1;
  bool has_published_file_id() const;
  private:
  bool _internal_has_published_file_id() const;
  public:
  void clear_published_file_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id() const;
  void set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_published_file_id() const;
  void _internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgCREGetUserPublishedItemVoteDetails PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgCREGetUserPublishedItemVoteDetails) */ {
 public:
  inline CMsgCREGetUserPublishedItemVoteDetails() : CMsgCREGetUserPublishedItemVoteDetails(nullptr) {}
  virtual ~CMsgCREGetUserPublishedItemVoteDetails();
  explicit constexpr CMsgCREGetUserPublishedItemVoteDetails(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCREGetUserPublishedItemVoteDetails(const CMsgCREGetUserPublishedItemVoteDetails& from);
  CMsgCREGetUserPublishedItemVoteDetails(CMsgCREGetUserPublishedItemVoteDetails&& from) noexcept
    : CMsgCREGetUserPublishedItemVoteDetails() {
    *this = ::std::move(from);
  }

  inline CMsgCREGetUserPublishedItemVoteDetails& operator=(const CMsgCREGetUserPublishedItemVoteDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCREGetUserPublishedItemVoteDetails& operator=(CMsgCREGetUserPublishedItemVoteDetails&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgCREGetUserPublishedItemVoteDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCREGetUserPublishedItemVoteDetails* internal_default_instance() {
    return reinterpret_cast<const CMsgCREGetUserPublishedItemVoteDetails*>(
               &_CMsgCREGetUserPublishedItemVoteDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  friend void swap(CMsgCREGetUserPublishedItemVoteDetails& a, CMsgCREGetUserPublishedItemVoteDetails& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCREGetUserPublishedItemVoteDetails* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCREGetUserPublishedItemVoteDetails* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgCREGetUserPublishedItemVoteDetails* New() const final {
    return CreateMaybeMessage<CMsgCREGetUserPublishedItemVoteDetails>(nullptr);
  }

  CMsgCREGetUserPublishedItemVoteDetails* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgCREGetUserPublishedItemVoteDetails>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgCREGetUserPublishedItemVoteDetails& from);
  void MergeFrom(const CMsgCREGetUserPublishedItemVoteDetails& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCREGetUserPublishedItemVoteDetails* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCREGetUserPublishedItemVoteDetails";
  }
  protected:
  explicit CMsgCREGetUserPublishedItemVoteDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId PublishedFileId;

  // accessors -------------------------------------------------------

  enum : int {
    kPublishedFileIdsFieldNumber = 1,
  };
  // repeated .CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId published_file_ids = 1;
  int published_file_ids_size() const;
  private:
  int _internal_published_file_ids_size() const;
  public:
  void clear_published_file_ids();
  ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* mutable_published_file_ids(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId >*
      mutable_published_file_ids();
  private:
  const ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& _internal_published_file_ids(int index) const;
  ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* _internal_add_published_file_ids();
  public:
  const ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& published_file_ids(int index) const;
  ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* add_published_file_ids();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId >&
      published_file_ids() const;

  // @@protoc_insertion_point(class_scope:CMsgCREGetUserPublishedItemVoteDetails)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId > published_file_ids_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail) */ {
 public:
  inline CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail() : CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail(nullptr) {}
  virtual ~CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail();
  explicit constexpr CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail(const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& from);
  CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail&& from) noexcept
    : CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail() {
    *this = ::std::move(from);
  }

  inline CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& operator=(const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& operator=(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* internal_default_instance() {
    return reinterpret_cast<const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail*>(
               &_CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  friend void swap(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& a, CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* New() const final {
    return CreateMaybeMessage<CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail>(nullptr);
  }

  CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& from);
  void MergeFrom(const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail";
  }
  protected:
  explicit CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPublishedFileIdFieldNumber = 1,
    kVoteFieldNumber = 2,
  };
  // optional fixed64 published_file_id = 1;
  bool has_published_file_id() const;
  private:
  bool _internal_has_published_file_id() const;
  public:
  void clear_published_file_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id() const;
  void set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_published_file_id() const;
  void _internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional int32 vote = 2 [default = 0];
  bool has_vote() const;
  private:
  bool _internal_has_vote() const;
  public:
  void clear_vote();
  ::PROTOBUF_NAMESPACE_ID::int32 vote() const;
  void set_vote(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vote() const;
  void _internal_set_vote(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 vote_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgCREGetUserPublishedItemVoteDetailsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgCREGetUserPublishedItemVoteDetailsResponse) */ {
 public:
  inline CMsgCREGetUserPublishedItemVoteDetailsResponse() : CMsgCREGetUserPublishedItemVoteDetailsResponse(nullptr) {}
  virtual ~CMsgCREGetUserPublishedItemVoteDetailsResponse();
  explicit constexpr CMsgCREGetUserPublishedItemVoteDetailsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCREGetUserPublishedItemVoteDetailsResponse(const CMsgCREGetUserPublishedItemVoteDetailsResponse& from);
  CMsgCREGetUserPublishedItemVoteDetailsResponse(CMsgCREGetUserPublishedItemVoteDetailsResponse&& from) noexcept
    : CMsgCREGetUserPublishedItemVoteDetailsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgCREGetUserPublishedItemVoteDetailsResponse& operator=(const CMsgCREGetUserPublishedItemVoteDetailsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCREGetUserPublishedItemVoteDetailsResponse& operator=(CMsgCREGetUserPublishedItemVoteDetailsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgCREGetUserPublishedItemVoteDetailsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCREGetUserPublishedItemVoteDetailsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgCREGetUserPublishedItemVoteDetailsResponse*>(
               &_CMsgCREGetUserPublishedItemVoteDetailsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  friend void swap(CMsgCREGetUserPublishedItemVoteDetailsResponse& a, CMsgCREGetUserPublishedItemVoteDetailsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCREGetUserPublishedItemVoteDetailsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCREGetUserPublishedItemVoteDetailsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgCREGetUserPublishedItemVoteDetailsResponse* New() const final {
    return CreateMaybeMessage<CMsgCREGetUserPublishedItemVoteDetailsResponse>(nullptr);
  }

  CMsgCREGetUserPublishedItemVoteDetailsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgCREGetUserPublishedItemVoteDetailsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgCREGetUserPublishedItemVoteDetailsResponse& from);
  void MergeFrom(const CMsgCREGetUserPublishedItemVoteDetailsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCREGetUserPublishedItemVoteDetailsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCREGetUserPublishedItemVoteDetailsResponse";
  }
  protected:
  explicit CMsgCREGetUserPublishedItemVoteDetailsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail UserItemVoteDetail;

  // accessors -------------------------------------------------------

  enum : int {
    kUserItemVoteDetailsFieldNumber = 2,
    kEresultFieldNumber = 1,
  };
  // repeated .CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail user_item_vote_details = 2;
  int user_item_vote_details_size() const;
  private:
  int _internal_user_item_vote_details_size() const;
  public:
  void clear_user_item_vote_details();
  ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* mutable_user_item_vote_details(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail >*
      mutable_user_item_vote_details();
  private:
  const ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& _internal_user_item_vote_details(int index) const;
  ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* _internal_add_user_item_vote_details();
  public:
  const ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& user_item_vote_details(int index) const;
  ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* add_user_item_vote_details();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail >&
      user_item_vote_details() const;

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgCREGetUserPublishedItemVoteDetailsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail > user_item_vote_details_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgFSGetFollowerCount PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgFSGetFollowerCount) */ {
 public:
  inline CMsgFSGetFollowerCount() : CMsgFSGetFollowerCount(nullptr) {}
  virtual ~CMsgFSGetFollowerCount();
  explicit constexpr CMsgFSGetFollowerCount(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgFSGetFollowerCount(const CMsgFSGetFollowerCount& from);
  CMsgFSGetFollowerCount(CMsgFSGetFollowerCount&& from) noexcept
    : CMsgFSGetFollowerCount() {
    *this = ::std::move(from);
  }

  inline CMsgFSGetFollowerCount& operator=(const CMsgFSGetFollowerCount& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgFSGetFollowerCount& operator=(CMsgFSGetFollowerCount&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgFSGetFollowerCount& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgFSGetFollowerCount* internal_default_instance() {
    return reinterpret_cast<const CMsgFSGetFollowerCount*>(
               &_CMsgFSGetFollowerCount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  friend void swap(CMsgFSGetFollowerCount& a, CMsgFSGetFollowerCount& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgFSGetFollowerCount* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgFSGetFollowerCount* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgFSGetFollowerCount* New() const final {
    return CreateMaybeMessage<CMsgFSGetFollowerCount>(nullptr);
  }

  CMsgFSGetFollowerCount* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgFSGetFollowerCount>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgFSGetFollowerCount& from);
  void MergeFrom(const CMsgFSGetFollowerCount& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgFSGetFollowerCount* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgFSGetFollowerCount";
  }
  protected:
  explicit CMsgFSGetFollowerCount(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamIdFieldNumber = 1,
  };
  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  private:
  bool _internal_has_steam_id() const;
  public:
  void clear_steam_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 steam_id() const;
  void set_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steam_id() const;
  void _internal_set_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgFSGetFollowerCount)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steam_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgFSGetFollowerCountResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgFSGetFollowerCountResponse) */ {
 public:
  inline CMsgFSGetFollowerCountResponse() : CMsgFSGetFollowerCountResponse(nullptr) {}
  virtual ~CMsgFSGetFollowerCountResponse();
  explicit constexpr CMsgFSGetFollowerCountResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgFSGetFollowerCountResponse(const CMsgFSGetFollowerCountResponse& from);
  CMsgFSGetFollowerCountResponse(CMsgFSGetFollowerCountResponse&& from) noexcept
    : CMsgFSGetFollowerCountResponse() {
    *this = ::std::move(from);
  }

  inline CMsgFSGetFollowerCountResponse& operator=(const CMsgFSGetFollowerCountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgFSGetFollowerCountResponse& operator=(CMsgFSGetFollowerCountResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgFSGetFollowerCountResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgFSGetFollowerCountResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgFSGetFollowerCountResponse*>(
               &_CMsgFSGetFollowerCountResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  friend void swap(CMsgFSGetFollowerCountResponse& a, CMsgFSGetFollowerCountResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgFSGetFollowerCountResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgFSGetFollowerCountResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgFSGetFollowerCountResponse* New() const final {
    return CreateMaybeMessage<CMsgFSGetFollowerCountResponse>(nullptr);
  }

  CMsgFSGetFollowerCountResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgFSGetFollowerCountResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgFSGetFollowerCountResponse& from);
  void MergeFrom(const CMsgFSGetFollowerCountResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgFSGetFollowerCountResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgFSGetFollowerCountResponse";
  }
  protected:
  explicit CMsgFSGetFollowerCountResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCountFieldNumber = 2,
    kEresultFieldNumber = 1,
  };
  // optional int32 count = 2 [default = 0];
  bool has_count() const;
  private:
  bool _internal_has_count() const;
  public:
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgFSGetFollowerCountResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgFSGetIsFollowing PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgFSGetIsFollowing) */ {
 public:
  inline CMsgFSGetIsFollowing() : CMsgFSGetIsFollowing(nullptr) {}
  virtual ~CMsgFSGetIsFollowing();
  explicit constexpr CMsgFSGetIsFollowing(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgFSGetIsFollowing(const CMsgFSGetIsFollowing& from);
  CMsgFSGetIsFollowing(CMsgFSGetIsFollowing&& from) noexcept
    : CMsgFSGetIsFollowing() {
    *this = ::std::move(from);
  }

  inline CMsgFSGetIsFollowing& operator=(const CMsgFSGetIsFollowing& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgFSGetIsFollowing& operator=(CMsgFSGetIsFollowing&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgFSGetIsFollowing& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgFSGetIsFollowing* internal_default_instance() {
    return reinterpret_cast<const CMsgFSGetIsFollowing*>(
               &_CMsgFSGetIsFollowing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  friend void swap(CMsgFSGetIsFollowing& a, CMsgFSGetIsFollowing& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgFSGetIsFollowing* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgFSGetIsFollowing* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgFSGetIsFollowing* New() const final {
    return CreateMaybeMessage<CMsgFSGetIsFollowing>(nullptr);
  }

  CMsgFSGetIsFollowing* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgFSGetIsFollowing>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgFSGetIsFollowing& from);
  void MergeFrom(const CMsgFSGetIsFollowing& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgFSGetIsFollowing* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgFSGetIsFollowing";
  }
  protected:
  explicit CMsgFSGetIsFollowing(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamIdFieldNumber = 1,
  };
  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  private:
  bool _internal_has_steam_id() const;
  public:
  void clear_steam_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 steam_id() const;
  void set_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steam_id() const;
  void _internal_set_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgFSGetIsFollowing)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steam_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgFSGetIsFollowingResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgFSGetIsFollowingResponse) */ {
 public:
  inline CMsgFSGetIsFollowingResponse() : CMsgFSGetIsFollowingResponse(nullptr) {}
  virtual ~CMsgFSGetIsFollowingResponse();
  explicit constexpr CMsgFSGetIsFollowingResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgFSGetIsFollowingResponse(const CMsgFSGetIsFollowingResponse& from);
  CMsgFSGetIsFollowingResponse(CMsgFSGetIsFollowingResponse&& from) noexcept
    : CMsgFSGetIsFollowingResponse() {
    *this = ::std::move(from);
  }

  inline CMsgFSGetIsFollowingResponse& operator=(const CMsgFSGetIsFollowingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgFSGetIsFollowingResponse& operator=(CMsgFSGetIsFollowingResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgFSGetIsFollowingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgFSGetIsFollowingResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgFSGetIsFollowingResponse*>(
               &_CMsgFSGetIsFollowingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  friend void swap(CMsgFSGetIsFollowingResponse& a, CMsgFSGetIsFollowingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgFSGetIsFollowingResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgFSGetIsFollowingResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgFSGetIsFollowingResponse* New() const final {
    return CreateMaybeMessage<CMsgFSGetIsFollowingResponse>(nullptr);
  }

  CMsgFSGetIsFollowingResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgFSGetIsFollowingResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgFSGetIsFollowingResponse& from);
  void MergeFrom(const CMsgFSGetIsFollowingResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgFSGetIsFollowingResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgFSGetIsFollowingResponse";
  }
  protected:
  explicit CMsgFSGetIsFollowingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIsFollowingFieldNumber = 2,
    kEresultFieldNumber = 1,
  };
  // optional bool is_following = 2 [default = false];
  bool has_is_following() const;
  private:
  bool _internal_has_is_following() const;
  public:
  void clear_is_following();
  bool is_following() const;
  void set_is_following(bool value);
  private:
  bool _internal_is_following() const;
  void _internal_set_is_following(bool value);
  public:

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgFSGetIsFollowingResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool is_following_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgFSEnumerateFollowingList PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgFSEnumerateFollowingList) */ {
 public:
  inline CMsgFSEnumerateFollowingList() : CMsgFSEnumerateFollowingList(nullptr) {}
  virtual ~CMsgFSEnumerateFollowingList();
  explicit constexpr CMsgFSEnumerateFollowingList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgFSEnumerateFollowingList(const CMsgFSEnumerateFollowingList& from);
  CMsgFSEnumerateFollowingList(CMsgFSEnumerateFollowingList&& from) noexcept
    : CMsgFSEnumerateFollowingList() {
    *this = ::std::move(from);
  }

  inline CMsgFSEnumerateFollowingList& operator=(const CMsgFSEnumerateFollowingList& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgFSEnumerateFollowingList& operator=(CMsgFSEnumerateFollowingList&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgFSEnumerateFollowingList& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgFSEnumerateFollowingList* internal_default_instance() {
    return reinterpret_cast<const CMsgFSEnumerateFollowingList*>(
               &_CMsgFSEnumerateFollowingList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  friend void swap(CMsgFSEnumerateFollowingList& a, CMsgFSEnumerateFollowingList& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgFSEnumerateFollowingList* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgFSEnumerateFollowingList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgFSEnumerateFollowingList* New() const final {
    return CreateMaybeMessage<CMsgFSEnumerateFollowingList>(nullptr);
  }

  CMsgFSEnumerateFollowingList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgFSEnumerateFollowingList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgFSEnumerateFollowingList& from);
  void MergeFrom(const CMsgFSEnumerateFollowingList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgFSEnumerateFollowingList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgFSEnumerateFollowingList";
  }
  protected:
  explicit CMsgFSEnumerateFollowingList(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartIndexFieldNumber = 1,
  };
  // optional uint32 start_index = 1;
  bool has_start_index() const;
  private:
  bool _internal_has_start_index() const;
  public:
  void clear_start_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 start_index() const;
  void set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start_index() const;
  void _internal_set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgFSEnumerateFollowingList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_index_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgFSEnumerateFollowingListResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgFSEnumerateFollowingListResponse) */ {
 public:
  inline CMsgFSEnumerateFollowingListResponse() : CMsgFSEnumerateFollowingListResponse(nullptr) {}
  virtual ~CMsgFSEnumerateFollowingListResponse();
  explicit constexpr CMsgFSEnumerateFollowingListResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgFSEnumerateFollowingListResponse(const CMsgFSEnumerateFollowingListResponse& from);
  CMsgFSEnumerateFollowingListResponse(CMsgFSEnumerateFollowingListResponse&& from) noexcept
    : CMsgFSEnumerateFollowingListResponse() {
    *this = ::std::move(from);
  }

  inline CMsgFSEnumerateFollowingListResponse& operator=(const CMsgFSEnumerateFollowingListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgFSEnumerateFollowingListResponse& operator=(CMsgFSEnumerateFollowingListResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgFSEnumerateFollowingListResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgFSEnumerateFollowingListResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgFSEnumerateFollowingListResponse*>(
               &_CMsgFSEnumerateFollowingListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  friend void swap(CMsgFSEnumerateFollowingListResponse& a, CMsgFSEnumerateFollowingListResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgFSEnumerateFollowingListResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgFSEnumerateFollowingListResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgFSEnumerateFollowingListResponse* New() const final {
    return CreateMaybeMessage<CMsgFSEnumerateFollowingListResponse>(nullptr);
  }

  CMsgFSEnumerateFollowingListResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgFSEnumerateFollowingListResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgFSEnumerateFollowingListResponse& from);
  void MergeFrom(const CMsgFSEnumerateFollowingListResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgFSEnumerateFollowingListResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgFSEnumerateFollowingListResponse";
  }
  protected:
  explicit CMsgFSEnumerateFollowingListResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamIdsFieldNumber = 3,
    kTotalResultsFieldNumber = 2,
    kEresultFieldNumber = 1,
  };
  // repeated fixed64 steam_ids = 3;
  int steam_ids_size() const;
  private:
  int _internal_steam_ids_size() const;
  public:
  void clear_steam_ids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steam_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_steam_ids() const;
  void _internal_add_steam_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_steam_ids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 steam_ids(int index) const;
  void set_steam_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_steam_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      steam_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_steam_ids();

  // optional int32 total_results = 2;
  bool has_total_results() const;
  private:
  bool _internal_has_total_results() const;
  public:
  void clear_total_results();
  ::PROTOBUF_NAMESPACE_ID::int32 total_results() const;
  void set_total_results(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_total_results() const;
  void _internal_set_total_results(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgFSEnumerateFollowingListResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > steam_ids_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_results_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgDPGetNumberOfCurrentPlayers PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgDPGetNumberOfCurrentPlayers) */ {
 public:
  inline CMsgDPGetNumberOfCurrentPlayers() : CMsgDPGetNumberOfCurrentPlayers(nullptr) {}
  virtual ~CMsgDPGetNumberOfCurrentPlayers();
  explicit constexpr CMsgDPGetNumberOfCurrentPlayers(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgDPGetNumberOfCurrentPlayers(const CMsgDPGetNumberOfCurrentPlayers& from);
  CMsgDPGetNumberOfCurrentPlayers(CMsgDPGetNumberOfCurrentPlayers&& from) noexcept
    : CMsgDPGetNumberOfCurrentPlayers() {
    *this = ::std::move(from);
  }

  inline CMsgDPGetNumberOfCurrentPlayers& operator=(const CMsgDPGetNumberOfCurrentPlayers& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgDPGetNumberOfCurrentPlayers& operator=(CMsgDPGetNumberOfCurrentPlayers&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgDPGetNumberOfCurrentPlayers& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgDPGetNumberOfCurrentPlayers* internal_default_instance() {
    return reinterpret_cast<const CMsgDPGetNumberOfCurrentPlayers*>(
               &_CMsgDPGetNumberOfCurrentPlayers_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  friend void swap(CMsgDPGetNumberOfCurrentPlayers& a, CMsgDPGetNumberOfCurrentPlayers& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgDPGetNumberOfCurrentPlayers* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgDPGetNumberOfCurrentPlayers* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgDPGetNumberOfCurrentPlayers* New() const final {
    return CreateMaybeMessage<CMsgDPGetNumberOfCurrentPlayers>(nullptr);
  }

  CMsgDPGetNumberOfCurrentPlayers* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDPGetNumberOfCurrentPlayers>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgDPGetNumberOfCurrentPlayers& from);
  void MergeFrom(const CMsgDPGetNumberOfCurrentPlayers& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDPGetNumberOfCurrentPlayers* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgDPGetNumberOfCurrentPlayers";
  }
  protected:
  explicit CMsgDPGetNumberOfCurrentPlayers(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppidFieldNumber = 1,
  };
  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgDPGetNumberOfCurrentPlayers)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgDPGetNumberOfCurrentPlayersResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgDPGetNumberOfCurrentPlayersResponse) */ {
 public:
  inline CMsgDPGetNumberOfCurrentPlayersResponse() : CMsgDPGetNumberOfCurrentPlayersResponse(nullptr) {}
  virtual ~CMsgDPGetNumberOfCurrentPlayersResponse();
  explicit constexpr CMsgDPGetNumberOfCurrentPlayersResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgDPGetNumberOfCurrentPlayersResponse(const CMsgDPGetNumberOfCurrentPlayersResponse& from);
  CMsgDPGetNumberOfCurrentPlayersResponse(CMsgDPGetNumberOfCurrentPlayersResponse&& from) noexcept
    : CMsgDPGetNumberOfCurrentPlayersResponse() {
    *this = ::std::move(from);
  }

  inline CMsgDPGetNumberOfCurrentPlayersResponse& operator=(const CMsgDPGetNumberOfCurrentPlayersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgDPGetNumberOfCurrentPlayersResponse& operator=(CMsgDPGetNumberOfCurrentPlayersResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgDPGetNumberOfCurrentPlayersResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgDPGetNumberOfCurrentPlayersResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDPGetNumberOfCurrentPlayersResponse*>(
               &_CMsgDPGetNumberOfCurrentPlayersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  friend void swap(CMsgDPGetNumberOfCurrentPlayersResponse& a, CMsgDPGetNumberOfCurrentPlayersResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgDPGetNumberOfCurrentPlayersResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgDPGetNumberOfCurrentPlayersResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgDPGetNumberOfCurrentPlayersResponse* New() const final {
    return CreateMaybeMessage<CMsgDPGetNumberOfCurrentPlayersResponse>(nullptr);
  }

  CMsgDPGetNumberOfCurrentPlayersResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgDPGetNumberOfCurrentPlayersResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgDPGetNumberOfCurrentPlayersResponse& from);
  void MergeFrom(const CMsgDPGetNumberOfCurrentPlayersResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgDPGetNumberOfCurrentPlayersResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgDPGetNumberOfCurrentPlayersResponse";
  }
  protected:
  explicit CMsgDPGetNumberOfCurrentPlayersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerCountFieldNumber = 2,
    kEresultFieldNumber = 1,
  };
  // optional int32 player_count = 2;
  bool has_player_count() const;
  private:
  bool _internal_has_player_count() const;
  public:
  void clear_player_count();
  ::PROTOBUF_NAMESPACE_ID::int32 player_count() const;
  void set_player_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_count() const;
  void _internal_set_player_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgDPGetNumberOfCurrentPlayersResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientFriendUserStatusPublished PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientFriendUserStatusPublished) */ {
 public:
  inline CMsgClientFriendUserStatusPublished() : CMsgClientFriendUserStatusPublished(nullptr) {}
  virtual ~CMsgClientFriendUserStatusPublished();
  explicit constexpr CMsgClientFriendUserStatusPublished(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientFriendUserStatusPublished(const CMsgClientFriendUserStatusPublished& from);
  CMsgClientFriendUserStatusPublished(CMsgClientFriendUserStatusPublished&& from) noexcept
    : CMsgClientFriendUserStatusPublished() {
    *this = ::std::move(from);
  }

  inline CMsgClientFriendUserStatusPublished& operator=(const CMsgClientFriendUserStatusPublished& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientFriendUserStatusPublished& operator=(CMsgClientFriendUserStatusPublished&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientFriendUserStatusPublished& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientFriendUserStatusPublished* internal_default_instance() {
    return reinterpret_cast<const CMsgClientFriendUserStatusPublished*>(
               &_CMsgClientFriendUserStatusPublished_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  friend void swap(CMsgClientFriendUserStatusPublished& a, CMsgClientFriendUserStatusPublished& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientFriendUserStatusPublished* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientFriendUserStatusPublished* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientFriendUserStatusPublished* New() const final {
    return CreateMaybeMessage<CMsgClientFriendUserStatusPublished>(nullptr);
  }

  CMsgClientFriendUserStatusPublished* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientFriendUserStatusPublished>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientFriendUserStatusPublished& from);
  void MergeFrom(const CMsgClientFriendUserStatusPublished& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientFriendUserStatusPublished* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientFriendUserStatusPublished";
  }
  protected:
  explicit CMsgClientFriendUserStatusPublished(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusTextFieldNumber = 3,
    kFriendSteamidFieldNumber = 1,
    kAppidFieldNumber = 2,
  };
  // optional string status_text = 3;
  bool has_status_text() const;
  private:
  bool _internal_has_status_text() const;
  public:
  void clear_status_text();
  const std::string& status_text() const;
  void set_status_text(const std::string& value);
  void set_status_text(std::string&& value);
  void set_status_text(const char* value);
  void set_status_text(const char* value, size_t size);
  std::string* mutable_status_text();
  std::string* release_status_text();
  void set_allocated_status_text(std::string* status_text);
  private:
  const std::string& _internal_status_text() const;
  void _internal_set_status_text(const std::string& value);
  std::string* _internal_mutable_status_text();
  public:

  // optional fixed64 friend_steamid = 1;
  bool has_friend_steamid() const;
  private:
  bool _internal_has_friend_steamid() const;
  public:
  void clear_friend_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 friend_steamid() const;
  void set_friend_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_friend_steamid() const;
  void _internal_set_friend_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 appid = 2;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientFriendUserStatusPublished)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr status_text_;
  ::PROTOBUF_NAMESPACE_ID::uint64 friend_steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientServiceMethodLegacy PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientServiceMethodLegacy) */ {
 public:
  inline CMsgClientServiceMethodLegacy() : CMsgClientServiceMethodLegacy(nullptr) {}
  virtual ~CMsgClientServiceMethodLegacy();
  explicit constexpr CMsgClientServiceMethodLegacy(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientServiceMethodLegacy(const CMsgClientServiceMethodLegacy& from);
  CMsgClientServiceMethodLegacy(CMsgClientServiceMethodLegacy&& from) noexcept
    : CMsgClientServiceMethodLegacy() {
    *this = ::std::move(from);
  }

  inline CMsgClientServiceMethodLegacy& operator=(const CMsgClientServiceMethodLegacy& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientServiceMethodLegacy& operator=(CMsgClientServiceMethodLegacy&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientServiceMethodLegacy& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientServiceMethodLegacy* internal_default_instance() {
    return reinterpret_cast<const CMsgClientServiceMethodLegacy*>(
               &_CMsgClientServiceMethodLegacy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  friend void swap(CMsgClientServiceMethodLegacy& a, CMsgClientServiceMethodLegacy& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientServiceMethodLegacy* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientServiceMethodLegacy* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientServiceMethodLegacy* New() const final {
    return CreateMaybeMessage<CMsgClientServiceMethodLegacy>(nullptr);
  }

  CMsgClientServiceMethodLegacy* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientServiceMethodLegacy>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientServiceMethodLegacy& from);
  void MergeFrom(const CMsgClientServiceMethodLegacy& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientServiceMethodLegacy* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientServiceMethodLegacy";
  }
  protected:
  explicit CMsgClientServiceMethodLegacy(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMethodNameFieldNumber = 1,
    kSerializedMethodFieldNumber = 2,
    kIsNotificationFieldNumber = 3,
  };
  // optional string method_name = 1;
  bool has_method_name() const;
  private:
  bool _internal_has_method_name() const;
  public:
  void clear_method_name();
  const std::string& method_name() const;
  void set_method_name(const std::string& value);
  void set_method_name(std::string&& value);
  void set_method_name(const char* value);
  void set_method_name(const char* value, size_t size);
  std::string* mutable_method_name();
  std::string* release_method_name();
  void set_allocated_method_name(std::string* method_name);
  private:
  const std::string& _internal_method_name() const;
  void _internal_set_method_name(const std::string& value);
  std::string* _internal_mutable_method_name();
  public:

  // optional bytes serialized_method = 2;
  bool has_serialized_method() const;
  private:
  bool _internal_has_serialized_method() const;
  public:
  void clear_serialized_method();
  const std::string& serialized_method() const;
  void set_serialized_method(const std::string& value);
  void set_serialized_method(std::string&& value);
  void set_serialized_method(const char* value);
  void set_serialized_method(const void* value, size_t size);
  std::string* mutable_serialized_method();
  std::string* release_serialized_method();
  void set_allocated_serialized_method(std::string* serialized_method);
  private:
  const std::string& _internal_serialized_method() const;
  void _internal_set_serialized_method(const std::string& value);
  std::string* _internal_mutable_serialized_method();
  public:

  // optional bool is_notification = 3;
  bool has_is_notification() const;
  private:
  bool _internal_has_is_notification() const;
  public:
  void clear_is_notification();
  bool is_notification() const;
  void set_is_notification(bool value);
  private:
  bool _internal_is_notification() const;
  void _internal_set_is_notification(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientServiceMethodLegacy)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr method_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr serialized_method_;
  bool is_notification_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientServiceMethodLegacyResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientServiceMethodLegacyResponse) */ {
 public:
  inline CMsgClientServiceMethodLegacyResponse() : CMsgClientServiceMethodLegacyResponse(nullptr) {}
  virtual ~CMsgClientServiceMethodLegacyResponse();
  explicit constexpr CMsgClientServiceMethodLegacyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientServiceMethodLegacyResponse(const CMsgClientServiceMethodLegacyResponse& from);
  CMsgClientServiceMethodLegacyResponse(CMsgClientServiceMethodLegacyResponse&& from) noexcept
    : CMsgClientServiceMethodLegacyResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientServiceMethodLegacyResponse& operator=(const CMsgClientServiceMethodLegacyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientServiceMethodLegacyResponse& operator=(CMsgClientServiceMethodLegacyResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientServiceMethodLegacyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientServiceMethodLegacyResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientServiceMethodLegacyResponse*>(
               &_CMsgClientServiceMethodLegacyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  friend void swap(CMsgClientServiceMethodLegacyResponse& a, CMsgClientServiceMethodLegacyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientServiceMethodLegacyResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientServiceMethodLegacyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientServiceMethodLegacyResponse* New() const final {
    return CreateMaybeMessage<CMsgClientServiceMethodLegacyResponse>(nullptr);
  }

  CMsgClientServiceMethodLegacyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientServiceMethodLegacyResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientServiceMethodLegacyResponse& from);
  void MergeFrom(const CMsgClientServiceMethodLegacyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientServiceMethodLegacyResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientServiceMethodLegacyResponse";
  }
  protected:
  explicit CMsgClientServiceMethodLegacyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMethodNameFieldNumber = 1,
    kSerializedMethodResponseFieldNumber = 2,
  };
  // optional string method_name = 1;
  bool has_method_name() const;
  private:
  bool _internal_has_method_name() const;
  public:
  void clear_method_name();
  const std::string& method_name() const;
  void set_method_name(const std::string& value);
  void set_method_name(std::string&& value);
  void set_method_name(const char* value);
  void set_method_name(const char* value, size_t size);
  std::string* mutable_method_name();
  std::string* release_method_name();
  void set_allocated_method_name(std::string* method_name);
  private:
  const std::string& _internal_method_name() const;
  void _internal_set_method_name(const std::string& value);
  std::string* _internal_mutable_method_name();
  public:

  // optional bytes serialized_method_response = 2;
  bool has_serialized_method_response() const;
  private:
  bool _internal_has_serialized_method_response() const;
  public:
  void clear_serialized_method_response();
  const std::string& serialized_method_response() const;
  void set_serialized_method_response(const std::string& value);
  void set_serialized_method_response(std::string&& value);
  void set_serialized_method_response(const char* value);
  void set_serialized_method_response(const void* value, size_t size);
  std::string* mutable_serialized_method_response();
  std::string* release_serialized_method_response();
  void set_allocated_serialized_method_response(std::string* serialized_method_response);
  private:
  const std::string& _internal_serialized_method_response() const;
  void _internal_set_serialized_method_response(const std::string& value);
  std::string* _internal_mutable_serialized_method_response();
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientServiceMethodLegacyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr method_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr serialized_method_response_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUIMode PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUIMode) */ {
 public:
  inline CMsgClientUIMode() : CMsgClientUIMode(nullptr) {}
  virtual ~CMsgClientUIMode();
  explicit constexpr CMsgClientUIMode(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUIMode(const CMsgClientUIMode& from);
  CMsgClientUIMode(CMsgClientUIMode&& from) noexcept
    : CMsgClientUIMode() {
    *this = ::std::move(from);
  }

  inline CMsgClientUIMode& operator=(const CMsgClientUIMode& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUIMode& operator=(CMsgClientUIMode&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUIMode& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUIMode* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUIMode*>(
               &_CMsgClientUIMode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  friend void swap(CMsgClientUIMode& a, CMsgClientUIMode& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUIMode* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUIMode* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUIMode* New() const final {
    return CreateMaybeMessage<CMsgClientUIMode>(nullptr);
  }

  CMsgClientUIMode* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUIMode>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUIMode& from);
  void MergeFrom(const CMsgClientUIMode& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUIMode* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUIMode";
  }
  protected:
  explicit CMsgClientUIMode(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUimodeFieldNumber = 1,
    kChatModeFieldNumber = 2,
  };
  // optional uint32 uimode = 1;
  bool has_uimode() const;
  private:
  bool _internal_has_uimode() const;
  public:
  void clear_uimode();
  ::PROTOBUF_NAMESPACE_ID::uint32 uimode() const;
  void set_uimode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uimode() const;
  void _internal_set_uimode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 chat_mode = 2;
  bool has_chat_mode() const;
  private:
  bool _internal_has_chat_mode() const;
  public:
  void clear_chat_mode();
  ::PROTOBUF_NAMESPACE_ID::uint32 chat_mode() const;
  void set_chat_mode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_chat_mode() const;
  void _internal_set_chat_mode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUIMode)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 uimode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 chat_mode_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientVanityURLChangedNotification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientVanityURLChangedNotification) */ {
 public:
  inline CMsgClientVanityURLChangedNotification() : CMsgClientVanityURLChangedNotification(nullptr) {}
  virtual ~CMsgClientVanityURLChangedNotification();
  explicit constexpr CMsgClientVanityURLChangedNotification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientVanityURLChangedNotification(const CMsgClientVanityURLChangedNotification& from);
  CMsgClientVanityURLChangedNotification(CMsgClientVanityURLChangedNotification&& from) noexcept
    : CMsgClientVanityURLChangedNotification() {
    *this = ::std::move(from);
  }

  inline CMsgClientVanityURLChangedNotification& operator=(const CMsgClientVanityURLChangedNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientVanityURLChangedNotification& operator=(CMsgClientVanityURLChangedNotification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientVanityURLChangedNotification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientVanityURLChangedNotification* internal_default_instance() {
    return reinterpret_cast<const CMsgClientVanityURLChangedNotification*>(
               &_CMsgClientVanityURLChangedNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  friend void swap(CMsgClientVanityURLChangedNotification& a, CMsgClientVanityURLChangedNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientVanityURLChangedNotification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientVanityURLChangedNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientVanityURLChangedNotification* New() const final {
    return CreateMaybeMessage<CMsgClientVanityURLChangedNotification>(nullptr);
  }

  CMsgClientVanityURLChangedNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientVanityURLChangedNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientVanityURLChangedNotification& from);
  void MergeFrom(const CMsgClientVanityURLChangedNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientVanityURLChangedNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientVanityURLChangedNotification";
  }
  protected:
  explicit CMsgClientVanityURLChangedNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVanityUrlFieldNumber = 1,
  };
  // optional string vanity_url = 1;
  bool has_vanity_url() const;
  private:
  bool _internal_has_vanity_url() const;
  public:
  void clear_vanity_url();
  const std::string& vanity_url() const;
  void set_vanity_url(const std::string& value);
  void set_vanity_url(std::string&& value);
  void set_vanity_url(const char* value);
  void set_vanity_url(const char* value, size_t size);
  std::string* mutable_vanity_url();
  std::string* release_vanity_url();
  void set_allocated_vanity_url(std::string* vanity_url);
  private:
  const std::string& _internal_vanity_url() const;
  void _internal_set_vanity_url(const std::string& value);
  std::string* _internal_mutable_vanity_url();
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientVanityURLChangedNotification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr vanity_url_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientAuthorizeLocalDeviceRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientAuthorizeLocalDeviceRequest) */ {
 public:
  inline CMsgClientAuthorizeLocalDeviceRequest() : CMsgClientAuthorizeLocalDeviceRequest(nullptr) {}
  virtual ~CMsgClientAuthorizeLocalDeviceRequest();
  explicit constexpr CMsgClientAuthorizeLocalDeviceRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientAuthorizeLocalDeviceRequest(const CMsgClientAuthorizeLocalDeviceRequest& from);
  CMsgClientAuthorizeLocalDeviceRequest(CMsgClientAuthorizeLocalDeviceRequest&& from) noexcept
    : CMsgClientAuthorizeLocalDeviceRequest() {
    *this = ::std::move(from);
  }

  inline CMsgClientAuthorizeLocalDeviceRequest& operator=(const CMsgClientAuthorizeLocalDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientAuthorizeLocalDeviceRequest& operator=(CMsgClientAuthorizeLocalDeviceRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientAuthorizeLocalDeviceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientAuthorizeLocalDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientAuthorizeLocalDeviceRequest*>(
               &_CMsgClientAuthorizeLocalDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  friend void swap(CMsgClientAuthorizeLocalDeviceRequest& a, CMsgClientAuthorizeLocalDeviceRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientAuthorizeLocalDeviceRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientAuthorizeLocalDeviceRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientAuthorizeLocalDeviceRequest* New() const final {
    return CreateMaybeMessage<CMsgClientAuthorizeLocalDeviceRequest>(nullptr);
  }

  CMsgClientAuthorizeLocalDeviceRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientAuthorizeLocalDeviceRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientAuthorizeLocalDeviceRequest& from);
  void MergeFrom(const CMsgClientAuthorizeLocalDeviceRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientAuthorizeLocalDeviceRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientAuthorizeLocalDeviceRequest";
  }
  protected:
  explicit CMsgClientAuthorizeLocalDeviceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeviceDescriptionFieldNumber = 1,
    kLocalDeviceTokenFieldNumber = 3,
    kOwnerAccountIdFieldNumber = 2,
  };
  // optional string device_description = 1;
  bool has_device_description() const;
  private:
  bool _internal_has_device_description() const;
  public:
  void clear_device_description();
  const std::string& device_description() const;
  void set_device_description(const std::string& value);
  void set_device_description(std::string&& value);
  void set_device_description(const char* value);
  void set_device_description(const char* value, size_t size);
  std::string* mutable_device_description();
  std::string* release_device_description();
  void set_allocated_device_description(std::string* device_description);
  private:
  const std::string& _internal_device_description() const;
  void _internal_set_device_description(const std::string& value);
  std::string* _internal_mutable_device_description();
  public:

  // optional uint64 local_device_token = 3;
  bool has_local_device_token() const;
  private:
  bool _internal_has_local_device_token() const;
  public:
  void clear_local_device_token();
  ::PROTOBUF_NAMESPACE_ID::uint64 local_device_token() const;
  void set_local_device_token(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_local_device_token() const;
  void _internal_set_local_device_token(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 owner_account_id = 2;
  bool has_owner_account_id() const;
  private:
  bool _internal_has_owner_account_id() const;
  public:
  void clear_owner_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 owner_account_id() const;
  void set_owner_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_owner_account_id() const;
  void _internal_set_owner_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientAuthorizeLocalDeviceRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr device_description_;
  ::PROTOBUF_NAMESPACE_ID::uint64 local_device_token_;
  ::PROTOBUF_NAMESPACE_ID::uint32 owner_account_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientAuthorizeLocalDevice PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientAuthorizeLocalDevice) */ {
 public:
  inline CMsgClientAuthorizeLocalDevice() : CMsgClientAuthorizeLocalDevice(nullptr) {}
  virtual ~CMsgClientAuthorizeLocalDevice();
  explicit constexpr CMsgClientAuthorizeLocalDevice(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientAuthorizeLocalDevice(const CMsgClientAuthorizeLocalDevice& from);
  CMsgClientAuthorizeLocalDevice(CMsgClientAuthorizeLocalDevice&& from) noexcept
    : CMsgClientAuthorizeLocalDevice() {
    *this = ::std::move(from);
  }

  inline CMsgClientAuthorizeLocalDevice& operator=(const CMsgClientAuthorizeLocalDevice& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientAuthorizeLocalDevice& operator=(CMsgClientAuthorizeLocalDevice&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientAuthorizeLocalDevice& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientAuthorizeLocalDevice* internal_default_instance() {
    return reinterpret_cast<const CMsgClientAuthorizeLocalDevice*>(
               &_CMsgClientAuthorizeLocalDevice_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  friend void swap(CMsgClientAuthorizeLocalDevice& a, CMsgClientAuthorizeLocalDevice& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientAuthorizeLocalDevice* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientAuthorizeLocalDevice* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientAuthorizeLocalDevice* New() const final {
    return CreateMaybeMessage<CMsgClientAuthorizeLocalDevice>(nullptr);
  }

  CMsgClientAuthorizeLocalDevice* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientAuthorizeLocalDevice>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientAuthorizeLocalDevice& from);
  void MergeFrom(const CMsgClientAuthorizeLocalDevice& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientAuthorizeLocalDevice* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientAuthorizeLocalDevice";
  }
  protected:
  explicit CMsgClientAuthorizeLocalDevice(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthedDeviceTokenFieldNumber = 3,
    kOwnerAccountIdFieldNumber = 2,
    kEresultFieldNumber = 1,
  };
  // optional uint64 authed_device_token = 3;
  bool has_authed_device_token() const;
  private:
  bool _internal_has_authed_device_token() const;
  public:
  void clear_authed_device_token();
  ::PROTOBUF_NAMESPACE_ID::uint64 authed_device_token() const;
  void set_authed_device_token(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_authed_device_token() const;
  void _internal_set_authed_device_token(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 owner_account_id = 2;
  bool has_owner_account_id() const;
  private:
  bool _internal_has_owner_account_id() const;
  public:
  void clear_owner_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 owner_account_id() const;
  void set_owner_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_owner_account_id() const;
  void _internal_set_owner_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientAuthorizeLocalDevice)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 authed_device_token_;
  ::PROTOBUF_NAMESPACE_ID::uint32 owner_account_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientAuthorizeLocalDeviceNotification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientAuthorizeLocalDeviceNotification) */ {
 public:
  inline CMsgClientAuthorizeLocalDeviceNotification() : CMsgClientAuthorizeLocalDeviceNotification(nullptr) {}
  virtual ~CMsgClientAuthorizeLocalDeviceNotification();
  explicit constexpr CMsgClientAuthorizeLocalDeviceNotification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientAuthorizeLocalDeviceNotification(const CMsgClientAuthorizeLocalDeviceNotification& from);
  CMsgClientAuthorizeLocalDeviceNotification(CMsgClientAuthorizeLocalDeviceNotification&& from) noexcept
    : CMsgClientAuthorizeLocalDeviceNotification() {
    *this = ::std::move(from);
  }

  inline CMsgClientAuthorizeLocalDeviceNotification& operator=(const CMsgClientAuthorizeLocalDeviceNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientAuthorizeLocalDeviceNotification& operator=(CMsgClientAuthorizeLocalDeviceNotification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientAuthorizeLocalDeviceNotification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientAuthorizeLocalDeviceNotification* internal_default_instance() {
    return reinterpret_cast<const CMsgClientAuthorizeLocalDeviceNotification*>(
               &_CMsgClientAuthorizeLocalDeviceNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  friend void swap(CMsgClientAuthorizeLocalDeviceNotification& a, CMsgClientAuthorizeLocalDeviceNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientAuthorizeLocalDeviceNotification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientAuthorizeLocalDeviceNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientAuthorizeLocalDeviceNotification* New() const final {
    return CreateMaybeMessage<CMsgClientAuthorizeLocalDeviceNotification>(nullptr);
  }

  CMsgClientAuthorizeLocalDeviceNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientAuthorizeLocalDeviceNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientAuthorizeLocalDeviceNotification& from);
  void MergeFrom(const CMsgClientAuthorizeLocalDeviceNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientAuthorizeLocalDeviceNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientAuthorizeLocalDeviceNotification";
  }
  protected:
  explicit CMsgClientAuthorizeLocalDeviceNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocalDeviceTokenFieldNumber = 3,
    kOwnerAccountIdFieldNumber = 2,
    kEresultFieldNumber = 1,
  };
  // optional uint64 local_device_token = 3;
  bool has_local_device_token() const;
  private:
  bool _internal_has_local_device_token() const;
  public:
  void clear_local_device_token();
  ::PROTOBUF_NAMESPACE_ID::uint64 local_device_token() const;
  void set_local_device_token(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_local_device_token() const;
  void _internal_set_local_device_token(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 owner_account_id = 2;
  bool has_owner_account_id() const;
  private:
  bool _internal_has_owner_account_id() const;
  public:
  void clear_owner_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 owner_account_id() const;
  void set_owner_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_owner_account_id() const;
  void _internal_set_owner_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientAuthorizeLocalDeviceNotification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 local_device_token_;
  ::PROTOBUF_NAMESPACE_ID::uint32 owner_account_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientDeauthorizeDeviceRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientDeauthorizeDeviceRequest) */ {
 public:
  inline CMsgClientDeauthorizeDeviceRequest() : CMsgClientDeauthorizeDeviceRequest(nullptr) {}
  virtual ~CMsgClientDeauthorizeDeviceRequest();
  explicit constexpr CMsgClientDeauthorizeDeviceRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientDeauthorizeDeviceRequest(const CMsgClientDeauthorizeDeviceRequest& from);
  CMsgClientDeauthorizeDeviceRequest(CMsgClientDeauthorizeDeviceRequest&& from) noexcept
    : CMsgClientDeauthorizeDeviceRequest() {
    *this = ::std::move(from);
  }

  inline CMsgClientDeauthorizeDeviceRequest& operator=(const CMsgClientDeauthorizeDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientDeauthorizeDeviceRequest& operator=(CMsgClientDeauthorizeDeviceRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientDeauthorizeDeviceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientDeauthorizeDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientDeauthorizeDeviceRequest*>(
               &_CMsgClientDeauthorizeDeviceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  friend void swap(CMsgClientDeauthorizeDeviceRequest& a, CMsgClientDeauthorizeDeviceRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientDeauthorizeDeviceRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientDeauthorizeDeviceRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientDeauthorizeDeviceRequest* New() const final {
    return CreateMaybeMessage<CMsgClientDeauthorizeDeviceRequest>(nullptr);
  }

  CMsgClientDeauthorizeDeviceRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientDeauthorizeDeviceRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientDeauthorizeDeviceRequest& from);
  void MergeFrom(const CMsgClientDeauthorizeDeviceRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientDeauthorizeDeviceRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientDeauthorizeDeviceRequest";
  }
  protected:
  explicit CMsgClientDeauthorizeDeviceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeauthorizationDeviceTokenFieldNumber = 2,
    kDeauthorizationAccountIdFieldNumber = 1,
  };
  // optional uint64 deauthorization_device_token = 2;
  bool has_deauthorization_device_token() const;
  private:
  bool _internal_has_deauthorization_device_token() const;
  public:
  void clear_deauthorization_device_token();
  ::PROTOBUF_NAMESPACE_ID::uint64 deauthorization_device_token() const;
  void set_deauthorization_device_token(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_deauthorization_device_token() const;
  void _internal_set_deauthorization_device_token(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 deauthorization_account_id = 1;
  bool has_deauthorization_account_id() const;
  private:
  bool _internal_has_deauthorization_account_id() const;
  public:
  void clear_deauthorization_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 deauthorization_account_id() const;
  void set_deauthorization_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_deauthorization_account_id() const;
  void _internal_set_deauthorization_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientDeauthorizeDeviceRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 deauthorization_device_token_;
  ::PROTOBUF_NAMESPACE_ID::uint32 deauthorization_account_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientDeauthorizeDevice PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientDeauthorizeDevice) */ {
 public:
  inline CMsgClientDeauthorizeDevice() : CMsgClientDeauthorizeDevice(nullptr) {}
  virtual ~CMsgClientDeauthorizeDevice();
  explicit constexpr CMsgClientDeauthorizeDevice(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientDeauthorizeDevice(const CMsgClientDeauthorizeDevice& from);
  CMsgClientDeauthorizeDevice(CMsgClientDeauthorizeDevice&& from) noexcept
    : CMsgClientDeauthorizeDevice() {
    *this = ::std::move(from);
  }

  inline CMsgClientDeauthorizeDevice& operator=(const CMsgClientDeauthorizeDevice& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientDeauthorizeDevice& operator=(CMsgClientDeauthorizeDevice&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientDeauthorizeDevice& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientDeauthorizeDevice* internal_default_instance() {
    return reinterpret_cast<const CMsgClientDeauthorizeDevice*>(
               &_CMsgClientDeauthorizeDevice_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    101;

  friend void swap(CMsgClientDeauthorizeDevice& a, CMsgClientDeauthorizeDevice& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientDeauthorizeDevice* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientDeauthorizeDevice* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientDeauthorizeDevice* New() const final {
    return CreateMaybeMessage<CMsgClientDeauthorizeDevice>(nullptr);
  }

  CMsgClientDeauthorizeDevice* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientDeauthorizeDevice>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientDeauthorizeDevice& from);
  void MergeFrom(const CMsgClientDeauthorizeDevice& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientDeauthorizeDevice* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientDeauthorizeDevice";
  }
  protected:
  explicit CMsgClientDeauthorizeDevice(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeauthorizationAccountIdFieldNumber = 2,
    kEresultFieldNumber = 1,
  };
  // optional uint32 deauthorization_account_id = 2;
  bool has_deauthorization_account_id() const;
  private:
  bool _internal_has_deauthorization_account_id() const;
  public:
  void clear_deauthorization_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 deauthorization_account_id() const;
  void set_deauthorization_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_deauthorization_account_id() const;
  void _internal_set_deauthorization_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientDeauthorizeDevice)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 deauthorization_account_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUseLocalDeviceAuthorizations_DeviceToken PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUseLocalDeviceAuthorizations.DeviceToken) */ {
 public:
  inline CMsgClientUseLocalDeviceAuthorizations_DeviceToken() : CMsgClientUseLocalDeviceAuthorizations_DeviceToken(nullptr) {}
  virtual ~CMsgClientUseLocalDeviceAuthorizations_DeviceToken();
  explicit constexpr CMsgClientUseLocalDeviceAuthorizations_DeviceToken(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUseLocalDeviceAuthorizations_DeviceToken(const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& from);
  CMsgClientUseLocalDeviceAuthorizations_DeviceToken(CMsgClientUseLocalDeviceAuthorizations_DeviceToken&& from) noexcept
    : CMsgClientUseLocalDeviceAuthorizations_DeviceToken() {
    *this = ::std::move(from);
  }

  inline CMsgClientUseLocalDeviceAuthorizations_DeviceToken& operator=(const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUseLocalDeviceAuthorizations_DeviceToken& operator=(CMsgClientUseLocalDeviceAuthorizations_DeviceToken&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUseLocalDeviceAuthorizations_DeviceToken* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUseLocalDeviceAuthorizations_DeviceToken*>(
               &_CMsgClientUseLocalDeviceAuthorizations_DeviceToken_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  friend void swap(CMsgClientUseLocalDeviceAuthorizations_DeviceToken& a, CMsgClientUseLocalDeviceAuthorizations_DeviceToken& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUseLocalDeviceAuthorizations_DeviceToken* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUseLocalDeviceAuthorizations_DeviceToken* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUseLocalDeviceAuthorizations_DeviceToken* New() const final {
    return CreateMaybeMessage<CMsgClientUseLocalDeviceAuthorizations_DeviceToken>(nullptr);
  }

  CMsgClientUseLocalDeviceAuthorizations_DeviceToken* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUseLocalDeviceAuthorizations_DeviceToken>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& from);
  void MergeFrom(const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUseLocalDeviceAuthorizations_DeviceToken* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUseLocalDeviceAuthorizations.DeviceToken";
  }
  protected:
  explicit CMsgClientUseLocalDeviceAuthorizations_DeviceToken(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTokenIdFieldNumber = 2,
    kOwnerAccountIdFieldNumber = 1,
  };
  // optional uint64 token_id = 2;
  bool has_token_id() const;
  private:
  bool _internal_has_token_id() const;
  public:
  void clear_token_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 token_id() const;
  void set_token_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_token_id() const;
  void _internal_set_token_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 owner_account_id = 1;
  bool has_owner_account_id() const;
  private:
  bool _internal_has_owner_account_id() const;
  public:
  void clear_owner_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 owner_account_id() const;
  void set_owner_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_owner_account_id() const;
  void _internal_set_owner_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 token_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 owner_account_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUseLocalDeviceAuthorizations PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUseLocalDeviceAuthorizations) */ {
 public:
  inline CMsgClientUseLocalDeviceAuthorizations() : CMsgClientUseLocalDeviceAuthorizations(nullptr) {}
  virtual ~CMsgClientUseLocalDeviceAuthorizations();
  explicit constexpr CMsgClientUseLocalDeviceAuthorizations(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUseLocalDeviceAuthorizations(const CMsgClientUseLocalDeviceAuthorizations& from);
  CMsgClientUseLocalDeviceAuthorizations(CMsgClientUseLocalDeviceAuthorizations&& from) noexcept
    : CMsgClientUseLocalDeviceAuthorizations() {
    *this = ::std::move(from);
  }

  inline CMsgClientUseLocalDeviceAuthorizations& operator=(const CMsgClientUseLocalDeviceAuthorizations& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUseLocalDeviceAuthorizations& operator=(CMsgClientUseLocalDeviceAuthorizations&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUseLocalDeviceAuthorizations& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUseLocalDeviceAuthorizations* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUseLocalDeviceAuthorizations*>(
               &_CMsgClientUseLocalDeviceAuthorizations_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    103;

  friend void swap(CMsgClientUseLocalDeviceAuthorizations& a, CMsgClientUseLocalDeviceAuthorizations& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUseLocalDeviceAuthorizations* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUseLocalDeviceAuthorizations* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUseLocalDeviceAuthorizations* New() const final {
    return CreateMaybeMessage<CMsgClientUseLocalDeviceAuthorizations>(nullptr);
  }

  CMsgClientUseLocalDeviceAuthorizations* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUseLocalDeviceAuthorizations>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUseLocalDeviceAuthorizations& from);
  void MergeFrom(const CMsgClientUseLocalDeviceAuthorizations& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUseLocalDeviceAuthorizations* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUseLocalDeviceAuthorizations";
  }
  protected:
  explicit CMsgClientUseLocalDeviceAuthorizations(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientUseLocalDeviceAuthorizations_DeviceToken DeviceToken;

  // accessors -------------------------------------------------------

  enum : int {
    kAuthorizationAccountIdFieldNumber = 1,
    kDeviceTokensFieldNumber = 2,
  };
  // repeated uint32 authorization_account_id = 1;
  int authorization_account_id_size() const;
  private:
  int _internal_authorization_account_id_size() const;
  public:
  void clear_authorization_account_id();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_authorization_account_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_authorization_account_id() const;
  void _internal_add_authorization_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_authorization_account_id();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 authorization_account_id(int index) const;
  void set_authorization_account_id(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_authorization_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      authorization_account_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_authorization_account_id();

  // repeated .CMsgClientUseLocalDeviceAuthorizations.DeviceToken device_tokens = 2;
  int device_tokens_size() const;
  private:
  int _internal_device_tokens_size() const;
  public:
  void clear_device_tokens();
  ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken* mutable_device_tokens(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken >*
      mutable_device_tokens();
  private:
  const ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken& _internal_device_tokens(int index) const;
  ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken* _internal_add_device_tokens();
  public:
  const ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken& device_tokens(int index) const;
  ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken* add_device_tokens();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken >&
      device_tokens() const;

  // @@protoc_insertion_point(class_scope:CMsgClientUseLocalDeviceAuthorizations)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > authorization_account_id_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken > device_tokens_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientGetAuthorizedDevices PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientGetAuthorizedDevices) */ {
 public:
  inline CMsgClientGetAuthorizedDevices() : CMsgClientGetAuthorizedDevices(nullptr) {}
  virtual ~CMsgClientGetAuthorizedDevices();
  explicit constexpr CMsgClientGetAuthorizedDevices(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientGetAuthorizedDevices(const CMsgClientGetAuthorizedDevices& from);
  CMsgClientGetAuthorizedDevices(CMsgClientGetAuthorizedDevices&& from) noexcept
    : CMsgClientGetAuthorizedDevices() {
    *this = ::std::move(from);
  }

  inline CMsgClientGetAuthorizedDevices& operator=(const CMsgClientGetAuthorizedDevices& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientGetAuthorizedDevices& operator=(CMsgClientGetAuthorizedDevices&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientGetAuthorizedDevices& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientGetAuthorizedDevices* internal_default_instance() {
    return reinterpret_cast<const CMsgClientGetAuthorizedDevices*>(
               &_CMsgClientGetAuthorizedDevices_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    104;

  friend void swap(CMsgClientGetAuthorizedDevices& a, CMsgClientGetAuthorizedDevices& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientGetAuthorizedDevices* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientGetAuthorizedDevices* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientGetAuthorizedDevices* New() const final {
    return CreateMaybeMessage<CMsgClientGetAuthorizedDevices>(nullptr);
  }

  CMsgClientGetAuthorizedDevices* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientGetAuthorizedDevices>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientGetAuthorizedDevices& from);
  void MergeFrom(const CMsgClientGetAuthorizedDevices& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientGetAuthorizedDevices* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientGetAuthorizedDevices";
  }
  protected:
  explicit CMsgClientGetAuthorizedDevices(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientGetAuthorizedDevices)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice) */ {
 public:
  inline CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice() : CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice(nullptr) {}
  virtual ~CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice();
  explicit constexpr CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice(const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& from);
  CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice&& from) noexcept
    : CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice() {
    *this = ::std::move(from);
  }

  inline CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& operator=(const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& operator=(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* internal_default_instance() {
    return reinterpret_cast<const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice*>(
               &_CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    105;

  friend void swap(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& a, CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* New() const final {
    return CreateMaybeMessage<CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice>(nullptr);
  }

  CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& from);
  void MergeFrom(const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice";
  }
  protected:
  explicit CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeviceNameFieldNumber = 2,
    kAuthDeviceTokenFieldNumber = 1,
    kLastAccessTimeFieldNumber = 3,
    kBorrowerIdFieldNumber = 4,
    kIsPendingFieldNumber = 5,
    kAppPlayedFieldNumber = 6,
  };
  // optional string device_name = 2;
  bool has_device_name() const;
  private:
  bool _internal_has_device_name() const;
  public:
  void clear_device_name();
  const std::string& device_name() const;
  void set_device_name(const std::string& value);
  void set_device_name(std::string&& value);
  void set_device_name(const char* value);
  void set_device_name(const char* value, size_t size);
  std::string* mutable_device_name();
  std::string* release_device_name();
  void set_allocated_device_name(std::string* device_name);
  private:
  const std::string& _internal_device_name() const;
  void _internal_set_device_name(const std::string& value);
  std::string* _internal_mutable_device_name();
  public:

  // optional uint64 auth_device_token = 1;
  bool has_auth_device_token() const;
  private:
  bool _internal_has_auth_device_token() const;
  public:
  void clear_auth_device_token();
  ::PROTOBUF_NAMESPACE_ID::uint64 auth_device_token() const;
  void set_auth_device_token(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_auth_device_token() const;
  void _internal_set_auth_device_token(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 last_access_time = 3;
  bool has_last_access_time() const;
  private:
  bool _internal_has_last_access_time() const;
  public:
  void clear_last_access_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_access_time() const;
  void set_last_access_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_access_time() const;
  void _internal_set_last_access_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 borrower_id = 4;
  bool has_borrower_id() const;
  private:
  bool _internal_has_borrower_id() const;
  public:
  void clear_borrower_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 borrower_id() const;
  void set_borrower_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_borrower_id() const;
  void _internal_set_borrower_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool is_pending = 5;
  bool has_is_pending() const;
  private:
  bool _internal_has_is_pending() const;
  public:
  void clear_is_pending();
  bool is_pending() const;
  void set_is_pending(bool value);
  private:
  bool _internal_is_pending() const;
  void _internal_set_is_pending(bool value);
  public:

  // optional uint32 app_played = 6;
  bool has_app_played() const;
  private:
  bool _internal_has_app_played() const;
  public:
  void clear_app_played();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_played() const;
  void set_app_played(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_played() const;
  void _internal_set_app_played(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr device_name_;
  ::PROTOBUF_NAMESPACE_ID::uint64 auth_device_token_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_access_time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 borrower_id_;
  bool is_pending_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_played_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientGetAuthorizedDevicesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientGetAuthorizedDevicesResponse) */ {
 public:
  inline CMsgClientGetAuthorizedDevicesResponse() : CMsgClientGetAuthorizedDevicesResponse(nullptr) {}
  virtual ~CMsgClientGetAuthorizedDevicesResponse();
  explicit constexpr CMsgClientGetAuthorizedDevicesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientGetAuthorizedDevicesResponse(const CMsgClientGetAuthorizedDevicesResponse& from);
  CMsgClientGetAuthorizedDevicesResponse(CMsgClientGetAuthorizedDevicesResponse&& from) noexcept
    : CMsgClientGetAuthorizedDevicesResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientGetAuthorizedDevicesResponse& operator=(const CMsgClientGetAuthorizedDevicesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientGetAuthorizedDevicesResponse& operator=(CMsgClientGetAuthorizedDevicesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientGetAuthorizedDevicesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientGetAuthorizedDevicesResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientGetAuthorizedDevicesResponse*>(
               &_CMsgClientGetAuthorizedDevicesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    106;

  friend void swap(CMsgClientGetAuthorizedDevicesResponse& a, CMsgClientGetAuthorizedDevicesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientGetAuthorizedDevicesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientGetAuthorizedDevicesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientGetAuthorizedDevicesResponse* New() const final {
    return CreateMaybeMessage<CMsgClientGetAuthorizedDevicesResponse>(nullptr);
  }

  CMsgClientGetAuthorizedDevicesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientGetAuthorizedDevicesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientGetAuthorizedDevicesResponse& from);
  void MergeFrom(const CMsgClientGetAuthorizedDevicesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientGetAuthorizedDevicesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientGetAuthorizedDevicesResponse";
  }
  protected:
  explicit CMsgClientGetAuthorizedDevicesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice AuthorizedDevice;

  // accessors -------------------------------------------------------

  enum : int {
    kAuthorizedDeviceFieldNumber = 2,
    kEresultFieldNumber = 1,
  };
  // repeated .CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice authorized_device = 2;
  int authorized_device_size() const;
  private:
  int _internal_authorized_device_size() const;
  public:
  void clear_authorized_device();
  ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* mutable_authorized_device(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice >*
      mutable_authorized_device();
  private:
  const ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& _internal_authorized_device(int index) const;
  ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* _internal_add_authorized_device();
  public:
  const ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& authorized_device(int index) const;
  ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* add_authorized_device();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice >&
      authorized_device() const;

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientGetAuthorizedDevicesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice > authorized_device_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientSharedLibraryLockStatus_LockedLibrary PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientSharedLibraryLockStatus.LockedLibrary) */ {
 public:
  inline CMsgClientSharedLibraryLockStatus_LockedLibrary() : CMsgClientSharedLibraryLockStatus_LockedLibrary(nullptr) {}
  virtual ~CMsgClientSharedLibraryLockStatus_LockedLibrary();
  explicit constexpr CMsgClientSharedLibraryLockStatus_LockedLibrary(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientSharedLibraryLockStatus_LockedLibrary(const CMsgClientSharedLibraryLockStatus_LockedLibrary& from);
  CMsgClientSharedLibraryLockStatus_LockedLibrary(CMsgClientSharedLibraryLockStatus_LockedLibrary&& from) noexcept
    : CMsgClientSharedLibraryLockStatus_LockedLibrary() {
    *this = ::std::move(from);
  }

  inline CMsgClientSharedLibraryLockStatus_LockedLibrary& operator=(const CMsgClientSharedLibraryLockStatus_LockedLibrary& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientSharedLibraryLockStatus_LockedLibrary& operator=(CMsgClientSharedLibraryLockStatus_LockedLibrary&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientSharedLibraryLockStatus_LockedLibrary& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientSharedLibraryLockStatus_LockedLibrary* internal_default_instance() {
    return reinterpret_cast<const CMsgClientSharedLibraryLockStatus_LockedLibrary*>(
               &_CMsgClientSharedLibraryLockStatus_LockedLibrary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    107;

  friend void swap(CMsgClientSharedLibraryLockStatus_LockedLibrary& a, CMsgClientSharedLibraryLockStatus_LockedLibrary& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientSharedLibraryLockStatus_LockedLibrary* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientSharedLibraryLockStatus_LockedLibrary* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientSharedLibraryLockStatus_LockedLibrary* New() const final {
    return CreateMaybeMessage<CMsgClientSharedLibraryLockStatus_LockedLibrary>(nullptr);
  }

  CMsgClientSharedLibraryLockStatus_LockedLibrary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientSharedLibraryLockStatus_LockedLibrary>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientSharedLibraryLockStatus_LockedLibrary& from);
  void MergeFrom(const CMsgClientSharedLibraryLockStatus_LockedLibrary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientSharedLibraryLockStatus_LockedLibrary* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientSharedLibraryLockStatus.LockedLibrary";
  }
  protected:
  explicit CMsgClientSharedLibraryLockStatus_LockedLibrary(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOwnerIdFieldNumber = 1,
    kLockedByFieldNumber = 2,
  };
  // optional uint32 owner_id = 1;
  bool has_owner_id() const;
  private:
  bool _internal_has_owner_id() const;
  public:
  void clear_owner_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 owner_id() const;
  void set_owner_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_owner_id() const;
  void _internal_set_owner_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 locked_by = 2;
  bool has_locked_by() const;
  private:
  bool _internal_has_locked_by() const;
  public:
  void clear_locked_by();
  ::PROTOBUF_NAMESPACE_ID::uint32 locked_by() const;
  void set_locked_by(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_locked_by() const;
  void _internal_set_locked_by(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientSharedLibraryLockStatus.LockedLibrary)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 owner_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 locked_by_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientSharedLibraryLockStatus PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientSharedLibraryLockStatus) */ {
 public:
  inline CMsgClientSharedLibraryLockStatus() : CMsgClientSharedLibraryLockStatus(nullptr) {}
  virtual ~CMsgClientSharedLibraryLockStatus();
  explicit constexpr CMsgClientSharedLibraryLockStatus(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientSharedLibraryLockStatus(const CMsgClientSharedLibraryLockStatus& from);
  CMsgClientSharedLibraryLockStatus(CMsgClientSharedLibraryLockStatus&& from) noexcept
    : CMsgClientSharedLibraryLockStatus() {
    *this = ::std::move(from);
  }

  inline CMsgClientSharedLibraryLockStatus& operator=(const CMsgClientSharedLibraryLockStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientSharedLibraryLockStatus& operator=(CMsgClientSharedLibraryLockStatus&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientSharedLibraryLockStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientSharedLibraryLockStatus* internal_default_instance() {
    return reinterpret_cast<const CMsgClientSharedLibraryLockStatus*>(
               &_CMsgClientSharedLibraryLockStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    108;

  friend void swap(CMsgClientSharedLibraryLockStatus& a, CMsgClientSharedLibraryLockStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientSharedLibraryLockStatus* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientSharedLibraryLockStatus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientSharedLibraryLockStatus* New() const final {
    return CreateMaybeMessage<CMsgClientSharedLibraryLockStatus>(nullptr);
  }

  CMsgClientSharedLibraryLockStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientSharedLibraryLockStatus>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientSharedLibraryLockStatus& from);
  void MergeFrom(const CMsgClientSharedLibraryLockStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientSharedLibraryLockStatus* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientSharedLibraryLockStatus";
  }
  protected:
  explicit CMsgClientSharedLibraryLockStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientSharedLibraryLockStatus_LockedLibrary LockedLibrary;

  // accessors -------------------------------------------------------

  enum : int {
    kLockedLibraryFieldNumber = 1,
    kOwnLibraryLockedByFieldNumber = 2,
  };
  // repeated .CMsgClientSharedLibraryLockStatus.LockedLibrary locked_library = 1;
  int locked_library_size() const;
  private:
  int _internal_locked_library_size() const;
  public:
  void clear_locked_library();
  ::CMsgClientSharedLibraryLockStatus_LockedLibrary* mutable_locked_library(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientSharedLibraryLockStatus_LockedLibrary >*
      mutable_locked_library();
  private:
  const ::CMsgClientSharedLibraryLockStatus_LockedLibrary& _internal_locked_library(int index) const;
  ::CMsgClientSharedLibraryLockStatus_LockedLibrary* _internal_add_locked_library();
  public:
  const ::CMsgClientSharedLibraryLockStatus_LockedLibrary& locked_library(int index) const;
  ::CMsgClientSharedLibraryLockStatus_LockedLibrary* add_locked_library();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientSharedLibraryLockStatus_LockedLibrary >&
      locked_library() const;

  // optional uint32 own_library_locked_by = 2;
  bool has_own_library_locked_by() const;
  private:
  bool _internal_has_own_library_locked_by() const;
  public:
  void clear_own_library_locked_by();
  ::PROTOBUF_NAMESPACE_ID::uint32 own_library_locked_by() const;
  void set_own_library_locked_by(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_own_library_locked_by() const;
  void _internal_set_own_library_locked_by(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientSharedLibraryLockStatus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientSharedLibraryLockStatus_LockedLibrary > locked_library_;
  ::PROTOBUF_NAMESPACE_ID::uint32 own_library_locked_by_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientSharedLibraryStopPlaying_StopApp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientSharedLibraryStopPlaying.StopApp) */ {
 public:
  inline CMsgClientSharedLibraryStopPlaying_StopApp() : CMsgClientSharedLibraryStopPlaying_StopApp(nullptr) {}
  virtual ~CMsgClientSharedLibraryStopPlaying_StopApp();
  explicit constexpr CMsgClientSharedLibraryStopPlaying_StopApp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientSharedLibraryStopPlaying_StopApp(const CMsgClientSharedLibraryStopPlaying_StopApp& from);
  CMsgClientSharedLibraryStopPlaying_StopApp(CMsgClientSharedLibraryStopPlaying_StopApp&& from) noexcept
    : CMsgClientSharedLibraryStopPlaying_StopApp() {
    *this = ::std::move(from);
  }

  inline CMsgClientSharedLibraryStopPlaying_StopApp& operator=(const CMsgClientSharedLibraryStopPlaying_StopApp& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientSharedLibraryStopPlaying_StopApp& operator=(CMsgClientSharedLibraryStopPlaying_StopApp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientSharedLibraryStopPlaying_StopApp& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientSharedLibraryStopPlaying_StopApp* internal_default_instance() {
    return reinterpret_cast<const CMsgClientSharedLibraryStopPlaying_StopApp*>(
               &_CMsgClientSharedLibraryStopPlaying_StopApp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    109;

  friend void swap(CMsgClientSharedLibraryStopPlaying_StopApp& a, CMsgClientSharedLibraryStopPlaying_StopApp& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientSharedLibraryStopPlaying_StopApp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientSharedLibraryStopPlaying_StopApp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientSharedLibraryStopPlaying_StopApp* New() const final {
    return CreateMaybeMessage<CMsgClientSharedLibraryStopPlaying_StopApp>(nullptr);
  }

  CMsgClientSharedLibraryStopPlaying_StopApp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientSharedLibraryStopPlaying_StopApp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientSharedLibraryStopPlaying_StopApp& from);
  void MergeFrom(const CMsgClientSharedLibraryStopPlaying_StopApp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientSharedLibraryStopPlaying_StopApp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientSharedLibraryStopPlaying.StopApp";
  }
  protected:
  explicit CMsgClientSharedLibraryStopPlaying_StopApp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppIdFieldNumber = 1,
    kOwnerIdFieldNumber = 2,
  };
  // optional uint32 app_id = 1;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 owner_id = 2;
  bool has_owner_id() const;
  private:
  bool _internal_has_owner_id() const;
  public:
  void clear_owner_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 owner_id() const;
  void set_owner_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_owner_id() const;
  void _internal_set_owner_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientSharedLibraryStopPlaying.StopApp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 owner_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientSharedLibraryStopPlaying PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientSharedLibraryStopPlaying) */ {
 public:
  inline CMsgClientSharedLibraryStopPlaying() : CMsgClientSharedLibraryStopPlaying(nullptr) {}
  virtual ~CMsgClientSharedLibraryStopPlaying();
  explicit constexpr CMsgClientSharedLibraryStopPlaying(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientSharedLibraryStopPlaying(const CMsgClientSharedLibraryStopPlaying& from);
  CMsgClientSharedLibraryStopPlaying(CMsgClientSharedLibraryStopPlaying&& from) noexcept
    : CMsgClientSharedLibraryStopPlaying() {
    *this = ::std::move(from);
  }

  inline CMsgClientSharedLibraryStopPlaying& operator=(const CMsgClientSharedLibraryStopPlaying& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientSharedLibraryStopPlaying& operator=(CMsgClientSharedLibraryStopPlaying&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientSharedLibraryStopPlaying& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientSharedLibraryStopPlaying* internal_default_instance() {
    return reinterpret_cast<const CMsgClientSharedLibraryStopPlaying*>(
               &_CMsgClientSharedLibraryStopPlaying_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    110;

  friend void swap(CMsgClientSharedLibraryStopPlaying& a, CMsgClientSharedLibraryStopPlaying& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientSharedLibraryStopPlaying* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientSharedLibraryStopPlaying* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientSharedLibraryStopPlaying* New() const final {
    return CreateMaybeMessage<CMsgClientSharedLibraryStopPlaying>(nullptr);
  }

  CMsgClientSharedLibraryStopPlaying* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientSharedLibraryStopPlaying>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientSharedLibraryStopPlaying& from);
  void MergeFrom(const CMsgClientSharedLibraryStopPlaying& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientSharedLibraryStopPlaying* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientSharedLibraryStopPlaying";
  }
  protected:
  explicit CMsgClientSharedLibraryStopPlaying(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientSharedLibraryStopPlaying_StopApp StopApp;

  // accessors -------------------------------------------------------

  enum : int {
    kStopAppsFieldNumber = 2,
    kSecondsLeftFieldNumber = 1,
  };
  // repeated .CMsgClientSharedLibraryStopPlaying.StopApp stop_apps = 2;
  int stop_apps_size() const;
  private:
  int _internal_stop_apps_size() const;
  public:
  void clear_stop_apps();
  ::CMsgClientSharedLibraryStopPlaying_StopApp* mutable_stop_apps(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientSharedLibraryStopPlaying_StopApp >*
      mutable_stop_apps();
  private:
  const ::CMsgClientSharedLibraryStopPlaying_StopApp& _internal_stop_apps(int index) const;
  ::CMsgClientSharedLibraryStopPlaying_StopApp* _internal_add_stop_apps();
  public:
  const ::CMsgClientSharedLibraryStopPlaying_StopApp& stop_apps(int index) const;
  ::CMsgClientSharedLibraryStopPlaying_StopApp* add_stop_apps();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientSharedLibraryStopPlaying_StopApp >&
      stop_apps() const;

  // optional int32 seconds_left = 1;
  bool has_seconds_left() const;
  private:
  bool _internal_has_seconds_left() const;
  public:
  void clear_seconds_left();
  ::PROTOBUF_NAMESPACE_ID::int32 seconds_left() const;
  void set_seconds_left(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_seconds_left() const;
  void _internal_set_seconds_left(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientSharedLibraryStopPlaying)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientSharedLibraryStopPlaying_StopApp > stop_apps_;
  ::PROTOBUF_NAMESPACE_ID::int32 seconds_left_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientServiceCall PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientServiceCall) */ {
 public:
  inline CMsgClientServiceCall() : CMsgClientServiceCall(nullptr) {}
  virtual ~CMsgClientServiceCall();
  explicit constexpr CMsgClientServiceCall(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientServiceCall(const CMsgClientServiceCall& from);
  CMsgClientServiceCall(CMsgClientServiceCall&& from) noexcept
    : CMsgClientServiceCall() {
    *this = ::std::move(from);
  }

  inline CMsgClientServiceCall& operator=(const CMsgClientServiceCall& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientServiceCall& operator=(CMsgClientServiceCall&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientServiceCall& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientServiceCall* internal_default_instance() {
    return reinterpret_cast<const CMsgClientServiceCall*>(
               &_CMsgClientServiceCall_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    111;

  friend void swap(CMsgClientServiceCall& a, CMsgClientServiceCall& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientServiceCall* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientServiceCall* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientServiceCall* New() const final {
    return CreateMaybeMessage<CMsgClientServiceCall>(nullptr);
  }

  CMsgClientServiceCall* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientServiceCall>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientServiceCall& from);
  void MergeFrom(const CMsgClientServiceCall& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientServiceCall* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientServiceCall";
  }
  protected:
  explicit CMsgClientServiceCall(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSysidRoutingFieldNumber = 1,
    kModuleHashFieldNumber = 4,
    kCallparameterFieldNumber = 8,
    kCallHandleFieldNumber = 2,
    kModuleCrcFieldNumber = 3,
    kFunctionIdFieldNumber = 5,
    kCubOutputMaxFieldNumber = 6,
    kFlagsFieldNumber = 7,
    kPingOnlyFieldNumber = 9,
    kMaxOutstandingCallsFieldNumber = 10,
    kAppIdFieldNumber = 11,
  };
  // optional bytes sysid_routing = 1;
  bool has_sysid_routing() const;
  private:
  bool _internal_has_sysid_routing() const;
  public:
  void clear_sysid_routing();
  const std::string& sysid_routing() const;
  void set_sysid_routing(const std::string& value);
  void set_sysid_routing(std::string&& value);
  void set_sysid_routing(const char* value);
  void set_sysid_routing(const void* value, size_t size);
  std::string* mutable_sysid_routing();
  std::string* release_sysid_routing();
  void set_allocated_sysid_routing(std::string* sysid_routing);
  private:
  const std::string& _internal_sysid_routing() const;
  void _internal_set_sysid_routing(const std::string& value);
  std::string* _internal_mutable_sysid_routing();
  public:

  // optional bytes module_hash = 4;
  bool has_module_hash() const;
  private:
  bool _internal_has_module_hash() const;
  public:
  void clear_module_hash();
  const std::string& module_hash() const;
  void set_module_hash(const std::string& value);
  void set_module_hash(std::string&& value);
  void set_module_hash(const char* value);
  void set_module_hash(const void* value, size_t size);
  std::string* mutable_module_hash();
  std::string* release_module_hash();
  void set_allocated_module_hash(std::string* module_hash);
  private:
  const std::string& _internal_module_hash() const;
  void _internal_set_module_hash(const std::string& value);
  std::string* _internal_mutable_module_hash();
  public:

  // optional bytes callparameter = 8;
  bool has_callparameter() const;
  private:
  bool _internal_has_callparameter() const;
  public:
  void clear_callparameter();
  const std::string& callparameter() const;
  void set_callparameter(const std::string& value);
  void set_callparameter(std::string&& value);
  void set_callparameter(const char* value);
  void set_callparameter(const void* value, size_t size);
  std::string* mutable_callparameter();
  std::string* release_callparameter();
  void set_allocated_callparameter(std::string* callparameter);
  private:
  const std::string& _internal_callparameter() const;
  void _internal_set_callparameter(const std::string& value);
  std::string* _internal_mutable_callparameter();
  public:

  // optional uint32 call_handle = 2;
  bool has_call_handle() const;
  private:
  bool _internal_has_call_handle() const;
  public:
  void clear_call_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 call_handle() const;
  void set_call_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_call_handle() const;
  void _internal_set_call_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 module_crc = 3;
  bool has_module_crc() const;
  private:
  bool _internal_has_module_crc() const;
  public:
  void clear_module_crc();
  ::PROTOBUF_NAMESPACE_ID::uint32 module_crc() const;
  void set_module_crc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_module_crc() const;
  void _internal_set_module_crc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 function_id = 5;
  bool has_function_id() const;
  private:
  bool _internal_has_function_id() const;
  public:
  void clear_function_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 function_id() const;
  void set_function_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_function_id() const;
  void _internal_set_function_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 cub_output_max = 6;
  bool has_cub_output_max() const;
  private:
  bool _internal_has_cub_output_max() const;
  public:
  void clear_cub_output_max();
  ::PROTOBUF_NAMESPACE_ID::uint32 cub_output_max() const;
  void set_cub_output_max(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cub_output_max() const;
  void _internal_set_cub_output_max(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 flags = 7;
  bool has_flags() const;
  private:
  bool _internal_has_flags() const;
  public:
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::uint32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flags() const;
  void _internal_set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool ping_only = 9;
  bool has_ping_only() const;
  private:
  bool _internal_has_ping_only() const;
  public:
  void clear_ping_only();
  bool ping_only() const;
  void set_ping_only(bool value);
  private:
  bool _internal_ping_only() const;
  void _internal_set_ping_only(bool value);
  public:

  // optional uint32 max_outstanding_calls = 10;
  bool has_max_outstanding_calls() const;
  private:
  bool _internal_has_max_outstanding_calls() const;
  public:
  void clear_max_outstanding_calls();
  ::PROTOBUF_NAMESPACE_ID::uint32 max_outstanding_calls() const;
  void set_max_outstanding_calls(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_max_outstanding_calls() const;
  void _internal_set_max_outstanding_calls(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 app_id = 11;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientServiceCall)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sysid_routing_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr module_hash_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr callparameter_;
  ::PROTOBUF_NAMESPACE_ID::uint32 call_handle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 module_crc_;
  ::PROTOBUF_NAMESPACE_ID::uint32 function_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cub_output_max_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flags_;
  bool ping_only_;
  ::PROTOBUF_NAMESPACE_ID::uint32 max_outstanding_calls_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientServiceModule PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientServiceModule) */ {
 public:
  inline CMsgClientServiceModule() : CMsgClientServiceModule(nullptr) {}
  virtual ~CMsgClientServiceModule();
  explicit constexpr CMsgClientServiceModule(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientServiceModule(const CMsgClientServiceModule& from);
  CMsgClientServiceModule(CMsgClientServiceModule&& from) noexcept
    : CMsgClientServiceModule() {
    *this = ::std::move(from);
  }

  inline CMsgClientServiceModule& operator=(const CMsgClientServiceModule& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientServiceModule& operator=(CMsgClientServiceModule&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientServiceModule& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientServiceModule* internal_default_instance() {
    return reinterpret_cast<const CMsgClientServiceModule*>(
               &_CMsgClientServiceModule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    112;

  friend void swap(CMsgClientServiceModule& a, CMsgClientServiceModule& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientServiceModule* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientServiceModule* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientServiceModule* New() const final {
    return CreateMaybeMessage<CMsgClientServiceModule>(nullptr);
  }

  CMsgClientServiceModule* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientServiceModule>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientServiceModule& from);
  void MergeFrom(const CMsgClientServiceModule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientServiceModule* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientServiceModule";
  }
  protected:
  explicit CMsgClientServiceModule(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModuleHashFieldNumber = 2,
    kModuleContentFieldNumber = 3,
    kModuleCrcFieldNumber = 1,
  };
  // optional bytes module_hash = 2;
  bool has_module_hash() const;
  private:
  bool _internal_has_module_hash() const;
  public:
  void clear_module_hash();
  const std::string& module_hash() const;
  void set_module_hash(const std::string& value);
  void set_module_hash(std::string&& value);
  void set_module_hash(const char* value);
  void set_module_hash(const void* value, size_t size);
  std::string* mutable_module_hash();
  std::string* release_module_hash();
  void set_allocated_module_hash(std::string* module_hash);
  private:
  const std::string& _internal_module_hash() const;
  void _internal_set_module_hash(const std::string& value);
  std::string* _internal_mutable_module_hash();
  public:

  // optional bytes module_content = 3;
  bool has_module_content() const;
  private:
  bool _internal_has_module_content() const;
  public:
  void clear_module_content();
  const std::string& module_content() const;
  void set_module_content(const std::string& value);
  void set_module_content(std::string&& value);
  void set_module_content(const char* value);
  void set_module_content(const void* value, size_t size);
  std::string* mutable_module_content();
  std::string* release_module_content();
  void set_allocated_module_content(std::string* module_content);
  private:
  const std::string& _internal_module_content() const;
  void _internal_set_module_content(const std::string& value);
  std::string* _internal_mutable_module_content();
  public:

  // optional uint32 module_crc = 1;
  bool has_module_crc() const;
  private:
  bool _internal_has_module_crc() const;
  public:
  void clear_module_crc();
  ::PROTOBUF_NAMESPACE_ID::uint32 module_crc() const;
  void set_module_crc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_module_crc() const;
  void _internal_set_module_crc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientServiceModule)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr module_hash_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr module_content_;
  ::PROTOBUF_NAMESPACE_ID::uint32 module_crc_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientServiceCallResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientServiceCallResponse) */ {
 public:
  inline CMsgClientServiceCallResponse() : CMsgClientServiceCallResponse(nullptr) {}
  virtual ~CMsgClientServiceCallResponse();
  explicit constexpr CMsgClientServiceCallResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientServiceCallResponse(const CMsgClientServiceCallResponse& from);
  CMsgClientServiceCallResponse(CMsgClientServiceCallResponse&& from) noexcept
    : CMsgClientServiceCallResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientServiceCallResponse& operator=(const CMsgClientServiceCallResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientServiceCallResponse& operator=(CMsgClientServiceCallResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientServiceCallResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientServiceCallResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientServiceCallResponse*>(
               &_CMsgClientServiceCallResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    113;

  friend void swap(CMsgClientServiceCallResponse& a, CMsgClientServiceCallResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientServiceCallResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientServiceCallResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientServiceCallResponse* New() const final {
    return CreateMaybeMessage<CMsgClientServiceCallResponse>(nullptr);
  }

  CMsgClientServiceCallResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientServiceCallResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientServiceCallResponse& from);
  void MergeFrom(const CMsgClientServiceCallResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientServiceCallResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientServiceCallResponse";
  }
  protected:
  explicit CMsgClientServiceCallResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSysidRoutingFieldNumber = 1,
    kModuleHashFieldNumber = 4,
    kResultContentFieldNumber = 6,
    kOsVersionInfoFieldNumber = 7,
    kSystemInfoFieldNumber = 8,
    kExceptionRecordFieldNumber = 10,
    kPortableOsVersionInfoFieldNumber = 11,
    kPortableSystemInfoFieldNumber = 12,
    kLastCallSysidRoutingFieldNumber = 18,
    kCallHandleFieldNumber = 2,
    kModuleCrcFieldNumber = 3,
    kLoadAddressFieldNumber = 9,
    kEcallresultFieldNumber = 5,
    kWasConvertedFieldNumber = 13,
    kInternalResultFieldNumber = 14,
    kCurrentCountFieldNumber = 15,
    kLastCallHandleFieldNumber = 16,
    kLastCallModuleCrcFieldNumber = 17,
    kLastEcallresultFieldNumber = 19,
    kLastCallissueDeltaFieldNumber = 20,
    kLastCallcompleteDeltaFieldNumber = 21,
  };
  // optional bytes sysid_routing = 1;
  bool has_sysid_routing() const;
  private:
  bool _internal_has_sysid_routing() const;
  public:
  void clear_sysid_routing();
  const std::string& sysid_routing() const;
  void set_sysid_routing(const std::string& value);
  void set_sysid_routing(std::string&& value);
  void set_sysid_routing(const char* value);
  void set_sysid_routing(const void* value, size_t size);
  std::string* mutable_sysid_routing();
  std::string* release_sysid_routing();
  void set_allocated_sysid_routing(std::string* sysid_routing);
  private:
  const std::string& _internal_sysid_routing() const;
  void _internal_set_sysid_routing(const std::string& value);
  std::string* _internal_mutable_sysid_routing();
  public:

  // optional bytes module_hash = 4;
  bool has_module_hash() const;
  private:
  bool _internal_has_module_hash() const;
  public:
  void clear_module_hash();
  const std::string& module_hash() const;
  void set_module_hash(const std::string& value);
  void set_module_hash(std::string&& value);
  void set_module_hash(const char* value);
  void set_module_hash(const void* value, size_t size);
  std::string* mutable_module_hash();
  std::string* release_module_hash();
  void set_allocated_module_hash(std::string* module_hash);
  private:
  const std::string& _internal_module_hash() const;
  void _internal_set_module_hash(const std::string& value);
  std::string* _internal_mutable_module_hash();
  public:

  // optional bytes result_content = 6;
  bool has_result_content() const;
  private:
  bool _internal_has_result_content() const;
  public:
  void clear_result_content();
  const std::string& result_content() const;
  void set_result_content(const std::string& value);
  void set_result_content(std::string&& value);
  void set_result_content(const char* value);
  void set_result_content(const void* value, size_t size);
  std::string* mutable_result_content();
  std::string* release_result_content();
  void set_allocated_result_content(std::string* result_content);
  private:
  const std::string& _internal_result_content() const;
  void _internal_set_result_content(const std::string& value);
  std::string* _internal_mutable_result_content();
  public:

  // optional bytes os_version_info = 7;
  bool has_os_version_info() const;
  private:
  bool _internal_has_os_version_info() const;
  public:
  void clear_os_version_info();
  const std::string& os_version_info() const;
  void set_os_version_info(const std::string& value);
  void set_os_version_info(std::string&& value);
  void set_os_version_info(const char* value);
  void set_os_version_info(const void* value, size_t size);
  std::string* mutable_os_version_info();
  std::string* release_os_version_info();
  void set_allocated_os_version_info(std::string* os_version_info);
  private:
  const std::string& _internal_os_version_info() const;
  void _internal_set_os_version_info(const std::string& value);
  std::string* _internal_mutable_os_version_info();
  public:

  // optional bytes system_info = 8;
  bool has_system_info() const;
  private:
  bool _internal_has_system_info() const;
  public:
  void clear_system_info();
  const std::string& system_info() const;
  void set_system_info(const std::string& value);
  void set_system_info(std::string&& value);
  void set_system_info(const char* value);
  void set_system_info(const void* value, size_t size);
  std::string* mutable_system_info();
  std::string* release_system_info();
  void set_allocated_system_info(std::string* system_info);
  private:
  const std::string& _internal_system_info() const;
  void _internal_set_system_info(const std::string& value);
  std::string* _internal_mutable_system_info();
  public:

  // optional bytes exception_record = 10;
  bool has_exception_record() const;
  private:
  bool _internal_has_exception_record() const;
  public:
  void clear_exception_record();
  const std::string& exception_record() const;
  void set_exception_record(const std::string& value);
  void set_exception_record(std::string&& value);
  void set_exception_record(const char* value);
  void set_exception_record(const void* value, size_t size);
  std::string* mutable_exception_record();
  std::string* release_exception_record();
  void set_allocated_exception_record(std::string* exception_record);
  private:
  const std::string& _internal_exception_record() const;
  void _internal_set_exception_record(const std::string& value);
  std::string* _internal_mutable_exception_record();
  public:

  // optional bytes portable_os_version_info = 11;
  bool has_portable_os_version_info() const;
  private:
  bool _internal_has_portable_os_version_info() const;
  public:
  void clear_portable_os_version_info();
  const std::string& portable_os_version_info() const;
  void set_portable_os_version_info(const std::string& value);
  void set_portable_os_version_info(std::string&& value);
  void set_portable_os_version_info(const char* value);
  void set_portable_os_version_info(const void* value, size_t size);
  std::string* mutable_portable_os_version_info();
  std::string* release_portable_os_version_info();
  void set_allocated_portable_os_version_info(std::string* portable_os_version_info);
  private:
  const std::string& _internal_portable_os_version_info() const;
  void _internal_set_portable_os_version_info(const std::string& value);
  std::string* _internal_mutable_portable_os_version_info();
  public:

  // optional bytes portable_system_info = 12;
  bool has_portable_system_info() const;
  private:
  bool _internal_has_portable_system_info() const;
  public:
  void clear_portable_system_info();
  const std::string& portable_system_info() const;
  void set_portable_system_info(const std::string& value);
  void set_portable_system_info(std::string&& value);
  void set_portable_system_info(const char* value);
  void set_portable_system_info(const void* value, size_t size);
  std::string* mutable_portable_system_info();
  std::string* release_portable_system_info();
  void set_allocated_portable_system_info(std::string* portable_system_info);
  private:
  const std::string& _internal_portable_system_info() const;
  void _internal_set_portable_system_info(const std::string& value);
  std::string* _internal_mutable_portable_system_info();
  public:

  // optional bytes last_call_sysid_routing = 18;
  bool has_last_call_sysid_routing() const;
  private:
  bool _internal_has_last_call_sysid_routing() const;
  public:
  void clear_last_call_sysid_routing();
  const std::string& last_call_sysid_routing() const;
  void set_last_call_sysid_routing(const std::string& value);
  void set_last_call_sysid_routing(std::string&& value);
  void set_last_call_sysid_routing(const char* value);
  void set_last_call_sysid_routing(const void* value, size_t size);
  std::string* mutable_last_call_sysid_routing();
  std::string* release_last_call_sysid_routing();
  void set_allocated_last_call_sysid_routing(std::string* last_call_sysid_routing);
  private:
  const std::string& _internal_last_call_sysid_routing() const;
  void _internal_set_last_call_sysid_routing(const std::string& value);
  std::string* _internal_mutable_last_call_sysid_routing();
  public:

  // optional uint32 call_handle = 2;
  bool has_call_handle() const;
  private:
  bool _internal_has_call_handle() const;
  public:
  void clear_call_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 call_handle() const;
  void set_call_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_call_handle() const;
  void _internal_set_call_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 module_crc = 3;
  bool has_module_crc() const;
  private:
  bool _internal_has_module_crc() const;
  public:
  void clear_module_crc();
  ::PROTOBUF_NAMESPACE_ID::uint32 module_crc() const;
  void set_module_crc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_module_crc() const;
  void _internal_set_module_crc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed64 load_address = 9;
  bool has_load_address() const;
  private:
  bool _internal_has_load_address() const;
  public:
  void clear_load_address();
  ::PROTOBUF_NAMESPACE_ID::uint64 load_address() const;
  void set_load_address(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_load_address() const;
  void _internal_set_load_address(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 ecallresult = 5;
  bool has_ecallresult() const;
  private:
  bool _internal_has_ecallresult() const;
  public:
  void clear_ecallresult();
  ::PROTOBUF_NAMESPACE_ID::uint32 ecallresult() const;
  void set_ecallresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ecallresult() const;
  void _internal_set_ecallresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool was_converted = 13;
  bool has_was_converted() const;
  private:
  bool _internal_has_was_converted() const;
  public:
  void clear_was_converted();
  bool was_converted() const;
  void set_was_converted(bool value);
  private:
  bool _internal_was_converted() const;
  void _internal_set_was_converted(bool value);
  public:

  // optional uint32 internal_result = 14;
  bool has_internal_result() const;
  private:
  bool _internal_has_internal_result() const;
  public:
  void clear_internal_result();
  ::PROTOBUF_NAMESPACE_ID::uint32 internal_result() const;
  void set_internal_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_internal_result() const;
  void _internal_set_internal_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 current_count = 15;
  bool has_current_count() const;
  private:
  bool _internal_has_current_count() const;
  public:
  void clear_current_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 current_count() const;
  void set_current_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_current_count() const;
  void _internal_set_current_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 last_call_handle = 16;
  bool has_last_call_handle() const;
  private:
  bool _internal_has_last_call_handle() const;
  public:
  void clear_last_call_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_call_handle() const;
  void set_last_call_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_call_handle() const;
  void _internal_set_last_call_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 last_call_module_crc = 17;
  bool has_last_call_module_crc() const;
  private:
  bool _internal_has_last_call_module_crc() const;
  public:
  void clear_last_call_module_crc();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_call_module_crc() const;
  void set_last_call_module_crc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_call_module_crc() const;
  void _internal_set_last_call_module_crc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 last_ecallresult = 19;
  bool has_last_ecallresult() const;
  private:
  bool _internal_has_last_ecallresult() const;
  public:
  void clear_last_ecallresult();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_ecallresult() const;
  void set_last_ecallresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_ecallresult() const;
  void _internal_set_last_ecallresult(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 last_callissue_delta = 20;
  bool has_last_callissue_delta() const;
  private:
  bool _internal_has_last_callissue_delta() const;
  public:
  void clear_last_callissue_delta();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_callissue_delta() const;
  void set_last_callissue_delta(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_callissue_delta() const;
  void _internal_set_last_callissue_delta(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 last_callcomplete_delta = 21;
  bool has_last_callcomplete_delta() const;
  private:
  bool _internal_has_last_callcomplete_delta() const;
  public:
  void clear_last_callcomplete_delta();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_callcomplete_delta() const;
  void set_last_callcomplete_delta(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_callcomplete_delta() const;
  void _internal_set_last_callcomplete_delta(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientServiceCallResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sysid_routing_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr module_hash_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr result_content_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr os_version_info_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr system_info_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr exception_record_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr portable_os_version_info_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr portable_system_info_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr last_call_sysid_routing_;
  ::PROTOBUF_NAMESPACE_ID::uint32 call_handle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 module_crc_;
  ::PROTOBUF_NAMESPACE_ID::uint64 load_address_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ecallresult_;
  bool was_converted_;
  ::PROTOBUF_NAMESPACE_ID::uint32 internal_result_;
  ::PROTOBUF_NAMESPACE_ID::uint32 current_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_call_handle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_call_module_crc_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_ecallresult_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_callissue_delta_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_callcomplete_delta_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgAMUnlockH264 PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAMUnlockH264) */ {
 public:
  inline CMsgAMUnlockH264() : CMsgAMUnlockH264(nullptr) {}
  virtual ~CMsgAMUnlockH264();
  explicit constexpr CMsgAMUnlockH264(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAMUnlockH264(const CMsgAMUnlockH264& from);
  CMsgAMUnlockH264(CMsgAMUnlockH264&& from) noexcept
    : CMsgAMUnlockH264() {
    *this = ::std::move(from);
  }

  inline CMsgAMUnlockH264& operator=(const CMsgAMUnlockH264& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAMUnlockH264& operator=(CMsgAMUnlockH264&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgAMUnlockH264& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAMUnlockH264* internal_default_instance() {
    return reinterpret_cast<const CMsgAMUnlockH264*>(
               &_CMsgAMUnlockH264_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    114;

  friend void swap(CMsgAMUnlockH264& a, CMsgAMUnlockH264& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAMUnlockH264* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAMUnlockH264* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgAMUnlockH264* New() const final {
    return CreateMaybeMessage<CMsgAMUnlockH264>(nullptr);
  }

  CMsgAMUnlockH264* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAMUnlockH264>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgAMUnlockH264& from);
  void MergeFrom(const CMsgAMUnlockH264& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAMUnlockH264* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAMUnlockH264";
  }
  protected:
  explicit CMsgAMUnlockH264(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppidFieldNumber = 1,
    kPlatformFieldNumber = 2,
    kReasonFieldNumber = 3,
  };
  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 platform = 2;
  bool has_platform() const;
  private:
  bool _internal_has_platform() const;
  public:
  void clear_platform();
  ::PROTOBUF_NAMESPACE_ID::int32 platform() const;
  void set_platform(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_platform() const;
  void _internal_set_platform(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 reason = 3;
  bool has_reason() const;
  private:
  bool _internal_has_reason() const;
  public:
  void clear_reason();
  ::PROTOBUF_NAMESPACE_ID::int32 reason() const;
  void set_reason(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_reason() const;
  void _internal_set_reason(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgAMUnlockH264)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  ::PROTOBUF_NAMESPACE_ID::int32 platform_;
  ::PROTOBUF_NAMESPACE_ID::int32 reason_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgAMUnlockH264Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAMUnlockH264Response) */ {
 public:
  inline CMsgAMUnlockH264Response() : CMsgAMUnlockH264Response(nullptr) {}
  virtual ~CMsgAMUnlockH264Response();
  explicit constexpr CMsgAMUnlockH264Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAMUnlockH264Response(const CMsgAMUnlockH264Response& from);
  CMsgAMUnlockH264Response(CMsgAMUnlockH264Response&& from) noexcept
    : CMsgAMUnlockH264Response() {
    *this = ::std::move(from);
  }

  inline CMsgAMUnlockH264Response& operator=(const CMsgAMUnlockH264Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAMUnlockH264Response& operator=(CMsgAMUnlockH264Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgAMUnlockH264Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAMUnlockH264Response* internal_default_instance() {
    return reinterpret_cast<const CMsgAMUnlockH264Response*>(
               &_CMsgAMUnlockH264Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    115;

  friend void swap(CMsgAMUnlockH264Response& a, CMsgAMUnlockH264Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAMUnlockH264Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAMUnlockH264Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgAMUnlockH264Response* New() const final {
    return CreateMaybeMessage<CMsgAMUnlockH264Response>(nullptr);
  }

  CMsgAMUnlockH264Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAMUnlockH264Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgAMUnlockH264Response& from);
  void MergeFrom(const CMsgAMUnlockH264Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAMUnlockH264Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAMUnlockH264Response";
  }
  protected:
  explicit CMsgAMUnlockH264Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEncryptionKeyFieldNumber = 2,
    kEresultFieldNumber = 1,
  };
  // optional bytes encryption_key = 2;
  bool has_encryption_key() const;
  private:
  bool _internal_has_encryption_key() const;
  public:
  void clear_encryption_key();
  const std::string& encryption_key() const;
  void set_encryption_key(const std::string& value);
  void set_encryption_key(std::string&& value);
  void set_encryption_key(const char* value);
  void set_encryption_key(const void* value, size_t size);
  std::string* mutable_encryption_key();
  std::string* release_encryption_key();
  void set_allocated_encryption_key(std::string* encryption_key);
  private:
  const std::string& _internal_encryption_key() const;
  void _internal_set_encryption_key(const std::string& value);
  std::string* _internal_mutable_encryption_key();
  public:

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgAMUnlockH264Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr encryption_key_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientPlayingSessionState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientPlayingSessionState) */ {
 public:
  inline CMsgClientPlayingSessionState() : CMsgClientPlayingSessionState(nullptr) {}
  virtual ~CMsgClientPlayingSessionState();
  explicit constexpr CMsgClientPlayingSessionState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientPlayingSessionState(const CMsgClientPlayingSessionState& from);
  CMsgClientPlayingSessionState(CMsgClientPlayingSessionState&& from) noexcept
    : CMsgClientPlayingSessionState() {
    *this = ::std::move(from);
  }

  inline CMsgClientPlayingSessionState& operator=(const CMsgClientPlayingSessionState& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientPlayingSessionState& operator=(CMsgClientPlayingSessionState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientPlayingSessionState& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientPlayingSessionState* internal_default_instance() {
    return reinterpret_cast<const CMsgClientPlayingSessionState*>(
               &_CMsgClientPlayingSessionState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    116;

  friend void swap(CMsgClientPlayingSessionState& a, CMsgClientPlayingSessionState& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientPlayingSessionState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientPlayingSessionState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientPlayingSessionState* New() const final {
    return CreateMaybeMessage<CMsgClientPlayingSessionState>(nullptr);
  }

  CMsgClientPlayingSessionState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientPlayingSessionState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientPlayingSessionState& from);
  void MergeFrom(const CMsgClientPlayingSessionState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientPlayingSessionState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientPlayingSessionState";
  }
  protected:
  explicit CMsgClientPlayingSessionState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayingBlockedFieldNumber = 2,
    kPlayingAppFieldNumber = 3,
  };
  // optional bool playing_blocked = 2;
  bool has_playing_blocked() const;
  private:
  bool _internal_has_playing_blocked() const;
  public:
  void clear_playing_blocked();
  bool playing_blocked() const;
  void set_playing_blocked(bool value);
  private:
  bool _internal_playing_blocked() const;
  void _internal_set_playing_blocked(bool value);
  public:

  // optional uint32 playing_app = 3;
  bool has_playing_app() const;
  private:
  bool _internal_has_playing_app() const;
  public:
  void clear_playing_app();
  ::PROTOBUF_NAMESPACE_ID::uint32 playing_app() const;
  void set_playing_app(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_playing_app() const;
  void _internal_set_playing_app(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientPlayingSessionState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool playing_blocked_;
  ::PROTOBUF_NAMESPACE_ID::uint32 playing_app_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientKickPlayingSession PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientKickPlayingSession) */ {
 public:
  inline CMsgClientKickPlayingSession() : CMsgClientKickPlayingSession(nullptr) {}
  virtual ~CMsgClientKickPlayingSession();
  explicit constexpr CMsgClientKickPlayingSession(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientKickPlayingSession(const CMsgClientKickPlayingSession& from);
  CMsgClientKickPlayingSession(CMsgClientKickPlayingSession&& from) noexcept
    : CMsgClientKickPlayingSession() {
    *this = ::std::move(from);
  }

  inline CMsgClientKickPlayingSession& operator=(const CMsgClientKickPlayingSession& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientKickPlayingSession& operator=(CMsgClientKickPlayingSession&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientKickPlayingSession& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientKickPlayingSession* internal_default_instance() {
    return reinterpret_cast<const CMsgClientKickPlayingSession*>(
               &_CMsgClientKickPlayingSession_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    117;

  friend void swap(CMsgClientKickPlayingSession& a, CMsgClientKickPlayingSession& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientKickPlayingSession* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientKickPlayingSession* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientKickPlayingSession* New() const final {
    return CreateMaybeMessage<CMsgClientKickPlayingSession>(nullptr);
  }

  CMsgClientKickPlayingSession* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientKickPlayingSession>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientKickPlayingSession& from);
  void MergeFrom(const CMsgClientKickPlayingSession& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientKickPlayingSession* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientKickPlayingSession";
  }
  protected:
  explicit CMsgClientKickPlayingSession(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOnlyStopGameFieldNumber = 1,
  };
  // optional bool only_stop_game = 1;
  bool has_only_stop_game() const;
  private:
  bool _internal_has_only_stop_game() const;
  public:
  void clear_only_stop_game();
  bool only_stop_game() const;
  void set_only_stop_game(bool value);
  private:
  bool _internal_only_stop_game() const;
  void _internal_set_only_stop_game(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientKickPlayingSession)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool only_stop_game_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientVoiceCallPreAuthorize PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientVoiceCallPreAuthorize) */ {
 public:
  inline CMsgClientVoiceCallPreAuthorize() : CMsgClientVoiceCallPreAuthorize(nullptr) {}
  virtual ~CMsgClientVoiceCallPreAuthorize();
  explicit constexpr CMsgClientVoiceCallPreAuthorize(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientVoiceCallPreAuthorize(const CMsgClientVoiceCallPreAuthorize& from);
  CMsgClientVoiceCallPreAuthorize(CMsgClientVoiceCallPreAuthorize&& from) noexcept
    : CMsgClientVoiceCallPreAuthorize() {
    *this = ::std::move(from);
  }

  inline CMsgClientVoiceCallPreAuthorize& operator=(const CMsgClientVoiceCallPreAuthorize& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientVoiceCallPreAuthorize& operator=(CMsgClientVoiceCallPreAuthorize&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientVoiceCallPreAuthorize& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientVoiceCallPreAuthorize* internal_default_instance() {
    return reinterpret_cast<const CMsgClientVoiceCallPreAuthorize*>(
               &_CMsgClientVoiceCallPreAuthorize_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    118;

  friend void swap(CMsgClientVoiceCallPreAuthorize& a, CMsgClientVoiceCallPreAuthorize& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientVoiceCallPreAuthorize* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientVoiceCallPreAuthorize* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientVoiceCallPreAuthorize* New() const final {
    return CreateMaybeMessage<CMsgClientVoiceCallPreAuthorize>(nullptr);
  }

  CMsgClientVoiceCallPreAuthorize* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientVoiceCallPreAuthorize>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientVoiceCallPreAuthorize& from);
  void MergeFrom(const CMsgClientVoiceCallPreAuthorize& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientVoiceCallPreAuthorize* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientVoiceCallPreAuthorize";
  }
  protected:
  explicit CMsgClientVoiceCallPreAuthorize(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCallerSteamidFieldNumber = 1,
    kReceiverSteamidFieldNumber = 2,
    kCallerIdFieldNumber = 3,
    kHangupFieldNumber = 4,
  };
  // optional fixed64 caller_steamid = 1;
  bool has_caller_steamid() const;
  private:
  bool _internal_has_caller_steamid() const;
  public:
  void clear_caller_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 caller_steamid() const;
  void set_caller_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_caller_steamid() const;
  void _internal_set_caller_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 receiver_steamid = 2;
  bool has_receiver_steamid() const;
  private:
  bool _internal_has_receiver_steamid() const;
  public:
  void clear_receiver_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 receiver_steamid() const;
  void set_receiver_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_receiver_steamid() const;
  void _internal_set_receiver_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional int32 caller_id = 3;
  bool has_caller_id() const;
  private:
  bool _internal_has_caller_id() const;
  public:
  void clear_caller_id();
  ::PROTOBUF_NAMESPACE_ID::int32 caller_id() const;
  void set_caller_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_caller_id() const;
  void _internal_set_caller_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool hangup = 4;
  bool has_hangup() const;
  private:
  bool _internal_has_hangup() const;
  public:
  void clear_hangup();
  bool hangup() const;
  void set_hangup(bool value);
  private:
  bool _internal_hangup() const;
  void _internal_set_hangup(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientVoiceCallPreAuthorize)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 caller_steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 receiver_steamid_;
  ::PROTOBUF_NAMESPACE_ID::int32 caller_id_;
  bool hangup_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientVoiceCallPreAuthorizeResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientVoiceCallPreAuthorizeResponse) */ {
 public:
  inline CMsgClientVoiceCallPreAuthorizeResponse() : CMsgClientVoiceCallPreAuthorizeResponse(nullptr) {}
  virtual ~CMsgClientVoiceCallPreAuthorizeResponse();
  explicit constexpr CMsgClientVoiceCallPreAuthorizeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientVoiceCallPreAuthorizeResponse(const CMsgClientVoiceCallPreAuthorizeResponse& from);
  CMsgClientVoiceCallPreAuthorizeResponse(CMsgClientVoiceCallPreAuthorizeResponse&& from) noexcept
    : CMsgClientVoiceCallPreAuthorizeResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientVoiceCallPreAuthorizeResponse& operator=(const CMsgClientVoiceCallPreAuthorizeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientVoiceCallPreAuthorizeResponse& operator=(CMsgClientVoiceCallPreAuthorizeResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientVoiceCallPreAuthorizeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientVoiceCallPreAuthorizeResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientVoiceCallPreAuthorizeResponse*>(
               &_CMsgClientVoiceCallPreAuthorizeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    119;

  friend void swap(CMsgClientVoiceCallPreAuthorizeResponse& a, CMsgClientVoiceCallPreAuthorizeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientVoiceCallPreAuthorizeResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientVoiceCallPreAuthorizeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientVoiceCallPreAuthorizeResponse* New() const final {
    return CreateMaybeMessage<CMsgClientVoiceCallPreAuthorizeResponse>(nullptr);
  }

  CMsgClientVoiceCallPreAuthorizeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientVoiceCallPreAuthorizeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientVoiceCallPreAuthorizeResponse& from);
  void MergeFrom(const CMsgClientVoiceCallPreAuthorizeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientVoiceCallPreAuthorizeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientVoiceCallPreAuthorizeResponse";
  }
  protected:
  explicit CMsgClientVoiceCallPreAuthorizeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCallerSteamidFieldNumber = 1,
    kReceiverSteamidFieldNumber = 2,
    kCallerIdFieldNumber = 4,
    kEresultFieldNumber = 3,
  };
  // optional fixed64 caller_steamid = 1;
  bool has_caller_steamid() const;
  private:
  bool _internal_has_caller_steamid() const;
  public:
  void clear_caller_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 caller_steamid() const;
  void set_caller_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_caller_steamid() const;
  void _internal_set_caller_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 receiver_steamid = 2;
  bool has_receiver_steamid() const;
  private:
  bool _internal_has_receiver_steamid() const;
  public:
  void clear_receiver_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 receiver_steamid() const;
  void set_receiver_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_receiver_steamid() const;
  void _internal_set_receiver_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional int32 caller_id = 4;
  bool has_caller_id() const;
  private:
  bool _internal_has_caller_id() const;
  public:
  void clear_caller_id();
  ::PROTOBUF_NAMESPACE_ID::int32 caller_id() const;
  void set_caller_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_caller_id() const;
  void _internal_set_caller_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 eresult = 3 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientVoiceCallPreAuthorizeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 caller_steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 receiver_steamid_;
  ::PROTOBUF_NAMESPACE_ID::int32 caller_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgBadgeCraftedNotification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBadgeCraftedNotification) */ {
 public:
  inline CMsgBadgeCraftedNotification() : CMsgBadgeCraftedNotification(nullptr) {}
  virtual ~CMsgBadgeCraftedNotification();
  explicit constexpr CMsgBadgeCraftedNotification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBadgeCraftedNotification(const CMsgBadgeCraftedNotification& from);
  CMsgBadgeCraftedNotification(CMsgBadgeCraftedNotification&& from) noexcept
    : CMsgBadgeCraftedNotification() {
    *this = ::std::move(from);
  }

  inline CMsgBadgeCraftedNotification& operator=(const CMsgBadgeCraftedNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBadgeCraftedNotification& operator=(CMsgBadgeCraftedNotification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBadgeCraftedNotification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBadgeCraftedNotification* internal_default_instance() {
    return reinterpret_cast<const CMsgBadgeCraftedNotification*>(
               &_CMsgBadgeCraftedNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    120;

  friend void swap(CMsgBadgeCraftedNotification& a, CMsgBadgeCraftedNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBadgeCraftedNotification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBadgeCraftedNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBadgeCraftedNotification* New() const final {
    return CreateMaybeMessage<CMsgBadgeCraftedNotification>(nullptr);
  }

  CMsgBadgeCraftedNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBadgeCraftedNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBadgeCraftedNotification& from);
  void MergeFrom(const CMsgBadgeCraftedNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBadgeCraftedNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBadgeCraftedNotification";
  }
  protected:
  explicit CMsgBadgeCraftedNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppidFieldNumber = 1,
    kBadgeLevelFieldNumber = 2,
  };
  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 badge_level = 2;
  bool has_badge_level() const;
  private:
  bool _internal_has_badge_level() const;
  public:
  void clear_badge_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 badge_level() const;
  void set_badge_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_badge_level() const;
  void _internal_set_badge_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBadgeCraftedNotification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 badge_level_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientStartPeerContentServer PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientStartPeerContentServer) */ {
 public:
  inline CMsgClientStartPeerContentServer() : CMsgClientStartPeerContentServer(nullptr) {}
  virtual ~CMsgClientStartPeerContentServer();
  explicit constexpr CMsgClientStartPeerContentServer(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientStartPeerContentServer(const CMsgClientStartPeerContentServer& from);
  CMsgClientStartPeerContentServer(CMsgClientStartPeerContentServer&& from) noexcept
    : CMsgClientStartPeerContentServer() {
    *this = ::std::move(from);
  }

  inline CMsgClientStartPeerContentServer& operator=(const CMsgClientStartPeerContentServer& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientStartPeerContentServer& operator=(CMsgClientStartPeerContentServer&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientStartPeerContentServer& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientStartPeerContentServer* internal_default_instance() {
    return reinterpret_cast<const CMsgClientStartPeerContentServer*>(
               &_CMsgClientStartPeerContentServer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    121;

  friend void swap(CMsgClientStartPeerContentServer& a, CMsgClientStartPeerContentServer& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientStartPeerContentServer* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientStartPeerContentServer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientStartPeerContentServer* New() const final {
    return CreateMaybeMessage<CMsgClientStartPeerContentServer>(nullptr);
  }

  CMsgClientStartPeerContentServer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientStartPeerContentServer>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientStartPeerContentServer& from);
  void MergeFrom(const CMsgClientStartPeerContentServer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientStartPeerContentServer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientStartPeerContentServer";
  }
  protected:
  explicit CMsgClientStartPeerContentServer(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamidFieldNumber = 1,
    kClientRemoteIdFieldNumber = 2,
    kAppIdFieldNumber = 3,
    kCurrentBuildIdFieldNumber = 4,
  };
  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 client_remote_id = 2;
  bool has_client_remote_id() const;
  private:
  bool _internal_has_client_remote_id() const;
  public:
  void clear_client_remote_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 client_remote_id() const;
  void set_client_remote_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_client_remote_id() const;
  void _internal_set_client_remote_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 app_id = 3;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 current_build_id = 4;
  bool has_current_build_id() const;
  private:
  bool _internal_has_current_build_id() const;
  public:
  void clear_current_build_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 current_build_id() const;
  void set_current_build_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_current_build_id() const;
  void _internal_set_current_build_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientStartPeerContentServer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 client_remote_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 current_build_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientStartPeerContentServerResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientStartPeerContentServerResponse) */ {
 public:
  inline CMsgClientStartPeerContentServerResponse() : CMsgClientStartPeerContentServerResponse(nullptr) {}
  virtual ~CMsgClientStartPeerContentServerResponse();
  explicit constexpr CMsgClientStartPeerContentServerResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientStartPeerContentServerResponse(const CMsgClientStartPeerContentServerResponse& from);
  CMsgClientStartPeerContentServerResponse(CMsgClientStartPeerContentServerResponse&& from) noexcept
    : CMsgClientStartPeerContentServerResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientStartPeerContentServerResponse& operator=(const CMsgClientStartPeerContentServerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientStartPeerContentServerResponse& operator=(CMsgClientStartPeerContentServerResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientStartPeerContentServerResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientStartPeerContentServerResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientStartPeerContentServerResponse*>(
               &_CMsgClientStartPeerContentServerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    122;

  friend void swap(CMsgClientStartPeerContentServerResponse& a, CMsgClientStartPeerContentServerResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientStartPeerContentServerResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientStartPeerContentServerResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientStartPeerContentServerResponse* New() const final {
    return CreateMaybeMessage<CMsgClientStartPeerContentServerResponse>(nullptr);
  }

  CMsgClientStartPeerContentServerResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientStartPeerContentServerResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientStartPeerContentServerResponse& from);
  void MergeFrom(const CMsgClientStartPeerContentServerResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientStartPeerContentServerResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientStartPeerContentServerResponse";
  }
  protected:
  explicit CMsgClientStartPeerContentServerResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInstalledDepotsFieldNumber = 3,
    kResultFieldNumber = 1,
    kServerPortFieldNumber = 2,
    kAccessTokenFieldNumber = 4,
  };
  // repeated uint32 installed_depots = 3;
  int installed_depots_size() const;
  private:
  int _internal_installed_depots_size() const;
  public:
  void clear_installed_depots();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_installed_depots(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_installed_depots() const;
  void _internal_add_installed_depots(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_installed_depots();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 installed_depots(int index) const;
  void set_installed_depots(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_installed_depots(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      installed_depots() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_installed_depots();

  // optional uint32 result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::uint32 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_result() const;
  void _internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 server_port = 2;
  bool has_server_port() const;
  private:
  bool _internal_has_server_port() const;
  public:
  void clear_server_port();
  ::PROTOBUF_NAMESPACE_ID::uint32 server_port() const;
  void set_server_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_server_port() const;
  void _internal_set_server_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 access_token = 4;
  bool has_access_token() const;
  private:
  bool _internal_has_access_token() const;
  public:
  void clear_access_token();
  ::PROTOBUF_NAMESPACE_ID::uint64 access_token() const;
  void set_access_token(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_access_token() const;
  void _internal_set_access_token(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientStartPeerContentServerResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > installed_depots_;
  ::PROTOBUF_NAMESPACE_ID::uint32 result_;
  ::PROTOBUF_NAMESPACE_ID::uint32 server_port_;
  ::PROTOBUF_NAMESPACE_ID::uint64 access_token_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientGetPeerContentInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientGetPeerContentInfo) */ {
 public:
  inline CMsgClientGetPeerContentInfo() : CMsgClientGetPeerContentInfo(nullptr) {}
  virtual ~CMsgClientGetPeerContentInfo();
  explicit constexpr CMsgClientGetPeerContentInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientGetPeerContentInfo(const CMsgClientGetPeerContentInfo& from);
  CMsgClientGetPeerContentInfo(CMsgClientGetPeerContentInfo&& from) noexcept
    : CMsgClientGetPeerContentInfo() {
    *this = ::std::move(from);
  }

  inline CMsgClientGetPeerContentInfo& operator=(const CMsgClientGetPeerContentInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientGetPeerContentInfo& operator=(CMsgClientGetPeerContentInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientGetPeerContentInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientGetPeerContentInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgClientGetPeerContentInfo*>(
               &_CMsgClientGetPeerContentInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    123;

  friend void swap(CMsgClientGetPeerContentInfo& a, CMsgClientGetPeerContentInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientGetPeerContentInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientGetPeerContentInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientGetPeerContentInfo* New() const final {
    return CreateMaybeMessage<CMsgClientGetPeerContentInfo>(nullptr);
  }

  CMsgClientGetPeerContentInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientGetPeerContentInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientGetPeerContentInfo& from);
  void MergeFrom(const CMsgClientGetPeerContentInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientGetPeerContentInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientGetPeerContentInfo";
  }
  protected:
  explicit CMsgClientGetPeerContentInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamidFieldNumber = 1,
    kClientRemoteIdFieldNumber = 2,
    kOwnedGamesVisibleFieldNumber = 3,
  };
  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 client_remote_id = 2;
  bool has_client_remote_id() const;
  private:
  bool _internal_has_client_remote_id() const;
  public:
  void clear_client_remote_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 client_remote_id() const;
  void set_client_remote_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_client_remote_id() const;
  void _internal_set_client_remote_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool owned_games_visible = 3;
  bool has_owned_games_visible() const;
  private:
  bool _internal_has_owned_games_visible() const;
  public:
  void clear_owned_games_visible();
  bool owned_games_visible() const;
  void set_owned_games_visible(bool value);
  private:
  bool _internal_owned_games_visible() const;
  void _internal_set_owned_games_visible(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientGetPeerContentInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 client_remote_id_;
  bool owned_games_visible_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientGetPeerContentInfoResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientGetPeerContentInfoResponse) */ {
 public:
  inline CMsgClientGetPeerContentInfoResponse() : CMsgClientGetPeerContentInfoResponse(nullptr) {}
  virtual ~CMsgClientGetPeerContentInfoResponse();
  explicit constexpr CMsgClientGetPeerContentInfoResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientGetPeerContentInfoResponse(const CMsgClientGetPeerContentInfoResponse& from);
  CMsgClientGetPeerContentInfoResponse(CMsgClientGetPeerContentInfoResponse&& from) noexcept
    : CMsgClientGetPeerContentInfoResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientGetPeerContentInfoResponse& operator=(const CMsgClientGetPeerContentInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientGetPeerContentInfoResponse& operator=(CMsgClientGetPeerContentInfoResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientGetPeerContentInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientGetPeerContentInfoResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientGetPeerContentInfoResponse*>(
               &_CMsgClientGetPeerContentInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    124;

  friend void swap(CMsgClientGetPeerContentInfoResponse& a, CMsgClientGetPeerContentInfoResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientGetPeerContentInfoResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientGetPeerContentInfoResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientGetPeerContentInfoResponse* New() const final {
    return CreateMaybeMessage<CMsgClientGetPeerContentInfoResponse>(nullptr);
  }

  CMsgClientGetPeerContentInfoResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientGetPeerContentInfoResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientGetPeerContentInfoResponse& from);
  void MergeFrom(const CMsgClientGetPeerContentInfoResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientGetPeerContentInfoResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientGetPeerContentInfoResponse";
  }
  protected:
  explicit CMsgClientGetPeerContentInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppsFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated uint32 apps = 2;
  int apps_size() const;
  private:
  int _internal_apps_size() const;
  public:
  void clear_apps();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_apps(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_apps() const;
  void _internal_add_apps(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_apps();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 apps(int index) const;
  void set_apps(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_apps(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      apps() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_apps();

  // optional uint32 result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::uint32 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_result() const;
  void _internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientGetPeerContentInfoResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > apps_;
  ::PROTOBUF_NAMESPACE_ID::uint32 result_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientPendingGameLaunch PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientPendingGameLaunch) */ {
 public:
  inline CMsgClientPendingGameLaunch() : CMsgClientPendingGameLaunch(nullptr) {}
  virtual ~CMsgClientPendingGameLaunch();
  explicit constexpr CMsgClientPendingGameLaunch(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientPendingGameLaunch(const CMsgClientPendingGameLaunch& from);
  CMsgClientPendingGameLaunch(CMsgClientPendingGameLaunch&& from) noexcept
    : CMsgClientPendingGameLaunch() {
    *this = ::std::move(from);
  }

  inline CMsgClientPendingGameLaunch& operator=(const CMsgClientPendingGameLaunch& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientPendingGameLaunch& operator=(CMsgClientPendingGameLaunch&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientPendingGameLaunch& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientPendingGameLaunch* internal_default_instance() {
    return reinterpret_cast<const CMsgClientPendingGameLaunch*>(
               &_CMsgClientPendingGameLaunch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    125;

  friend void swap(CMsgClientPendingGameLaunch& a, CMsgClientPendingGameLaunch& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientPendingGameLaunch* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientPendingGameLaunch* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientPendingGameLaunch* New() const final {
    return CreateMaybeMessage<CMsgClientPendingGameLaunch>(nullptr);
  }

  CMsgClientPendingGameLaunch* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientPendingGameLaunch>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientPendingGameLaunch& from);
  void MergeFrom(const CMsgClientPendingGameLaunch& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientPendingGameLaunch* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientPendingGameLaunch";
  }
  protected:
  explicit CMsgClientPendingGameLaunch(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppIdFieldNumber = 1,
  };
  // optional uint32 app_id = 1;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientPendingGameLaunch)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientPendingGameLaunchResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientPendingGameLaunchResponse) */ {
 public:
  inline CMsgClientPendingGameLaunchResponse() : CMsgClientPendingGameLaunchResponse(nullptr) {}
  virtual ~CMsgClientPendingGameLaunchResponse();
  explicit constexpr CMsgClientPendingGameLaunchResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientPendingGameLaunchResponse(const CMsgClientPendingGameLaunchResponse& from);
  CMsgClientPendingGameLaunchResponse(CMsgClientPendingGameLaunchResponse&& from) noexcept
    : CMsgClientPendingGameLaunchResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientPendingGameLaunchResponse& operator=(const CMsgClientPendingGameLaunchResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientPendingGameLaunchResponse& operator=(CMsgClientPendingGameLaunchResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientPendingGameLaunchResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientPendingGameLaunchResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientPendingGameLaunchResponse*>(
               &_CMsgClientPendingGameLaunchResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    126;

  friend void swap(CMsgClientPendingGameLaunchResponse& a, CMsgClientPendingGameLaunchResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientPendingGameLaunchResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientPendingGameLaunchResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientPendingGameLaunchResponse* New() const final {
    return CreateMaybeMessage<CMsgClientPendingGameLaunchResponse>(nullptr);
  }

  CMsgClientPendingGameLaunchResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientPendingGameLaunchResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientPendingGameLaunchResponse& from);
  void MergeFrom(const CMsgClientPendingGameLaunchResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientPendingGameLaunchResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientPendingGameLaunchResponse";
  }
  protected:
  explicit CMsgClientPendingGameLaunchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5f2_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEnvkeyFieldNumber = 3,
    kAppIdFieldNumber = 2,
    kEresultFieldNumber = 1,
  };
  // optional string envkey = 3;
  bool has_envkey() const;
  private:
  bool _internal_has_envkey() const;
  public:
  void clear_envkey();
  const std::string& envkey() const;
  void set_envkey(const std::string& value);
  void set_envkey(std::string&& value);
  void set_envkey(const char* value);
  void set_envkey(const char* value, size_t size);
  std::string* mutable_envkey();
  std::string* release_envkey();
  void set_allocated_envkey(std::string* envkey);
  private:
  const std::string& _internal_envkey() const;
  void _internal_set_envkey(const std::string& value);
  std::string* _internal_mutable_envkey();
  public:

  // optional uint32 app_id = 2;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientPendingGameLaunchResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr envkey_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5f2_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMsgClientUpdateUserGameInfo

// optional fixed64 steamid_idgs = 1;
inline bool CMsgClientUpdateUserGameInfo::_internal_has_steamid_idgs() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUpdateUserGameInfo::has_steamid_idgs() const {
  return _internal_has_steamid_idgs();
}
inline void CMsgClientUpdateUserGameInfo::clear_steamid_idgs() {
  steamid_idgs_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUpdateUserGameInfo::_internal_steamid_idgs() const {
  return steamid_idgs_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUpdateUserGameInfo::steamid_idgs() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateUserGameInfo.steamid_idgs)
  return _internal_steamid_idgs();
}
inline void CMsgClientUpdateUserGameInfo::_internal_set_steamid_idgs(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_idgs_ = value;
}
inline void CMsgClientUpdateUserGameInfo::set_steamid_idgs(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid_idgs(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateUserGameInfo.steamid_idgs)
}

// optional fixed64 gameid = 2;
inline bool CMsgClientUpdateUserGameInfo::_internal_has_gameid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientUpdateUserGameInfo::has_gameid() const {
  return _internal_has_gameid();
}
inline void CMsgClientUpdateUserGameInfo::clear_gameid() {
  gameid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUpdateUserGameInfo::_internal_gameid() const {
  return gameid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUpdateUserGameInfo::gameid() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateUserGameInfo.gameid)
  return _internal_gameid();
}
inline void CMsgClientUpdateUserGameInfo::_internal_set_gameid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  gameid_ = value;
}
inline void CMsgClientUpdateUserGameInfo::set_gameid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateUserGameInfo.gameid)
}

// optional uint32 game_ip = 3;
inline bool CMsgClientUpdateUserGameInfo::_internal_has_game_ip() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientUpdateUserGameInfo::has_game_ip() const {
  return _internal_has_game_ip();
}
inline void CMsgClientUpdateUserGameInfo::clear_game_ip() {
  game_ip_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateUserGameInfo::_internal_game_ip() const {
  return game_ip_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateUserGameInfo::game_ip() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateUserGameInfo.game_ip)
  return _internal_game_ip();
}
inline void CMsgClientUpdateUserGameInfo::_internal_set_game_ip(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  game_ip_ = value;
}
inline void CMsgClientUpdateUserGameInfo::set_game_ip(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_game_ip(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateUserGameInfo.game_ip)
}

// optional uint32 game_port = 4;
inline bool CMsgClientUpdateUserGameInfo::_internal_has_game_port() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientUpdateUserGameInfo::has_game_port() const {
  return _internal_has_game_port();
}
inline void CMsgClientUpdateUserGameInfo::clear_game_port() {
  game_port_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateUserGameInfo::_internal_game_port() const {
  return game_port_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateUserGameInfo::game_port() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateUserGameInfo.game_port)
  return _internal_game_port();
}
inline void CMsgClientUpdateUserGameInfo::_internal_set_game_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  game_port_ = value;
}
inline void CMsgClientUpdateUserGameInfo::set_game_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_game_port(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateUserGameInfo.game_port)
}

// optional bytes token = 5;
inline bool CMsgClientUpdateUserGameInfo::_internal_has_token() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUpdateUserGameInfo::has_token() const {
  return _internal_has_token();
}
inline void CMsgClientUpdateUserGameInfo::clear_token() {
  token_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientUpdateUserGameInfo::token() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateUserGameInfo.token)
  return _internal_token();
}
inline void CMsgClientUpdateUserGameInfo::set_token(const std::string& value) {
  _internal_set_token(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateUserGameInfo.token)
}
inline std::string* CMsgClientUpdateUserGameInfo::mutable_token() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUpdateUserGameInfo.token)
  return _internal_mutable_token();
}
inline const std::string& CMsgClientUpdateUserGameInfo::_internal_token() const {
  return token_.Get();
}
inline void CMsgClientUpdateUserGameInfo::_internal_set_token(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUpdateUserGameInfo::set_token(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUpdateUserGameInfo.token)
}
inline void CMsgClientUpdateUserGameInfo::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUpdateUserGameInfo.token)
}
inline void CMsgClientUpdateUserGameInfo::set_token(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUpdateUserGameInfo.token)
}
inline std::string* CMsgClientUpdateUserGameInfo::_internal_mutable_token() {
  _has_bits_[0] |= 0x00000001u;
  return token_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUpdateUserGameInfo::release_token() {
  // @@protoc_insertion_point(field_release:CMsgClientUpdateUserGameInfo.token)
  if (!_internal_has_token()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return token_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUpdateUserGameInfo::set_allocated_token(std::string* token) {
  if (token != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  token_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), token,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUpdateUserGameInfo.token)
}

// -------------------------------------------------------------------

// CMsgClientRichPresenceUpload

// optional bytes rich_presence_kv = 1;
inline bool CMsgClientRichPresenceUpload::_internal_has_rich_presence_kv() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientRichPresenceUpload::has_rich_presence_kv() const {
  return _internal_has_rich_presence_kv();
}
inline void CMsgClientRichPresenceUpload::clear_rich_presence_kv() {
  rich_presence_kv_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientRichPresenceUpload::rich_presence_kv() const {
  // @@protoc_insertion_point(field_get:CMsgClientRichPresenceUpload.rich_presence_kv)
  return _internal_rich_presence_kv();
}
inline void CMsgClientRichPresenceUpload::set_rich_presence_kv(const std::string& value) {
  _internal_set_rich_presence_kv(value);
  // @@protoc_insertion_point(field_set:CMsgClientRichPresenceUpload.rich_presence_kv)
}
inline std::string* CMsgClientRichPresenceUpload::mutable_rich_presence_kv() {
  // @@protoc_insertion_point(field_mutable:CMsgClientRichPresenceUpload.rich_presence_kv)
  return _internal_mutable_rich_presence_kv();
}
inline const std::string& CMsgClientRichPresenceUpload::_internal_rich_presence_kv() const {
  return rich_presence_kv_.Get();
}
inline void CMsgClientRichPresenceUpload::_internal_set_rich_presence_kv(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  rich_presence_kv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientRichPresenceUpload::set_rich_presence_kv(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  rich_presence_kv_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientRichPresenceUpload.rich_presence_kv)
}
inline void CMsgClientRichPresenceUpload::set_rich_presence_kv(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  rich_presence_kv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientRichPresenceUpload.rich_presence_kv)
}
inline void CMsgClientRichPresenceUpload::set_rich_presence_kv(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  rich_presence_kv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientRichPresenceUpload.rich_presence_kv)
}
inline std::string* CMsgClientRichPresenceUpload::_internal_mutable_rich_presence_kv() {
  _has_bits_[0] |= 0x00000001u;
  return rich_presence_kv_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientRichPresenceUpload::release_rich_presence_kv() {
  // @@protoc_insertion_point(field_release:CMsgClientRichPresenceUpload.rich_presence_kv)
  if (!_internal_has_rich_presence_kv()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return rich_presence_kv_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientRichPresenceUpload::set_allocated_rich_presence_kv(std::string* rich_presence_kv) {
  if (rich_presence_kv != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  rich_presence_kv_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rich_presence_kv,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientRichPresenceUpload.rich_presence_kv)
}

// repeated fixed64 steamid_broadcast = 2;
inline int CMsgClientRichPresenceUpload::_internal_steamid_broadcast_size() const {
  return steamid_broadcast_.size();
}
inline int CMsgClientRichPresenceUpload::steamid_broadcast_size() const {
  return _internal_steamid_broadcast_size();
}
inline void CMsgClientRichPresenceUpload::clear_steamid_broadcast() {
  steamid_broadcast_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientRichPresenceUpload::_internal_steamid_broadcast(int index) const {
  return steamid_broadcast_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientRichPresenceUpload::steamid_broadcast(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientRichPresenceUpload.steamid_broadcast)
  return _internal_steamid_broadcast(index);
}
inline void CMsgClientRichPresenceUpload::set_steamid_broadcast(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  steamid_broadcast_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientRichPresenceUpload.steamid_broadcast)
}
inline void CMsgClientRichPresenceUpload::_internal_add_steamid_broadcast(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  steamid_broadcast_.Add(value);
}
inline void CMsgClientRichPresenceUpload::add_steamid_broadcast(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_steamid_broadcast(value);
  // @@protoc_insertion_point(field_add:CMsgClientRichPresenceUpload.steamid_broadcast)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgClientRichPresenceUpload::_internal_steamid_broadcast() const {
  return steamid_broadcast_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgClientRichPresenceUpload::steamid_broadcast() const {
  // @@protoc_insertion_point(field_list:CMsgClientRichPresenceUpload.steamid_broadcast)
  return _internal_steamid_broadcast();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgClientRichPresenceUpload::_internal_mutable_steamid_broadcast() {
  return &steamid_broadcast_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgClientRichPresenceUpload::mutable_steamid_broadcast() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientRichPresenceUpload.steamid_broadcast)
  return _internal_mutable_steamid_broadcast();
}

// -------------------------------------------------------------------

// CMsgClientRichPresenceRequest

// repeated fixed64 steamid_request = 1;
inline int CMsgClientRichPresenceRequest::_internal_steamid_request_size() const {
  return steamid_request_.size();
}
inline int CMsgClientRichPresenceRequest::steamid_request_size() const {
  return _internal_steamid_request_size();
}
inline void CMsgClientRichPresenceRequest::clear_steamid_request() {
  steamid_request_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientRichPresenceRequest::_internal_steamid_request(int index) const {
  return steamid_request_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientRichPresenceRequest::steamid_request(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientRichPresenceRequest.steamid_request)
  return _internal_steamid_request(index);
}
inline void CMsgClientRichPresenceRequest::set_steamid_request(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  steamid_request_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientRichPresenceRequest.steamid_request)
}
inline void CMsgClientRichPresenceRequest::_internal_add_steamid_request(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  steamid_request_.Add(value);
}
inline void CMsgClientRichPresenceRequest::add_steamid_request(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_steamid_request(value);
  // @@protoc_insertion_point(field_add:CMsgClientRichPresenceRequest.steamid_request)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgClientRichPresenceRequest::_internal_steamid_request() const {
  return steamid_request_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgClientRichPresenceRequest::steamid_request() const {
  // @@protoc_insertion_point(field_list:CMsgClientRichPresenceRequest.steamid_request)
  return _internal_steamid_request();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgClientRichPresenceRequest::_internal_mutable_steamid_request() {
  return &steamid_request_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgClientRichPresenceRequest::mutable_steamid_request() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientRichPresenceRequest.steamid_request)
  return _internal_mutable_steamid_request();
}

// -------------------------------------------------------------------

// CMsgClientRichPresenceInfo_RichPresence

// optional fixed64 steamid_user = 1;
inline bool CMsgClientRichPresenceInfo_RichPresence::_internal_has_steamid_user() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientRichPresenceInfo_RichPresence::has_steamid_user() const {
  return _internal_has_steamid_user();
}
inline void CMsgClientRichPresenceInfo_RichPresence::clear_steamid_user() {
  steamid_user_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientRichPresenceInfo_RichPresence::_internal_steamid_user() const {
  return steamid_user_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientRichPresenceInfo_RichPresence::steamid_user() const {
  // @@protoc_insertion_point(field_get:CMsgClientRichPresenceInfo.RichPresence.steamid_user)
  return _internal_steamid_user();
}
inline void CMsgClientRichPresenceInfo_RichPresence::_internal_set_steamid_user(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_user_ = value;
}
inline void CMsgClientRichPresenceInfo_RichPresence::set_steamid_user(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid_user(value);
  // @@protoc_insertion_point(field_set:CMsgClientRichPresenceInfo.RichPresence.steamid_user)
}

// optional bytes rich_presence_kv = 2;
inline bool CMsgClientRichPresenceInfo_RichPresence::_internal_has_rich_presence_kv() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientRichPresenceInfo_RichPresence::has_rich_presence_kv() const {
  return _internal_has_rich_presence_kv();
}
inline void CMsgClientRichPresenceInfo_RichPresence::clear_rich_presence_kv() {
  rich_presence_kv_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientRichPresenceInfo_RichPresence::rich_presence_kv() const {
  // @@protoc_insertion_point(field_get:CMsgClientRichPresenceInfo.RichPresence.rich_presence_kv)
  return _internal_rich_presence_kv();
}
inline void CMsgClientRichPresenceInfo_RichPresence::set_rich_presence_kv(const std::string& value) {
  _internal_set_rich_presence_kv(value);
  // @@protoc_insertion_point(field_set:CMsgClientRichPresenceInfo.RichPresence.rich_presence_kv)
}
inline std::string* CMsgClientRichPresenceInfo_RichPresence::mutable_rich_presence_kv() {
  // @@protoc_insertion_point(field_mutable:CMsgClientRichPresenceInfo.RichPresence.rich_presence_kv)
  return _internal_mutable_rich_presence_kv();
}
inline const std::string& CMsgClientRichPresenceInfo_RichPresence::_internal_rich_presence_kv() const {
  return rich_presence_kv_.Get();
}
inline void CMsgClientRichPresenceInfo_RichPresence::_internal_set_rich_presence_kv(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  rich_presence_kv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientRichPresenceInfo_RichPresence::set_rich_presence_kv(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  rich_presence_kv_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientRichPresenceInfo.RichPresence.rich_presence_kv)
}
inline void CMsgClientRichPresenceInfo_RichPresence::set_rich_presence_kv(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  rich_presence_kv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientRichPresenceInfo.RichPresence.rich_presence_kv)
}
inline void CMsgClientRichPresenceInfo_RichPresence::set_rich_presence_kv(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  rich_presence_kv_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientRichPresenceInfo.RichPresence.rich_presence_kv)
}
inline std::string* CMsgClientRichPresenceInfo_RichPresence::_internal_mutable_rich_presence_kv() {
  _has_bits_[0] |= 0x00000001u;
  return rich_presence_kv_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientRichPresenceInfo_RichPresence::release_rich_presence_kv() {
  // @@protoc_insertion_point(field_release:CMsgClientRichPresenceInfo.RichPresence.rich_presence_kv)
  if (!_internal_has_rich_presence_kv()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return rich_presence_kv_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientRichPresenceInfo_RichPresence::set_allocated_rich_presence_kv(std::string* rich_presence_kv) {
  if (rich_presence_kv != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  rich_presence_kv_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rich_presence_kv,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientRichPresenceInfo.RichPresence.rich_presence_kv)
}

// -------------------------------------------------------------------

// CMsgClientRichPresenceInfo

// repeated .CMsgClientRichPresenceInfo.RichPresence rich_presence = 1;
inline int CMsgClientRichPresenceInfo::_internal_rich_presence_size() const {
  return rich_presence_.size();
}
inline int CMsgClientRichPresenceInfo::rich_presence_size() const {
  return _internal_rich_presence_size();
}
inline void CMsgClientRichPresenceInfo::clear_rich_presence() {
  rich_presence_.Clear();
}
inline ::CMsgClientRichPresenceInfo_RichPresence* CMsgClientRichPresenceInfo::mutable_rich_presence(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientRichPresenceInfo.rich_presence)
  return rich_presence_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientRichPresenceInfo_RichPresence >*
CMsgClientRichPresenceInfo::mutable_rich_presence() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientRichPresenceInfo.rich_presence)
  return &rich_presence_;
}
inline const ::CMsgClientRichPresenceInfo_RichPresence& CMsgClientRichPresenceInfo::_internal_rich_presence(int index) const {
  return rich_presence_.Get(index);
}
inline const ::CMsgClientRichPresenceInfo_RichPresence& CMsgClientRichPresenceInfo::rich_presence(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientRichPresenceInfo.rich_presence)
  return _internal_rich_presence(index);
}
inline ::CMsgClientRichPresenceInfo_RichPresence* CMsgClientRichPresenceInfo::_internal_add_rich_presence() {
  return rich_presence_.Add();
}
inline ::CMsgClientRichPresenceInfo_RichPresence* CMsgClientRichPresenceInfo::add_rich_presence() {
  // @@protoc_insertion_point(field_add:CMsgClientRichPresenceInfo.rich_presence)
  return _internal_add_rich_presence();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientRichPresenceInfo_RichPresence >&
CMsgClientRichPresenceInfo::rich_presence() const {
  // @@protoc_insertion_point(field_list:CMsgClientRichPresenceInfo.rich_presence)
  return rich_presence_;
}

// -------------------------------------------------------------------

// CMsgClientCheckFileSignature

// optional uint32 app_id = 1;
inline bool CMsgClientCheckFileSignature::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientCheckFileSignature::has_app_id() const {
  return _internal_has_app_id();
}
inline void CMsgClientCheckFileSignature::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCheckFileSignature::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCheckFileSignature::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientCheckFileSignature.app_id)
  return _internal_app_id();
}
inline void CMsgClientCheckFileSignature::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  app_id_ = value;
}
inline void CMsgClientCheckFileSignature::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientCheckFileSignature.app_id)
}

// -------------------------------------------------------------------

// CMsgClientCheckFileSignatureResponse

// optional uint32 app_id = 1;
inline bool CMsgClientCheckFileSignatureResponse::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientCheckFileSignatureResponse::has_app_id() const {
  return _internal_has_app_id();
}
inline void CMsgClientCheckFileSignatureResponse::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCheckFileSignatureResponse::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCheckFileSignatureResponse::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientCheckFileSignatureResponse.app_id)
  return _internal_app_id();
}
inline void CMsgClientCheckFileSignatureResponse::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  app_id_ = value;
}
inline void CMsgClientCheckFileSignatureResponse::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientCheckFileSignatureResponse.app_id)
}

// optional uint32 pid = 2;
inline bool CMsgClientCheckFileSignatureResponse::_internal_has_pid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientCheckFileSignatureResponse::has_pid() const {
  return _internal_has_pid();
}
inline void CMsgClientCheckFileSignatureResponse::clear_pid() {
  pid_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCheckFileSignatureResponse::_internal_pid() const {
  return pid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCheckFileSignatureResponse::pid() const {
  // @@protoc_insertion_point(field_get:CMsgClientCheckFileSignatureResponse.pid)
  return _internal_pid();
}
inline void CMsgClientCheckFileSignatureResponse::_internal_set_pid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  pid_ = value;
}
inline void CMsgClientCheckFileSignatureResponse::set_pid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_pid(value);
  // @@protoc_insertion_point(field_set:CMsgClientCheckFileSignatureResponse.pid)
}

// optional uint32 eresult = 3;
inline bool CMsgClientCheckFileSignatureResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientCheckFileSignatureResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientCheckFileSignatureResponse::clear_eresult() {
  eresult_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCheckFileSignatureResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCheckFileSignatureResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientCheckFileSignatureResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientCheckFileSignatureResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  eresult_ = value;
}
inline void CMsgClientCheckFileSignatureResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientCheckFileSignatureResponse.eresult)
}

// optional string filename = 4;
inline bool CMsgClientCheckFileSignatureResponse::_internal_has_filename() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientCheckFileSignatureResponse::has_filename() const {
  return _internal_has_filename();
}
inline void CMsgClientCheckFileSignatureResponse::clear_filename() {
  filename_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientCheckFileSignatureResponse::filename() const {
  // @@protoc_insertion_point(field_get:CMsgClientCheckFileSignatureResponse.filename)
  return _internal_filename();
}
inline void CMsgClientCheckFileSignatureResponse::set_filename(const std::string& value) {
  _internal_set_filename(value);
  // @@protoc_insertion_point(field_set:CMsgClientCheckFileSignatureResponse.filename)
}
inline std::string* CMsgClientCheckFileSignatureResponse::mutable_filename() {
  // @@protoc_insertion_point(field_mutable:CMsgClientCheckFileSignatureResponse.filename)
  return _internal_mutable_filename();
}
inline const std::string& CMsgClientCheckFileSignatureResponse::_internal_filename() const {
  return filename_.Get();
}
inline void CMsgClientCheckFileSignatureResponse::_internal_set_filename(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientCheckFileSignatureResponse::set_filename(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientCheckFileSignatureResponse.filename)
}
inline void CMsgClientCheckFileSignatureResponse::set_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientCheckFileSignatureResponse.filename)
}
inline void CMsgClientCheckFileSignatureResponse::set_filename(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientCheckFileSignatureResponse.filename)
}
inline std::string* CMsgClientCheckFileSignatureResponse::_internal_mutable_filename() {
  _has_bits_[0] |= 0x00000001u;
  return filename_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientCheckFileSignatureResponse::release_filename() {
  // @@protoc_insertion_point(field_release:CMsgClientCheckFileSignatureResponse.filename)
  if (!_internal_has_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return filename_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientCheckFileSignatureResponse::set_allocated_filename(std::string* filename) {
  if (filename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  filename_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), filename,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientCheckFileSignatureResponse.filename)
}

// optional uint32 esignatureresult = 5;
inline bool CMsgClientCheckFileSignatureResponse::_internal_has_esignatureresult() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientCheckFileSignatureResponse::has_esignatureresult() const {
  return _internal_has_esignatureresult();
}
inline void CMsgClientCheckFileSignatureResponse::clear_esignatureresult() {
  esignatureresult_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCheckFileSignatureResponse::_internal_esignatureresult() const {
  return esignatureresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCheckFileSignatureResponse::esignatureresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientCheckFileSignatureResponse.esignatureresult)
  return _internal_esignatureresult();
}
inline void CMsgClientCheckFileSignatureResponse::_internal_set_esignatureresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  esignatureresult_ = value;
}
inline void CMsgClientCheckFileSignatureResponse::set_esignatureresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_esignatureresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientCheckFileSignatureResponse.esignatureresult)
}

// optional bytes sha_file = 6;
inline bool CMsgClientCheckFileSignatureResponse::_internal_has_sha_file() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientCheckFileSignatureResponse::has_sha_file() const {
  return _internal_has_sha_file();
}
inline void CMsgClientCheckFileSignatureResponse::clear_sha_file() {
  sha_file_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientCheckFileSignatureResponse::sha_file() const {
  // @@protoc_insertion_point(field_get:CMsgClientCheckFileSignatureResponse.sha_file)
  return _internal_sha_file();
}
inline void CMsgClientCheckFileSignatureResponse::set_sha_file(const std::string& value) {
  _internal_set_sha_file(value);
  // @@protoc_insertion_point(field_set:CMsgClientCheckFileSignatureResponse.sha_file)
}
inline std::string* CMsgClientCheckFileSignatureResponse::mutable_sha_file() {
  // @@protoc_insertion_point(field_mutable:CMsgClientCheckFileSignatureResponse.sha_file)
  return _internal_mutable_sha_file();
}
inline const std::string& CMsgClientCheckFileSignatureResponse::_internal_sha_file() const {
  return sha_file_.Get();
}
inline void CMsgClientCheckFileSignatureResponse::_internal_set_sha_file(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  sha_file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientCheckFileSignatureResponse::set_sha_file(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  sha_file_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientCheckFileSignatureResponse.sha_file)
}
inline void CMsgClientCheckFileSignatureResponse::set_sha_file(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  sha_file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientCheckFileSignatureResponse.sha_file)
}
inline void CMsgClientCheckFileSignatureResponse::set_sha_file(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  sha_file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientCheckFileSignatureResponse.sha_file)
}
inline std::string* CMsgClientCheckFileSignatureResponse::_internal_mutable_sha_file() {
  _has_bits_[0] |= 0x00000002u;
  return sha_file_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientCheckFileSignatureResponse::release_sha_file() {
  // @@protoc_insertion_point(field_release:CMsgClientCheckFileSignatureResponse.sha_file)
  if (!_internal_has_sha_file()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return sha_file_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientCheckFileSignatureResponse::set_allocated_sha_file(std::string* sha_file) {
  if (sha_file != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sha_file_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sha_file,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientCheckFileSignatureResponse.sha_file)
}

// optional bytes signatureheader = 7;
inline bool CMsgClientCheckFileSignatureResponse::_internal_has_signatureheader() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientCheckFileSignatureResponse::has_signatureheader() const {
  return _internal_has_signatureheader();
}
inline void CMsgClientCheckFileSignatureResponse::clear_signatureheader() {
  signatureheader_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgClientCheckFileSignatureResponse::signatureheader() const {
  // @@protoc_insertion_point(field_get:CMsgClientCheckFileSignatureResponse.signatureheader)
  return _internal_signatureheader();
}
inline void CMsgClientCheckFileSignatureResponse::set_signatureheader(const std::string& value) {
  _internal_set_signatureheader(value);
  // @@protoc_insertion_point(field_set:CMsgClientCheckFileSignatureResponse.signatureheader)
}
inline std::string* CMsgClientCheckFileSignatureResponse::mutable_signatureheader() {
  // @@protoc_insertion_point(field_mutable:CMsgClientCheckFileSignatureResponse.signatureheader)
  return _internal_mutable_signatureheader();
}
inline const std::string& CMsgClientCheckFileSignatureResponse::_internal_signatureheader() const {
  return signatureheader_.Get();
}
inline void CMsgClientCheckFileSignatureResponse::_internal_set_signatureheader(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  signatureheader_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientCheckFileSignatureResponse::set_signatureheader(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  signatureheader_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientCheckFileSignatureResponse.signatureheader)
}
inline void CMsgClientCheckFileSignatureResponse::set_signatureheader(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  signatureheader_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientCheckFileSignatureResponse.signatureheader)
}
inline void CMsgClientCheckFileSignatureResponse::set_signatureheader(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  signatureheader_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientCheckFileSignatureResponse.signatureheader)
}
inline std::string* CMsgClientCheckFileSignatureResponse::_internal_mutable_signatureheader() {
  _has_bits_[0] |= 0x00000004u;
  return signatureheader_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientCheckFileSignatureResponse::release_signatureheader() {
  // @@protoc_insertion_point(field_release:CMsgClientCheckFileSignatureResponse.signatureheader)
  if (!_internal_has_signatureheader()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return signatureheader_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientCheckFileSignatureResponse::set_allocated_signatureheader(std::string* signatureheader) {
  if (signatureheader != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  signatureheader_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), signatureheader,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientCheckFileSignatureResponse.signatureheader)
}

// optional uint32 filesize = 8;
inline bool CMsgClientCheckFileSignatureResponse::_internal_has_filesize() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgClientCheckFileSignatureResponse::has_filesize() const {
  return _internal_has_filesize();
}
inline void CMsgClientCheckFileSignatureResponse::clear_filesize() {
  filesize_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCheckFileSignatureResponse::_internal_filesize() const {
  return filesize_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCheckFileSignatureResponse::filesize() const {
  // @@protoc_insertion_point(field_get:CMsgClientCheckFileSignatureResponse.filesize)
  return _internal_filesize();
}
inline void CMsgClientCheckFileSignatureResponse::_internal_set_filesize(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  filesize_ = value;
}
inline void CMsgClientCheckFileSignatureResponse::set_filesize(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_filesize(value);
  // @@protoc_insertion_point(field_set:CMsgClientCheckFileSignatureResponse.filesize)
}

// optional uint32 getlasterror = 9;
inline bool CMsgClientCheckFileSignatureResponse::_internal_has_getlasterror() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgClientCheckFileSignatureResponse::has_getlasterror() const {
  return _internal_has_getlasterror();
}
inline void CMsgClientCheckFileSignatureResponse::clear_getlasterror() {
  getlasterror_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCheckFileSignatureResponse::_internal_getlasterror() const {
  return getlasterror_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCheckFileSignatureResponse::getlasterror() const {
  // @@protoc_insertion_point(field_get:CMsgClientCheckFileSignatureResponse.getlasterror)
  return _internal_getlasterror();
}
inline void CMsgClientCheckFileSignatureResponse::_internal_set_getlasterror(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  getlasterror_ = value;
}
inline void CMsgClientCheckFileSignatureResponse::set_getlasterror(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_getlasterror(value);
  // @@protoc_insertion_point(field_set:CMsgClientCheckFileSignatureResponse.getlasterror)
}

// optional uint32 evalvesignaturecheckdetail = 10;
inline bool CMsgClientCheckFileSignatureResponse::_internal_has_evalvesignaturecheckdetail() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgClientCheckFileSignatureResponse::has_evalvesignaturecheckdetail() const {
  return _internal_has_evalvesignaturecheckdetail();
}
inline void CMsgClientCheckFileSignatureResponse::clear_evalvesignaturecheckdetail() {
  evalvesignaturecheckdetail_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCheckFileSignatureResponse::_internal_evalvesignaturecheckdetail() const {
  return evalvesignaturecheckdetail_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCheckFileSignatureResponse::evalvesignaturecheckdetail() const {
  // @@protoc_insertion_point(field_get:CMsgClientCheckFileSignatureResponse.evalvesignaturecheckdetail)
  return _internal_evalvesignaturecheckdetail();
}
inline void CMsgClientCheckFileSignatureResponse::_internal_set_evalvesignaturecheckdetail(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  evalvesignaturecheckdetail_ = value;
}
inline void CMsgClientCheckFileSignatureResponse::set_evalvesignaturecheckdetail(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_evalvesignaturecheckdetail(value);
  // @@protoc_insertion_point(field_set:CMsgClientCheckFileSignatureResponse.evalvesignaturecheckdetail)
}

// -------------------------------------------------------------------

// CMsgClientReadMachineAuth

// optional string filename = 1;
inline bool CMsgClientReadMachineAuth::_internal_has_filename() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientReadMachineAuth::has_filename() const {
  return _internal_has_filename();
}
inline void CMsgClientReadMachineAuth::clear_filename() {
  filename_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientReadMachineAuth::filename() const {
  // @@protoc_insertion_point(field_get:CMsgClientReadMachineAuth.filename)
  return _internal_filename();
}
inline void CMsgClientReadMachineAuth::set_filename(const std::string& value) {
  _internal_set_filename(value);
  // @@protoc_insertion_point(field_set:CMsgClientReadMachineAuth.filename)
}
inline std::string* CMsgClientReadMachineAuth::mutable_filename() {
  // @@protoc_insertion_point(field_mutable:CMsgClientReadMachineAuth.filename)
  return _internal_mutable_filename();
}
inline const std::string& CMsgClientReadMachineAuth::_internal_filename() const {
  return filename_.Get();
}
inline void CMsgClientReadMachineAuth::_internal_set_filename(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientReadMachineAuth::set_filename(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientReadMachineAuth.filename)
}
inline void CMsgClientReadMachineAuth::set_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientReadMachineAuth.filename)
}
inline void CMsgClientReadMachineAuth::set_filename(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientReadMachineAuth.filename)
}
inline std::string* CMsgClientReadMachineAuth::_internal_mutable_filename() {
  _has_bits_[0] |= 0x00000001u;
  return filename_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientReadMachineAuth::release_filename() {
  // @@protoc_insertion_point(field_release:CMsgClientReadMachineAuth.filename)
  if (!_internal_has_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return filename_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientReadMachineAuth::set_allocated_filename(std::string* filename) {
  if (filename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  filename_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), filename,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientReadMachineAuth.filename)
}

// optional uint32 offset = 2;
inline bool CMsgClientReadMachineAuth::_internal_has_offset() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientReadMachineAuth::has_offset() const {
  return _internal_has_offset();
}
inline void CMsgClientReadMachineAuth::clear_offset() {
  offset_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientReadMachineAuth::_internal_offset() const {
  return offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientReadMachineAuth::offset() const {
  // @@protoc_insertion_point(field_get:CMsgClientReadMachineAuth.offset)
  return _internal_offset();
}
inline void CMsgClientReadMachineAuth::_internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  offset_ = value;
}
inline void CMsgClientReadMachineAuth::set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:CMsgClientReadMachineAuth.offset)
}

// optional uint32 cubtoread = 3;
inline bool CMsgClientReadMachineAuth::_internal_has_cubtoread() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientReadMachineAuth::has_cubtoread() const {
  return _internal_has_cubtoread();
}
inline void CMsgClientReadMachineAuth::clear_cubtoread() {
  cubtoread_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientReadMachineAuth::_internal_cubtoread() const {
  return cubtoread_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientReadMachineAuth::cubtoread() const {
  // @@protoc_insertion_point(field_get:CMsgClientReadMachineAuth.cubtoread)
  return _internal_cubtoread();
}
inline void CMsgClientReadMachineAuth::_internal_set_cubtoread(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  cubtoread_ = value;
}
inline void CMsgClientReadMachineAuth::set_cubtoread(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cubtoread(value);
  // @@protoc_insertion_point(field_set:CMsgClientReadMachineAuth.cubtoread)
}

// -------------------------------------------------------------------

// CMsgClientReadMachineAuthResponse

// optional string filename = 1;
inline bool CMsgClientReadMachineAuthResponse::_internal_has_filename() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientReadMachineAuthResponse::has_filename() const {
  return _internal_has_filename();
}
inline void CMsgClientReadMachineAuthResponse::clear_filename() {
  filename_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientReadMachineAuthResponse::filename() const {
  // @@protoc_insertion_point(field_get:CMsgClientReadMachineAuthResponse.filename)
  return _internal_filename();
}
inline void CMsgClientReadMachineAuthResponse::set_filename(const std::string& value) {
  _internal_set_filename(value);
  // @@protoc_insertion_point(field_set:CMsgClientReadMachineAuthResponse.filename)
}
inline std::string* CMsgClientReadMachineAuthResponse::mutable_filename() {
  // @@protoc_insertion_point(field_mutable:CMsgClientReadMachineAuthResponse.filename)
  return _internal_mutable_filename();
}
inline const std::string& CMsgClientReadMachineAuthResponse::_internal_filename() const {
  return filename_.Get();
}
inline void CMsgClientReadMachineAuthResponse::_internal_set_filename(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientReadMachineAuthResponse::set_filename(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientReadMachineAuthResponse.filename)
}
inline void CMsgClientReadMachineAuthResponse::set_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientReadMachineAuthResponse.filename)
}
inline void CMsgClientReadMachineAuthResponse::set_filename(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientReadMachineAuthResponse.filename)
}
inline std::string* CMsgClientReadMachineAuthResponse::_internal_mutable_filename() {
  _has_bits_[0] |= 0x00000001u;
  return filename_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientReadMachineAuthResponse::release_filename() {
  // @@protoc_insertion_point(field_release:CMsgClientReadMachineAuthResponse.filename)
  if (!_internal_has_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return filename_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientReadMachineAuthResponse::set_allocated_filename(std::string* filename) {
  if (filename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  filename_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), filename,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientReadMachineAuthResponse.filename)
}

// optional uint32 eresult = 2;
inline bool CMsgClientReadMachineAuthResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientReadMachineAuthResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientReadMachineAuthResponse::clear_eresult() {
  eresult_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientReadMachineAuthResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientReadMachineAuthResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientReadMachineAuthResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientReadMachineAuthResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  eresult_ = value;
}
inline void CMsgClientReadMachineAuthResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientReadMachineAuthResponse.eresult)
}

// optional uint32 filesize = 3;
inline bool CMsgClientReadMachineAuthResponse::_internal_has_filesize() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientReadMachineAuthResponse::has_filesize() const {
  return _internal_has_filesize();
}
inline void CMsgClientReadMachineAuthResponse::clear_filesize() {
  filesize_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientReadMachineAuthResponse::_internal_filesize() const {
  return filesize_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientReadMachineAuthResponse::filesize() const {
  // @@protoc_insertion_point(field_get:CMsgClientReadMachineAuthResponse.filesize)
  return _internal_filesize();
}
inline void CMsgClientReadMachineAuthResponse::_internal_set_filesize(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  filesize_ = value;
}
inline void CMsgClientReadMachineAuthResponse::set_filesize(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_filesize(value);
  // @@protoc_insertion_point(field_set:CMsgClientReadMachineAuthResponse.filesize)
}

// optional bytes sha_file = 4;
inline bool CMsgClientReadMachineAuthResponse::_internal_has_sha_file() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientReadMachineAuthResponse::has_sha_file() const {
  return _internal_has_sha_file();
}
inline void CMsgClientReadMachineAuthResponse::clear_sha_file() {
  sha_file_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientReadMachineAuthResponse::sha_file() const {
  // @@protoc_insertion_point(field_get:CMsgClientReadMachineAuthResponse.sha_file)
  return _internal_sha_file();
}
inline void CMsgClientReadMachineAuthResponse::set_sha_file(const std::string& value) {
  _internal_set_sha_file(value);
  // @@protoc_insertion_point(field_set:CMsgClientReadMachineAuthResponse.sha_file)
}
inline std::string* CMsgClientReadMachineAuthResponse::mutable_sha_file() {
  // @@protoc_insertion_point(field_mutable:CMsgClientReadMachineAuthResponse.sha_file)
  return _internal_mutable_sha_file();
}
inline const std::string& CMsgClientReadMachineAuthResponse::_internal_sha_file() const {
  return sha_file_.Get();
}
inline void CMsgClientReadMachineAuthResponse::_internal_set_sha_file(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  sha_file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientReadMachineAuthResponse::set_sha_file(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  sha_file_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientReadMachineAuthResponse.sha_file)
}
inline void CMsgClientReadMachineAuthResponse::set_sha_file(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  sha_file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientReadMachineAuthResponse.sha_file)
}
inline void CMsgClientReadMachineAuthResponse::set_sha_file(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  sha_file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientReadMachineAuthResponse.sha_file)
}
inline std::string* CMsgClientReadMachineAuthResponse::_internal_mutable_sha_file() {
  _has_bits_[0] |= 0x00000002u;
  return sha_file_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientReadMachineAuthResponse::release_sha_file() {
  // @@protoc_insertion_point(field_release:CMsgClientReadMachineAuthResponse.sha_file)
  if (!_internal_has_sha_file()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return sha_file_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientReadMachineAuthResponse::set_allocated_sha_file(std::string* sha_file) {
  if (sha_file != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sha_file_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sha_file,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientReadMachineAuthResponse.sha_file)
}

// optional uint32 getlasterror = 5;
inline bool CMsgClientReadMachineAuthResponse::_internal_has_getlasterror() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientReadMachineAuthResponse::has_getlasterror() const {
  return _internal_has_getlasterror();
}
inline void CMsgClientReadMachineAuthResponse::clear_getlasterror() {
  getlasterror_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientReadMachineAuthResponse::_internal_getlasterror() const {
  return getlasterror_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientReadMachineAuthResponse::getlasterror() const {
  // @@protoc_insertion_point(field_get:CMsgClientReadMachineAuthResponse.getlasterror)
  return _internal_getlasterror();
}
inline void CMsgClientReadMachineAuthResponse::_internal_set_getlasterror(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  getlasterror_ = value;
}
inline void CMsgClientReadMachineAuthResponse::set_getlasterror(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_getlasterror(value);
  // @@protoc_insertion_point(field_set:CMsgClientReadMachineAuthResponse.getlasterror)
}

// optional uint32 offset = 6;
inline bool CMsgClientReadMachineAuthResponse::_internal_has_offset() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgClientReadMachineAuthResponse::has_offset() const {
  return _internal_has_offset();
}
inline void CMsgClientReadMachineAuthResponse::clear_offset() {
  offset_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientReadMachineAuthResponse::_internal_offset() const {
  return offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientReadMachineAuthResponse::offset() const {
  // @@protoc_insertion_point(field_get:CMsgClientReadMachineAuthResponse.offset)
  return _internal_offset();
}
inline void CMsgClientReadMachineAuthResponse::_internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  offset_ = value;
}
inline void CMsgClientReadMachineAuthResponse::set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:CMsgClientReadMachineAuthResponse.offset)
}

// optional uint32 cubread = 7;
inline bool CMsgClientReadMachineAuthResponse::_internal_has_cubread() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgClientReadMachineAuthResponse::has_cubread() const {
  return _internal_has_cubread();
}
inline void CMsgClientReadMachineAuthResponse::clear_cubread() {
  cubread_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientReadMachineAuthResponse::_internal_cubread() const {
  return cubread_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientReadMachineAuthResponse::cubread() const {
  // @@protoc_insertion_point(field_get:CMsgClientReadMachineAuthResponse.cubread)
  return _internal_cubread();
}
inline void CMsgClientReadMachineAuthResponse::_internal_set_cubread(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  cubread_ = value;
}
inline void CMsgClientReadMachineAuthResponse::set_cubread(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cubread(value);
  // @@protoc_insertion_point(field_set:CMsgClientReadMachineAuthResponse.cubread)
}

// optional bytes bytes_read = 8;
inline bool CMsgClientReadMachineAuthResponse::_internal_has_bytes_read() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientReadMachineAuthResponse::has_bytes_read() const {
  return _internal_has_bytes_read();
}
inline void CMsgClientReadMachineAuthResponse::clear_bytes_read() {
  bytes_read_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgClientReadMachineAuthResponse::bytes_read() const {
  // @@protoc_insertion_point(field_get:CMsgClientReadMachineAuthResponse.bytes_read)
  return _internal_bytes_read();
}
inline void CMsgClientReadMachineAuthResponse::set_bytes_read(const std::string& value) {
  _internal_set_bytes_read(value);
  // @@protoc_insertion_point(field_set:CMsgClientReadMachineAuthResponse.bytes_read)
}
inline std::string* CMsgClientReadMachineAuthResponse::mutable_bytes_read() {
  // @@protoc_insertion_point(field_mutable:CMsgClientReadMachineAuthResponse.bytes_read)
  return _internal_mutable_bytes_read();
}
inline const std::string& CMsgClientReadMachineAuthResponse::_internal_bytes_read() const {
  return bytes_read_.Get();
}
inline void CMsgClientReadMachineAuthResponse::_internal_set_bytes_read(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  bytes_read_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientReadMachineAuthResponse::set_bytes_read(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  bytes_read_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientReadMachineAuthResponse.bytes_read)
}
inline void CMsgClientReadMachineAuthResponse::set_bytes_read(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  bytes_read_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientReadMachineAuthResponse.bytes_read)
}
inline void CMsgClientReadMachineAuthResponse::set_bytes_read(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  bytes_read_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientReadMachineAuthResponse.bytes_read)
}
inline std::string* CMsgClientReadMachineAuthResponse::_internal_mutable_bytes_read() {
  _has_bits_[0] |= 0x00000004u;
  return bytes_read_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientReadMachineAuthResponse::release_bytes_read() {
  // @@protoc_insertion_point(field_release:CMsgClientReadMachineAuthResponse.bytes_read)
  if (!_internal_has_bytes_read()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return bytes_read_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientReadMachineAuthResponse::set_allocated_bytes_read(std::string* bytes_read) {
  if (bytes_read != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  bytes_read_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bytes_read,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientReadMachineAuthResponse.bytes_read)
}

// optional string filename_sentry = 9;
inline bool CMsgClientReadMachineAuthResponse::_internal_has_filename_sentry() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientReadMachineAuthResponse::has_filename_sentry() const {
  return _internal_has_filename_sentry();
}
inline void CMsgClientReadMachineAuthResponse::clear_filename_sentry() {
  filename_sentry_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CMsgClientReadMachineAuthResponse::filename_sentry() const {
  // @@protoc_insertion_point(field_get:CMsgClientReadMachineAuthResponse.filename_sentry)
  return _internal_filename_sentry();
}
inline void CMsgClientReadMachineAuthResponse::set_filename_sentry(const std::string& value) {
  _internal_set_filename_sentry(value);
  // @@protoc_insertion_point(field_set:CMsgClientReadMachineAuthResponse.filename_sentry)
}
inline std::string* CMsgClientReadMachineAuthResponse::mutable_filename_sentry() {
  // @@protoc_insertion_point(field_mutable:CMsgClientReadMachineAuthResponse.filename_sentry)
  return _internal_mutable_filename_sentry();
}
inline const std::string& CMsgClientReadMachineAuthResponse::_internal_filename_sentry() const {
  return filename_sentry_.Get();
}
inline void CMsgClientReadMachineAuthResponse::_internal_set_filename_sentry(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  filename_sentry_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientReadMachineAuthResponse::set_filename_sentry(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  filename_sentry_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientReadMachineAuthResponse.filename_sentry)
}
inline void CMsgClientReadMachineAuthResponse::set_filename_sentry(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  filename_sentry_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientReadMachineAuthResponse.filename_sentry)
}
inline void CMsgClientReadMachineAuthResponse::set_filename_sentry(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  filename_sentry_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientReadMachineAuthResponse.filename_sentry)
}
inline std::string* CMsgClientReadMachineAuthResponse::_internal_mutable_filename_sentry() {
  _has_bits_[0] |= 0x00000008u;
  return filename_sentry_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientReadMachineAuthResponse::release_filename_sentry() {
  // @@protoc_insertion_point(field_release:CMsgClientReadMachineAuthResponse.filename_sentry)
  if (!_internal_has_filename_sentry()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return filename_sentry_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientReadMachineAuthResponse::set_allocated_filename_sentry(std::string* filename_sentry) {
  if (filename_sentry != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  filename_sentry_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), filename_sentry,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientReadMachineAuthResponse.filename_sentry)
}

// -------------------------------------------------------------------

// CMsgClientUpdateMachineAuth

// optional string filename = 1;
inline bool CMsgClientUpdateMachineAuth::_internal_has_filename() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUpdateMachineAuth::has_filename() const {
  return _internal_has_filename();
}
inline void CMsgClientUpdateMachineAuth::clear_filename() {
  filename_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientUpdateMachineAuth::filename() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateMachineAuth.filename)
  return _internal_filename();
}
inline void CMsgClientUpdateMachineAuth::set_filename(const std::string& value) {
  _internal_set_filename(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateMachineAuth.filename)
}
inline std::string* CMsgClientUpdateMachineAuth::mutable_filename() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUpdateMachineAuth.filename)
  return _internal_mutable_filename();
}
inline const std::string& CMsgClientUpdateMachineAuth::_internal_filename() const {
  return filename_.Get();
}
inline void CMsgClientUpdateMachineAuth::_internal_set_filename(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUpdateMachineAuth::set_filename(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUpdateMachineAuth.filename)
}
inline void CMsgClientUpdateMachineAuth::set_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUpdateMachineAuth.filename)
}
inline void CMsgClientUpdateMachineAuth::set_filename(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUpdateMachineAuth.filename)
}
inline std::string* CMsgClientUpdateMachineAuth::_internal_mutable_filename() {
  _has_bits_[0] |= 0x00000001u;
  return filename_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUpdateMachineAuth::release_filename() {
  // @@protoc_insertion_point(field_release:CMsgClientUpdateMachineAuth.filename)
  if (!_internal_has_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return filename_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUpdateMachineAuth::set_allocated_filename(std::string* filename) {
  if (filename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  filename_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), filename,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUpdateMachineAuth.filename)
}

// optional uint32 offset = 2;
inline bool CMsgClientUpdateMachineAuth::_internal_has_offset() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientUpdateMachineAuth::has_offset() const {
  return _internal_has_offset();
}
inline void CMsgClientUpdateMachineAuth::clear_offset() {
  offset_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateMachineAuth::_internal_offset() const {
  return offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateMachineAuth::offset() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateMachineAuth.offset)
  return _internal_offset();
}
inline void CMsgClientUpdateMachineAuth::_internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  offset_ = value;
}
inline void CMsgClientUpdateMachineAuth::set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateMachineAuth.offset)
}

// optional uint32 cubtowrite = 3;
inline bool CMsgClientUpdateMachineAuth::_internal_has_cubtowrite() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientUpdateMachineAuth::has_cubtowrite() const {
  return _internal_has_cubtowrite();
}
inline void CMsgClientUpdateMachineAuth::clear_cubtowrite() {
  cubtowrite_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateMachineAuth::_internal_cubtowrite() const {
  return cubtowrite_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateMachineAuth::cubtowrite() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateMachineAuth.cubtowrite)
  return _internal_cubtowrite();
}
inline void CMsgClientUpdateMachineAuth::_internal_set_cubtowrite(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  cubtowrite_ = value;
}
inline void CMsgClientUpdateMachineAuth::set_cubtowrite(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cubtowrite(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateMachineAuth.cubtowrite)
}

// optional bytes bytes = 4;
inline bool CMsgClientUpdateMachineAuth::_internal_has_bytes() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUpdateMachineAuth::has_bytes() const {
  return _internal_has_bytes();
}
inline void CMsgClientUpdateMachineAuth::clear_bytes() {
  bytes_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientUpdateMachineAuth::bytes() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateMachineAuth.bytes)
  return _internal_bytes();
}
inline void CMsgClientUpdateMachineAuth::set_bytes(const std::string& value) {
  _internal_set_bytes(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateMachineAuth.bytes)
}
inline std::string* CMsgClientUpdateMachineAuth::mutable_bytes() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUpdateMachineAuth.bytes)
  return _internal_mutable_bytes();
}
inline const std::string& CMsgClientUpdateMachineAuth::_internal_bytes() const {
  return bytes_.Get();
}
inline void CMsgClientUpdateMachineAuth::_internal_set_bytes(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  bytes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUpdateMachineAuth::set_bytes(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  bytes_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUpdateMachineAuth.bytes)
}
inline void CMsgClientUpdateMachineAuth::set_bytes(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  bytes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUpdateMachineAuth.bytes)
}
inline void CMsgClientUpdateMachineAuth::set_bytes(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  bytes_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUpdateMachineAuth.bytes)
}
inline std::string* CMsgClientUpdateMachineAuth::_internal_mutable_bytes() {
  _has_bits_[0] |= 0x00000002u;
  return bytes_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUpdateMachineAuth::release_bytes() {
  // @@protoc_insertion_point(field_release:CMsgClientUpdateMachineAuth.bytes)
  if (!_internal_has_bytes()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return bytes_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUpdateMachineAuth::set_allocated_bytes(std::string* bytes) {
  if (bytes != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  bytes_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bytes,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUpdateMachineAuth.bytes)
}

// optional uint32 otp_type = 5;
inline bool CMsgClientUpdateMachineAuth::_internal_has_otp_type() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientUpdateMachineAuth::has_otp_type() const {
  return _internal_has_otp_type();
}
inline void CMsgClientUpdateMachineAuth::clear_otp_type() {
  otp_type_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateMachineAuth::_internal_otp_type() const {
  return otp_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateMachineAuth::otp_type() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateMachineAuth.otp_type)
  return _internal_otp_type();
}
inline void CMsgClientUpdateMachineAuth::_internal_set_otp_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  otp_type_ = value;
}
inline void CMsgClientUpdateMachineAuth::set_otp_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_otp_type(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateMachineAuth.otp_type)
}

// optional string otp_identifier = 6;
inline bool CMsgClientUpdateMachineAuth::_internal_has_otp_identifier() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientUpdateMachineAuth::has_otp_identifier() const {
  return _internal_has_otp_identifier();
}
inline void CMsgClientUpdateMachineAuth::clear_otp_identifier() {
  otp_identifier_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgClientUpdateMachineAuth::otp_identifier() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateMachineAuth.otp_identifier)
  return _internal_otp_identifier();
}
inline void CMsgClientUpdateMachineAuth::set_otp_identifier(const std::string& value) {
  _internal_set_otp_identifier(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateMachineAuth.otp_identifier)
}
inline std::string* CMsgClientUpdateMachineAuth::mutable_otp_identifier() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUpdateMachineAuth.otp_identifier)
  return _internal_mutable_otp_identifier();
}
inline const std::string& CMsgClientUpdateMachineAuth::_internal_otp_identifier() const {
  return otp_identifier_.Get();
}
inline void CMsgClientUpdateMachineAuth::_internal_set_otp_identifier(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  otp_identifier_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUpdateMachineAuth::set_otp_identifier(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  otp_identifier_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUpdateMachineAuth.otp_identifier)
}
inline void CMsgClientUpdateMachineAuth::set_otp_identifier(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  otp_identifier_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUpdateMachineAuth.otp_identifier)
}
inline void CMsgClientUpdateMachineAuth::set_otp_identifier(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  otp_identifier_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUpdateMachineAuth.otp_identifier)
}
inline std::string* CMsgClientUpdateMachineAuth::_internal_mutable_otp_identifier() {
  _has_bits_[0] |= 0x00000004u;
  return otp_identifier_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUpdateMachineAuth::release_otp_identifier() {
  // @@protoc_insertion_point(field_release:CMsgClientUpdateMachineAuth.otp_identifier)
  if (!_internal_has_otp_identifier()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return otp_identifier_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUpdateMachineAuth::set_allocated_otp_identifier(std::string* otp_identifier) {
  if (otp_identifier != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  otp_identifier_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), otp_identifier,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUpdateMachineAuth.otp_identifier)
}

// optional bytes otp_sharedsecret = 7;
inline bool CMsgClientUpdateMachineAuth::_internal_has_otp_sharedsecret() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientUpdateMachineAuth::has_otp_sharedsecret() const {
  return _internal_has_otp_sharedsecret();
}
inline void CMsgClientUpdateMachineAuth::clear_otp_sharedsecret() {
  otp_sharedsecret_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CMsgClientUpdateMachineAuth::otp_sharedsecret() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateMachineAuth.otp_sharedsecret)
  return _internal_otp_sharedsecret();
}
inline void CMsgClientUpdateMachineAuth::set_otp_sharedsecret(const std::string& value) {
  _internal_set_otp_sharedsecret(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateMachineAuth.otp_sharedsecret)
}
inline std::string* CMsgClientUpdateMachineAuth::mutable_otp_sharedsecret() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUpdateMachineAuth.otp_sharedsecret)
  return _internal_mutable_otp_sharedsecret();
}
inline const std::string& CMsgClientUpdateMachineAuth::_internal_otp_sharedsecret() const {
  return otp_sharedsecret_.Get();
}
inline void CMsgClientUpdateMachineAuth::_internal_set_otp_sharedsecret(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  otp_sharedsecret_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUpdateMachineAuth::set_otp_sharedsecret(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  otp_sharedsecret_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUpdateMachineAuth.otp_sharedsecret)
}
inline void CMsgClientUpdateMachineAuth::set_otp_sharedsecret(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  otp_sharedsecret_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUpdateMachineAuth.otp_sharedsecret)
}
inline void CMsgClientUpdateMachineAuth::set_otp_sharedsecret(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  otp_sharedsecret_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUpdateMachineAuth.otp_sharedsecret)
}
inline std::string* CMsgClientUpdateMachineAuth::_internal_mutable_otp_sharedsecret() {
  _has_bits_[0] |= 0x00000008u;
  return otp_sharedsecret_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUpdateMachineAuth::release_otp_sharedsecret() {
  // @@protoc_insertion_point(field_release:CMsgClientUpdateMachineAuth.otp_sharedsecret)
  if (!_internal_has_otp_sharedsecret()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return otp_sharedsecret_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUpdateMachineAuth::set_allocated_otp_sharedsecret(std::string* otp_sharedsecret) {
  if (otp_sharedsecret != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  otp_sharedsecret_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), otp_sharedsecret,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUpdateMachineAuth.otp_sharedsecret)
}

// optional uint32 otp_timedrift = 8;
inline bool CMsgClientUpdateMachineAuth::_internal_has_otp_timedrift() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgClientUpdateMachineAuth::has_otp_timedrift() const {
  return _internal_has_otp_timedrift();
}
inline void CMsgClientUpdateMachineAuth::clear_otp_timedrift() {
  otp_timedrift_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateMachineAuth::_internal_otp_timedrift() const {
  return otp_timedrift_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateMachineAuth::otp_timedrift() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateMachineAuth.otp_timedrift)
  return _internal_otp_timedrift();
}
inline void CMsgClientUpdateMachineAuth::_internal_set_otp_timedrift(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  otp_timedrift_ = value;
}
inline void CMsgClientUpdateMachineAuth::set_otp_timedrift(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_otp_timedrift(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateMachineAuth.otp_timedrift)
}

// -------------------------------------------------------------------

// CMsgClientUpdateMachineAuthResponse

// optional string filename = 1;
inline bool CMsgClientUpdateMachineAuthResponse::_internal_has_filename() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUpdateMachineAuthResponse::has_filename() const {
  return _internal_has_filename();
}
inline void CMsgClientUpdateMachineAuthResponse::clear_filename() {
  filename_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientUpdateMachineAuthResponse::filename() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateMachineAuthResponse.filename)
  return _internal_filename();
}
inline void CMsgClientUpdateMachineAuthResponse::set_filename(const std::string& value) {
  _internal_set_filename(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateMachineAuthResponse.filename)
}
inline std::string* CMsgClientUpdateMachineAuthResponse::mutable_filename() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUpdateMachineAuthResponse.filename)
  return _internal_mutable_filename();
}
inline const std::string& CMsgClientUpdateMachineAuthResponse::_internal_filename() const {
  return filename_.Get();
}
inline void CMsgClientUpdateMachineAuthResponse::_internal_set_filename(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUpdateMachineAuthResponse::set_filename(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUpdateMachineAuthResponse.filename)
}
inline void CMsgClientUpdateMachineAuthResponse::set_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUpdateMachineAuthResponse.filename)
}
inline void CMsgClientUpdateMachineAuthResponse::set_filename(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUpdateMachineAuthResponse.filename)
}
inline std::string* CMsgClientUpdateMachineAuthResponse::_internal_mutable_filename() {
  _has_bits_[0] |= 0x00000001u;
  return filename_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUpdateMachineAuthResponse::release_filename() {
  // @@protoc_insertion_point(field_release:CMsgClientUpdateMachineAuthResponse.filename)
  if (!_internal_has_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return filename_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUpdateMachineAuthResponse::set_allocated_filename(std::string* filename) {
  if (filename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  filename_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), filename,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUpdateMachineAuthResponse.filename)
}

// optional uint32 eresult = 2;
inline bool CMsgClientUpdateMachineAuthResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientUpdateMachineAuthResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientUpdateMachineAuthResponse::clear_eresult() {
  eresult_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateMachineAuthResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateMachineAuthResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateMachineAuthResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientUpdateMachineAuthResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  eresult_ = value;
}
inline void CMsgClientUpdateMachineAuthResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateMachineAuthResponse.eresult)
}

// optional uint32 filesize = 3;
inline bool CMsgClientUpdateMachineAuthResponse::_internal_has_filesize() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientUpdateMachineAuthResponse::has_filesize() const {
  return _internal_has_filesize();
}
inline void CMsgClientUpdateMachineAuthResponse::clear_filesize() {
  filesize_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateMachineAuthResponse::_internal_filesize() const {
  return filesize_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateMachineAuthResponse::filesize() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateMachineAuthResponse.filesize)
  return _internal_filesize();
}
inline void CMsgClientUpdateMachineAuthResponse::_internal_set_filesize(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  filesize_ = value;
}
inline void CMsgClientUpdateMachineAuthResponse::set_filesize(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_filesize(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateMachineAuthResponse.filesize)
}

// optional bytes sha_file = 4;
inline bool CMsgClientUpdateMachineAuthResponse::_internal_has_sha_file() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUpdateMachineAuthResponse::has_sha_file() const {
  return _internal_has_sha_file();
}
inline void CMsgClientUpdateMachineAuthResponse::clear_sha_file() {
  sha_file_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientUpdateMachineAuthResponse::sha_file() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateMachineAuthResponse.sha_file)
  return _internal_sha_file();
}
inline void CMsgClientUpdateMachineAuthResponse::set_sha_file(const std::string& value) {
  _internal_set_sha_file(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateMachineAuthResponse.sha_file)
}
inline std::string* CMsgClientUpdateMachineAuthResponse::mutable_sha_file() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUpdateMachineAuthResponse.sha_file)
  return _internal_mutable_sha_file();
}
inline const std::string& CMsgClientUpdateMachineAuthResponse::_internal_sha_file() const {
  return sha_file_.Get();
}
inline void CMsgClientUpdateMachineAuthResponse::_internal_set_sha_file(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  sha_file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUpdateMachineAuthResponse::set_sha_file(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  sha_file_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUpdateMachineAuthResponse.sha_file)
}
inline void CMsgClientUpdateMachineAuthResponse::set_sha_file(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  sha_file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUpdateMachineAuthResponse.sha_file)
}
inline void CMsgClientUpdateMachineAuthResponse::set_sha_file(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  sha_file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUpdateMachineAuthResponse.sha_file)
}
inline std::string* CMsgClientUpdateMachineAuthResponse::_internal_mutable_sha_file() {
  _has_bits_[0] |= 0x00000002u;
  return sha_file_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUpdateMachineAuthResponse::release_sha_file() {
  // @@protoc_insertion_point(field_release:CMsgClientUpdateMachineAuthResponse.sha_file)
  if (!_internal_has_sha_file()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return sha_file_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUpdateMachineAuthResponse::set_allocated_sha_file(std::string* sha_file) {
  if (sha_file != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sha_file_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sha_file,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUpdateMachineAuthResponse.sha_file)
}

// optional uint32 getlasterror = 5;
inline bool CMsgClientUpdateMachineAuthResponse::_internal_has_getlasterror() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientUpdateMachineAuthResponse::has_getlasterror() const {
  return _internal_has_getlasterror();
}
inline void CMsgClientUpdateMachineAuthResponse::clear_getlasterror() {
  getlasterror_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateMachineAuthResponse::_internal_getlasterror() const {
  return getlasterror_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateMachineAuthResponse::getlasterror() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateMachineAuthResponse.getlasterror)
  return _internal_getlasterror();
}
inline void CMsgClientUpdateMachineAuthResponse::_internal_set_getlasterror(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  getlasterror_ = value;
}
inline void CMsgClientUpdateMachineAuthResponse::set_getlasterror(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_getlasterror(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateMachineAuthResponse.getlasterror)
}

// optional uint32 offset = 6;
inline bool CMsgClientUpdateMachineAuthResponse::_internal_has_offset() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientUpdateMachineAuthResponse::has_offset() const {
  return _internal_has_offset();
}
inline void CMsgClientUpdateMachineAuthResponse::clear_offset() {
  offset_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateMachineAuthResponse::_internal_offset() const {
  return offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateMachineAuthResponse::offset() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateMachineAuthResponse.offset)
  return _internal_offset();
}
inline void CMsgClientUpdateMachineAuthResponse::_internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  offset_ = value;
}
inline void CMsgClientUpdateMachineAuthResponse::set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateMachineAuthResponse.offset)
}

// optional uint32 cubwrote = 7;
inline bool CMsgClientUpdateMachineAuthResponse::_internal_has_cubwrote() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgClientUpdateMachineAuthResponse::has_cubwrote() const {
  return _internal_has_cubwrote();
}
inline void CMsgClientUpdateMachineAuthResponse::clear_cubwrote() {
  cubwrote_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateMachineAuthResponse::_internal_cubwrote() const {
  return cubwrote_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateMachineAuthResponse::cubwrote() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateMachineAuthResponse.cubwrote)
  return _internal_cubwrote();
}
inline void CMsgClientUpdateMachineAuthResponse::_internal_set_cubwrote(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  cubwrote_ = value;
}
inline void CMsgClientUpdateMachineAuthResponse::set_cubwrote(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cubwrote(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateMachineAuthResponse.cubwrote)
}

// optional int32 otp_type = 8;
inline bool CMsgClientUpdateMachineAuthResponse::_internal_has_otp_type() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgClientUpdateMachineAuthResponse::has_otp_type() const {
  return _internal_has_otp_type();
}
inline void CMsgClientUpdateMachineAuthResponse::clear_otp_type() {
  otp_type_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUpdateMachineAuthResponse::_internal_otp_type() const {
  return otp_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUpdateMachineAuthResponse::otp_type() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateMachineAuthResponse.otp_type)
  return _internal_otp_type();
}
inline void CMsgClientUpdateMachineAuthResponse::_internal_set_otp_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  otp_type_ = value;
}
inline void CMsgClientUpdateMachineAuthResponse::set_otp_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_otp_type(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateMachineAuthResponse.otp_type)
}

// optional uint32 otp_value = 9;
inline bool CMsgClientUpdateMachineAuthResponse::_internal_has_otp_value() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgClientUpdateMachineAuthResponse::has_otp_value() const {
  return _internal_has_otp_value();
}
inline void CMsgClientUpdateMachineAuthResponse::clear_otp_value() {
  otp_value_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateMachineAuthResponse::_internal_otp_value() const {
  return otp_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUpdateMachineAuthResponse::otp_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateMachineAuthResponse.otp_value)
  return _internal_otp_value();
}
inline void CMsgClientUpdateMachineAuthResponse::_internal_set_otp_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  otp_value_ = value;
}
inline void CMsgClientUpdateMachineAuthResponse::set_otp_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_otp_value(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateMachineAuthResponse.otp_value)
}

// optional string otp_identifier = 10;
inline bool CMsgClientUpdateMachineAuthResponse::_internal_has_otp_identifier() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientUpdateMachineAuthResponse::has_otp_identifier() const {
  return _internal_has_otp_identifier();
}
inline void CMsgClientUpdateMachineAuthResponse::clear_otp_identifier() {
  otp_identifier_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgClientUpdateMachineAuthResponse::otp_identifier() const {
  // @@protoc_insertion_point(field_get:CMsgClientUpdateMachineAuthResponse.otp_identifier)
  return _internal_otp_identifier();
}
inline void CMsgClientUpdateMachineAuthResponse::set_otp_identifier(const std::string& value) {
  _internal_set_otp_identifier(value);
  // @@protoc_insertion_point(field_set:CMsgClientUpdateMachineAuthResponse.otp_identifier)
}
inline std::string* CMsgClientUpdateMachineAuthResponse::mutable_otp_identifier() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUpdateMachineAuthResponse.otp_identifier)
  return _internal_mutable_otp_identifier();
}
inline const std::string& CMsgClientUpdateMachineAuthResponse::_internal_otp_identifier() const {
  return otp_identifier_.Get();
}
inline void CMsgClientUpdateMachineAuthResponse::_internal_set_otp_identifier(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  otp_identifier_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUpdateMachineAuthResponse::set_otp_identifier(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  otp_identifier_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUpdateMachineAuthResponse.otp_identifier)
}
inline void CMsgClientUpdateMachineAuthResponse::set_otp_identifier(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  otp_identifier_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUpdateMachineAuthResponse.otp_identifier)
}
inline void CMsgClientUpdateMachineAuthResponse::set_otp_identifier(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  otp_identifier_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUpdateMachineAuthResponse.otp_identifier)
}
inline std::string* CMsgClientUpdateMachineAuthResponse::_internal_mutable_otp_identifier() {
  _has_bits_[0] |= 0x00000004u;
  return otp_identifier_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUpdateMachineAuthResponse::release_otp_identifier() {
  // @@protoc_insertion_point(field_release:CMsgClientUpdateMachineAuthResponse.otp_identifier)
  if (!_internal_has_otp_identifier()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return otp_identifier_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUpdateMachineAuthResponse::set_allocated_otp_identifier(std::string* otp_identifier) {
  if (otp_identifier != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  otp_identifier_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), otp_identifier,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUpdateMachineAuthResponse.otp_identifier)
}

// -------------------------------------------------------------------

// CMsgClientRequestMachineAuth

// optional string filename = 1;
inline bool CMsgClientRequestMachineAuth::_internal_has_filename() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientRequestMachineAuth::has_filename() const {
  return _internal_has_filename();
}
inline void CMsgClientRequestMachineAuth::clear_filename() {
  filename_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientRequestMachineAuth::filename() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestMachineAuth.filename)
  return _internal_filename();
}
inline void CMsgClientRequestMachineAuth::set_filename(const std::string& value) {
  _internal_set_filename(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestMachineAuth.filename)
}
inline std::string* CMsgClientRequestMachineAuth::mutable_filename() {
  // @@protoc_insertion_point(field_mutable:CMsgClientRequestMachineAuth.filename)
  return _internal_mutable_filename();
}
inline const std::string& CMsgClientRequestMachineAuth::_internal_filename() const {
  return filename_.Get();
}
inline void CMsgClientRequestMachineAuth::_internal_set_filename(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientRequestMachineAuth::set_filename(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientRequestMachineAuth.filename)
}
inline void CMsgClientRequestMachineAuth::set_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientRequestMachineAuth.filename)
}
inline void CMsgClientRequestMachineAuth::set_filename(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientRequestMachineAuth.filename)
}
inline std::string* CMsgClientRequestMachineAuth::_internal_mutable_filename() {
  _has_bits_[0] |= 0x00000001u;
  return filename_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientRequestMachineAuth::release_filename() {
  // @@protoc_insertion_point(field_release:CMsgClientRequestMachineAuth.filename)
  if (!_internal_has_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return filename_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientRequestMachineAuth::set_allocated_filename(std::string* filename) {
  if (filename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  filename_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), filename,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientRequestMachineAuth.filename)
}

// optional uint32 eresult_sentryfile = 2;
inline bool CMsgClientRequestMachineAuth::_internal_has_eresult_sentryfile() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientRequestMachineAuth::has_eresult_sentryfile() const {
  return _internal_has_eresult_sentryfile();
}
inline void CMsgClientRequestMachineAuth::clear_eresult_sentryfile() {
  eresult_sentryfile_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestMachineAuth::_internal_eresult_sentryfile() const {
  return eresult_sentryfile_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestMachineAuth::eresult_sentryfile() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestMachineAuth.eresult_sentryfile)
  return _internal_eresult_sentryfile();
}
inline void CMsgClientRequestMachineAuth::_internal_set_eresult_sentryfile(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  eresult_sentryfile_ = value;
}
inline void CMsgClientRequestMachineAuth::set_eresult_sentryfile(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_eresult_sentryfile(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestMachineAuth.eresult_sentryfile)
}

// optional uint32 filesize = 3;
inline bool CMsgClientRequestMachineAuth::_internal_has_filesize() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgClientRequestMachineAuth::has_filesize() const {
  return _internal_has_filesize();
}
inline void CMsgClientRequestMachineAuth::clear_filesize() {
  filesize_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestMachineAuth::_internal_filesize() const {
  return filesize_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestMachineAuth::filesize() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestMachineAuth.filesize)
  return _internal_filesize();
}
inline void CMsgClientRequestMachineAuth::_internal_set_filesize(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  filesize_ = value;
}
inline void CMsgClientRequestMachineAuth::set_filesize(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_filesize(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestMachineAuth.filesize)
}

// optional bytes sha_sentryfile = 4;
inline bool CMsgClientRequestMachineAuth::_internal_has_sha_sentryfile() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientRequestMachineAuth::has_sha_sentryfile() const {
  return _internal_has_sha_sentryfile();
}
inline void CMsgClientRequestMachineAuth::clear_sha_sentryfile() {
  sha_sentryfile_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientRequestMachineAuth::sha_sentryfile() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestMachineAuth.sha_sentryfile)
  return _internal_sha_sentryfile();
}
inline void CMsgClientRequestMachineAuth::set_sha_sentryfile(const std::string& value) {
  _internal_set_sha_sentryfile(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestMachineAuth.sha_sentryfile)
}
inline std::string* CMsgClientRequestMachineAuth::mutable_sha_sentryfile() {
  // @@protoc_insertion_point(field_mutable:CMsgClientRequestMachineAuth.sha_sentryfile)
  return _internal_mutable_sha_sentryfile();
}
inline const std::string& CMsgClientRequestMachineAuth::_internal_sha_sentryfile() const {
  return sha_sentryfile_.Get();
}
inline void CMsgClientRequestMachineAuth::_internal_set_sha_sentryfile(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  sha_sentryfile_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientRequestMachineAuth::set_sha_sentryfile(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  sha_sentryfile_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientRequestMachineAuth.sha_sentryfile)
}
inline void CMsgClientRequestMachineAuth::set_sha_sentryfile(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  sha_sentryfile_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientRequestMachineAuth.sha_sentryfile)
}
inline void CMsgClientRequestMachineAuth::set_sha_sentryfile(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  sha_sentryfile_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientRequestMachineAuth.sha_sentryfile)
}
inline std::string* CMsgClientRequestMachineAuth::_internal_mutable_sha_sentryfile() {
  _has_bits_[0] |= 0x00000002u;
  return sha_sentryfile_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientRequestMachineAuth::release_sha_sentryfile() {
  // @@protoc_insertion_point(field_release:CMsgClientRequestMachineAuth.sha_sentryfile)
  if (!_internal_has_sha_sentryfile()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return sha_sentryfile_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientRequestMachineAuth::set_allocated_sha_sentryfile(std::string* sha_sentryfile) {
  if (sha_sentryfile != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sha_sentryfile_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sha_sentryfile,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientRequestMachineAuth.sha_sentryfile)
}

// optional int32 locaccount_action = 6;
inline bool CMsgClientRequestMachineAuth::_internal_has_locaccount_action() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgClientRequestMachineAuth::has_locaccount_action() const {
  return _internal_has_locaccount_action();
}
inline void CMsgClientRequestMachineAuth::clear_locaccount_action() {
  locaccount_action_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientRequestMachineAuth::_internal_locaccount_action() const {
  return locaccount_action_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientRequestMachineAuth::locaccount_action() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestMachineAuth.locaccount_action)
  return _internal_locaccount_action();
}
inline void CMsgClientRequestMachineAuth::_internal_set_locaccount_action(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  locaccount_action_ = value;
}
inline void CMsgClientRequestMachineAuth::set_locaccount_action(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_locaccount_action(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestMachineAuth.locaccount_action)
}

// optional uint32 otp_type = 7;
inline bool CMsgClientRequestMachineAuth::_internal_has_otp_type() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgClientRequestMachineAuth::has_otp_type() const {
  return _internal_has_otp_type();
}
inline void CMsgClientRequestMachineAuth::clear_otp_type() {
  otp_type_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestMachineAuth::_internal_otp_type() const {
  return otp_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestMachineAuth::otp_type() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestMachineAuth.otp_type)
  return _internal_otp_type();
}
inline void CMsgClientRequestMachineAuth::_internal_set_otp_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  otp_type_ = value;
}
inline void CMsgClientRequestMachineAuth::set_otp_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_otp_type(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestMachineAuth.otp_type)
}

// optional string otp_identifier = 8;
inline bool CMsgClientRequestMachineAuth::_internal_has_otp_identifier() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientRequestMachineAuth::has_otp_identifier() const {
  return _internal_has_otp_identifier();
}
inline void CMsgClientRequestMachineAuth::clear_otp_identifier() {
  otp_identifier_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgClientRequestMachineAuth::otp_identifier() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestMachineAuth.otp_identifier)
  return _internal_otp_identifier();
}
inline void CMsgClientRequestMachineAuth::set_otp_identifier(const std::string& value) {
  _internal_set_otp_identifier(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestMachineAuth.otp_identifier)
}
inline std::string* CMsgClientRequestMachineAuth::mutable_otp_identifier() {
  // @@protoc_insertion_point(field_mutable:CMsgClientRequestMachineAuth.otp_identifier)
  return _internal_mutable_otp_identifier();
}
inline const std::string& CMsgClientRequestMachineAuth::_internal_otp_identifier() const {
  return otp_identifier_.Get();
}
inline void CMsgClientRequestMachineAuth::_internal_set_otp_identifier(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  otp_identifier_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientRequestMachineAuth::set_otp_identifier(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  otp_identifier_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientRequestMachineAuth.otp_identifier)
}
inline void CMsgClientRequestMachineAuth::set_otp_identifier(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  otp_identifier_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientRequestMachineAuth.otp_identifier)
}
inline void CMsgClientRequestMachineAuth::set_otp_identifier(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  otp_identifier_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientRequestMachineAuth.otp_identifier)
}
inline std::string* CMsgClientRequestMachineAuth::_internal_mutable_otp_identifier() {
  _has_bits_[0] |= 0x00000004u;
  return otp_identifier_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientRequestMachineAuth::release_otp_identifier() {
  // @@protoc_insertion_point(field_release:CMsgClientRequestMachineAuth.otp_identifier)
  if (!_internal_has_otp_identifier()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return otp_identifier_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientRequestMachineAuth::set_allocated_otp_identifier(std::string* otp_identifier) {
  if (otp_identifier != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  otp_identifier_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), otp_identifier,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientRequestMachineAuth.otp_identifier)
}

// optional bytes otp_sharedsecret = 9;
inline bool CMsgClientRequestMachineAuth::_internal_has_otp_sharedsecret() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientRequestMachineAuth::has_otp_sharedsecret() const {
  return _internal_has_otp_sharedsecret();
}
inline void CMsgClientRequestMachineAuth::clear_otp_sharedsecret() {
  otp_sharedsecret_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CMsgClientRequestMachineAuth::otp_sharedsecret() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestMachineAuth.otp_sharedsecret)
  return _internal_otp_sharedsecret();
}
inline void CMsgClientRequestMachineAuth::set_otp_sharedsecret(const std::string& value) {
  _internal_set_otp_sharedsecret(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestMachineAuth.otp_sharedsecret)
}
inline std::string* CMsgClientRequestMachineAuth::mutable_otp_sharedsecret() {
  // @@protoc_insertion_point(field_mutable:CMsgClientRequestMachineAuth.otp_sharedsecret)
  return _internal_mutable_otp_sharedsecret();
}
inline const std::string& CMsgClientRequestMachineAuth::_internal_otp_sharedsecret() const {
  return otp_sharedsecret_.Get();
}
inline void CMsgClientRequestMachineAuth::_internal_set_otp_sharedsecret(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  otp_sharedsecret_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientRequestMachineAuth::set_otp_sharedsecret(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  otp_sharedsecret_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientRequestMachineAuth.otp_sharedsecret)
}
inline void CMsgClientRequestMachineAuth::set_otp_sharedsecret(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  otp_sharedsecret_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientRequestMachineAuth.otp_sharedsecret)
}
inline void CMsgClientRequestMachineAuth::set_otp_sharedsecret(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  otp_sharedsecret_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientRequestMachineAuth.otp_sharedsecret)
}
inline std::string* CMsgClientRequestMachineAuth::_internal_mutable_otp_sharedsecret() {
  _has_bits_[0] |= 0x00000008u;
  return otp_sharedsecret_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientRequestMachineAuth::release_otp_sharedsecret() {
  // @@protoc_insertion_point(field_release:CMsgClientRequestMachineAuth.otp_sharedsecret)
  if (!_internal_has_otp_sharedsecret()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return otp_sharedsecret_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientRequestMachineAuth::set_allocated_otp_sharedsecret(std::string* otp_sharedsecret) {
  if (otp_sharedsecret != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  otp_sharedsecret_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), otp_sharedsecret,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientRequestMachineAuth.otp_sharedsecret)
}

// optional uint32 otp_value = 10;
inline bool CMsgClientRequestMachineAuth::_internal_has_otp_value() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgClientRequestMachineAuth::has_otp_value() const {
  return _internal_has_otp_value();
}
inline void CMsgClientRequestMachineAuth::clear_otp_value() {
  otp_value_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestMachineAuth::_internal_otp_value() const {
  return otp_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestMachineAuth::otp_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestMachineAuth.otp_value)
  return _internal_otp_value();
}
inline void CMsgClientRequestMachineAuth::_internal_set_otp_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  otp_value_ = value;
}
inline void CMsgClientRequestMachineAuth::set_otp_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_otp_value(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestMachineAuth.otp_value)
}

// optional string machine_name = 11;
inline bool CMsgClientRequestMachineAuth::_internal_has_machine_name() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientRequestMachineAuth::has_machine_name() const {
  return _internal_has_machine_name();
}
inline void CMsgClientRequestMachineAuth::clear_machine_name() {
  machine_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& CMsgClientRequestMachineAuth::machine_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestMachineAuth.machine_name)
  return _internal_machine_name();
}
inline void CMsgClientRequestMachineAuth::set_machine_name(const std::string& value) {
  _internal_set_machine_name(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestMachineAuth.machine_name)
}
inline std::string* CMsgClientRequestMachineAuth::mutable_machine_name() {
  // @@protoc_insertion_point(field_mutable:CMsgClientRequestMachineAuth.machine_name)
  return _internal_mutable_machine_name();
}
inline const std::string& CMsgClientRequestMachineAuth::_internal_machine_name() const {
  return machine_name_.Get();
}
inline void CMsgClientRequestMachineAuth::_internal_set_machine_name(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  machine_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientRequestMachineAuth::set_machine_name(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  machine_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientRequestMachineAuth.machine_name)
}
inline void CMsgClientRequestMachineAuth::set_machine_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  machine_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientRequestMachineAuth.machine_name)
}
inline void CMsgClientRequestMachineAuth::set_machine_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000010u;
  machine_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientRequestMachineAuth.machine_name)
}
inline std::string* CMsgClientRequestMachineAuth::_internal_mutable_machine_name() {
  _has_bits_[0] |= 0x00000010u;
  return machine_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientRequestMachineAuth::release_machine_name() {
  // @@protoc_insertion_point(field_release:CMsgClientRequestMachineAuth.machine_name)
  if (!_internal_has_machine_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return machine_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientRequestMachineAuth::set_allocated_machine_name(std::string* machine_name) {
  if (machine_name != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  machine_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), machine_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientRequestMachineAuth.machine_name)
}

// optional string machine_name_userchosen = 12;
inline bool CMsgClientRequestMachineAuth::_internal_has_machine_name_userchosen() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientRequestMachineAuth::has_machine_name_userchosen() const {
  return _internal_has_machine_name_userchosen();
}
inline void CMsgClientRequestMachineAuth::clear_machine_name_userchosen() {
  machine_name_userchosen_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& CMsgClientRequestMachineAuth::machine_name_userchosen() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestMachineAuth.machine_name_userchosen)
  return _internal_machine_name_userchosen();
}
inline void CMsgClientRequestMachineAuth::set_machine_name_userchosen(const std::string& value) {
  _internal_set_machine_name_userchosen(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestMachineAuth.machine_name_userchosen)
}
inline std::string* CMsgClientRequestMachineAuth::mutable_machine_name_userchosen() {
  // @@protoc_insertion_point(field_mutable:CMsgClientRequestMachineAuth.machine_name_userchosen)
  return _internal_mutable_machine_name_userchosen();
}
inline const std::string& CMsgClientRequestMachineAuth::_internal_machine_name_userchosen() const {
  return machine_name_userchosen_.Get();
}
inline void CMsgClientRequestMachineAuth::_internal_set_machine_name_userchosen(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  machine_name_userchosen_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientRequestMachineAuth::set_machine_name_userchosen(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  machine_name_userchosen_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientRequestMachineAuth.machine_name_userchosen)
}
inline void CMsgClientRequestMachineAuth::set_machine_name_userchosen(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  machine_name_userchosen_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientRequestMachineAuth.machine_name_userchosen)
}
inline void CMsgClientRequestMachineAuth::set_machine_name_userchosen(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000020u;
  machine_name_userchosen_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientRequestMachineAuth.machine_name_userchosen)
}
inline std::string* CMsgClientRequestMachineAuth::_internal_mutable_machine_name_userchosen() {
  _has_bits_[0] |= 0x00000020u;
  return machine_name_userchosen_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientRequestMachineAuth::release_machine_name_userchosen() {
  // @@protoc_insertion_point(field_release:CMsgClientRequestMachineAuth.machine_name_userchosen)
  if (!_internal_has_machine_name_userchosen()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return machine_name_userchosen_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientRequestMachineAuth::set_allocated_machine_name_userchosen(std::string* machine_name_userchosen) {
  if (machine_name_userchosen != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  machine_name_userchosen_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), machine_name_userchosen,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientRequestMachineAuth.machine_name_userchosen)
}

// -------------------------------------------------------------------

// CMsgClientRequestMachineAuthResponse

// optional uint32 eresult = 1;
inline bool CMsgClientRequestMachineAuthResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientRequestMachineAuthResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientRequestMachineAuthResponse::clear_eresult() {
  eresult_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestMachineAuthResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestMachineAuthResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestMachineAuthResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientRequestMachineAuthResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
}
inline void CMsgClientRequestMachineAuthResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestMachineAuthResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgClientRegisterKey

// optional string key = 1;
inline bool CMsgClientRegisterKey::_internal_has_key() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientRegisterKey::has_key() const {
  return _internal_has_key();
}
inline void CMsgClientRegisterKey::clear_key() {
  key_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientRegisterKey::key() const {
  // @@protoc_insertion_point(field_get:CMsgClientRegisterKey.key)
  return _internal_key();
}
inline void CMsgClientRegisterKey::set_key(const std::string& value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:CMsgClientRegisterKey.key)
}
inline std::string* CMsgClientRegisterKey::mutable_key() {
  // @@protoc_insertion_point(field_mutable:CMsgClientRegisterKey.key)
  return _internal_mutable_key();
}
inline const std::string& CMsgClientRegisterKey::_internal_key() const {
  return key_.Get();
}
inline void CMsgClientRegisterKey::_internal_set_key(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientRegisterKey::set_key(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientRegisterKey.key)
}
inline void CMsgClientRegisterKey::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientRegisterKey.key)
}
inline void CMsgClientRegisterKey::set_key(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientRegisterKey.key)
}
inline std::string* CMsgClientRegisterKey::_internal_mutable_key() {
  _has_bits_[0] |= 0x00000001u;
  return key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientRegisterKey::release_key() {
  // @@protoc_insertion_point(field_release:CMsgClientRegisterKey.key)
  if (!_internal_has_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return key_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientRegisterKey::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientRegisterKey.key)
}

// -------------------------------------------------------------------

// CMsgClientPurchaseResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientPurchaseResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientPurchaseResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientPurchaseResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientPurchaseResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientPurchaseResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientPurchaseResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientPurchaseResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  eresult_ = value;
}
inline void CMsgClientPurchaseResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientPurchaseResponse.eresult)
}

// optional int32 purchase_result_details = 2;
inline bool CMsgClientPurchaseResponse::_internal_has_purchase_result_details() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientPurchaseResponse::has_purchase_result_details() const {
  return _internal_has_purchase_result_details();
}
inline void CMsgClientPurchaseResponse::clear_purchase_result_details() {
  purchase_result_details_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientPurchaseResponse::_internal_purchase_result_details() const {
  return purchase_result_details_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientPurchaseResponse::purchase_result_details() const {
  // @@protoc_insertion_point(field_get:CMsgClientPurchaseResponse.purchase_result_details)
  return _internal_purchase_result_details();
}
inline void CMsgClientPurchaseResponse::_internal_set_purchase_result_details(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  purchase_result_details_ = value;
}
inline void CMsgClientPurchaseResponse::set_purchase_result_details(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_purchase_result_details(value);
  // @@protoc_insertion_point(field_set:CMsgClientPurchaseResponse.purchase_result_details)
}

// optional bytes purchase_receipt_info = 3;
inline bool CMsgClientPurchaseResponse::_internal_has_purchase_receipt_info() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientPurchaseResponse::has_purchase_receipt_info() const {
  return _internal_has_purchase_receipt_info();
}
inline void CMsgClientPurchaseResponse::clear_purchase_receipt_info() {
  purchase_receipt_info_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientPurchaseResponse::purchase_receipt_info() const {
  // @@protoc_insertion_point(field_get:CMsgClientPurchaseResponse.purchase_receipt_info)
  return _internal_purchase_receipt_info();
}
inline void CMsgClientPurchaseResponse::set_purchase_receipt_info(const std::string& value) {
  _internal_set_purchase_receipt_info(value);
  // @@protoc_insertion_point(field_set:CMsgClientPurchaseResponse.purchase_receipt_info)
}
inline std::string* CMsgClientPurchaseResponse::mutable_purchase_receipt_info() {
  // @@protoc_insertion_point(field_mutable:CMsgClientPurchaseResponse.purchase_receipt_info)
  return _internal_mutable_purchase_receipt_info();
}
inline const std::string& CMsgClientPurchaseResponse::_internal_purchase_receipt_info() const {
  return purchase_receipt_info_.Get();
}
inline void CMsgClientPurchaseResponse::_internal_set_purchase_receipt_info(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  purchase_receipt_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientPurchaseResponse::set_purchase_receipt_info(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  purchase_receipt_info_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientPurchaseResponse.purchase_receipt_info)
}
inline void CMsgClientPurchaseResponse::set_purchase_receipt_info(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  purchase_receipt_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientPurchaseResponse.purchase_receipt_info)
}
inline void CMsgClientPurchaseResponse::set_purchase_receipt_info(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  purchase_receipt_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientPurchaseResponse.purchase_receipt_info)
}
inline std::string* CMsgClientPurchaseResponse::_internal_mutable_purchase_receipt_info() {
  _has_bits_[0] |= 0x00000001u;
  return purchase_receipt_info_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientPurchaseResponse::release_purchase_receipt_info() {
  // @@protoc_insertion_point(field_release:CMsgClientPurchaseResponse.purchase_receipt_info)
  if (!_internal_has_purchase_receipt_info()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return purchase_receipt_info_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientPurchaseResponse::set_allocated_purchase_receipt_info(std::string* purchase_receipt_info) {
  if (purchase_receipt_info != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  purchase_receipt_info_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), purchase_receipt_info,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientPurchaseResponse.purchase_receipt_info)
}

// -------------------------------------------------------------------

// CMsgClientActivateOEMLicense

// optional string bios_manufacturer = 1;
inline bool CMsgClientActivateOEMLicense::_internal_has_bios_manufacturer() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientActivateOEMLicense::has_bios_manufacturer() const {
  return _internal_has_bios_manufacturer();
}
inline void CMsgClientActivateOEMLicense::clear_bios_manufacturer() {
  bios_manufacturer_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientActivateOEMLicense::bios_manufacturer() const {
  // @@protoc_insertion_point(field_get:CMsgClientActivateOEMLicense.bios_manufacturer)
  return _internal_bios_manufacturer();
}
inline void CMsgClientActivateOEMLicense::set_bios_manufacturer(const std::string& value) {
  _internal_set_bios_manufacturer(value);
  // @@protoc_insertion_point(field_set:CMsgClientActivateOEMLicense.bios_manufacturer)
}
inline std::string* CMsgClientActivateOEMLicense::mutable_bios_manufacturer() {
  // @@protoc_insertion_point(field_mutable:CMsgClientActivateOEMLicense.bios_manufacturer)
  return _internal_mutable_bios_manufacturer();
}
inline const std::string& CMsgClientActivateOEMLicense::_internal_bios_manufacturer() const {
  return bios_manufacturer_.Get();
}
inline void CMsgClientActivateOEMLicense::_internal_set_bios_manufacturer(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  bios_manufacturer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientActivateOEMLicense::set_bios_manufacturer(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  bios_manufacturer_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientActivateOEMLicense.bios_manufacturer)
}
inline void CMsgClientActivateOEMLicense::set_bios_manufacturer(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  bios_manufacturer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientActivateOEMLicense.bios_manufacturer)
}
inline void CMsgClientActivateOEMLicense::set_bios_manufacturer(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  bios_manufacturer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientActivateOEMLicense.bios_manufacturer)
}
inline std::string* CMsgClientActivateOEMLicense::_internal_mutable_bios_manufacturer() {
  _has_bits_[0] |= 0x00000001u;
  return bios_manufacturer_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientActivateOEMLicense::release_bios_manufacturer() {
  // @@protoc_insertion_point(field_release:CMsgClientActivateOEMLicense.bios_manufacturer)
  if (!_internal_has_bios_manufacturer()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return bios_manufacturer_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientActivateOEMLicense::set_allocated_bios_manufacturer(std::string* bios_manufacturer) {
  if (bios_manufacturer != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  bios_manufacturer_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bios_manufacturer,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientActivateOEMLicense.bios_manufacturer)
}

// optional string bios_serialnumber = 2;
inline bool CMsgClientActivateOEMLicense::_internal_has_bios_serialnumber() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientActivateOEMLicense::has_bios_serialnumber() const {
  return _internal_has_bios_serialnumber();
}
inline void CMsgClientActivateOEMLicense::clear_bios_serialnumber() {
  bios_serialnumber_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientActivateOEMLicense::bios_serialnumber() const {
  // @@protoc_insertion_point(field_get:CMsgClientActivateOEMLicense.bios_serialnumber)
  return _internal_bios_serialnumber();
}
inline void CMsgClientActivateOEMLicense::set_bios_serialnumber(const std::string& value) {
  _internal_set_bios_serialnumber(value);
  // @@protoc_insertion_point(field_set:CMsgClientActivateOEMLicense.bios_serialnumber)
}
inline std::string* CMsgClientActivateOEMLicense::mutable_bios_serialnumber() {
  // @@protoc_insertion_point(field_mutable:CMsgClientActivateOEMLicense.bios_serialnumber)
  return _internal_mutable_bios_serialnumber();
}
inline const std::string& CMsgClientActivateOEMLicense::_internal_bios_serialnumber() const {
  return bios_serialnumber_.Get();
}
inline void CMsgClientActivateOEMLicense::_internal_set_bios_serialnumber(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  bios_serialnumber_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientActivateOEMLicense::set_bios_serialnumber(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  bios_serialnumber_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientActivateOEMLicense.bios_serialnumber)
}
inline void CMsgClientActivateOEMLicense::set_bios_serialnumber(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  bios_serialnumber_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientActivateOEMLicense.bios_serialnumber)
}
inline void CMsgClientActivateOEMLicense::set_bios_serialnumber(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  bios_serialnumber_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientActivateOEMLicense.bios_serialnumber)
}
inline std::string* CMsgClientActivateOEMLicense::_internal_mutable_bios_serialnumber() {
  _has_bits_[0] |= 0x00000002u;
  return bios_serialnumber_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientActivateOEMLicense::release_bios_serialnumber() {
  // @@protoc_insertion_point(field_release:CMsgClientActivateOEMLicense.bios_serialnumber)
  if (!_internal_has_bios_serialnumber()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return bios_serialnumber_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientActivateOEMLicense::set_allocated_bios_serialnumber(std::string* bios_serialnumber) {
  if (bios_serialnumber != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  bios_serialnumber_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bios_serialnumber,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientActivateOEMLicense.bios_serialnumber)
}

// optional bytes license_file = 3;
inline bool CMsgClientActivateOEMLicense::_internal_has_license_file() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientActivateOEMLicense::has_license_file() const {
  return _internal_has_license_file();
}
inline void CMsgClientActivateOEMLicense::clear_license_file() {
  license_file_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgClientActivateOEMLicense::license_file() const {
  // @@protoc_insertion_point(field_get:CMsgClientActivateOEMLicense.license_file)
  return _internal_license_file();
}
inline void CMsgClientActivateOEMLicense::set_license_file(const std::string& value) {
  _internal_set_license_file(value);
  // @@protoc_insertion_point(field_set:CMsgClientActivateOEMLicense.license_file)
}
inline std::string* CMsgClientActivateOEMLicense::mutable_license_file() {
  // @@protoc_insertion_point(field_mutable:CMsgClientActivateOEMLicense.license_file)
  return _internal_mutable_license_file();
}
inline const std::string& CMsgClientActivateOEMLicense::_internal_license_file() const {
  return license_file_.Get();
}
inline void CMsgClientActivateOEMLicense::_internal_set_license_file(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  license_file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientActivateOEMLicense::set_license_file(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  license_file_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientActivateOEMLicense.license_file)
}
inline void CMsgClientActivateOEMLicense::set_license_file(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  license_file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientActivateOEMLicense.license_file)
}
inline void CMsgClientActivateOEMLicense::set_license_file(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  license_file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientActivateOEMLicense.license_file)
}
inline std::string* CMsgClientActivateOEMLicense::_internal_mutable_license_file() {
  _has_bits_[0] |= 0x00000004u;
  return license_file_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientActivateOEMLicense::release_license_file() {
  // @@protoc_insertion_point(field_release:CMsgClientActivateOEMLicense.license_file)
  if (!_internal_has_license_file()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return license_file_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientActivateOEMLicense::set_allocated_license_file(std::string* license_file) {
  if (license_file != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  license_file_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), license_file,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientActivateOEMLicense.license_file)
}

// optional string mainboard_manufacturer = 4;
inline bool CMsgClientActivateOEMLicense::_internal_has_mainboard_manufacturer() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientActivateOEMLicense::has_mainboard_manufacturer() const {
  return _internal_has_mainboard_manufacturer();
}
inline void CMsgClientActivateOEMLicense::clear_mainboard_manufacturer() {
  mainboard_manufacturer_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CMsgClientActivateOEMLicense::mainboard_manufacturer() const {
  // @@protoc_insertion_point(field_get:CMsgClientActivateOEMLicense.mainboard_manufacturer)
  return _internal_mainboard_manufacturer();
}
inline void CMsgClientActivateOEMLicense::set_mainboard_manufacturer(const std::string& value) {
  _internal_set_mainboard_manufacturer(value);
  // @@protoc_insertion_point(field_set:CMsgClientActivateOEMLicense.mainboard_manufacturer)
}
inline std::string* CMsgClientActivateOEMLicense::mutable_mainboard_manufacturer() {
  // @@protoc_insertion_point(field_mutable:CMsgClientActivateOEMLicense.mainboard_manufacturer)
  return _internal_mutable_mainboard_manufacturer();
}
inline const std::string& CMsgClientActivateOEMLicense::_internal_mainboard_manufacturer() const {
  return mainboard_manufacturer_.Get();
}
inline void CMsgClientActivateOEMLicense::_internal_set_mainboard_manufacturer(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  mainboard_manufacturer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientActivateOEMLicense::set_mainboard_manufacturer(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  mainboard_manufacturer_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientActivateOEMLicense.mainboard_manufacturer)
}
inline void CMsgClientActivateOEMLicense::set_mainboard_manufacturer(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  mainboard_manufacturer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientActivateOEMLicense.mainboard_manufacturer)
}
inline void CMsgClientActivateOEMLicense::set_mainboard_manufacturer(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  mainboard_manufacturer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientActivateOEMLicense.mainboard_manufacturer)
}
inline std::string* CMsgClientActivateOEMLicense::_internal_mutable_mainboard_manufacturer() {
  _has_bits_[0] |= 0x00000008u;
  return mainboard_manufacturer_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientActivateOEMLicense::release_mainboard_manufacturer() {
  // @@protoc_insertion_point(field_release:CMsgClientActivateOEMLicense.mainboard_manufacturer)
  if (!_internal_has_mainboard_manufacturer()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return mainboard_manufacturer_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientActivateOEMLicense::set_allocated_mainboard_manufacturer(std::string* mainboard_manufacturer) {
  if (mainboard_manufacturer != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  mainboard_manufacturer_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mainboard_manufacturer,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientActivateOEMLicense.mainboard_manufacturer)
}

// optional string mainboard_product = 5;
inline bool CMsgClientActivateOEMLicense::_internal_has_mainboard_product() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientActivateOEMLicense::has_mainboard_product() const {
  return _internal_has_mainboard_product();
}
inline void CMsgClientActivateOEMLicense::clear_mainboard_product() {
  mainboard_product_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& CMsgClientActivateOEMLicense::mainboard_product() const {
  // @@protoc_insertion_point(field_get:CMsgClientActivateOEMLicense.mainboard_product)
  return _internal_mainboard_product();
}
inline void CMsgClientActivateOEMLicense::set_mainboard_product(const std::string& value) {
  _internal_set_mainboard_product(value);
  // @@protoc_insertion_point(field_set:CMsgClientActivateOEMLicense.mainboard_product)
}
inline std::string* CMsgClientActivateOEMLicense::mutable_mainboard_product() {
  // @@protoc_insertion_point(field_mutable:CMsgClientActivateOEMLicense.mainboard_product)
  return _internal_mutable_mainboard_product();
}
inline const std::string& CMsgClientActivateOEMLicense::_internal_mainboard_product() const {
  return mainboard_product_.Get();
}
inline void CMsgClientActivateOEMLicense::_internal_set_mainboard_product(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  mainboard_product_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientActivateOEMLicense::set_mainboard_product(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  mainboard_product_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientActivateOEMLicense.mainboard_product)
}
inline void CMsgClientActivateOEMLicense::set_mainboard_product(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  mainboard_product_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientActivateOEMLicense.mainboard_product)
}
inline void CMsgClientActivateOEMLicense::set_mainboard_product(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000010u;
  mainboard_product_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientActivateOEMLicense.mainboard_product)
}
inline std::string* CMsgClientActivateOEMLicense::_internal_mutable_mainboard_product() {
  _has_bits_[0] |= 0x00000010u;
  return mainboard_product_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientActivateOEMLicense::release_mainboard_product() {
  // @@protoc_insertion_point(field_release:CMsgClientActivateOEMLicense.mainboard_product)
  if (!_internal_has_mainboard_product()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return mainboard_product_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientActivateOEMLicense::set_allocated_mainboard_product(std::string* mainboard_product) {
  if (mainboard_product != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  mainboard_product_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mainboard_product,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientActivateOEMLicense.mainboard_product)
}

// optional string mainboard_serialnumber = 6;
inline bool CMsgClientActivateOEMLicense::_internal_has_mainboard_serialnumber() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientActivateOEMLicense::has_mainboard_serialnumber() const {
  return _internal_has_mainboard_serialnumber();
}
inline void CMsgClientActivateOEMLicense::clear_mainboard_serialnumber() {
  mainboard_serialnumber_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& CMsgClientActivateOEMLicense::mainboard_serialnumber() const {
  // @@protoc_insertion_point(field_get:CMsgClientActivateOEMLicense.mainboard_serialnumber)
  return _internal_mainboard_serialnumber();
}
inline void CMsgClientActivateOEMLicense::set_mainboard_serialnumber(const std::string& value) {
  _internal_set_mainboard_serialnumber(value);
  // @@protoc_insertion_point(field_set:CMsgClientActivateOEMLicense.mainboard_serialnumber)
}
inline std::string* CMsgClientActivateOEMLicense::mutable_mainboard_serialnumber() {
  // @@protoc_insertion_point(field_mutable:CMsgClientActivateOEMLicense.mainboard_serialnumber)
  return _internal_mutable_mainboard_serialnumber();
}
inline const std::string& CMsgClientActivateOEMLicense::_internal_mainboard_serialnumber() const {
  return mainboard_serialnumber_.Get();
}
inline void CMsgClientActivateOEMLicense::_internal_set_mainboard_serialnumber(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  mainboard_serialnumber_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientActivateOEMLicense::set_mainboard_serialnumber(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  mainboard_serialnumber_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientActivateOEMLicense.mainboard_serialnumber)
}
inline void CMsgClientActivateOEMLicense::set_mainboard_serialnumber(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  mainboard_serialnumber_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientActivateOEMLicense.mainboard_serialnumber)
}
inline void CMsgClientActivateOEMLicense::set_mainboard_serialnumber(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000020u;
  mainboard_serialnumber_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientActivateOEMLicense.mainboard_serialnumber)
}
inline std::string* CMsgClientActivateOEMLicense::_internal_mutable_mainboard_serialnumber() {
  _has_bits_[0] |= 0x00000020u;
  return mainboard_serialnumber_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientActivateOEMLicense::release_mainboard_serialnumber() {
  // @@protoc_insertion_point(field_release:CMsgClientActivateOEMLicense.mainboard_serialnumber)
  if (!_internal_has_mainboard_serialnumber()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return mainboard_serialnumber_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientActivateOEMLicense::set_allocated_mainboard_serialnumber(std::string* mainboard_serialnumber) {
  if (mainboard_serialnumber != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  mainboard_serialnumber_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mainboard_serialnumber,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientActivateOEMLicense.mainboard_serialnumber)
}

// -------------------------------------------------------------------

// CMsgClientRegisterOEMMachine

// optional bytes oem_register_file = 1;
inline bool CMsgClientRegisterOEMMachine::_internal_has_oem_register_file() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientRegisterOEMMachine::has_oem_register_file() const {
  return _internal_has_oem_register_file();
}
inline void CMsgClientRegisterOEMMachine::clear_oem_register_file() {
  oem_register_file_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientRegisterOEMMachine::oem_register_file() const {
  // @@protoc_insertion_point(field_get:CMsgClientRegisterOEMMachine.oem_register_file)
  return _internal_oem_register_file();
}
inline void CMsgClientRegisterOEMMachine::set_oem_register_file(const std::string& value) {
  _internal_set_oem_register_file(value);
  // @@protoc_insertion_point(field_set:CMsgClientRegisterOEMMachine.oem_register_file)
}
inline std::string* CMsgClientRegisterOEMMachine::mutable_oem_register_file() {
  // @@protoc_insertion_point(field_mutable:CMsgClientRegisterOEMMachine.oem_register_file)
  return _internal_mutable_oem_register_file();
}
inline const std::string& CMsgClientRegisterOEMMachine::_internal_oem_register_file() const {
  return oem_register_file_.Get();
}
inline void CMsgClientRegisterOEMMachine::_internal_set_oem_register_file(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  oem_register_file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientRegisterOEMMachine::set_oem_register_file(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  oem_register_file_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientRegisterOEMMachine.oem_register_file)
}
inline void CMsgClientRegisterOEMMachine::set_oem_register_file(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  oem_register_file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientRegisterOEMMachine.oem_register_file)
}
inline void CMsgClientRegisterOEMMachine::set_oem_register_file(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  oem_register_file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientRegisterOEMMachine.oem_register_file)
}
inline std::string* CMsgClientRegisterOEMMachine::_internal_mutable_oem_register_file() {
  _has_bits_[0] |= 0x00000001u;
  return oem_register_file_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientRegisterOEMMachine::release_oem_register_file() {
  // @@protoc_insertion_point(field_release:CMsgClientRegisterOEMMachine.oem_register_file)
  if (!_internal_has_oem_register_file()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return oem_register_file_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientRegisterOEMMachine::set_allocated_oem_register_file(std::string* oem_register_file) {
  if (oem_register_file != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  oem_register_file_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), oem_register_file,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientRegisterOEMMachine.oem_register_file)
}

// -------------------------------------------------------------------

// CMsgClientRegisterOEMMachineResponse

// optional uint32 eresult = 1;
inline bool CMsgClientRegisterOEMMachineResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientRegisterOEMMachineResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientRegisterOEMMachineResponse::clear_eresult() {
  eresult_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRegisterOEMMachineResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRegisterOEMMachineResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientRegisterOEMMachineResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientRegisterOEMMachineResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
}
inline void CMsgClientRegisterOEMMachineResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientRegisterOEMMachineResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgClientPurchaseWithMachineID

// optional uint32 package_id = 1;
inline bool CMsgClientPurchaseWithMachineID::_internal_has_package_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientPurchaseWithMachineID::has_package_id() const {
  return _internal_has_package_id();
}
inline void CMsgClientPurchaseWithMachineID::clear_package_id() {
  package_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientPurchaseWithMachineID::_internal_package_id() const {
  return package_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientPurchaseWithMachineID::package_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientPurchaseWithMachineID.package_id)
  return _internal_package_id();
}
inline void CMsgClientPurchaseWithMachineID::_internal_set_package_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  package_id_ = value;
}
inline void CMsgClientPurchaseWithMachineID::set_package_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_package_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientPurchaseWithMachineID.package_id)
}

// optional bytes machine_info = 2;
inline bool CMsgClientPurchaseWithMachineID::_internal_has_machine_info() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientPurchaseWithMachineID::has_machine_info() const {
  return _internal_has_machine_info();
}
inline void CMsgClientPurchaseWithMachineID::clear_machine_info() {
  machine_info_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientPurchaseWithMachineID::machine_info() const {
  // @@protoc_insertion_point(field_get:CMsgClientPurchaseWithMachineID.machine_info)
  return _internal_machine_info();
}
inline void CMsgClientPurchaseWithMachineID::set_machine_info(const std::string& value) {
  _internal_set_machine_info(value);
  // @@protoc_insertion_point(field_set:CMsgClientPurchaseWithMachineID.machine_info)
}
inline std::string* CMsgClientPurchaseWithMachineID::mutable_machine_info() {
  // @@protoc_insertion_point(field_mutable:CMsgClientPurchaseWithMachineID.machine_info)
  return _internal_mutable_machine_info();
}
inline const std::string& CMsgClientPurchaseWithMachineID::_internal_machine_info() const {
  return machine_info_.Get();
}
inline void CMsgClientPurchaseWithMachineID::_internal_set_machine_info(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  machine_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientPurchaseWithMachineID::set_machine_info(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  machine_info_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientPurchaseWithMachineID.machine_info)
}
inline void CMsgClientPurchaseWithMachineID::set_machine_info(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  machine_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientPurchaseWithMachineID.machine_info)
}
inline void CMsgClientPurchaseWithMachineID::set_machine_info(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  machine_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientPurchaseWithMachineID.machine_info)
}
inline std::string* CMsgClientPurchaseWithMachineID::_internal_mutable_machine_info() {
  _has_bits_[0] |= 0x00000001u;
  return machine_info_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientPurchaseWithMachineID::release_machine_info() {
  // @@protoc_insertion_point(field_release:CMsgClientPurchaseWithMachineID.machine_info)
  if (!_internal_has_machine_info()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return machine_info_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientPurchaseWithMachineID::set_allocated_machine_info(std::string* machine_info) {
  if (machine_info != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  machine_info_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), machine_info,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientPurchaseWithMachineID.machine_info)
}

// -------------------------------------------------------------------

// CMsgTrading_InitiateTradeRequest

// optional uint32 trade_request_id = 1;
inline bool CMsgTrading_InitiateTradeRequest::_internal_has_trade_request_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgTrading_InitiateTradeRequest::has_trade_request_id() const {
  return _internal_has_trade_request_id();
}
inline void CMsgTrading_InitiateTradeRequest::clear_trade_request_id() {
  trade_request_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgTrading_InitiateTradeRequest::_internal_trade_request_id() const {
  return trade_request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgTrading_InitiateTradeRequest::trade_request_id() const {
  // @@protoc_insertion_point(field_get:CMsgTrading_InitiateTradeRequest.trade_request_id)
  return _internal_trade_request_id();
}
inline void CMsgTrading_InitiateTradeRequest::_internal_set_trade_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  trade_request_id_ = value;
}
inline void CMsgTrading_InitiateTradeRequest::set_trade_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_trade_request_id(value);
  // @@protoc_insertion_point(field_set:CMsgTrading_InitiateTradeRequest.trade_request_id)
}

// optional uint64 other_steamid = 2;
inline bool CMsgTrading_InitiateTradeRequest::_internal_has_other_steamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgTrading_InitiateTradeRequest::has_other_steamid() const {
  return _internal_has_other_steamid();
}
inline void CMsgTrading_InitiateTradeRequest::clear_other_steamid() {
  other_steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgTrading_InitiateTradeRequest::_internal_other_steamid() const {
  return other_steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgTrading_InitiateTradeRequest::other_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgTrading_InitiateTradeRequest.other_steamid)
  return _internal_other_steamid();
}
inline void CMsgTrading_InitiateTradeRequest::_internal_set_other_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  other_steamid_ = value;
}
inline void CMsgTrading_InitiateTradeRequest::set_other_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_other_steamid(value);
  // @@protoc_insertion_point(field_set:CMsgTrading_InitiateTradeRequest.other_steamid)
}

// optional string other_name = 3;
inline bool CMsgTrading_InitiateTradeRequest::_internal_has_other_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgTrading_InitiateTradeRequest::has_other_name() const {
  return _internal_has_other_name();
}
inline void CMsgTrading_InitiateTradeRequest::clear_other_name() {
  other_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgTrading_InitiateTradeRequest::other_name() const {
  // @@protoc_insertion_point(field_get:CMsgTrading_InitiateTradeRequest.other_name)
  return _internal_other_name();
}
inline void CMsgTrading_InitiateTradeRequest::set_other_name(const std::string& value) {
  _internal_set_other_name(value);
  // @@protoc_insertion_point(field_set:CMsgTrading_InitiateTradeRequest.other_name)
}
inline std::string* CMsgTrading_InitiateTradeRequest::mutable_other_name() {
  // @@protoc_insertion_point(field_mutable:CMsgTrading_InitiateTradeRequest.other_name)
  return _internal_mutable_other_name();
}
inline const std::string& CMsgTrading_InitiateTradeRequest::_internal_other_name() const {
  return other_name_.Get();
}
inline void CMsgTrading_InitiateTradeRequest::_internal_set_other_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  other_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgTrading_InitiateTradeRequest::set_other_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  other_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgTrading_InitiateTradeRequest.other_name)
}
inline void CMsgTrading_InitiateTradeRequest::set_other_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  other_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgTrading_InitiateTradeRequest.other_name)
}
inline void CMsgTrading_InitiateTradeRequest::set_other_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  other_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgTrading_InitiateTradeRequest.other_name)
}
inline std::string* CMsgTrading_InitiateTradeRequest::_internal_mutable_other_name() {
  _has_bits_[0] |= 0x00000001u;
  return other_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgTrading_InitiateTradeRequest::release_other_name() {
  // @@protoc_insertion_point(field_release:CMsgTrading_InitiateTradeRequest.other_name)
  if (!_internal_has_other_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return other_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgTrading_InitiateTradeRequest::set_allocated_other_name(std::string* other_name) {
  if (other_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  other_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), other_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgTrading_InitiateTradeRequest.other_name)
}

// -------------------------------------------------------------------

// CMsgTrading_InitiateTradeResponse

// optional uint32 response = 1;
inline bool CMsgTrading_InitiateTradeResponse::_internal_has_response() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgTrading_InitiateTradeResponse::has_response() const {
  return _internal_has_response();
}
inline void CMsgTrading_InitiateTradeResponse::clear_response() {
  response_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgTrading_InitiateTradeResponse::_internal_response() const {
  return response_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgTrading_InitiateTradeResponse::response() const {
  // @@protoc_insertion_point(field_get:CMsgTrading_InitiateTradeResponse.response)
  return _internal_response();
}
inline void CMsgTrading_InitiateTradeResponse::_internal_set_response(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  response_ = value;
}
inline void CMsgTrading_InitiateTradeResponse::set_response(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgTrading_InitiateTradeResponse.response)
}

// optional uint32 trade_request_id = 2;
inline bool CMsgTrading_InitiateTradeResponse::_internal_has_trade_request_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgTrading_InitiateTradeResponse::has_trade_request_id() const {
  return _internal_has_trade_request_id();
}
inline void CMsgTrading_InitiateTradeResponse::clear_trade_request_id() {
  trade_request_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgTrading_InitiateTradeResponse::_internal_trade_request_id() const {
  return trade_request_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgTrading_InitiateTradeResponse::trade_request_id() const {
  // @@protoc_insertion_point(field_get:CMsgTrading_InitiateTradeResponse.trade_request_id)
  return _internal_trade_request_id();
}
inline void CMsgTrading_InitiateTradeResponse::_internal_set_trade_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  trade_request_id_ = value;
}
inline void CMsgTrading_InitiateTradeResponse::set_trade_request_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_trade_request_id(value);
  // @@protoc_insertion_point(field_set:CMsgTrading_InitiateTradeResponse.trade_request_id)
}

// optional uint64 other_steamid = 3;
inline bool CMsgTrading_InitiateTradeResponse::_internal_has_other_steamid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgTrading_InitiateTradeResponse::has_other_steamid() const {
  return _internal_has_other_steamid();
}
inline void CMsgTrading_InitiateTradeResponse::clear_other_steamid() {
  other_steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgTrading_InitiateTradeResponse::_internal_other_steamid() const {
  return other_steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgTrading_InitiateTradeResponse::other_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgTrading_InitiateTradeResponse.other_steamid)
  return _internal_other_steamid();
}
inline void CMsgTrading_InitiateTradeResponse::_internal_set_other_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  other_steamid_ = value;
}
inline void CMsgTrading_InitiateTradeResponse::set_other_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_other_steamid(value);
  // @@protoc_insertion_point(field_set:CMsgTrading_InitiateTradeResponse.other_steamid)
}

// optional uint32 steamguard_required_days = 4;
inline bool CMsgTrading_InitiateTradeResponse::_internal_has_steamguard_required_days() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgTrading_InitiateTradeResponse::has_steamguard_required_days() const {
  return _internal_has_steamguard_required_days();
}
inline void CMsgTrading_InitiateTradeResponse::clear_steamguard_required_days() {
  steamguard_required_days_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgTrading_InitiateTradeResponse::_internal_steamguard_required_days() const {
  return steamguard_required_days_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgTrading_InitiateTradeResponse::steamguard_required_days() const {
  // @@protoc_insertion_point(field_get:CMsgTrading_InitiateTradeResponse.steamguard_required_days)
  return _internal_steamguard_required_days();
}
inline void CMsgTrading_InitiateTradeResponse::_internal_set_steamguard_required_days(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  steamguard_required_days_ = value;
}
inline void CMsgTrading_InitiateTradeResponse::set_steamguard_required_days(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_steamguard_required_days(value);
  // @@protoc_insertion_point(field_set:CMsgTrading_InitiateTradeResponse.steamguard_required_days)
}

// optional uint32 new_device_cooldown_days = 5;
inline bool CMsgTrading_InitiateTradeResponse::_internal_has_new_device_cooldown_days() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgTrading_InitiateTradeResponse::has_new_device_cooldown_days() const {
  return _internal_has_new_device_cooldown_days();
}
inline void CMsgTrading_InitiateTradeResponse::clear_new_device_cooldown_days() {
  new_device_cooldown_days_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgTrading_InitiateTradeResponse::_internal_new_device_cooldown_days() const {
  return new_device_cooldown_days_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgTrading_InitiateTradeResponse::new_device_cooldown_days() const {
  // @@protoc_insertion_point(field_get:CMsgTrading_InitiateTradeResponse.new_device_cooldown_days)
  return _internal_new_device_cooldown_days();
}
inline void CMsgTrading_InitiateTradeResponse::_internal_set_new_device_cooldown_days(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  new_device_cooldown_days_ = value;
}
inline void CMsgTrading_InitiateTradeResponse::set_new_device_cooldown_days(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_new_device_cooldown_days(value);
  // @@protoc_insertion_point(field_set:CMsgTrading_InitiateTradeResponse.new_device_cooldown_days)
}

// optional uint32 default_password_reset_probation_days = 6;
inline bool CMsgTrading_InitiateTradeResponse::_internal_has_default_password_reset_probation_days() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgTrading_InitiateTradeResponse::has_default_password_reset_probation_days() const {
  return _internal_has_default_password_reset_probation_days();
}
inline void CMsgTrading_InitiateTradeResponse::clear_default_password_reset_probation_days() {
  default_password_reset_probation_days_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgTrading_InitiateTradeResponse::_internal_default_password_reset_probation_days() const {
  return default_password_reset_probation_days_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgTrading_InitiateTradeResponse::default_password_reset_probation_days() const {
  // @@protoc_insertion_point(field_get:CMsgTrading_InitiateTradeResponse.default_password_reset_probation_days)
  return _internal_default_password_reset_probation_days();
}
inline void CMsgTrading_InitiateTradeResponse::_internal_set_default_password_reset_probation_days(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  default_password_reset_probation_days_ = value;
}
inline void CMsgTrading_InitiateTradeResponse::set_default_password_reset_probation_days(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_default_password_reset_probation_days(value);
  // @@protoc_insertion_point(field_set:CMsgTrading_InitiateTradeResponse.default_password_reset_probation_days)
}

// optional uint32 password_reset_probation_days = 7;
inline bool CMsgTrading_InitiateTradeResponse::_internal_has_password_reset_probation_days() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgTrading_InitiateTradeResponse::has_password_reset_probation_days() const {
  return _internal_has_password_reset_probation_days();
}
inline void CMsgTrading_InitiateTradeResponse::clear_password_reset_probation_days() {
  password_reset_probation_days_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgTrading_InitiateTradeResponse::_internal_password_reset_probation_days() const {
  return password_reset_probation_days_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgTrading_InitiateTradeResponse::password_reset_probation_days() const {
  // @@protoc_insertion_point(field_get:CMsgTrading_InitiateTradeResponse.password_reset_probation_days)
  return _internal_password_reset_probation_days();
}
inline void CMsgTrading_InitiateTradeResponse::_internal_set_password_reset_probation_days(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  password_reset_probation_days_ = value;
}
inline void CMsgTrading_InitiateTradeResponse::set_password_reset_probation_days(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_password_reset_probation_days(value);
  // @@protoc_insertion_point(field_set:CMsgTrading_InitiateTradeResponse.password_reset_probation_days)
}

// optional uint32 default_email_change_probation_days = 8;
inline bool CMsgTrading_InitiateTradeResponse::_internal_has_default_email_change_probation_days() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgTrading_InitiateTradeResponse::has_default_email_change_probation_days() const {
  return _internal_has_default_email_change_probation_days();
}
inline void CMsgTrading_InitiateTradeResponse::clear_default_email_change_probation_days() {
  default_email_change_probation_days_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgTrading_InitiateTradeResponse::_internal_default_email_change_probation_days() const {
  return default_email_change_probation_days_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgTrading_InitiateTradeResponse::default_email_change_probation_days() const {
  // @@protoc_insertion_point(field_get:CMsgTrading_InitiateTradeResponse.default_email_change_probation_days)
  return _internal_default_email_change_probation_days();
}
inline void CMsgTrading_InitiateTradeResponse::_internal_set_default_email_change_probation_days(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  default_email_change_probation_days_ = value;
}
inline void CMsgTrading_InitiateTradeResponse::set_default_email_change_probation_days(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_default_email_change_probation_days(value);
  // @@protoc_insertion_point(field_set:CMsgTrading_InitiateTradeResponse.default_email_change_probation_days)
}

// optional uint32 email_change_probation_days = 9;
inline bool CMsgTrading_InitiateTradeResponse::_internal_has_email_change_probation_days() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgTrading_InitiateTradeResponse::has_email_change_probation_days() const {
  return _internal_has_email_change_probation_days();
}
inline void CMsgTrading_InitiateTradeResponse::clear_email_change_probation_days() {
  email_change_probation_days_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgTrading_InitiateTradeResponse::_internal_email_change_probation_days() const {
  return email_change_probation_days_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgTrading_InitiateTradeResponse::email_change_probation_days() const {
  // @@protoc_insertion_point(field_get:CMsgTrading_InitiateTradeResponse.email_change_probation_days)
  return _internal_email_change_probation_days();
}
inline void CMsgTrading_InitiateTradeResponse::_internal_set_email_change_probation_days(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  email_change_probation_days_ = value;
}
inline void CMsgTrading_InitiateTradeResponse::set_email_change_probation_days(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_email_change_probation_days(value);
  // @@protoc_insertion_point(field_set:CMsgTrading_InitiateTradeResponse.email_change_probation_days)
}

// -------------------------------------------------------------------

// CMsgTrading_CancelTradeRequest

// optional uint64 other_steamid = 1;
inline bool CMsgTrading_CancelTradeRequest::_internal_has_other_steamid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgTrading_CancelTradeRequest::has_other_steamid() const {
  return _internal_has_other_steamid();
}
inline void CMsgTrading_CancelTradeRequest::clear_other_steamid() {
  other_steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgTrading_CancelTradeRequest::_internal_other_steamid() const {
  return other_steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgTrading_CancelTradeRequest::other_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgTrading_CancelTradeRequest.other_steamid)
  return _internal_other_steamid();
}
inline void CMsgTrading_CancelTradeRequest::_internal_set_other_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  other_steamid_ = value;
}
inline void CMsgTrading_CancelTradeRequest::set_other_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_other_steamid(value);
  // @@protoc_insertion_point(field_set:CMsgTrading_CancelTradeRequest.other_steamid)
}

// -------------------------------------------------------------------

// CMsgTrading_StartSession

// optional uint64 other_steamid = 1;
inline bool CMsgTrading_StartSession::_internal_has_other_steamid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgTrading_StartSession::has_other_steamid() const {
  return _internal_has_other_steamid();
}
inline void CMsgTrading_StartSession::clear_other_steamid() {
  other_steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgTrading_StartSession::_internal_other_steamid() const {
  return other_steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgTrading_StartSession::other_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgTrading_StartSession.other_steamid)
  return _internal_other_steamid();
}
inline void CMsgTrading_StartSession::_internal_set_other_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  other_steamid_ = value;
}
inline void CMsgTrading_StartSession::set_other_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_other_steamid(value);
  // @@protoc_insertion_point(field_set:CMsgTrading_StartSession.other_steamid)
}

// -------------------------------------------------------------------

// CMsgClientGetCDNAuthToken

// optional uint32 depot_id = 1;
inline bool CMsgClientGetCDNAuthToken::_internal_has_depot_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientGetCDNAuthToken::has_depot_id() const {
  return _internal_has_depot_id();
}
inline void CMsgClientGetCDNAuthToken::clear_depot_id() {
  depot_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetCDNAuthToken::_internal_depot_id() const {
  return depot_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetCDNAuthToken::depot_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetCDNAuthToken.depot_id)
  return _internal_depot_id();
}
inline void CMsgClientGetCDNAuthToken::_internal_set_depot_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  depot_id_ = value;
}
inline void CMsgClientGetCDNAuthToken::set_depot_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_depot_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetCDNAuthToken.depot_id)
}

// optional string host_name = 2;
inline bool CMsgClientGetCDNAuthToken::_internal_has_host_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientGetCDNAuthToken::has_host_name() const {
  return _internal_has_host_name();
}
inline void CMsgClientGetCDNAuthToken::clear_host_name() {
  host_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientGetCDNAuthToken::host_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetCDNAuthToken.host_name)
  return _internal_host_name();
}
inline void CMsgClientGetCDNAuthToken::set_host_name(const std::string& value) {
  _internal_set_host_name(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetCDNAuthToken.host_name)
}
inline std::string* CMsgClientGetCDNAuthToken::mutable_host_name() {
  // @@protoc_insertion_point(field_mutable:CMsgClientGetCDNAuthToken.host_name)
  return _internal_mutable_host_name();
}
inline const std::string& CMsgClientGetCDNAuthToken::_internal_host_name() const {
  return host_name_.Get();
}
inline void CMsgClientGetCDNAuthToken::_internal_set_host_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  host_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientGetCDNAuthToken::set_host_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  host_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientGetCDNAuthToken.host_name)
}
inline void CMsgClientGetCDNAuthToken::set_host_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  host_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientGetCDNAuthToken.host_name)
}
inline void CMsgClientGetCDNAuthToken::set_host_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  host_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientGetCDNAuthToken.host_name)
}
inline std::string* CMsgClientGetCDNAuthToken::_internal_mutable_host_name() {
  _has_bits_[0] |= 0x00000001u;
  return host_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientGetCDNAuthToken::release_host_name() {
  // @@protoc_insertion_point(field_release:CMsgClientGetCDNAuthToken.host_name)
  if (!_internal_has_host_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return host_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientGetCDNAuthToken::set_allocated_host_name(std::string* host_name) {
  if (host_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  host_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), host_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientGetCDNAuthToken.host_name)
}

// optional uint32 app_id = 3;
inline bool CMsgClientGetCDNAuthToken::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientGetCDNAuthToken::has_app_id() const {
  return _internal_has_app_id();
}
inline void CMsgClientGetCDNAuthToken::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetCDNAuthToken::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetCDNAuthToken::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetCDNAuthToken.app_id)
  return _internal_app_id();
}
inline void CMsgClientGetCDNAuthToken::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  app_id_ = value;
}
inline void CMsgClientGetCDNAuthToken::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetCDNAuthToken.app_id)
}

// -------------------------------------------------------------------

// CMsgClientGetDepotDecryptionKey

// optional uint32 depot_id = 1;
inline bool CMsgClientGetDepotDecryptionKey::_internal_has_depot_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientGetDepotDecryptionKey::has_depot_id() const {
  return _internal_has_depot_id();
}
inline void CMsgClientGetDepotDecryptionKey::clear_depot_id() {
  depot_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetDepotDecryptionKey::_internal_depot_id() const {
  return depot_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetDepotDecryptionKey::depot_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetDepotDecryptionKey.depot_id)
  return _internal_depot_id();
}
inline void CMsgClientGetDepotDecryptionKey::_internal_set_depot_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  depot_id_ = value;
}
inline void CMsgClientGetDepotDecryptionKey::set_depot_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_depot_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetDepotDecryptionKey.depot_id)
}

// optional uint32 app_id = 2;
inline bool CMsgClientGetDepotDecryptionKey::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientGetDepotDecryptionKey::has_app_id() const {
  return _internal_has_app_id();
}
inline void CMsgClientGetDepotDecryptionKey::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetDepotDecryptionKey::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetDepotDecryptionKey::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetDepotDecryptionKey.app_id)
  return _internal_app_id();
}
inline void CMsgClientGetDepotDecryptionKey::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  app_id_ = value;
}
inline void CMsgClientGetDepotDecryptionKey::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetDepotDecryptionKey.app_id)
}

// -------------------------------------------------------------------

// CMsgClientGetDepotDecryptionKeyResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientGetDepotDecryptionKeyResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientGetDepotDecryptionKeyResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientGetDepotDecryptionKeyResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientGetDepotDecryptionKeyResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientGetDepotDecryptionKeyResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetDepotDecryptionKeyResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientGetDepotDecryptionKeyResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  eresult_ = value;
}
inline void CMsgClientGetDepotDecryptionKeyResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetDepotDecryptionKeyResponse.eresult)
}

// optional uint32 depot_id = 2;
inline bool CMsgClientGetDepotDecryptionKeyResponse::_internal_has_depot_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientGetDepotDecryptionKeyResponse::has_depot_id() const {
  return _internal_has_depot_id();
}
inline void CMsgClientGetDepotDecryptionKeyResponse::clear_depot_id() {
  depot_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetDepotDecryptionKeyResponse::_internal_depot_id() const {
  return depot_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetDepotDecryptionKeyResponse::depot_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetDepotDecryptionKeyResponse.depot_id)
  return _internal_depot_id();
}
inline void CMsgClientGetDepotDecryptionKeyResponse::_internal_set_depot_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  depot_id_ = value;
}
inline void CMsgClientGetDepotDecryptionKeyResponse::set_depot_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_depot_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetDepotDecryptionKeyResponse.depot_id)
}

// optional bytes depot_encryption_key = 3;
inline bool CMsgClientGetDepotDecryptionKeyResponse::_internal_has_depot_encryption_key() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientGetDepotDecryptionKeyResponse::has_depot_encryption_key() const {
  return _internal_has_depot_encryption_key();
}
inline void CMsgClientGetDepotDecryptionKeyResponse::clear_depot_encryption_key() {
  depot_encryption_key_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientGetDepotDecryptionKeyResponse::depot_encryption_key() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetDepotDecryptionKeyResponse.depot_encryption_key)
  return _internal_depot_encryption_key();
}
inline void CMsgClientGetDepotDecryptionKeyResponse::set_depot_encryption_key(const std::string& value) {
  _internal_set_depot_encryption_key(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetDepotDecryptionKeyResponse.depot_encryption_key)
}
inline std::string* CMsgClientGetDepotDecryptionKeyResponse::mutable_depot_encryption_key() {
  // @@protoc_insertion_point(field_mutable:CMsgClientGetDepotDecryptionKeyResponse.depot_encryption_key)
  return _internal_mutable_depot_encryption_key();
}
inline const std::string& CMsgClientGetDepotDecryptionKeyResponse::_internal_depot_encryption_key() const {
  return depot_encryption_key_.Get();
}
inline void CMsgClientGetDepotDecryptionKeyResponse::_internal_set_depot_encryption_key(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  depot_encryption_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientGetDepotDecryptionKeyResponse::set_depot_encryption_key(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  depot_encryption_key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientGetDepotDecryptionKeyResponse.depot_encryption_key)
}
inline void CMsgClientGetDepotDecryptionKeyResponse::set_depot_encryption_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  depot_encryption_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientGetDepotDecryptionKeyResponse.depot_encryption_key)
}
inline void CMsgClientGetDepotDecryptionKeyResponse::set_depot_encryption_key(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  depot_encryption_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientGetDepotDecryptionKeyResponse.depot_encryption_key)
}
inline std::string* CMsgClientGetDepotDecryptionKeyResponse::_internal_mutable_depot_encryption_key() {
  _has_bits_[0] |= 0x00000001u;
  return depot_encryption_key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientGetDepotDecryptionKeyResponse::release_depot_encryption_key() {
  // @@protoc_insertion_point(field_release:CMsgClientGetDepotDecryptionKeyResponse.depot_encryption_key)
  if (!_internal_has_depot_encryption_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return depot_encryption_key_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientGetDepotDecryptionKeyResponse::set_allocated_depot_encryption_key(std::string* depot_encryption_key) {
  if (depot_encryption_key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  depot_encryption_key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), depot_encryption_key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientGetDepotDecryptionKeyResponse.depot_encryption_key)
}

// -------------------------------------------------------------------

// CMsgClientCheckAppBetaPassword

// optional uint32 app_id = 1;
inline bool CMsgClientCheckAppBetaPassword::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientCheckAppBetaPassword::has_app_id() const {
  return _internal_has_app_id();
}
inline void CMsgClientCheckAppBetaPassword::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCheckAppBetaPassword::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCheckAppBetaPassword::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientCheckAppBetaPassword.app_id)
  return _internal_app_id();
}
inline void CMsgClientCheckAppBetaPassword::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  app_id_ = value;
}
inline void CMsgClientCheckAppBetaPassword::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientCheckAppBetaPassword.app_id)
}

// optional string betapassword = 2;
inline bool CMsgClientCheckAppBetaPassword::_internal_has_betapassword() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientCheckAppBetaPassword::has_betapassword() const {
  return _internal_has_betapassword();
}
inline void CMsgClientCheckAppBetaPassword::clear_betapassword() {
  betapassword_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientCheckAppBetaPassword::betapassword() const {
  // @@protoc_insertion_point(field_get:CMsgClientCheckAppBetaPassword.betapassword)
  return _internal_betapassword();
}
inline void CMsgClientCheckAppBetaPassword::set_betapassword(const std::string& value) {
  _internal_set_betapassword(value);
  // @@protoc_insertion_point(field_set:CMsgClientCheckAppBetaPassword.betapassword)
}
inline std::string* CMsgClientCheckAppBetaPassword::mutable_betapassword() {
  // @@protoc_insertion_point(field_mutable:CMsgClientCheckAppBetaPassword.betapassword)
  return _internal_mutable_betapassword();
}
inline const std::string& CMsgClientCheckAppBetaPassword::_internal_betapassword() const {
  return betapassword_.Get();
}
inline void CMsgClientCheckAppBetaPassword::_internal_set_betapassword(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  betapassword_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientCheckAppBetaPassword::set_betapassword(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  betapassword_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientCheckAppBetaPassword.betapassword)
}
inline void CMsgClientCheckAppBetaPassword::set_betapassword(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  betapassword_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientCheckAppBetaPassword.betapassword)
}
inline void CMsgClientCheckAppBetaPassword::set_betapassword(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  betapassword_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientCheckAppBetaPassword.betapassword)
}
inline std::string* CMsgClientCheckAppBetaPassword::_internal_mutable_betapassword() {
  _has_bits_[0] |= 0x00000001u;
  return betapassword_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientCheckAppBetaPassword::release_betapassword() {
  // @@protoc_insertion_point(field_release:CMsgClientCheckAppBetaPassword.betapassword)
  if (!_internal_has_betapassword()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return betapassword_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientCheckAppBetaPassword::set_allocated_betapassword(std::string* betapassword) {
  if (betapassword != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  betapassword_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), betapassword,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientCheckAppBetaPassword.betapassword)
}

// optional int32 language = 3;
inline bool CMsgClientCheckAppBetaPassword::_internal_has_language() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientCheckAppBetaPassword::has_language() const {
  return _internal_has_language();
}
inline void CMsgClientCheckAppBetaPassword::clear_language() {
  language_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientCheckAppBetaPassword::_internal_language() const {
  return language_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientCheckAppBetaPassword::language() const {
  // @@protoc_insertion_point(field_get:CMsgClientCheckAppBetaPassword.language)
  return _internal_language();
}
inline void CMsgClientCheckAppBetaPassword::_internal_set_language(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  language_ = value;
}
inline void CMsgClientCheckAppBetaPassword::set_language(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_language(value);
  // @@protoc_insertion_point(field_set:CMsgClientCheckAppBetaPassword.language)
}

// -------------------------------------------------------------------

// CMsgClientCheckAppBetaPasswordResponse_BetaPassword

// optional string betaname = 1;
inline bool CMsgClientCheckAppBetaPasswordResponse_BetaPassword::_internal_has_betaname() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientCheckAppBetaPasswordResponse_BetaPassword::has_betaname() const {
  return _internal_has_betaname();
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::clear_betaname() {
  betaname_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientCheckAppBetaPasswordResponse_BetaPassword::betaname() const {
  // @@protoc_insertion_point(field_get:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname)
  return _internal_betaname();
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betaname(const std::string& value) {
  _internal_set_betaname(value);
  // @@protoc_insertion_point(field_set:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname)
}
inline std::string* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::mutable_betaname() {
  // @@protoc_insertion_point(field_mutable:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname)
  return _internal_mutable_betaname();
}
inline const std::string& CMsgClientCheckAppBetaPasswordResponse_BetaPassword::_internal_betaname() const {
  return betaname_.Get();
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::_internal_set_betaname(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  betaname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betaname(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  betaname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname)
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betaname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  betaname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname)
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betaname(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  betaname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname)
}
inline std::string* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::_internal_mutable_betaname() {
  _has_bits_[0] |= 0x00000001u;
  return betaname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::release_betaname() {
  // @@protoc_insertion_point(field_release:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname)
  if (!_internal_has_betaname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return betaname_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_allocated_betaname(std::string* betaname) {
  if (betaname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  betaname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), betaname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname)
}

// optional string betapassword = 2;
inline bool CMsgClientCheckAppBetaPasswordResponse_BetaPassword::_internal_has_betapassword() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientCheckAppBetaPasswordResponse_BetaPassword::has_betapassword() const {
  return _internal_has_betapassword();
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::clear_betapassword() {
  betapassword_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientCheckAppBetaPasswordResponse_BetaPassword::betapassword() const {
  // @@protoc_insertion_point(field_get:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword)
  return _internal_betapassword();
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betapassword(const std::string& value) {
  _internal_set_betapassword(value);
  // @@protoc_insertion_point(field_set:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword)
}
inline std::string* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::mutable_betapassword() {
  // @@protoc_insertion_point(field_mutable:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword)
  return _internal_mutable_betapassword();
}
inline const std::string& CMsgClientCheckAppBetaPasswordResponse_BetaPassword::_internal_betapassword() const {
  return betapassword_.Get();
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::_internal_set_betapassword(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  betapassword_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betapassword(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  betapassword_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword)
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betapassword(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  betapassword_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword)
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betapassword(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  betapassword_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword)
}
inline std::string* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::_internal_mutable_betapassword() {
  _has_bits_[0] |= 0x00000002u;
  return betapassword_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::release_betapassword() {
  // @@protoc_insertion_point(field_release:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword)
  if (!_internal_has_betapassword()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return betapassword_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_allocated_betapassword(std::string* betapassword) {
  if (betapassword != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  betapassword_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), betapassword,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword)
}

// optional string betadescription = 3;
inline bool CMsgClientCheckAppBetaPasswordResponse_BetaPassword::_internal_has_betadescription() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientCheckAppBetaPasswordResponse_BetaPassword::has_betadescription() const {
  return _internal_has_betadescription();
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::clear_betadescription() {
  betadescription_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgClientCheckAppBetaPasswordResponse_BetaPassword::betadescription() const {
  // @@protoc_insertion_point(field_get:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betadescription)
  return _internal_betadescription();
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betadescription(const std::string& value) {
  _internal_set_betadescription(value);
  // @@protoc_insertion_point(field_set:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betadescription)
}
inline std::string* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::mutable_betadescription() {
  // @@protoc_insertion_point(field_mutable:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betadescription)
  return _internal_mutable_betadescription();
}
inline const std::string& CMsgClientCheckAppBetaPasswordResponse_BetaPassword::_internal_betadescription() const {
  return betadescription_.Get();
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::_internal_set_betadescription(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  betadescription_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betadescription(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  betadescription_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betadescription)
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betadescription(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  betadescription_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betadescription)
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betadescription(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  betadescription_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betadescription)
}
inline std::string* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::_internal_mutable_betadescription() {
  _has_bits_[0] |= 0x00000004u;
  return betadescription_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::release_betadescription() {
  // @@protoc_insertion_point(field_release:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betadescription)
  if (!_internal_has_betadescription()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return betadescription_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_allocated_betadescription(std::string* betadescription) {
  if (betadescription != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  betadescription_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), betadescription,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betadescription)
}

// -------------------------------------------------------------------

// CMsgClientCheckAppBetaPasswordResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientCheckAppBetaPasswordResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientCheckAppBetaPasswordResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientCheckAppBetaPasswordResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientCheckAppBetaPasswordResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientCheckAppBetaPasswordResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientCheckAppBetaPasswordResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientCheckAppBetaPasswordResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
}
inline void CMsgClientCheckAppBetaPasswordResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientCheckAppBetaPasswordResponse.eresult)
}

// repeated .CMsgClientCheckAppBetaPasswordResponse.BetaPassword betapasswords = 4;
inline int CMsgClientCheckAppBetaPasswordResponse::_internal_betapasswords_size() const {
  return betapasswords_.size();
}
inline int CMsgClientCheckAppBetaPasswordResponse::betapasswords_size() const {
  return _internal_betapasswords_size();
}
inline void CMsgClientCheckAppBetaPasswordResponse::clear_betapasswords() {
  betapasswords_.Clear();
}
inline ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword* CMsgClientCheckAppBetaPasswordResponse::mutable_betapasswords(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientCheckAppBetaPasswordResponse.betapasswords)
  return betapasswords_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword >*
CMsgClientCheckAppBetaPasswordResponse::mutable_betapasswords() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientCheckAppBetaPasswordResponse.betapasswords)
  return &betapasswords_;
}
inline const ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword& CMsgClientCheckAppBetaPasswordResponse::_internal_betapasswords(int index) const {
  return betapasswords_.Get(index);
}
inline const ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword& CMsgClientCheckAppBetaPasswordResponse::betapasswords(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientCheckAppBetaPasswordResponse.betapasswords)
  return _internal_betapasswords(index);
}
inline ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword* CMsgClientCheckAppBetaPasswordResponse::_internal_add_betapasswords() {
  return betapasswords_.Add();
}
inline ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword* CMsgClientCheckAppBetaPasswordResponse::add_betapasswords() {
  // @@protoc_insertion_point(field_add:CMsgClientCheckAppBetaPasswordResponse.betapasswords)
  return _internal_add_betapasswords();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientCheckAppBetaPasswordResponse_BetaPassword >&
CMsgClientCheckAppBetaPasswordResponse::betapasswords() const {
  // @@protoc_insertion_point(field_list:CMsgClientCheckAppBetaPasswordResponse.betapasswords)
  return betapasswords_;
}

// -------------------------------------------------------------------

// CMsgClientGetCDNAuthTokenResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgClientGetCDNAuthTokenResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientGetCDNAuthTokenResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientGetCDNAuthTokenResponse::clear_eresult() {
  eresult_ = 2u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetCDNAuthTokenResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetCDNAuthTokenResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetCDNAuthTokenResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientGetCDNAuthTokenResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  eresult_ = value;
}
inline void CMsgClientGetCDNAuthTokenResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetCDNAuthTokenResponse.eresult)
}

// optional string token = 2;
inline bool CMsgClientGetCDNAuthTokenResponse::_internal_has_token() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientGetCDNAuthTokenResponse::has_token() const {
  return _internal_has_token();
}
inline void CMsgClientGetCDNAuthTokenResponse::clear_token() {
  token_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientGetCDNAuthTokenResponse::token() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetCDNAuthTokenResponse.token)
  return _internal_token();
}
inline void CMsgClientGetCDNAuthTokenResponse::set_token(const std::string& value) {
  _internal_set_token(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetCDNAuthTokenResponse.token)
}
inline std::string* CMsgClientGetCDNAuthTokenResponse::mutable_token() {
  // @@protoc_insertion_point(field_mutable:CMsgClientGetCDNAuthTokenResponse.token)
  return _internal_mutable_token();
}
inline const std::string& CMsgClientGetCDNAuthTokenResponse::_internal_token() const {
  return token_.Get();
}
inline void CMsgClientGetCDNAuthTokenResponse::_internal_set_token(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientGetCDNAuthTokenResponse::set_token(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientGetCDNAuthTokenResponse.token)
}
inline void CMsgClientGetCDNAuthTokenResponse::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientGetCDNAuthTokenResponse.token)
}
inline void CMsgClientGetCDNAuthTokenResponse::set_token(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientGetCDNAuthTokenResponse.token)
}
inline std::string* CMsgClientGetCDNAuthTokenResponse::_internal_mutable_token() {
  _has_bits_[0] |= 0x00000001u;
  return token_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientGetCDNAuthTokenResponse::release_token() {
  // @@protoc_insertion_point(field_release:CMsgClientGetCDNAuthTokenResponse.token)
  if (!_internal_has_token()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return token_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientGetCDNAuthTokenResponse::set_allocated_token(std::string* token) {
  if (token != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  token_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), token,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientGetCDNAuthTokenResponse.token)
}

// optional uint32 expiration_time = 3;
inline bool CMsgClientGetCDNAuthTokenResponse::_internal_has_expiration_time() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientGetCDNAuthTokenResponse::has_expiration_time() const {
  return _internal_has_expiration_time();
}
inline void CMsgClientGetCDNAuthTokenResponse::clear_expiration_time() {
  expiration_time_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetCDNAuthTokenResponse::_internal_expiration_time() const {
  return expiration_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetCDNAuthTokenResponse::expiration_time() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetCDNAuthTokenResponse.expiration_time)
  return _internal_expiration_time();
}
inline void CMsgClientGetCDNAuthTokenResponse::_internal_set_expiration_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  expiration_time_ = value;
}
inline void CMsgClientGetCDNAuthTokenResponse::set_expiration_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_expiration_time(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetCDNAuthTokenResponse.expiration_time)
}

// -------------------------------------------------------------------

// CMsgDownloadRateStatistics_StatsInfo

// optional uint32 source_type = 1;
inline bool CMsgDownloadRateStatistics_StatsInfo::_internal_has_source_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgDownloadRateStatistics_StatsInfo::has_source_type() const {
  return _internal_has_source_type();
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_source_type() {
  source_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDownloadRateStatistics_StatsInfo::_internal_source_type() const {
  return source_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDownloadRateStatistics_StatsInfo::source_type() const {
  // @@protoc_insertion_point(field_get:CMsgDownloadRateStatistics.StatsInfo.source_type)
  return _internal_source_type();
}
inline void CMsgDownloadRateStatistics_StatsInfo::_internal_set_source_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  source_type_ = value;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_source_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_source_type(value);
  // @@protoc_insertion_point(field_set:CMsgDownloadRateStatistics.StatsInfo.source_type)
}

// optional uint32 source_id = 2;
inline bool CMsgDownloadRateStatistics_StatsInfo::_internal_has_source_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgDownloadRateStatistics_StatsInfo::has_source_id() const {
  return _internal_has_source_id();
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_source_id() {
  source_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDownloadRateStatistics_StatsInfo::_internal_source_id() const {
  return source_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDownloadRateStatistics_StatsInfo::source_id() const {
  // @@protoc_insertion_point(field_get:CMsgDownloadRateStatistics.StatsInfo.source_id)
  return _internal_source_id();
}
inline void CMsgDownloadRateStatistics_StatsInfo::_internal_set_source_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  source_id_ = value;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_source_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_source_id(value);
  // @@protoc_insertion_point(field_set:CMsgDownloadRateStatistics.StatsInfo.source_id)
}

// optional uint32 seconds = 3;
inline bool CMsgDownloadRateStatistics_StatsInfo::_internal_has_seconds() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgDownloadRateStatistics_StatsInfo::has_seconds() const {
  return _internal_has_seconds();
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_seconds() {
  seconds_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDownloadRateStatistics_StatsInfo::_internal_seconds() const {
  return seconds_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDownloadRateStatistics_StatsInfo::seconds() const {
  // @@protoc_insertion_point(field_get:CMsgDownloadRateStatistics.StatsInfo.seconds)
  return _internal_seconds();
}
inline void CMsgDownloadRateStatistics_StatsInfo::_internal_set_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  seconds_ = value;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_seconds(value);
  // @@protoc_insertion_point(field_set:CMsgDownloadRateStatistics.StatsInfo.seconds)
}

// optional uint64 bytes = 4;
inline bool CMsgDownloadRateStatistics_StatsInfo::_internal_has_bytes() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgDownloadRateStatistics_StatsInfo::has_bytes() const {
  return _internal_has_bytes();
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_bytes() {
  bytes_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgDownloadRateStatistics_StatsInfo::_internal_bytes() const {
  return bytes_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgDownloadRateStatistics_StatsInfo::bytes() const {
  // @@protoc_insertion_point(field_get:CMsgDownloadRateStatistics.StatsInfo.bytes)
  return _internal_bytes();
}
inline void CMsgDownloadRateStatistics_StatsInfo::_internal_set_bytes(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  bytes_ = value;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_bytes(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_bytes(value);
  // @@protoc_insertion_point(field_set:CMsgDownloadRateStatistics.StatsInfo.bytes)
}

// optional string host_name = 5;
inline bool CMsgDownloadRateStatistics_StatsInfo::_internal_has_host_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgDownloadRateStatistics_StatsInfo::has_host_name() const {
  return _internal_has_host_name();
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_host_name() {
  host_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgDownloadRateStatistics_StatsInfo::host_name() const {
  // @@protoc_insertion_point(field_get:CMsgDownloadRateStatistics.StatsInfo.host_name)
  return _internal_host_name();
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_host_name(const std::string& value) {
  _internal_set_host_name(value);
  // @@protoc_insertion_point(field_set:CMsgDownloadRateStatistics.StatsInfo.host_name)
}
inline std::string* CMsgDownloadRateStatistics_StatsInfo::mutable_host_name() {
  // @@protoc_insertion_point(field_mutable:CMsgDownloadRateStatistics.StatsInfo.host_name)
  return _internal_mutable_host_name();
}
inline const std::string& CMsgDownloadRateStatistics_StatsInfo::_internal_host_name() const {
  return host_name_.Get();
}
inline void CMsgDownloadRateStatistics_StatsInfo::_internal_set_host_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  host_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_host_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  host_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgDownloadRateStatistics.StatsInfo.host_name)
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_host_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  host_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgDownloadRateStatistics.StatsInfo.host_name)
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_host_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  host_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgDownloadRateStatistics.StatsInfo.host_name)
}
inline std::string* CMsgDownloadRateStatistics_StatsInfo::_internal_mutable_host_name() {
  _has_bits_[0] |= 0x00000001u;
  return host_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgDownloadRateStatistics_StatsInfo::release_host_name() {
  // @@protoc_insertion_point(field_release:CMsgDownloadRateStatistics.StatsInfo.host_name)
  if (!_internal_has_host_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return host_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_allocated_host_name(std::string* host_name) {
  if (host_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  host_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), host_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgDownloadRateStatistics.StatsInfo.host_name)
}

// optional uint64 microseconds = 6;
inline bool CMsgDownloadRateStatistics_StatsInfo::_internal_has_microseconds() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgDownloadRateStatistics_StatsInfo::has_microseconds() const {
  return _internal_has_microseconds();
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_microseconds() {
  microseconds_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgDownloadRateStatistics_StatsInfo::_internal_microseconds() const {
  return microseconds_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgDownloadRateStatistics_StatsInfo::microseconds() const {
  // @@protoc_insertion_point(field_get:CMsgDownloadRateStatistics.StatsInfo.microseconds)
  return _internal_microseconds();
}
inline void CMsgDownloadRateStatistics_StatsInfo::_internal_set_microseconds(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  microseconds_ = value;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_microseconds(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_microseconds(value);
  // @@protoc_insertion_point(field_set:CMsgDownloadRateStatistics.StatsInfo.microseconds)
}

// optional bool used_ipv6 = 7;
inline bool CMsgDownloadRateStatistics_StatsInfo::_internal_has_used_ipv6() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgDownloadRateStatistics_StatsInfo::has_used_ipv6() const {
  return _internal_has_used_ipv6();
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_used_ipv6() {
  used_ipv6_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CMsgDownloadRateStatistics_StatsInfo::_internal_used_ipv6() const {
  return used_ipv6_;
}
inline bool CMsgDownloadRateStatistics_StatsInfo::used_ipv6() const {
  // @@protoc_insertion_point(field_get:CMsgDownloadRateStatistics.StatsInfo.used_ipv6)
  return _internal_used_ipv6();
}
inline void CMsgDownloadRateStatistics_StatsInfo::_internal_set_used_ipv6(bool value) {
  _has_bits_[0] |= 0x00000040u;
  used_ipv6_ = value;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_used_ipv6(bool value) {
  _internal_set_used_ipv6(value);
  // @@protoc_insertion_point(field_set:CMsgDownloadRateStatistics.StatsInfo.used_ipv6)
}

// optional bool proxied = 8;
inline bool CMsgDownloadRateStatistics_StatsInfo::_internal_has_proxied() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgDownloadRateStatistics_StatsInfo::has_proxied() const {
  return _internal_has_proxied();
}
inline void CMsgDownloadRateStatistics_StatsInfo::clear_proxied() {
  proxied_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CMsgDownloadRateStatistics_StatsInfo::_internal_proxied() const {
  return proxied_;
}
inline bool CMsgDownloadRateStatistics_StatsInfo::proxied() const {
  // @@protoc_insertion_point(field_get:CMsgDownloadRateStatistics.StatsInfo.proxied)
  return _internal_proxied();
}
inline void CMsgDownloadRateStatistics_StatsInfo::_internal_set_proxied(bool value) {
  _has_bits_[0] |= 0x00000080u;
  proxied_ = value;
}
inline void CMsgDownloadRateStatistics_StatsInfo::set_proxied(bool value) {
  _internal_set_proxied(value);
  // @@protoc_insertion_point(field_set:CMsgDownloadRateStatistics.StatsInfo.proxied)
}

// -------------------------------------------------------------------

// CMsgDownloadRateStatistics

// optional uint32 cell_id = 1;
inline bool CMsgDownloadRateStatistics::_internal_has_cell_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgDownloadRateStatistics::has_cell_id() const {
  return _internal_has_cell_id();
}
inline void CMsgDownloadRateStatistics::clear_cell_id() {
  cell_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDownloadRateStatistics::_internal_cell_id() const {
  return cell_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDownloadRateStatistics::cell_id() const {
  // @@protoc_insertion_point(field_get:CMsgDownloadRateStatistics.cell_id)
  return _internal_cell_id();
}
inline void CMsgDownloadRateStatistics::_internal_set_cell_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  cell_id_ = value;
}
inline void CMsgDownloadRateStatistics::set_cell_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cell_id(value);
  // @@protoc_insertion_point(field_set:CMsgDownloadRateStatistics.cell_id)
}

// repeated .CMsgDownloadRateStatistics.StatsInfo stats = 2;
inline int CMsgDownloadRateStatistics::_internal_stats_size() const {
  return stats_.size();
}
inline int CMsgDownloadRateStatistics::stats_size() const {
  return _internal_stats_size();
}
inline void CMsgDownloadRateStatistics::clear_stats() {
  stats_.Clear();
}
inline ::CMsgDownloadRateStatistics_StatsInfo* CMsgDownloadRateStatistics::mutable_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgDownloadRateStatistics.stats)
  return stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgDownloadRateStatistics_StatsInfo >*
CMsgDownloadRateStatistics::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgDownloadRateStatistics.stats)
  return &stats_;
}
inline const ::CMsgDownloadRateStatistics_StatsInfo& CMsgDownloadRateStatistics::_internal_stats(int index) const {
  return stats_.Get(index);
}
inline const ::CMsgDownloadRateStatistics_StatsInfo& CMsgDownloadRateStatistics::stats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgDownloadRateStatistics.stats)
  return _internal_stats(index);
}
inline ::CMsgDownloadRateStatistics_StatsInfo* CMsgDownloadRateStatistics::_internal_add_stats() {
  return stats_.Add();
}
inline ::CMsgDownloadRateStatistics_StatsInfo* CMsgDownloadRateStatistics::add_stats() {
  // @@protoc_insertion_point(field_add:CMsgDownloadRateStatistics.stats)
  return _internal_add_stats();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgDownloadRateStatistics_StatsInfo >&
CMsgDownloadRateStatistics::stats() const {
  // @@protoc_insertion_point(field_list:CMsgDownloadRateStatistics.stats)
  return stats_;
}

// optional uint32 throttling_kbps = 3;
inline bool CMsgDownloadRateStatistics::_internal_has_throttling_kbps() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgDownloadRateStatistics::has_throttling_kbps() const {
  return _internal_has_throttling_kbps();
}
inline void CMsgDownloadRateStatistics::clear_throttling_kbps() {
  throttling_kbps_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDownloadRateStatistics::_internal_throttling_kbps() const {
  return throttling_kbps_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDownloadRateStatistics::throttling_kbps() const {
  // @@protoc_insertion_point(field_get:CMsgDownloadRateStatistics.throttling_kbps)
  return _internal_throttling_kbps();
}
inline void CMsgDownloadRateStatistics::_internal_set_throttling_kbps(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  throttling_kbps_ = value;
}
inline void CMsgDownloadRateStatistics::set_throttling_kbps(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_throttling_kbps(value);
  // @@protoc_insertion_point(field_set:CMsgDownloadRateStatistics.throttling_kbps)
}

// optional uint32 steam_realm = 4;
inline bool CMsgDownloadRateStatistics::_internal_has_steam_realm() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgDownloadRateStatistics::has_steam_realm() const {
  return _internal_has_steam_realm();
}
inline void CMsgDownloadRateStatistics::clear_steam_realm() {
  steam_realm_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDownloadRateStatistics::_internal_steam_realm() const {
  return steam_realm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDownloadRateStatistics::steam_realm() const {
  // @@protoc_insertion_point(field_get:CMsgDownloadRateStatistics.steam_realm)
  return _internal_steam_realm();
}
inline void CMsgDownloadRateStatistics::_internal_set_steam_realm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  steam_realm_ = value;
}
inline void CMsgDownloadRateStatistics::set_steam_realm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_steam_realm(value);
  // @@protoc_insertion_point(field_set:CMsgDownloadRateStatistics.steam_realm)
}

// -------------------------------------------------------------------

// CMsgClientRequestAccountData

// optional string account_or_email = 1;
inline bool CMsgClientRequestAccountData::_internal_has_account_or_email() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientRequestAccountData::has_account_or_email() const {
  return _internal_has_account_or_email();
}
inline void CMsgClientRequestAccountData::clear_account_or_email() {
  account_or_email_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientRequestAccountData::account_or_email() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestAccountData.account_or_email)
  return _internal_account_or_email();
}
inline void CMsgClientRequestAccountData::set_account_or_email(const std::string& value) {
  _internal_set_account_or_email(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestAccountData.account_or_email)
}
inline std::string* CMsgClientRequestAccountData::mutable_account_or_email() {
  // @@protoc_insertion_point(field_mutable:CMsgClientRequestAccountData.account_or_email)
  return _internal_mutable_account_or_email();
}
inline const std::string& CMsgClientRequestAccountData::_internal_account_or_email() const {
  return account_or_email_.Get();
}
inline void CMsgClientRequestAccountData::_internal_set_account_or_email(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  account_or_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientRequestAccountData::set_account_or_email(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  account_or_email_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientRequestAccountData.account_or_email)
}
inline void CMsgClientRequestAccountData::set_account_or_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  account_or_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientRequestAccountData.account_or_email)
}
inline void CMsgClientRequestAccountData::set_account_or_email(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  account_or_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientRequestAccountData.account_or_email)
}
inline std::string* CMsgClientRequestAccountData::_internal_mutable_account_or_email() {
  _has_bits_[0] |= 0x00000001u;
  return account_or_email_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientRequestAccountData::release_account_or_email() {
  // @@protoc_insertion_point(field_release:CMsgClientRequestAccountData.account_or_email)
  if (!_internal_has_account_or_email()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return account_or_email_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientRequestAccountData::set_allocated_account_or_email(std::string* account_or_email) {
  if (account_or_email != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  account_or_email_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), account_or_email,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientRequestAccountData.account_or_email)
}

// optional uint32 action = 2;
inline bool CMsgClientRequestAccountData::_internal_has_action() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientRequestAccountData::has_action() const {
  return _internal_has_action();
}
inline void CMsgClientRequestAccountData::clear_action() {
  action_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestAccountData::_internal_action() const {
  return action_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestAccountData::action() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestAccountData.action)
  return _internal_action();
}
inline void CMsgClientRequestAccountData::_internal_set_action(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  action_ = value;
}
inline void CMsgClientRequestAccountData::set_action(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestAccountData.action)
}

// -------------------------------------------------------------------

// CMsgClientRequestAccountDataResponse

// optional uint32 action = 1;
inline bool CMsgClientRequestAccountDataResponse::_internal_has_action() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientRequestAccountDataResponse::has_action() const {
  return _internal_has_action();
}
inline void CMsgClientRequestAccountDataResponse::clear_action() {
  action_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestAccountDataResponse::_internal_action() const {
  return action_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestAccountDataResponse::action() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestAccountDataResponse.action)
  return _internal_action();
}
inline void CMsgClientRequestAccountDataResponse::_internal_set_action(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  action_ = value;
}
inline void CMsgClientRequestAccountDataResponse::set_action(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestAccountDataResponse.action)
}

// optional uint32 eresult = 2;
inline bool CMsgClientRequestAccountDataResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientRequestAccountDataResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientRequestAccountDataResponse::clear_eresult() {
  eresult_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestAccountDataResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestAccountDataResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestAccountDataResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientRequestAccountDataResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  eresult_ = value;
}
inline void CMsgClientRequestAccountDataResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestAccountDataResponse.eresult)
}

// optional string account_name = 3;
inline bool CMsgClientRequestAccountDataResponse::_internal_has_account_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientRequestAccountDataResponse::has_account_name() const {
  return _internal_has_account_name();
}
inline void CMsgClientRequestAccountDataResponse::clear_account_name() {
  account_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientRequestAccountDataResponse::account_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestAccountDataResponse.account_name)
  return _internal_account_name();
}
inline void CMsgClientRequestAccountDataResponse::set_account_name(const std::string& value) {
  _internal_set_account_name(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestAccountDataResponse.account_name)
}
inline std::string* CMsgClientRequestAccountDataResponse::mutable_account_name() {
  // @@protoc_insertion_point(field_mutable:CMsgClientRequestAccountDataResponse.account_name)
  return _internal_mutable_account_name();
}
inline const std::string& CMsgClientRequestAccountDataResponse::_internal_account_name() const {
  return account_name_.Get();
}
inline void CMsgClientRequestAccountDataResponse::_internal_set_account_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  account_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientRequestAccountDataResponse::set_account_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  account_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientRequestAccountDataResponse.account_name)
}
inline void CMsgClientRequestAccountDataResponse::set_account_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  account_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientRequestAccountDataResponse.account_name)
}
inline void CMsgClientRequestAccountDataResponse::set_account_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  account_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientRequestAccountDataResponse.account_name)
}
inline std::string* CMsgClientRequestAccountDataResponse::_internal_mutable_account_name() {
  _has_bits_[0] |= 0x00000001u;
  return account_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientRequestAccountDataResponse::release_account_name() {
  // @@protoc_insertion_point(field_release:CMsgClientRequestAccountDataResponse.account_name)
  if (!_internal_has_account_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return account_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientRequestAccountDataResponse::set_allocated_account_name(std::string* account_name) {
  if (account_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  account_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), account_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientRequestAccountDataResponse.account_name)
}

// optional uint32 ct_matches = 4;
inline bool CMsgClientRequestAccountDataResponse::_internal_has_ct_matches() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientRequestAccountDataResponse::has_ct_matches() const {
  return _internal_has_ct_matches();
}
inline void CMsgClientRequestAccountDataResponse::clear_ct_matches() {
  ct_matches_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestAccountDataResponse::_internal_ct_matches() const {
  return ct_matches_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestAccountDataResponse::ct_matches() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestAccountDataResponse.ct_matches)
  return _internal_ct_matches();
}
inline void CMsgClientRequestAccountDataResponse::_internal_set_ct_matches(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  ct_matches_ = value;
}
inline void CMsgClientRequestAccountDataResponse::set_ct_matches(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ct_matches(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestAccountDataResponse.ct_matches)
}

// optional string account_name_suggestion1 = 5;
inline bool CMsgClientRequestAccountDataResponse::_internal_has_account_name_suggestion1() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientRequestAccountDataResponse::has_account_name_suggestion1() const {
  return _internal_has_account_name_suggestion1();
}
inline void CMsgClientRequestAccountDataResponse::clear_account_name_suggestion1() {
  account_name_suggestion1_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientRequestAccountDataResponse::account_name_suggestion1() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestAccountDataResponse.account_name_suggestion1)
  return _internal_account_name_suggestion1();
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion1(const std::string& value) {
  _internal_set_account_name_suggestion1(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestAccountDataResponse.account_name_suggestion1)
}
inline std::string* CMsgClientRequestAccountDataResponse::mutable_account_name_suggestion1() {
  // @@protoc_insertion_point(field_mutable:CMsgClientRequestAccountDataResponse.account_name_suggestion1)
  return _internal_mutable_account_name_suggestion1();
}
inline const std::string& CMsgClientRequestAccountDataResponse::_internal_account_name_suggestion1() const {
  return account_name_suggestion1_.Get();
}
inline void CMsgClientRequestAccountDataResponse::_internal_set_account_name_suggestion1(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  account_name_suggestion1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion1(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  account_name_suggestion1_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientRequestAccountDataResponse.account_name_suggestion1)
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  account_name_suggestion1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientRequestAccountDataResponse.account_name_suggestion1)
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion1(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  account_name_suggestion1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientRequestAccountDataResponse.account_name_suggestion1)
}
inline std::string* CMsgClientRequestAccountDataResponse::_internal_mutable_account_name_suggestion1() {
  _has_bits_[0] |= 0x00000002u;
  return account_name_suggestion1_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientRequestAccountDataResponse::release_account_name_suggestion1() {
  // @@protoc_insertion_point(field_release:CMsgClientRequestAccountDataResponse.account_name_suggestion1)
  if (!_internal_has_account_name_suggestion1()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return account_name_suggestion1_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientRequestAccountDataResponse::set_allocated_account_name_suggestion1(std::string* account_name_suggestion1) {
  if (account_name_suggestion1 != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  account_name_suggestion1_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), account_name_suggestion1,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientRequestAccountDataResponse.account_name_suggestion1)
}

// optional string account_name_suggestion2 = 6;
inline bool CMsgClientRequestAccountDataResponse::_internal_has_account_name_suggestion2() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientRequestAccountDataResponse::has_account_name_suggestion2() const {
  return _internal_has_account_name_suggestion2();
}
inline void CMsgClientRequestAccountDataResponse::clear_account_name_suggestion2() {
  account_name_suggestion2_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgClientRequestAccountDataResponse::account_name_suggestion2() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestAccountDataResponse.account_name_suggestion2)
  return _internal_account_name_suggestion2();
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion2(const std::string& value) {
  _internal_set_account_name_suggestion2(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestAccountDataResponse.account_name_suggestion2)
}
inline std::string* CMsgClientRequestAccountDataResponse::mutable_account_name_suggestion2() {
  // @@protoc_insertion_point(field_mutable:CMsgClientRequestAccountDataResponse.account_name_suggestion2)
  return _internal_mutable_account_name_suggestion2();
}
inline const std::string& CMsgClientRequestAccountDataResponse::_internal_account_name_suggestion2() const {
  return account_name_suggestion2_.Get();
}
inline void CMsgClientRequestAccountDataResponse::_internal_set_account_name_suggestion2(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  account_name_suggestion2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion2(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  account_name_suggestion2_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientRequestAccountDataResponse.account_name_suggestion2)
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  account_name_suggestion2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientRequestAccountDataResponse.account_name_suggestion2)
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion2(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  account_name_suggestion2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientRequestAccountDataResponse.account_name_suggestion2)
}
inline std::string* CMsgClientRequestAccountDataResponse::_internal_mutable_account_name_suggestion2() {
  _has_bits_[0] |= 0x00000004u;
  return account_name_suggestion2_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientRequestAccountDataResponse::release_account_name_suggestion2() {
  // @@protoc_insertion_point(field_release:CMsgClientRequestAccountDataResponse.account_name_suggestion2)
  if (!_internal_has_account_name_suggestion2()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return account_name_suggestion2_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientRequestAccountDataResponse::set_allocated_account_name_suggestion2(std::string* account_name_suggestion2) {
  if (account_name_suggestion2 != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  account_name_suggestion2_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), account_name_suggestion2,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientRequestAccountDataResponse.account_name_suggestion2)
}

// optional string account_name_suggestion3 = 7;
inline bool CMsgClientRequestAccountDataResponse::_internal_has_account_name_suggestion3() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientRequestAccountDataResponse::has_account_name_suggestion3() const {
  return _internal_has_account_name_suggestion3();
}
inline void CMsgClientRequestAccountDataResponse::clear_account_name_suggestion3() {
  account_name_suggestion3_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CMsgClientRequestAccountDataResponse::account_name_suggestion3() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestAccountDataResponse.account_name_suggestion3)
  return _internal_account_name_suggestion3();
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion3(const std::string& value) {
  _internal_set_account_name_suggestion3(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestAccountDataResponse.account_name_suggestion3)
}
inline std::string* CMsgClientRequestAccountDataResponse::mutable_account_name_suggestion3() {
  // @@protoc_insertion_point(field_mutable:CMsgClientRequestAccountDataResponse.account_name_suggestion3)
  return _internal_mutable_account_name_suggestion3();
}
inline const std::string& CMsgClientRequestAccountDataResponse::_internal_account_name_suggestion3() const {
  return account_name_suggestion3_.Get();
}
inline void CMsgClientRequestAccountDataResponse::_internal_set_account_name_suggestion3(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  account_name_suggestion3_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion3(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  account_name_suggestion3_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientRequestAccountDataResponse.account_name_suggestion3)
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion3(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  account_name_suggestion3_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientRequestAccountDataResponse.account_name_suggestion3)
}
inline void CMsgClientRequestAccountDataResponse::set_account_name_suggestion3(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  account_name_suggestion3_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientRequestAccountDataResponse.account_name_suggestion3)
}
inline std::string* CMsgClientRequestAccountDataResponse::_internal_mutable_account_name_suggestion3() {
  _has_bits_[0] |= 0x00000008u;
  return account_name_suggestion3_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientRequestAccountDataResponse::release_account_name_suggestion3() {
  // @@protoc_insertion_point(field_release:CMsgClientRequestAccountDataResponse.account_name_suggestion3)
  if (!_internal_has_account_name_suggestion3()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return account_name_suggestion3_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientRequestAccountDataResponse::set_allocated_account_name_suggestion3(std::string* account_name_suggestion3) {
  if (account_name_suggestion3 != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  account_name_suggestion3_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), account_name_suggestion3,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientRequestAccountDataResponse.account_name_suggestion3)
}

// -------------------------------------------------------------------

// CMsgClientUGSGetGlobalStats

// optional uint64 gameid = 1;
inline bool CMsgClientUGSGetGlobalStats::_internal_has_gameid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUGSGetGlobalStats::has_gameid() const {
  return _internal_has_gameid();
}
inline void CMsgClientUGSGetGlobalStats::clear_gameid() {
  gameid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUGSGetGlobalStats::_internal_gameid() const {
  return gameid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUGSGetGlobalStats::gameid() const {
  // @@protoc_insertion_point(field_get:CMsgClientUGSGetGlobalStats.gameid)
  return _internal_gameid();
}
inline void CMsgClientUGSGetGlobalStats::_internal_set_gameid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  gameid_ = value;
}
inline void CMsgClientUGSGetGlobalStats::set_gameid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gameid(value);
  // @@protoc_insertion_point(field_set:CMsgClientUGSGetGlobalStats.gameid)
}

// optional uint32 history_days_requested = 2;
inline bool CMsgClientUGSGetGlobalStats::_internal_has_history_days_requested() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUGSGetGlobalStats::has_history_days_requested() const {
  return _internal_has_history_days_requested();
}
inline void CMsgClientUGSGetGlobalStats::clear_history_days_requested() {
  history_days_requested_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUGSGetGlobalStats::_internal_history_days_requested() const {
  return history_days_requested_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUGSGetGlobalStats::history_days_requested() const {
  // @@protoc_insertion_point(field_get:CMsgClientUGSGetGlobalStats.history_days_requested)
  return _internal_history_days_requested();
}
inline void CMsgClientUGSGetGlobalStats::_internal_set_history_days_requested(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  history_days_requested_ = value;
}
inline void CMsgClientUGSGetGlobalStats::set_history_days_requested(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_history_days_requested(value);
  // @@protoc_insertion_point(field_set:CMsgClientUGSGetGlobalStats.history_days_requested)
}

// optional fixed32 time_last_requested = 3;
inline bool CMsgClientUGSGetGlobalStats::_internal_has_time_last_requested() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientUGSGetGlobalStats::has_time_last_requested() const {
  return _internal_has_time_last_requested();
}
inline void CMsgClientUGSGetGlobalStats::clear_time_last_requested() {
  time_last_requested_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUGSGetGlobalStats::_internal_time_last_requested() const {
  return time_last_requested_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUGSGetGlobalStats::time_last_requested() const {
  // @@protoc_insertion_point(field_get:CMsgClientUGSGetGlobalStats.time_last_requested)
  return _internal_time_last_requested();
}
inline void CMsgClientUGSGetGlobalStats::_internal_set_time_last_requested(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  time_last_requested_ = value;
}
inline void CMsgClientUGSGetGlobalStats::set_time_last_requested(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_time_last_requested(value);
  // @@protoc_insertion_point(field_set:CMsgClientUGSGetGlobalStats.time_last_requested)
}

// optional uint32 first_day_cached = 4;
inline bool CMsgClientUGSGetGlobalStats::_internal_has_first_day_cached() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientUGSGetGlobalStats::has_first_day_cached() const {
  return _internal_has_first_day_cached();
}
inline void CMsgClientUGSGetGlobalStats::clear_first_day_cached() {
  first_day_cached_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUGSGetGlobalStats::_internal_first_day_cached() const {
  return first_day_cached_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUGSGetGlobalStats::first_day_cached() const {
  // @@protoc_insertion_point(field_get:CMsgClientUGSGetGlobalStats.first_day_cached)
  return _internal_first_day_cached();
}
inline void CMsgClientUGSGetGlobalStats::_internal_set_first_day_cached(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  first_day_cached_ = value;
}
inline void CMsgClientUGSGetGlobalStats::set_first_day_cached(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_first_day_cached(value);
  // @@protoc_insertion_point(field_set:CMsgClientUGSGetGlobalStats.first_day_cached)
}

// optional uint32 days_cached = 5;
inline bool CMsgClientUGSGetGlobalStats::_internal_has_days_cached() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientUGSGetGlobalStats::has_days_cached() const {
  return _internal_has_days_cached();
}
inline void CMsgClientUGSGetGlobalStats::clear_days_cached() {
  days_cached_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUGSGetGlobalStats::_internal_days_cached() const {
  return days_cached_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUGSGetGlobalStats::days_cached() const {
  // @@protoc_insertion_point(field_get:CMsgClientUGSGetGlobalStats.days_cached)
  return _internal_days_cached();
}
inline void CMsgClientUGSGetGlobalStats::_internal_set_days_cached(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  days_cached_ = value;
}
inline void CMsgClientUGSGetGlobalStats::set_days_cached(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_days_cached(value);
  // @@protoc_insertion_point(field_set:CMsgClientUGSGetGlobalStats.days_cached)
}

// -------------------------------------------------------------------

// CMsgClientUGSGetGlobalStatsResponse_Day_Stat

// optional int32 stat_id = 1;
inline bool CMsgClientUGSGetGlobalStatsResponse_Day_Stat::_internal_has_stat_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUGSGetGlobalStatsResponse_Day_Stat::has_stat_id() const {
  return _internal_has_stat_id();
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::clear_stat_id() {
  stat_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUGSGetGlobalStatsResponse_Day_Stat::_internal_stat_id() const {
  return stat_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUGSGetGlobalStatsResponse_Day_Stat::stat_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientUGSGetGlobalStatsResponse.Day.Stat.stat_id)
  return _internal_stat_id();
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::_internal_set_stat_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  stat_id_ = value;
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::set_stat_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_stat_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientUGSGetGlobalStatsResponse.Day.Stat.stat_id)
}

// optional int64 data = 2;
inline bool CMsgClientUGSGetGlobalStatsResponse_Day_Stat::_internal_has_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUGSGetGlobalStatsResponse_Day_Stat::has_data() const {
  return _internal_has_data();
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::clear_data() {
  data_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CMsgClientUGSGetGlobalStatsResponse_Day_Stat::_internal_data() const {
  return data_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CMsgClientUGSGetGlobalStatsResponse_Day_Stat::data() const {
  // @@protoc_insertion_point(field_get:CMsgClientUGSGetGlobalStatsResponse.Day.Stat.data)
  return _internal_data();
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::_internal_set_data(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  data_ = value;
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::set_data(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:CMsgClientUGSGetGlobalStatsResponse.Day.Stat.data)
}

// -------------------------------------------------------------------

// CMsgClientUGSGetGlobalStatsResponse_Day

// optional uint32 day_id = 1;
inline bool CMsgClientUGSGetGlobalStatsResponse_Day::_internal_has_day_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUGSGetGlobalStatsResponse_Day::has_day_id() const {
  return _internal_has_day_id();
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day::clear_day_id() {
  day_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUGSGetGlobalStatsResponse_Day::_internal_day_id() const {
  return day_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUGSGetGlobalStatsResponse_Day::day_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientUGSGetGlobalStatsResponse.Day.day_id)
  return _internal_day_id();
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day::_internal_set_day_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  day_id_ = value;
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day::set_day_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_day_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientUGSGetGlobalStatsResponse.Day.day_id)
}

// repeated .CMsgClientUGSGetGlobalStatsResponse.Day.Stat stats = 2;
inline int CMsgClientUGSGetGlobalStatsResponse_Day::_internal_stats_size() const {
  return stats_.size();
}
inline int CMsgClientUGSGetGlobalStatsResponse_Day::stats_size() const {
  return _internal_stats_size();
}
inline void CMsgClientUGSGetGlobalStatsResponse_Day::clear_stats() {
  stats_.Clear();
}
inline ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat* CMsgClientUGSGetGlobalStatsResponse_Day::mutable_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientUGSGetGlobalStatsResponse.Day.stats)
  return stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat >*
CMsgClientUGSGetGlobalStatsResponse_Day::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientUGSGetGlobalStatsResponse.Day.stats)
  return &stats_;
}
inline const ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat& CMsgClientUGSGetGlobalStatsResponse_Day::_internal_stats(int index) const {
  return stats_.Get(index);
}
inline const ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat& CMsgClientUGSGetGlobalStatsResponse_Day::stats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientUGSGetGlobalStatsResponse.Day.stats)
  return _internal_stats(index);
}
inline ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat* CMsgClientUGSGetGlobalStatsResponse_Day::_internal_add_stats() {
  return stats_.Add();
}
inline ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat* CMsgClientUGSGetGlobalStatsResponse_Day::add_stats() {
  // @@protoc_insertion_point(field_add:CMsgClientUGSGetGlobalStatsResponse.Day.stats)
  return _internal_add_stats();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUGSGetGlobalStatsResponse_Day_Stat >&
CMsgClientUGSGetGlobalStatsResponse_Day::stats() const {
  // @@protoc_insertion_point(field_list:CMsgClientUGSGetGlobalStatsResponse.Day.stats)
  return stats_;
}

// -------------------------------------------------------------------

// CMsgClientUGSGetGlobalStatsResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientUGSGetGlobalStatsResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientUGSGetGlobalStatsResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientUGSGetGlobalStatsResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUGSGetGlobalStatsResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUGSGetGlobalStatsResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientUGSGetGlobalStatsResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientUGSGetGlobalStatsResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  eresult_ = value;
}
inline void CMsgClientUGSGetGlobalStatsResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientUGSGetGlobalStatsResponse.eresult)
}

// optional fixed32 timestamp = 2;
inline bool CMsgClientUGSGetGlobalStatsResponse::_internal_has_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUGSGetGlobalStatsResponse::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void CMsgClientUGSGetGlobalStatsResponse::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUGSGetGlobalStatsResponse::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUGSGetGlobalStatsResponse::timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgClientUGSGetGlobalStatsResponse.timestamp)
  return _internal_timestamp();
}
inline void CMsgClientUGSGetGlobalStatsResponse::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  timestamp_ = value;
}
inline void CMsgClientUGSGetGlobalStatsResponse::set_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgClientUGSGetGlobalStatsResponse.timestamp)
}

// optional int32 day_current = 3;
inline bool CMsgClientUGSGetGlobalStatsResponse::_internal_has_day_current() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUGSGetGlobalStatsResponse::has_day_current() const {
  return _internal_has_day_current();
}
inline void CMsgClientUGSGetGlobalStatsResponse::clear_day_current() {
  day_current_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUGSGetGlobalStatsResponse::_internal_day_current() const {
  return day_current_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUGSGetGlobalStatsResponse::day_current() const {
  // @@protoc_insertion_point(field_get:CMsgClientUGSGetGlobalStatsResponse.day_current)
  return _internal_day_current();
}
inline void CMsgClientUGSGetGlobalStatsResponse::_internal_set_day_current(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  day_current_ = value;
}
inline void CMsgClientUGSGetGlobalStatsResponse::set_day_current(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_day_current(value);
  // @@protoc_insertion_point(field_set:CMsgClientUGSGetGlobalStatsResponse.day_current)
}

// repeated .CMsgClientUGSGetGlobalStatsResponse.Day days = 4;
inline int CMsgClientUGSGetGlobalStatsResponse::_internal_days_size() const {
  return days_.size();
}
inline int CMsgClientUGSGetGlobalStatsResponse::days_size() const {
  return _internal_days_size();
}
inline void CMsgClientUGSGetGlobalStatsResponse::clear_days() {
  days_.Clear();
}
inline ::CMsgClientUGSGetGlobalStatsResponse_Day* CMsgClientUGSGetGlobalStatsResponse::mutable_days(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientUGSGetGlobalStatsResponse.days)
  return days_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUGSGetGlobalStatsResponse_Day >*
CMsgClientUGSGetGlobalStatsResponse::mutable_days() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientUGSGetGlobalStatsResponse.days)
  return &days_;
}
inline const ::CMsgClientUGSGetGlobalStatsResponse_Day& CMsgClientUGSGetGlobalStatsResponse::_internal_days(int index) const {
  return days_.Get(index);
}
inline const ::CMsgClientUGSGetGlobalStatsResponse_Day& CMsgClientUGSGetGlobalStatsResponse::days(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientUGSGetGlobalStatsResponse.days)
  return _internal_days(index);
}
inline ::CMsgClientUGSGetGlobalStatsResponse_Day* CMsgClientUGSGetGlobalStatsResponse::_internal_add_days() {
  return days_.Add();
}
inline ::CMsgClientUGSGetGlobalStatsResponse_Day* CMsgClientUGSGetGlobalStatsResponse::add_days() {
  // @@protoc_insertion_point(field_add:CMsgClientUGSGetGlobalStatsResponse.days)
  return _internal_add_days();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUGSGetGlobalStatsResponse_Day >&
CMsgClientUGSGetGlobalStatsResponse::days() const {
  // @@protoc_insertion_point(field_list:CMsgClientUGSGetGlobalStatsResponse.days)
  return days_;
}

// -------------------------------------------------------------------

// CMsgClientRedeemGuestPass

// optional fixed64 guest_pass_id = 1;
inline bool CMsgClientRedeemGuestPass::_internal_has_guest_pass_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientRedeemGuestPass::has_guest_pass_id() const {
  return _internal_has_guest_pass_id();
}
inline void CMsgClientRedeemGuestPass::clear_guest_pass_id() {
  guest_pass_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientRedeemGuestPass::_internal_guest_pass_id() const {
  return guest_pass_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientRedeemGuestPass::guest_pass_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientRedeemGuestPass.guest_pass_id)
  return _internal_guest_pass_id();
}
inline void CMsgClientRedeemGuestPass::_internal_set_guest_pass_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  guest_pass_id_ = value;
}
inline void CMsgClientRedeemGuestPass::set_guest_pass_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guest_pass_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientRedeemGuestPass.guest_pass_id)
}

// -------------------------------------------------------------------

// CMsgClientRedeemGuestPassResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgClientRedeemGuestPassResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientRedeemGuestPassResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientRedeemGuestPassResponse::clear_eresult() {
  eresult_ = 2u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRedeemGuestPassResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRedeemGuestPassResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientRedeemGuestPassResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientRedeemGuestPassResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  eresult_ = value;
}
inline void CMsgClientRedeemGuestPassResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientRedeemGuestPassResponse.eresult)
}

// optional uint32 package_id = 2;
inline bool CMsgClientRedeemGuestPassResponse::_internal_has_package_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientRedeemGuestPassResponse::has_package_id() const {
  return _internal_has_package_id();
}
inline void CMsgClientRedeemGuestPassResponse::clear_package_id() {
  package_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRedeemGuestPassResponse::_internal_package_id() const {
  return package_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRedeemGuestPassResponse::package_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientRedeemGuestPassResponse.package_id)
  return _internal_package_id();
}
inline void CMsgClientRedeemGuestPassResponse::_internal_set_package_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  package_id_ = value;
}
inline void CMsgClientRedeemGuestPassResponse::set_package_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_package_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientRedeemGuestPassResponse.package_id)
}

// optional uint32 must_own_appid = 3;
inline bool CMsgClientRedeemGuestPassResponse::_internal_has_must_own_appid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientRedeemGuestPassResponse::has_must_own_appid() const {
  return _internal_has_must_own_appid();
}
inline void CMsgClientRedeemGuestPassResponse::clear_must_own_appid() {
  must_own_appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRedeemGuestPassResponse::_internal_must_own_appid() const {
  return must_own_appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRedeemGuestPassResponse::must_own_appid() const {
  // @@protoc_insertion_point(field_get:CMsgClientRedeemGuestPassResponse.must_own_appid)
  return _internal_must_own_appid();
}
inline void CMsgClientRedeemGuestPassResponse::_internal_set_must_own_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  must_own_appid_ = value;
}
inline void CMsgClientRedeemGuestPassResponse::set_must_own_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_must_own_appid(value);
  // @@protoc_insertion_point(field_set:CMsgClientRedeemGuestPassResponse.must_own_appid)
}

// -------------------------------------------------------------------

// CMsgClientGetClanActivityCounts

// repeated uint64 steamid_clans = 1;
inline int CMsgClientGetClanActivityCounts::_internal_steamid_clans_size() const {
  return steamid_clans_.size();
}
inline int CMsgClientGetClanActivityCounts::steamid_clans_size() const {
  return _internal_steamid_clans_size();
}
inline void CMsgClientGetClanActivityCounts::clear_steamid_clans() {
  steamid_clans_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientGetClanActivityCounts::_internal_steamid_clans(int index) const {
  return steamid_clans_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientGetClanActivityCounts::steamid_clans(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientGetClanActivityCounts.steamid_clans)
  return _internal_steamid_clans(index);
}
inline void CMsgClientGetClanActivityCounts::set_steamid_clans(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  steamid_clans_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientGetClanActivityCounts.steamid_clans)
}
inline void CMsgClientGetClanActivityCounts::_internal_add_steamid_clans(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  steamid_clans_.Add(value);
}
inline void CMsgClientGetClanActivityCounts::add_steamid_clans(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_steamid_clans(value);
  // @@protoc_insertion_point(field_add:CMsgClientGetClanActivityCounts.steamid_clans)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgClientGetClanActivityCounts::_internal_steamid_clans() const {
  return steamid_clans_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgClientGetClanActivityCounts::steamid_clans() const {
  // @@protoc_insertion_point(field_list:CMsgClientGetClanActivityCounts.steamid_clans)
  return _internal_steamid_clans();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgClientGetClanActivityCounts::_internal_mutable_steamid_clans() {
  return &steamid_clans_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgClientGetClanActivityCounts::mutable_steamid_clans() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientGetClanActivityCounts.steamid_clans)
  return _internal_mutable_steamid_clans();
}

// -------------------------------------------------------------------

// CMsgClientGetClanActivityCountsResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgClientGetClanActivityCountsResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientGetClanActivityCountsResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientGetClanActivityCountsResponse::clear_eresult() {
  eresult_ = 2u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetClanActivityCountsResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetClanActivityCountsResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetClanActivityCountsResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientGetClanActivityCountsResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
}
inline void CMsgClientGetClanActivityCountsResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetClanActivityCountsResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgClientOGSReportString

// optional bool accumulated = 1;
inline bool CMsgClientOGSReportString::_internal_has_accumulated() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientOGSReportString::has_accumulated() const {
  return _internal_has_accumulated();
}
inline void CMsgClientOGSReportString::clear_accumulated() {
  accumulated_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgClientOGSReportString::_internal_accumulated() const {
  return accumulated_;
}
inline bool CMsgClientOGSReportString::accumulated() const {
  // @@protoc_insertion_point(field_get:CMsgClientOGSReportString.accumulated)
  return _internal_accumulated();
}
inline void CMsgClientOGSReportString::_internal_set_accumulated(bool value) {
  _has_bits_[0] |= 0x00000008u;
  accumulated_ = value;
}
inline void CMsgClientOGSReportString::set_accumulated(bool value) {
  _internal_set_accumulated(value);
  // @@protoc_insertion_point(field_set:CMsgClientOGSReportString.accumulated)
}

// optional uint64 sessionid = 2;
inline bool CMsgClientOGSReportString::_internal_has_sessionid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientOGSReportString::has_sessionid() const {
  return _internal_has_sessionid();
}
inline void CMsgClientOGSReportString::clear_sessionid() {
  sessionid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientOGSReportString::_internal_sessionid() const {
  return sessionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientOGSReportString::sessionid() const {
  // @@protoc_insertion_point(field_get:CMsgClientOGSReportString.sessionid)
  return _internal_sessionid();
}
inline void CMsgClientOGSReportString::_internal_set_sessionid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  sessionid_ = value;
}
inline void CMsgClientOGSReportString::set_sessionid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_sessionid(value);
  // @@protoc_insertion_point(field_set:CMsgClientOGSReportString.sessionid)
}

// optional int32 severity = 3;
inline bool CMsgClientOGSReportString::_internal_has_severity() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientOGSReportString::has_severity() const {
  return _internal_has_severity();
}
inline void CMsgClientOGSReportString::clear_severity() {
  severity_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientOGSReportString::_internal_severity() const {
  return severity_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientOGSReportString::severity() const {
  // @@protoc_insertion_point(field_get:CMsgClientOGSReportString.severity)
  return _internal_severity();
}
inline void CMsgClientOGSReportString::_internal_set_severity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  severity_ = value;
}
inline void CMsgClientOGSReportString::set_severity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_severity(value);
  // @@protoc_insertion_point(field_set:CMsgClientOGSReportString.severity)
}

// optional string formatter = 4;
inline bool CMsgClientOGSReportString::_internal_has_formatter() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientOGSReportString::has_formatter() const {
  return _internal_has_formatter();
}
inline void CMsgClientOGSReportString::clear_formatter() {
  formatter_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientOGSReportString::formatter() const {
  // @@protoc_insertion_point(field_get:CMsgClientOGSReportString.formatter)
  return _internal_formatter();
}
inline void CMsgClientOGSReportString::set_formatter(const std::string& value) {
  _internal_set_formatter(value);
  // @@protoc_insertion_point(field_set:CMsgClientOGSReportString.formatter)
}
inline std::string* CMsgClientOGSReportString::mutable_formatter() {
  // @@protoc_insertion_point(field_mutable:CMsgClientOGSReportString.formatter)
  return _internal_mutable_formatter();
}
inline const std::string& CMsgClientOGSReportString::_internal_formatter() const {
  return formatter_.Get();
}
inline void CMsgClientOGSReportString::_internal_set_formatter(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  formatter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientOGSReportString::set_formatter(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  formatter_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientOGSReportString.formatter)
}
inline void CMsgClientOGSReportString::set_formatter(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  formatter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientOGSReportString.formatter)
}
inline void CMsgClientOGSReportString::set_formatter(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  formatter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientOGSReportString.formatter)
}
inline std::string* CMsgClientOGSReportString::_internal_mutable_formatter() {
  _has_bits_[0] |= 0x00000001u;
  return formatter_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientOGSReportString::release_formatter() {
  // @@protoc_insertion_point(field_release:CMsgClientOGSReportString.formatter)
  if (!_internal_has_formatter()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return formatter_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientOGSReportString::set_allocated_formatter(std::string* formatter) {
  if (formatter != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  formatter_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), formatter,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientOGSReportString.formatter)
}

// optional bytes varargs = 5;
inline bool CMsgClientOGSReportString::_internal_has_varargs() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientOGSReportString::has_varargs() const {
  return _internal_has_varargs();
}
inline void CMsgClientOGSReportString::clear_varargs() {
  varargs_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientOGSReportString::varargs() const {
  // @@protoc_insertion_point(field_get:CMsgClientOGSReportString.varargs)
  return _internal_varargs();
}
inline void CMsgClientOGSReportString::set_varargs(const std::string& value) {
  _internal_set_varargs(value);
  // @@protoc_insertion_point(field_set:CMsgClientOGSReportString.varargs)
}
inline std::string* CMsgClientOGSReportString::mutable_varargs() {
  // @@protoc_insertion_point(field_mutable:CMsgClientOGSReportString.varargs)
  return _internal_mutable_varargs();
}
inline const std::string& CMsgClientOGSReportString::_internal_varargs() const {
  return varargs_.Get();
}
inline void CMsgClientOGSReportString::_internal_set_varargs(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  varargs_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientOGSReportString::set_varargs(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  varargs_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientOGSReportString.varargs)
}
inline void CMsgClientOGSReportString::set_varargs(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  varargs_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientOGSReportString.varargs)
}
inline void CMsgClientOGSReportString::set_varargs(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  varargs_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientOGSReportString.varargs)
}
inline std::string* CMsgClientOGSReportString::_internal_mutable_varargs() {
  _has_bits_[0] |= 0x00000002u;
  return varargs_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientOGSReportString::release_varargs() {
  // @@protoc_insertion_point(field_release:CMsgClientOGSReportString.varargs)
  if (!_internal_has_varargs()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return varargs_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientOGSReportString::set_allocated_varargs(std::string* varargs) {
  if (varargs != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  varargs_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), varargs,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientOGSReportString.varargs)
}

// -------------------------------------------------------------------

// CMsgClientOGSReportBug

// optional uint64 sessionid = 1;
inline bool CMsgClientOGSReportBug::_internal_has_sessionid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientOGSReportBug::has_sessionid() const {
  return _internal_has_sessionid();
}
inline void CMsgClientOGSReportBug::clear_sessionid() {
  sessionid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientOGSReportBug::_internal_sessionid() const {
  return sessionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientOGSReportBug::sessionid() const {
  // @@protoc_insertion_point(field_get:CMsgClientOGSReportBug.sessionid)
  return _internal_sessionid();
}
inline void CMsgClientOGSReportBug::_internal_set_sessionid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  sessionid_ = value;
}
inline void CMsgClientOGSReportBug::set_sessionid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_sessionid(value);
  // @@protoc_insertion_point(field_set:CMsgClientOGSReportBug.sessionid)
}

// optional string bugtext = 2;
inline bool CMsgClientOGSReportBug::_internal_has_bugtext() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientOGSReportBug::has_bugtext() const {
  return _internal_has_bugtext();
}
inline void CMsgClientOGSReportBug::clear_bugtext() {
  bugtext_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientOGSReportBug::bugtext() const {
  // @@protoc_insertion_point(field_get:CMsgClientOGSReportBug.bugtext)
  return _internal_bugtext();
}
inline void CMsgClientOGSReportBug::set_bugtext(const std::string& value) {
  _internal_set_bugtext(value);
  // @@protoc_insertion_point(field_set:CMsgClientOGSReportBug.bugtext)
}
inline std::string* CMsgClientOGSReportBug::mutable_bugtext() {
  // @@protoc_insertion_point(field_mutable:CMsgClientOGSReportBug.bugtext)
  return _internal_mutable_bugtext();
}
inline const std::string& CMsgClientOGSReportBug::_internal_bugtext() const {
  return bugtext_.Get();
}
inline void CMsgClientOGSReportBug::_internal_set_bugtext(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  bugtext_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientOGSReportBug::set_bugtext(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  bugtext_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientOGSReportBug.bugtext)
}
inline void CMsgClientOGSReportBug::set_bugtext(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  bugtext_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientOGSReportBug.bugtext)
}
inline void CMsgClientOGSReportBug::set_bugtext(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  bugtext_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientOGSReportBug.bugtext)
}
inline std::string* CMsgClientOGSReportBug::_internal_mutable_bugtext() {
  _has_bits_[0] |= 0x00000001u;
  return bugtext_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientOGSReportBug::release_bugtext() {
  // @@protoc_insertion_point(field_release:CMsgClientOGSReportBug.bugtext)
  if (!_internal_has_bugtext()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return bugtext_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientOGSReportBug::set_allocated_bugtext(std::string* bugtext) {
  if (bugtext != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  bugtext_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), bugtext,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientOGSReportBug.bugtext)
}

// optional bytes screenshot = 3;
inline bool CMsgClientOGSReportBug::_internal_has_screenshot() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientOGSReportBug::has_screenshot() const {
  return _internal_has_screenshot();
}
inline void CMsgClientOGSReportBug::clear_screenshot() {
  screenshot_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientOGSReportBug::screenshot() const {
  // @@protoc_insertion_point(field_get:CMsgClientOGSReportBug.screenshot)
  return _internal_screenshot();
}
inline void CMsgClientOGSReportBug::set_screenshot(const std::string& value) {
  _internal_set_screenshot(value);
  // @@protoc_insertion_point(field_set:CMsgClientOGSReportBug.screenshot)
}
inline std::string* CMsgClientOGSReportBug::mutable_screenshot() {
  // @@protoc_insertion_point(field_mutable:CMsgClientOGSReportBug.screenshot)
  return _internal_mutable_screenshot();
}
inline const std::string& CMsgClientOGSReportBug::_internal_screenshot() const {
  return screenshot_.Get();
}
inline void CMsgClientOGSReportBug::_internal_set_screenshot(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  screenshot_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientOGSReportBug::set_screenshot(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  screenshot_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientOGSReportBug.screenshot)
}
inline void CMsgClientOGSReportBug::set_screenshot(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  screenshot_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientOGSReportBug.screenshot)
}
inline void CMsgClientOGSReportBug::set_screenshot(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  screenshot_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientOGSReportBug.screenshot)
}
inline std::string* CMsgClientOGSReportBug::_internal_mutable_screenshot() {
  _has_bits_[0] |= 0x00000002u;
  return screenshot_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientOGSReportBug::release_screenshot() {
  // @@protoc_insertion_point(field_release:CMsgClientOGSReportBug.screenshot)
  if (!_internal_has_screenshot()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return screenshot_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientOGSReportBug::set_allocated_screenshot(std::string* screenshot) {
  if (screenshot != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  screenshot_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), screenshot,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientOGSReportBug.screenshot)
}

// -------------------------------------------------------------------

// CMsgClientSentLogs

// -------------------------------------------------------------------

// CMsgGCClient

// optional uint32 appid = 1;
inline bool CMsgGCClient::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCClient::has_appid() const {
  return _internal_has_appid();
}
inline void CMsgGCClient::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCClient::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCClient::appid() const {
  // @@protoc_insertion_point(field_get:CMsgGCClient.appid)
  return _internal_appid();
}
inline void CMsgGCClient::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  appid_ = value;
}
inline void CMsgGCClient::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CMsgGCClient.appid)
}

// optional uint32 msgtype = 2;
inline bool CMsgGCClient::_internal_has_msgtype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCClient::has_msgtype() const {
  return _internal_has_msgtype();
}
inline void CMsgGCClient::clear_msgtype() {
  msgtype_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCClient::_internal_msgtype() const {
  return msgtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCClient::msgtype() const {
  // @@protoc_insertion_point(field_get:CMsgGCClient.msgtype)
  return _internal_msgtype();
}
inline void CMsgGCClient::_internal_set_msgtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  msgtype_ = value;
}
inline void CMsgGCClient::set_msgtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_msgtype(value);
  // @@protoc_insertion_point(field_set:CMsgGCClient.msgtype)
}

// optional bytes payload = 3;
inline bool CMsgGCClient::_internal_has_payload() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCClient::has_payload() const {
  return _internal_has_payload();
}
inline void CMsgGCClient::clear_payload() {
  payload_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCClient::payload() const {
  // @@protoc_insertion_point(field_get:CMsgGCClient.payload)
  return _internal_payload();
}
inline void CMsgGCClient::set_payload(const std::string& value) {
  _internal_set_payload(value);
  // @@protoc_insertion_point(field_set:CMsgGCClient.payload)
}
inline std::string* CMsgGCClient::mutable_payload() {
  // @@protoc_insertion_point(field_mutable:CMsgGCClient.payload)
  return _internal_mutable_payload();
}
inline const std::string& CMsgGCClient::_internal_payload() const {
  return payload_.Get();
}
inline void CMsgGCClient::_internal_set_payload(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  payload_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgGCClient::set_payload(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  payload_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgGCClient.payload)
}
inline void CMsgGCClient::set_payload(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  payload_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgGCClient.payload)
}
inline void CMsgGCClient::set_payload(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  payload_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgGCClient.payload)
}
inline std::string* CMsgGCClient::_internal_mutable_payload() {
  _has_bits_[0] |= 0x00000001u;
  return payload_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgGCClient::release_payload() {
  // @@protoc_insertion_point(field_release:CMsgGCClient.payload)
  if (!_internal_has_payload()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return payload_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgGCClient::set_allocated_payload(std::string* payload) {
  if (payload != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  payload_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), payload,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgGCClient.payload)
}

// optional fixed64 steamid = 4;
inline bool CMsgGCClient::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgGCClient::has_steamid() const {
  return _internal_has_steamid();
}
inline void CMsgGCClient::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCClient::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCClient::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgGCClient.steamid)
  return _internal_steamid();
}
inline void CMsgGCClient::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  steamid_ = value;
}
inline void CMsgGCClient::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CMsgGCClient.steamid)
}

// optional string gcname = 5;
inline bool CMsgGCClient::_internal_has_gcname() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCClient::has_gcname() const {
  return _internal_has_gcname();
}
inline void CMsgGCClient::clear_gcname() {
  gcname_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgGCClient::gcname() const {
  // @@protoc_insertion_point(field_get:CMsgGCClient.gcname)
  return _internal_gcname();
}
inline void CMsgGCClient::set_gcname(const std::string& value) {
  _internal_set_gcname(value);
  // @@protoc_insertion_point(field_set:CMsgGCClient.gcname)
}
inline std::string* CMsgGCClient::mutable_gcname() {
  // @@protoc_insertion_point(field_mutable:CMsgGCClient.gcname)
  return _internal_mutable_gcname();
}
inline const std::string& CMsgGCClient::_internal_gcname() const {
  return gcname_.Get();
}
inline void CMsgGCClient::_internal_set_gcname(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  gcname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgGCClient::set_gcname(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  gcname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgGCClient.gcname)
}
inline void CMsgGCClient::set_gcname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  gcname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgGCClient.gcname)
}
inline void CMsgGCClient::set_gcname(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  gcname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgGCClient.gcname)
}
inline std::string* CMsgGCClient::_internal_mutable_gcname() {
  _has_bits_[0] |= 0x00000002u;
  return gcname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgGCClient::release_gcname() {
  // @@protoc_insertion_point(field_release:CMsgGCClient.gcname)
  if (!_internal_has_gcname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return gcname_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgGCClient::set_allocated_gcname(std::string* gcname) {
  if (gcname != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  gcname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gcname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgGCClient.gcname)
}

// optional uint32 ip = 6;
inline bool CMsgGCClient::_internal_has_ip() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgGCClient::has_ip() const {
  return _internal_has_ip();
}
inline void CMsgGCClient::clear_ip() {
  ip_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCClient::_internal_ip() const {
  return ip_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCClient::ip() const {
  // @@protoc_insertion_point(field_get:CMsgGCClient.ip)
  return _internal_ip();
}
inline void CMsgGCClient::_internal_set_ip(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  ip_ = value;
}
inline void CMsgGCClient::set_ip(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ip(value);
  // @@protoc_insertion_point(field_set:CMsgGCClient.ip)
}

// -------------------------------------------------------------------

// CMsgClientRequestFreeLicense

// repeated uint32 appids = 2;
inline int CMsgClientRequestFreeLicense::_internal_appids_size() const {
  return appids_.size();
}
inline int CMsgClientRequestFreeLicense::appids_size() const {
  return _internal_appids_size();
}
inline void CMsgClientRequestFreeLicense::clear_appids() {
  appids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestFreeLicense::_internal_appids(int index) const {
  return appids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestFreeLicense::appids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestFreeLicense.appids)
  return _internal_appids(index);
}
inline void CMsgClientRequestFreeLicense::set_appids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  appids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestFreeLicense.appids)
}
inline void CMsgClientRequestFreeLicense::_internal_add_appids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  appids_.Add(value);
}
inline void CMsgClientRequestFreeLicense::add_appids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_appids(value);
  // @@protoc_insertion_point(field_add:CMsgClientRequestFreeLicense.appids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgClientRequestFreeLicense::_internal_appids() const {
  return appids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgClientRequestFreeLicense::appids() const {
  // @@protoc_insertion_point(field_list:CMsgClientRequestFreeLicense.appids)
  return _internal_appids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgClientRequestFreeLicense::_internal_mutable_appids() {
  return &appids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgClientRequestFreeLicense::mutable_appids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientRequestFreeLicense.appids)
  return _internal_mutable_appids();
}

// -------------------------------------------------------------------

// CMsgClientRequestFreeLicenseResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgClientRequestFreeLicenseResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientRequestFreeLicenseResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientRequestFreeLicenseResponse::clear_eresult() {
  eresult_ = 2u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestFreeLicenseResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestFreeLicenseResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestFreeLicenseResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientRequestFreeLicenseResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
}
inline void CMsgClientRequestFreeLicenseResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestFreeLicenseResponse.eresult)
}

// repeated uint32 granted_packageids = 2;
inline int CMsgClientRequestFreeLicenseResponse::_internal_granted_packageids_size() const {
  return granted_packageids_.size();
}
inline int CMsgClientRequestFreeLicenseResponse::granted_packageids_size() const {
  return _internal_granted_packageids_size();
}
inline void CMsgClientRequestFreeLicenseResponse::clear_granted_packageids() {
  granted_packageids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestFreeLicenseResponse::_internal_granted_packageids(int index) const {
  return granted_packageids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestFreeLicenseResponse::granted_packageids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestFreeLicenseResponse.granted_packageids)
  return _internal_granted_packageids(index);
}
inline void CMsgClientRequestFreeLicenseResponse::set_granted_packageids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  granted_packageids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestFreeLicenseResponse.granted_packageids)
}
inline void CMsgClientRequestFreeLicenseResponse::_internal_add_granted_packageids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  granted_packageids_.Add(value);
}
inline void CMsgClientRequestFreeLicenseResponse::add_granted_packageids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_granted_packageids(value);
  // @@protoc_insertion_point(field_add:CMsgClientRequestFreeLicenseResponse.granted_packageids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgClientRequestFreeLicenseResponse::_internal_granted_packageids() const {
  return granted_packageids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgClientRequestFreeLicenseResponse::granted_packageids() const {
  // @@protoc_insertion_point(field_list:CMsgClientRequestFreeLicenseResponse.granted_packageids)
  return _internal_granted_packageids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgClientRequestFreeLicenseResponse::_internal_mutable_granted_packageids() {
  return &granted_packageids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgClientRequestFreeLicenseResponse::mutable_granted_packageids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientRequestFreeLicenseResponse.granted_packageids)
  return _internal_mutable_granted_packageids();
}

// repeated uint32 granted_appids = 3;
inline int CMsgClientRequestFreeLicenseResponse::_internal_granted_appids_size() const {
  return granted_appids_.size();
}
inline int CMsgClientRequestFreeLicenseResponse::granted_appids_size() const {
  return _internal_granted_appids_size();
}
inline void CMsgClientRequestFreeLicenseResponse::clear_granted_appids() {
  granted_appids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestFreeLicenseResponse::_internal_granted_appids(int index) const {
  return granted_appids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestFreeLicenseResponse::granted_appids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestFreeLicenseResponse.granted_appids)
  return _internal_granted_appids(index);
}
inline void CMsgClientRequestFreeLicenseResponse::set_granted_appids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  granted_appids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestFreeLicenseResponse.granted_appids)
}
inline void CMsgClientRequestFreeLicenseResponse::_internal_add_granted_appids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  granted_appids_.Add(value);
}
inline void CMsgClientRequestFreeLicenseResponse::add_granted_appids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_granted_appids(value);
  // @@protoc_insertion_point(field_add:CMsgClientRequestFreeLicenseResponse.granted_appids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgClientRequestFreeLicenseResponse::_internal_granted_appids() const {
  return granted_appids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgClientRequestFreeLicenseResponse::granted_appids() const {
  // @@protoc_insertion_point(field_list:CMsgClientRequestFreeLicenseResponse.granted_appids)
  return _internal_granted_appids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgClientRequestFreeLicenseResponse::_internal_mutable_granted_appids() {
  return &granted_appids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgClientRequestFreeLicenseResponse::mutable_granted_appids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientRequestFreeLicenseResponse.granted_appids)
  return _internal_mutable_granted_appids();
}

// -------------------------------------------------------------------

// CMsgDRMDownloadRequestWithCrashData

// optional uint32 download_flags = 1;
inline bool CMsgDRMDownloadRequestWithCrashData::_internal_has_download_flags() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgDRMDownloadRequestWithCrashData::has_download_flags() const {
  return _internal_has_download_flags();
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_download_flags() {
  download_flags_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMDownloadRequestWithCrashData::_internal_download_flags() const {
  return download_flags_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMDownloadRequestWithCrashData::download_flags() const {
  // @@protoc_insertion_point(field_get:CMsgDRMDownloadRequestWithCrashData.download_flags)
  return _internal_download_flags();
}
inline void CMsgDRMDownloadRequestWithCrashData::_internal_set_download_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  download_flags_ = value;
}
inline void CMsgDRMDownloadRequestWithCrashData::set_download_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_download_flags(value);
  // @@protoc_insertion_point(field_set:CMsgDRMDownloadRequestWithCrashData.download_flags)
}

// optional uint32 download_types_known = 2;
inline bool CMsgDRMDownloadRequestWithCrashData::_internal_has_download_types_known() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgDRMDownloadRequestWithCrashData::has_download_types_known() const {
  return _internal_has_download_types_known();
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_download_types_known() {
  download_types_known_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMDownloadRequestWithCrashData::_internal_download_types_known() const {
  return download_types_known_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMDownloadRequestWithCrashData::download_types_known() const {
  // @@protoc_insertion_point(field_get:CMsgDRMDownloadRequestWithCrashData.download_types_known)
  return _internal_download_types_known();
}
inline void CMsgDRMDownloadRequestWithCrashData::_internal_set_download_types_known(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  download_types_known_ = value;
}
inline void CMsgDRMDownloadRequestWithCrashData::set_download_types_known(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_download_types_known(value);
  // @@protoc_insertion_point(field_set:CMsgDRMDownloadRequestWithCrashData.download_types_known)
}

// optional bytes guid_drm = 3;
inline bool CMsgDRMDownloadRequestWithCrashData::_internal_has_guid_drm() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgDRMDownloadRequestWithCrashData::has_guid_drm() const {
  return _internal_has_guid_drm();
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_guid_drm() {
  guid_drm_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgDRMDownloadRequestWithCrashData::guid_drm() const {
  // @@protoc_insertion_point(field_get:CMsgDRMDownloadRequestWithCrashData.guid_drm)
  return _internal_guid_drm();
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_drm(const std::string& value) {
  _internal_set_guid_drm(value);
  // @@protoc_insertion_point(field_set:CMsgDRMDownloadRequestWithCrashData.guid_drm)
}
inline std::string* CMsgDRMDownloadRequestWithCrashData::mutable_guid_drm() {
  // @@protoc_insertion_point(field_mutable:CMsgDRMDownloadRequestWithCrashData.guid_drm)
  return _internal_mutable_guid_drm();
}
inline const std::string& CMsgDRMDownloadRequestWithCrashData::_internal_guid_drm() const {
  return guid_drm_.Get();
}
inline void CMsgDRMDownloadRequestWithCrashData::_internal_set_guid_drm(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  guid_drm_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_drm(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  guid_drm_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgDRMDownloadRequestWithCrashData.guid_drm)
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_drm(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  guid_drm_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgDRMDownloadRequestWithCrashData.guid_drm)
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_drm(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  guid_drm_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgDRMDownloadRequestWithCrashData.guid_drm)
}
inline std::string* CMsgDRMDownloadRequestWithCrashData::_internal_mutable_guid_drm() {
  _has_bits_[0] |= 0x00000001u;
  return guid_drm_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgDRMDownloadRequestWithCrashData::release_guid_drm() {
  // @@protoc_insertion_point(field_release:CMsgDRMDownloadRequestWithCrashData.guid_drm)
  if (!_internal_has_guid_drm()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return guid_drm_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgDRMDownloadRequestWithCrashData::set_allocated_guid_drm(std::string* guid_drm) {
  if (guid_drm != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  guid_drm_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), guid_drm,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgDRMDownloadRequestWithCrashData.guid_drm)
}

// optional bytes guid_split = 4;
inline bool CMsgDRMDownloadRequestWithCrashData::_internal_has_guid_split() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgDRMDownloadRequestWithCrashData::has_guid_split() const {
  return _internal_has_guid_split();
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_guid_split() {
  guid_split_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgDRMDownloadRequestWithCrashData::guid_split() const {
  // @@protoc_insertion_point(field_get:CMsgDRMDownloadRequestWithCrashData.guid_split)
  return _internal_guid_split();
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_split(const std::string& value) {
  _internal_set_guid_split(value);
  // @@protoc_insertion_point(field_set:CMsgDRMDownloadRequestWithCrashData.guid_split)
}
inline std::string* CMsgDRMDownloadRequestWithCrashData::mutable_guid_split() {
  // @@protoc_insertion_point(field_mutable:CMsgDRMDownloadRequestWithCrashData.guid_split)
  return _internal_mutable_guid_split();
}
inline const std::string& CMsgDRMDownloadRequestWithCrashData::_internal_guid_split() const {
  return guid_split_.Get();
}
inline void CMsgDRMDownloadRequestWithCrashData::_internal_set_guid_split(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  guid_split_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_split(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  guid_split_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgDRMDownloadRequestWithCrashData.guid_split)
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_split(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  guid_split_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgDRMDownloadRequestWithCrashData.guid_split)
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_split(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  guid_split_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgDRMDownloadRequestWithCrashData.guid_split)
}
inline std::string* CMsgDRMDownloadRequestWithCrashData::_internal_mutable_guid_split() {
  _has_bits_[0] |= 0x00000002u;
  return guid_split_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgDRMDownloadRequestWithCrashData::release_guid_split() {
  // @@protoc_insertion_point(field_release:CMsgDRMDownloadRequestWithCrashData.guid_split)
  if (!_internal_has_guid_split()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return guid_split_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgDRMDownloadRequestWithCrashData::set_allocated_guid_split(std::string* guid_split) {
  if (guid_split != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  guid_split_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), guid_split,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgDRMDownloadRequestWithCrashData.guid_split)
}

// optional bytes guid_merge = 5;
inline bool CMsgDRMDownloadRequestWithCrashData::_internal_has_guid_merge() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgDRMDownloadRequestWithCrashData::has_guid_merge() const {
  return _internal_has_guid_merge();
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_guid_merge() {
  guid_merge_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgDRMDownloadRequestWithCrashData::guid_merge() const {
  // @@protoc_insertion_point(field_get:CMsgDRMDownloadRequestWithCrashData.guid_merge)
  return _internal_guid_merge();
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_merge(const std::string& value) {
  _internal_set_guid_merge(value);
  // @@protoc_insertion_point(field_set:CMsgDRMDownloadRequestWithCrashData.guid_merge)
}
inline std::string* CMsgDRMDownloadRequestWithCrashData::mutable_guid_merge() {
  // @@protoc_insertion_point(field_mutable:CMsgDRMDownloadRequestWithCrashData.guid_merge)
  return _internal_mutable_guid_merge();
}
inline const std::string& CMsgDRMDownloadRequestWithCrashData::_internal_guid_merge() const {
  return guid_merge_.Get();
}
inline void CMsgDRMDownloadRequestWithCrashData::_internal_set_guid_merge(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  guid_merge_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_merge(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  guid_merge_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgDRMDownloadRequestWithCrashData.guid_merge)
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_merge(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  guid_merge_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgDRMDownloadRequestWithCrashData.guid_merge)
}
inline void CMsgDRMDownloadRequestWithCrashData::set_guid_merge(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  guid_merge_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgDRMDownloadRequestWithCrashData.guid_merge)
}
inline std::string* CMsgDRMDownloadRequestWithCrashData::_internal_mutable_guid_merge() {
  _has_bits_[0] |= 0x00000004u;
  return guid_merge_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgDRMDownloadRequestWithCrashData::release_guid_merge() {
  // @@protoc_insertion_point(field_release:CMsgDRMDownloadRequestWithCrashData.guid_merge)
  if (!_internal_has_guid_merge()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return guid_merge_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgDRMDownloadRequestWithCrashData::set_allocated_guid_merge(std::string* guid_merge) {
  if (guid_merge != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  guid_merge_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), guid_merge,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgDRMDownloadRequestWithCrashData.guid_merge)
}

// optional string module_name = 6;
inline bool CMsgDRMDownloadRequestWithCrashData::_internal_has_module_name() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgDRMDownloadRequestWithCrashData::has_module_name() const {
  return _internal_has_module_name();
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_module_name() {
  module_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CMsgDRMDownloadRequestWithCrashData::module_name() const {
  // @@protoc_insertion_point(field_get:CMsgDRMDownloadRequestWithCrashData.module_name)
  return _internal_module_name();
}
inline void CMsgDRMDownloadRequestWithCrashData::set_module_name(const std::string& value) {
  _internal_set_module_name(value);
  // @@protoc_insertion_point(field_set:CMsgDRMDownloadRequestWithCrashData.module_name)
}
inline std::string* CMsgDRMDownloadRequestWithCrashData::mutable_module_name() {
  // @@protoc_insertion_point(field_mutable:CMsgDRMDownloadRequestWithCrashData.module_name)
  return _internal_mutable_module_name();
}
inline const std::string& CMsgDRMDownloadRequestWithCrashData::_internal_module_name() const {
  return module_name_.Get();
}
inline void CMsgDRMDownloadRequestWithCrashData::_internal_set_module_name(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  module_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgDRMDownloadRequestWithCrashData::set_module_name(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  module_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgDRMDownloadRequestWithCrashData.module_name)
}
inline void CMsgDRMDownloadRequestWithCrashData::set_module_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  module_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgDRMDownloadRequestWithCrashData.module_name)
}
inline void CMsgDRMDownloadRequestWithCrashData::set_module_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  module_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgDRMDownloadRequestWithCrashData.module_name)
}
inline std::string* CMsgDRMDownloadRequestWithCrashData::_internal_mutable_module_name() {
  _has_bits_[0] |= 0x00000008u;
  return module_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgDRMDownloadRequestWithCrashData::release_module_name() {
  // @@protoc_insertion_point(field_release:CMsgDRMDownloadRequestWithCrashData.module_name)
  if (!_internal_has_module_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return module_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgDRMDownloadRequestWithCrashData::set_allocated_module_name(std::string* module_name) {
  if (module_name != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  module_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), module_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgDRMDownloadRequestWithCrashData.module_name)
}

// optional string module_path = 7;
inline bool CMsgDRMDownloadRequestWithCrashData::_internal_has_module_path() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgDRMDownloadRequestWithCrashData::has_module_path() const {
  return _internal_has_module_path();
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_module_path() {
  module_path_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& CMsgDRMDownloadRequestWithCrashData::module_path() const {
  // @@protoc_insertion_point(field_get:CMsgDRMDownloadRequestWithCrashData.module_path)
  return _internal_module_path();
}
inline void CMsgDRMDownloadRequestWithCrashData::set_module_path(const std::string& value) {
  _internal_set_module_path(value);
  // @@protoc_insertion_point(field_set:CMsgDRMDownloadRequestWithCrashData.module_path)
}
inline std::string* CMsgDRMDownloadRequestWithCrashData::mutable_module_path() {
  // @@protoc_insertion_point(field_mutable:CMsgDRMDownloadRequestWithCrashData.module_path)
  return _internal_mutable_module_path();
}
inline const std::string& CMsgDRMDownloadRequestWithCrashData::_internal_module_path() const {
  return module_path_.Get();
}
inline void CMsgDRMDownloadRequestWithCrashData::_internal_set_module_path(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  module_path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgDRMDownloadRequestWithCrashData::set_module_path(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  module_path_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgDRMDownloadRequestWithCrashData.module_path)
}
inline void CMsgDRMDownloadRequestWithCrashData::set_module_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  module_path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgDRMDownloadRequestWithCrashData.module_path)
}
inline void CMsgDRMDownloadRequestWithCrashData::set_module_path(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000010u;
  module_path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgDRMDownloadRequestWithCrashData.module_path)
}
inline std::string* CMsgDRMDownloadRequestWithCrashData::_internal_mutable_module_path() {
  _has_bits_[0] |= 0x00000010u;
  return module_path_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgDRMDownloadRequestWithCrashData::release_module_path() {
  // @@protoc_insertion_point(field_release:CMsgDRMDownloadRequestWithCrashData.module_path)
  if (!_internal_has_module_path()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return module_path_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgDRMDownloadRequestWithCrashData::set_allocated_module_path(std::string* module_path) {
  if (module_path != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  module_path_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), module_path,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgDRMDownloadRequestWithCrashData.module_path)
}

// optional bytes crash_data = 8;
inline bool CMsgDRMDownloadRequestWithCrashData::_internal_has_crash_data() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgDRMDownloadRequestWithCrashData::has_crash_data() const {
  return _internal_has_crash_data();
}
inline void CMsgDRMDownloadRequestWithCrashData::clear_crash_data() {
  crash_data_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& CMsgDRMDownloadRequestWithCrashData::crash_data() const {
  // @@protoc_insertion_point(field_get:CMsgDRMDownloadRequestWithCrashData.crash_data)
  return _internal_crash_data();
}
inline void CMsgDRMDownloadRequestWithCrashData::set_crash_data(const std::string& value) {
  _internal_set_crash_data(value);
  // @@protoc_insertion_point(field_set:CMsgDRMDownloadRequestWithCrashData.crash_data)
}
inline std::string* CMsgDRMDownloadRequestWithCrashData::mutable_crash_data() {
  // @@protoc_insertion_point(field_mutable:CMsgDRMDownloadRequestWithCrashData.crash_data)
  return _internal_mutable_crash_data();
}
inline const std::string& CMsgDRMDownloadRequestWithCrashData::_internal_crash_data() const {
  return crash_data_.Get();
}
inline void CMsgDRMDownloadRequestWithCrashData::_internal_set_crash_data(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  crash_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgDRMDownloadRequestWithCrashData::set_crash_data(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  crash_data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgDRMDownloadRequestWithCrashData.crash_data)
}
inline void CMsgDRMDownloadRequestWithCrashData::set_crash_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  crash_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgDRMDownloadRequestWithCrashData.crash_data)
}
inline void CMsgDRMDownloadRequestWithCrashData::set_crash_data(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000020u;
  crash_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgDRMDownloadRequestWithCrashData.crash_data)
}
inline std::string* CMsgDRMDownloadRequestWithCrashData::_internal_mutable_crash_data() {
  _has_bits_[0] |= 0x00000020u;
  return crash_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgDRMDownloadRequestWithCrashData::release_crash_data() {
  // @@protoc_insertion_point(field_release:CMsgDRMDownloadRequestWithCrashData.crash_data)
  if (!_internal_has_crash_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return crash_data_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgDRMDownloadRequestWithCrashData::set_allocated_crash_data(std::string* crash_data) {
  if (crash_data != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  crash_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), crash_data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgDRMDownloadRequestWithCrashData.crash_data)
}

// -------------------------------------------------------------------

// CMsgDRMDownloadResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgDRMDownloadResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgDRMDownloadResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgDRMDownloadResponse::clear_eresult() {
  eresult_ = 2u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMDownloadResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMDownloadResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDRMDownloadResponse.eresult)
  return _internal_eresult();
}
inline void CMsgDRMDownloadResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  eresult_ = value;
}
inline void CMsgDRMDownloadResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgDRMDownloadResponse.eresult)
}

// optional uint32 app_id = 2;
inline bool CMsgDRMDownloadResponse::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgDRMDownloadResponse::has_app_id() const {
  return _internal_has_app_id();
}
inline void CMsgDRMDownloadResponse::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMDownloadResponse::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMDownloadResponse::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgDRMDownloadResponse.app_id)
  return _internal_app_id();
}
inline void CMsgDRMDownloadResponse::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  app_id_ = value;
}
inline void CMsgDRMDownloadResponse::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgDRMDownloadResponse.app_id)
}

// optional uint32 blob_download_type = 3;
inline bool CMsgDRMDownloadResponse::_internal_has_blob_download_type() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgDRMDownloadResponse::has_blob_download_type() const {
  return _internal_has_blob_download_type();
}
inline void CMsgDRMDownloadResponse::clear_blob_download_type() {
  blob_download_type_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMDownloadResponse::_internal_blob_download_type() const {
  return blob_download_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMDownloadResponse::blob_download_type() const {
  // @@protoc_insertion_point(field_get:CMsgDRMDownloadResponse.blob_download_type)
  return _internal_blob_download_type();
}
inline void CMsgDRMDownloadResponse::_internal_set_blob_download_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  blob_download_type_ = value;
}
inline void CMsgDRMDownloadResponse::set_blob_download_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_blob_download_type(value);
  // @@protoc_insertion_point(field_set:CMsgDRMDownloadResponse.blob_download_type)
}

// optional bytes merge_guid = 4;
inline bool CMsgDRMDownloadResponse::_internal_has_merge_guid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgDRMDownloadResponse::has_merge_guid() const {
  return _internal_has_merge_guid();
}
inline void CMsgDRMDownloadResponse::clear_merge_guid() {
  merge_guid_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgDRMDownloadResponse::merge_guid() const {
  // @@protoc_insertion_point(field_get:CMsgDRMDownloadResponse.merge_guid)
  return _internal_merge_guid();
}
inline void CMsgDRMDownloadResponse::set_merge_guid(const std::string& value) {
  _internal_set_merge_guid(value);
  // @@protoc_insertion_point(field_set:CMsgDRMDownloadResponse.merge_guid)
}
inline std::string* CMsgDRMDownloadResponse::mutable_merge_guid() {
  // @@protoc_insertion_point(field_mutable:CMsgDRMDownloadResponse.merge_guid)
  return _internal_mutable_merge_guid();
}
inline const std::string& CMsgDRMDownloadResponse::_internal_merge_guid() const {
  return merge_guid_.Get();
}
inline void CMsgDRMDownloadResponse::_internal_set_merge_guid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  merge_guid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgDRMDownloadResponse::set_merge_guid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  merge_guid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgDRMDownloadResponse.merge_guid)
}
inline void CMsgDRMDownloadResponse::set_merge_guid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  merge_guid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgDRMDownloadResponse.merge_guid)
}
inline void CMsgDRMDownloadResponse::set_merge_guid(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  merge_guid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgDRMDownloadResponse.merge_guid)
}
inline std::string* CMsgDRMDownloadResponse::_internal_mutable_merge_guid() {
  _has_bits_[0] |= 0x00000001u;
  return merge_guid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgDRMDownloadResponse::release_merge_guid() {
  // @@protoc_insertion_point(field_release:CMsgDRMDownloadResponse.merge_guid)
  if (!_internal_has_merge_guid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return merge_guid_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgDRMDownloadResponse::set_allocated_merge_guid(std::string* merge_guid) {
  if (merge_guid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  merge_guid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), merge_guid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgDRMDownloadResponse.merge_guid)
}

// optional uint32 download_file_dfs_ip = 5;
inline bool CMsgDRMDownloadResponse::_internal_has_download_file_dfs_ip() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgDRMDownloadResponse::has_download_file_dfs_ip() const {
  return _internal_has_download_file_dfs_ip();
}
inline void CMsgDRMDownloadResponse::clear_download_file_dfs_ip() {
  download_file_dfs_ip_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMDownloadResponse::_internal_download_file_dfs_ip() const {
  return download_file_dfs_ip_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMDownloadResponse::download_file_dfs_ip() const {
  // @@protoc_insertion_point(field_get:CMsgDRMDownloadResponse.download_file_dfs_ip)
  return _internal_download_file_dfs_ip();
}
inline void CMsgDRMDownloadResponse::_internal_set_download_file_dfs_ip(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  download_file_dfs_ip_ = value;
}
inline void CMsgDRMDownloadResponse::set_download_file_dfs_ip(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_download_file_dfs_ip(value);
  // @@protoc_insertion_point(field_set:CMsgDRMDownloadResponse.download_file_dfs_ip)
}

// optional uint32 download_file_dfs_port = 6;
inline bool CMsgDRMDownloadResponse::_internal_has_download_file_dfs_port() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgDRMDownloadResponse::has_download_file_dfs_port() const {
  return _internal_has_download_file_dfs_port();
}
inline void CMsgDRMDownloadResponse::clear_download_file_dfs_port() {
  download_file_dfs_port_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMDownloadResponse::_internal_download_file_dfs_port() const {
  return download_file_dfs_port_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMDownloadResponse::download_file_dfs_port() const {
  // @@protoc_insertion_point(field_get:CMsgDRMDownloadResponse.download_file_dfs_port)
  return _internal_download_file_dfs_port();
}
inline void CMsgDRMDownloadResponse::_internal_set_download_file_dfs_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  download_file_dfs_port_ = value;
}
inline void CMsgDRMDownloadResponse::set_download_file_dfs_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_download_file_dfs_port(value);
  // @@protoc_insertion_point(field_set:CMsgDRMDownloadResponse.download_file_dfs_port)
}

// optional string download_file_url = 7;
inline bool CMsgDRMDownloadResponse::_internal_has_download_file_url() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgDRMDownloadResponse::has_download_file_url() const {
  return _internal_has_download_file_url();
}
inline void CMsgDRMDownloadResponse::clear_download_file_url() {
  download_file_url_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgDRMDownloadResponse::download_file_url() const {
  // @@protoc_insertion_point(field_get:CMsgDRMDownloadResponse.download_file_url)
  return _internal_download_file_url();
}
inline void CMsgDRMDownloadResponse::set_download_file_url(const std::string& value) {
  _internal_set_download_file_url(value);
  // @@protoc_insertion_point(field_set:CMsgDRMDownloadResponse.download_file_url)
}
inline std::string* CMsgDRMDownloadResponse::mutable_download_file_url() {
  // @@protoc_insertion_point(field_mutable:CMsgDRMDownloadResponse.download_file_url)
  return _internal_mutable_download_file_url();
}
inline const std::string& CMsgDRMDownloadResponse::_internal_download_file_url() const {
  return download_file_url_.Get();
}
inline void CMsgDRMDownloadResponse::_internal_set_download_file_url(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  download_file_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgDRMDownloadResponse::set_download_file_url(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  download_file_url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgDRMDownloadResponse.download_file_url)
}
inline void CMsgDRMDownloadResponse::set_download_file_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  download_file_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgDRMDownloadResponse.download_file_url)
}
inline void CMsgDRMDownloadResponse::set_download_file_url(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  download_file_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgDRMDownloadResponse.download_file_url)
}
inline std::string* CMsgDRMDownloadResponse::_internal_mutable_download_file_url() {
  _has_bits_[0] |= 0x00000002u;
  return download_file_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgDRMDownloadResponse::release_download_file_url() {
  // @@protoc_insertion_point(field_release:CMsgDRMDownloadResponse.download_file_url)
  if (!_internal_has_download_file_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return download_file_url_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgDRMDownloadResponse::set_allocated_download_file_url(std::string* download_file_url) {
  if (download_file_url != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  download_file_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), download_file_url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgDRMDownloadResponse.download_file_url)
}

// optional string module_path = 8;
inline bool CMsgDRMDownloadResponse::_internal_has_module_path() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgDRMDownloadResponse::has_module_path() const {
  return _internal_has_module_path();
}
inline void CMsgDRMDownloadResponse::clear_module_path() {
  module_path_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgDRMDownloadResponse::module_path() const {
  // @@protoc_insertion_point(field_get:CMsgDRMDownloadResponse.module_path)
  return _internal_module_path();
}
inline void CMsgDRMDownloadResponse::set_module_path(const std::string& value) {
  _internal_set_module_path(value);
  // @@protoc_insertion_point(field_set:CMsgDRMDownloadResponse.module_path)
}
inline std::string* CMsgDRMDownloadResponse::mutable_module_path() {
  // @@protoc_insertion_point(field_mutable:CMsgDRMDownloadResponse.module_path)
  return _internal_mutable_module_path();
}
inline const std::string& CMsgDRMDownloadResponse::_internal_module_path() const {
  return module_path_.Get();
}
inline void CMsgDRMDownloadResponse::_internal_set_module_path(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  module_path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgDRMDownloadResponse::set_module_path(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  module_path_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgDRMDownloadResponse.module_path)
}
inline void CMsgDRMDownloadResponse::set_module_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  module_path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgDRMDownloadResponse.module_path)
}
inline void CMsgDRMDownloadResponse::set_module_path(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  module_path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgDRMDownloadResponse.module_path)
}
inline std::string* CMsgDRMDownloadResponse::_internal_mutable_module_path() {
  _has_bits_[0] |= 0x00000004u;
  return module_path_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgDRMDownloadResponse::release_module_path() {
  // @@protoc_insertion_point(field_release:CMsgDRMDownloadResponse.module_path)
  if (!_internal_has_module_path()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return module_path_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgDRMDownloadResponse::set_allocated_module_path(std::string* module_path) {
  if (module_path != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  module_path_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), module_path,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgDRMDownloadResponse.module_path)
}

// -------------------------------------------------------------------

// CMsgDRMFinalResult

// optional uint32 eResult = 1 [default = 2];
inline bool CMsgDRMFinalResult::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgDRMFinalResult::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgDRMFinalResult::clear_eresult() {
  eresult_ = 2u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMFinalResult::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMFinalResult::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDRMFinalResult.eResult)
  return _internal_eresult();
}
inline void CMsgDRMFinalResult::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  eresult_ = value;
}
inline void CMsgDRMFinalResult::set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgDRMFinalResult.eResult)
}

// optional uint32 app_id = 2;
inline bool CMsgDRMFinalResult::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgDRMFinalResult::has_app_id() const {
  return _internal_has_app_id();
}
inline void CMsgDRMFinalResult::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMFinalResult::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMFinalResult::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgDRMFinalResult.app_id)
  return _internal_app_id();
}
inline void CMsgDRMFinalResult::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  app_id_ = value;
}
inline void CMsgDRMFinalResult::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgDRMFinalResult.app_id)
}

// optional uint32 blob_download_type = 3;
inline bool CMsgDRMFinalResult::_internal_has_blob_download_type() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgDRMFinalResult::has_blob_download_type() const {
  return _internal_has_blob_download_type();
}
inline void CMsgDRMFinalResult::clear_blob_download_type() {
  blob_download_type_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMFinalResult::_internal_blob_download_type() const {
  return blob_download_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMFinalResult::blob_download_type() const {
  // @@protoc_insertion_point(field_get:CMsgDRMFinalResult.blob_download_type)
  return _internal_blob_download_type();
}
inline void CMsgDRMFinalResult::_internal_set_blob_download_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  blob_download_type_ = value;
}
inline void CMsgDRMFinalResult::set_blob_download_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_blob_download_type(value);
  // @@protoc_insertion_point(field_set:CMsgDRMFinalResult.blob_download_type)
}

// optional uint32 error_detail = 4;
inline bool CMsgDRMFinalResult::_internal_has_error_detail() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgDRMFinalResult::has_error_detail() const {
  return _internal_has_error_detail();
}
inline void CMsgDRMFinalResult::clear_error_detail() {
  error_detail_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMFinalResult::_internal_error_detail() const {
  return error_detail_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMFinalResult::error_detail() const {
  // @@protoc_insertion_point(field_get:CMsgDRMFinalResult.error_detail)
  return _internal_error_detail();
}
inline void CMsgDRMFinalResult::_internal_set_error_detail(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  error_detail_ = value;
}
inline void CMsgDRMFinalResult::set_error_detail(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_error_detail(value);
  // @@protoc_insertion_point(field_set:CMsgDRMFinalResult.error_detail)
}

// optional bytes merge_guid = 5;
inline bool CMsgDRMFinalResult::_internal_has_merge_guid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgDRMFinalResult::has_merge_guid() const {
  return _internal_has_merge_guid();
}
inline void CMsgDRMFinalResult::clear_merge_guid() {
  merge_guid_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgDRMFinalResult::merge_guid() const {
  // @@protoc_insertion_point(field_get:CMsgDRMFinalResult.merge_guid)
  return _internal_merge_guid();
}
inline void CMsgDRMFinalResult::set_merge_guid(const std::string& value) {
  _internal_set_merge_guid(value);
  // @@protoc_insertion_point(field_set:CMsgDRMFinalResult.merge_guid)
}
inline std::string* CMsgDRMFinalResult::mutable_merge_guid() {
  // @@protoc_insertion_point(field_mutable:CMsgDRMFinalResult.merge_guid)
  return _internal_mutable_merge_guid();
}
inline const std::string& CMsgDRMFinalResult::_internal_merge_guid() const {
  return merge_guid_.Get();
}
inline void CMsgDRMFinalResult::_internal_set_merge_guid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  merge_guid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgDRMFinalResult::set_merge_guid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  merge_guid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgDRMFinalResult.merge_guid)
}
inline void CMsgDRMFinalResult::set_merge_guid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  merge_guid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgDRMFinalResult.merge_guid)
}
inline void CMsgDRMFinalResult::set_merge_guid(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  merge_guid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgDRMFinalResult.merge_guid)
}
inline std::string* CMsgDRMFinalResult::_internal_mutable_merge_guid() {
  _has_bits_[0] |= 0x00000001u;
  return merge_guid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgDRMFinalResult::release_merge_guid() {
  // @@protoc_insertion_point(field_release:CMsgDRMFinalResult.merge_guid)
  if (!_internal_has_merge_guid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return merge_guid_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgDRMFinalResult::set_allocated_merge_guid(std::string* merge_guid) {
  if (merge_guid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  merge_guid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), merge_guid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgDRMFinalResult.merge_guid)
}

// optional uint32 download_file_dfs_ip = 6;
inline bool CMsgDRMFinalResult::_internal_has_download_file_dfs_ip() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgDRMFinalResult::has_download_file_dfs_ip() const {
  return _internal_has_download_file_dfs_ip();
}
inline void CMsgDRMFinalResult::clear_download_file_dfs_ip() {
  download_file_dfs_ip_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMFinalResult::_internal_download_file_dfs_ip() const {
  return download_file_dfs_ip_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMFinalResult::download_file_dfs_ip() const {
  // @@protoc_insertion_point(field_get:CMsgDRMFinalResult.download_file_dfs_ip)
  return _internal_download_file_dfs_ip();
}
inline void CMsgDRMFinalResult::_internal_set_download_file_dfs_ip(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  download_file_dfs_ip_ = value;
}
inline void CMsgDRMFinalResult::set_download_file_dfs_ip(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_download_file_dfs_ip(value);
  // @@protoc_insertion_point(field_set:CMsgDRMFinalResult.download_file_dfs_ip)
}

// optional uint32 download_file_dfs_port = 7;
inline bool CMsgDRMFinalResult::_internal_has_download_file_dfs_port() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgDRMFinalResult::has_download_file_dfs_port() const {
  return _internal_has_download_file_dfs_port();
}
inline void CMsgDRMFinalResult::clear_download_file_dfs_port() {
  download_file_dfs_port_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMFinalResult::_internal_download_file_dfs_port() const {
  return download_file_dfs_port_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDRMFinalResult::download_file_dfs_port() const {
  // @@protoc_insertion_point(field_get:CMsgDRMFinalResult.download_file_dfs_port)
  return _internal_download_file_dfs_port();
}
inline void CMsgDRMFinalResult::_internal_set_download_file_dfs_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  download_file_dfs_port_ = value;
}
inline void CMsgDRMFinalResult::set_download_file_dfs_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_download_file_dfs_port(value);
  // @@protoc_insertion_point(field_set:CMsgDRMFinalResult.download_file_dfs_port)
}

// optional string download_file_url = 8;
inline bool CMsgDRMFinalResult::_internal_has_download_file_url() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgDRMFinalResult::has_download_file_url() const {
  return _internal_has_download_file_url();
}
inline void CMsgDRMFinalResult::clear_download_file_url() {
  download_file_url_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgDRMFinalResult::download_file_url() const {
  // @@protoc_insertion_point(field_get:CMsgDRMFinalResult.download_file_url)
  return _internal_download_file_url();
}
inline void CMsgDRMFinalResult::set_download_file_url(const std::string& value) {
  _internal_set_download_file_url(value);
  // @@protoc_insertion_point(field_set:CMsgDRMFinalResult.download_file_url)
}
inline std::string* CMsgDRMFinalResult::mutable_download_file_url() {
  // @@protoc_insertion_point(field_mutable:CMsgDRMFinalResult.download_file_url)
  return _internal_mutable_download_file_url();
}
inline const std::string& CMsgDRMFinalResult::_internal_download_file_url() const {
  return download_file_url_.Get();
}
inline void CMsgDRMFinalResult::_internal_set_download_file_url(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  download_file_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgDRMFinalResult::set_download_file_url(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  download_file_url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgDRMFinalResult.download_file_url)
}
inline void CMsgDRMFinalResult::set_download_file_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  download_file_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgDRMFinalResult.download_file_url)
}
inline void CMsgDRMFinalResult::set_download_file_url(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  download_file_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgDRMFinalResult.download_file_url)
}
inline std::string* CMsgDRMFinalResult::_internal_mutable_download_file_url() {
  _has_bits_[0] |= 0x00000002u;
  return download_file_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgDRMFinalResult::release_download_file_url() {
  // @@protoc_insertion_point(field_release:CMsgDRMFinalResult.download_file_url)
  if (!_internal_has_download_file_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return download_file_url_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgDRMFinalResult::set_allocated_download_file_url(std::string* download_file_url) {
  if (download_file_url != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  download_file_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), download_file_url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgDRMFinalResult.download_file_url)
}

// -------------------------------------------------------------------

// CMsgClientDPCheckSpecialSurvey

// optional uint32 survey_id = 1;
inline bool CMsgClientDPCheckSpecialSurvey::_internal_has_survey_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientDPCheckSpecialSurvey::has_survey_id() const {
  return _internal_has_survey_id();
}
inline void CMsgClientDPCheckSpecialSurvey::clear_survey_id() {
  survey_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientDPCheckSpecialSurvey::_internal_survey_id() const {
  return survey_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientDPCheckSpecialSurvey::survey_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientDPCheckSpecialSurvey.survey_id)
  return _internal_survey_id();
}
inline void CMsgClientDPCheckSpecialSurvey::_internal_set_survey_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  survey_id_ = value;
}
inline void CMsgClientDPCheckSpecialSurvey::set_survey_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_survey_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientDPCheckSpecialSurvey.survey_id)
}

// -------------------------------------------------------------------

// CMsgClientDPCheckSpecialSurveyResponse

// optional uint32 eResult = 1 [default = 2];
inline bool CMsgClientDPCheckSpecialSurveyResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientDPCheckSpecialSurveyResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientDPCheckSpecialSurveyResponse::clear_eresult() {
  eresult_ = 2u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientDPCheckSpecialSurveyResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientDPCheckSpecialSurveyResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientDPCheckSpecialSurveyResponse.eResult)
  return _internal_eresult();
}
inline void CMsgClientDPCheckSpecialSurveyResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  eresult_ = value;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientDPCheckSpecialSurveyResponse.eResult)
}

// optional uint32 state = 2;
inline bool CMsgClientDPCheckSpecialSurveyResponse::_internal_has_state() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientDPCheckSpecialSurveyResponse::has_state() const {
  return _internal_has_state();
}
inline void CMsgClientDPCheckSpecialSurveyResponse::clear_state() {
  state_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientDPCheckSpecialSurveyResponse::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientDPCheckSpecialSurveyResponse::state() const {
  // @@protoc_insertion_point(field_get:CMsgClientDPCheckSpecialSurveyResponse.state)
  return _internal_state();
}
inline void CMsgClientDPCheckSpecialSurveyResponse::_internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  state_ = value;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:CMsgClientDPCheckSpecialSurveyResponse.state)
}

// optional string name = 3;
inline bool CMsgClientDPCheckSpecialSurveyResponse::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientDPCheckSpecialSurveyResponse::has_name() const {
  return _internal_has_name();
}
inline void CMsgClientDPCheckSpecialSurveyResponse::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientDPCheckSpecialSurveyResponse::name() const {
  // @@protoc_insertion_point(field_get:CMsgClientDPCheckSpecialSurveyResponse.name)
  return _internal_name();
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:CMsgClientDPCheckSpecialSurveyResponse.name)
}
inline std::string* CMsgClientDPCheckSpecialSurveyResponse::mutable_name() {
  // @@protoc_insertion_point(field_mutable:CMsgClientDPCheckSpecialSurveyResponse.name)
  return _internal_mutable_name();
}
inline const std::string& CMsgClientDPCheckSpecialSurveyResponse::_internal_name() const {
  return name_.Get();
}
inline void CMsgClientDPCheckSpecialSurveyResponse::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientDPCheckSpecialSurveyResponse.name)
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientDPCheckSpecialSurveyResponse.name)
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientDPCheckSpecialSurveyResponse.name)
}
inline std::string* CMsgClientDPCheckSpecialSurveyResponse::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientDPCheckSpecialSurveyResponse::release_name() {
  // @@protoc_insertion_point(field_release:CMsgClientDPCheckSpecialSurveyResponse.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientDPCheckSpecialSurveyResponse.name)
}

// optional string custom_url = 4;
inline bool CMsgClientDPCheckSpecialSurveyResponse::_internal_has_custom_url() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientDPCheckSpecialSurveyResponse::has_custom_url() const {
  return _internal_has_custom_url();
}
inline void CMsgClientDPCheckSpecialSurveyResponse::clear_custom_url() {
  custom_url_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientDPCheckSpecialSurveyResponse::custom_url() const {
  // @@protoc_insertion_point(field_get:CMsgClientDPCheckSpecialSurveyResponse.custom_url)
  return _internal_custom_url();
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_custom_url(const std::string& value) {
  _internal_set_custom_url(value);
  // @@protoc_insertion_point(field_set:CMsgClientDPCheckSpecialSurveyResponse.custom_url)
}
inline std::string* CMsgClientDPCheckSpecialSurveyResponse::mutable_custom_url() {
  // @@protoc_insertion_point(field_mutable:CMsgClientDPCheckSpecialSurveyResponse.custom_url)
  return _internal_mutable_custom_url();
}
inline const std::string& CMsgClientDPCheckSpecialSurveyResponse::_internal_custom_url() const {
  return custom_url_.Get();
}
inline void CMsgClientDPCheckSpecialSurveyResponse::_internal_set_custom_url(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  custom_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_custom_url(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  custom_url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientDPCheckSpecialSurveyResponse.custom_url)
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_custom_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  custom_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientDPCheckSpecialSurveyResponse.custom_url)
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_custom_url(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  custom_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientDPCheckSpecialSurveyResponse.custom_url)
}
inline std::string* CMsgClientDPCheckSpecialSurveyResponse::_internal_mutable_custom_url() {
  _has_bits_[0] |= 0x00000002u;
  return custom_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientDPCheckSpecialSurveyResponse::release_custom_url() {
  // @@protoc_insertion_point(field_release:CMsgClientDPCheckSpecialSurveyResponse.custom_url)
  if (!_internal_has_custom_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return custom_url_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_allocated_custom_url(std::string* custom_url) {
  if (custom_url != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  custom_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), custom_url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientDPCheckSpecialSurveyResponse.custom_url)
}

// optional bool include_software = 5;
inline bool CMsgClientDPCheckSpecialSurveyResponse::_internal_has_include_software() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientDPCheckSpecialSurveyResponse::has_include_software() const {
  return _internal_has_include_software();
}
inline void CMsgClientDPCheckSpecialSurveyResponse::clear_include_software() {
  include_software_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgClientDPCheckSpecialSurveyResponse::_internal_include_software() const {
  return include_software_;
}
inline bool CMsgClientDPCheckSpecialSurveyResponse::include_software() const {
  // @@protoc_insertion_point(field_get:CMsgClientDPCheckSpecialSurveyResponse.include_software)
  return _internal_include_software();
}
inline void CMsgClientDPCheckSpecialSurveyResponse::_internal_set_include_software(bool value) {
  _has_bits_[0] |= 0x00000010u;
  include_software_ = value;
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_include_software(bool value) {
  _internal_set_include_software(value);
  // @@protoc_insertion_point(field_set:CMsgClientDPCheckSpecialSurveyResponse.include_software)
}

// optional bytes token = 6;
inline bool CMsgClientDPCheckSpecialSurveyResponse::_internal_has_token() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientDPCheckSpecialSurveyResponse::has_token() const {
  return _internal_has_token();
}
inline void CMsgClientDPCheckSpecialSurveyResponse::clear_token() {
  token_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgClientDPCheckSpecialSurveyResponse::token() const {
  // @@protoc_insertion_point(field_get:CMsgClientDPCheckSpecialSurveyResponse.token)
  return _internal_token();
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_token(const std::string& value) {
  _internal_set_token(value);
  // @@protoc_insertion_point(field_set:CMsgClientDPCheckSpecialSurveyResponse.token)
}
inline std::string* CMsgClientDPCheckSpecialSurveyResponse::mutable_token() {
  // @@protoc_insertion_point(field_mutable:CMsgClientDPCheckSpecialSurveyResponse.token)
  return _internal_mutable_token();
}
inline const std::string& CMsgClientDPCheckSpecialSurveyResponse::_internal_token() const {
  return token_.Get();
}
inline void CMsgClientDPCheckSpecialSurveyResponse::_internal_set_token(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_token(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  token_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientDPCheckSpecialSurveyResponse.token)
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientDPCheckSpecialSurveyResponse.token)
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_token(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientDPCheckSpecialSurveyResponse.token)
}
inline std::string* CMsgClientDPCheckSpecialSurveyResponse::_internal_mutable_token() {
  _has_bits_[0] |= 0x00000004u;
  return token_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientDPCheckSpecialSurveyResponse::release_token() {
  // @@protoc_insertion_point(field_release:CMsgClientDPCheckSpecialSurveyResponse.token)
  if (!_internal_has_token()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return token_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientDPCheckSpecialSurveyResponse::set_allocated_token(std::string* token) {
  if (token != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  token_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), token,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientDPCheckSpecialSurveyResponse.token)
}

// -------------------------------------------------------------------

// CMsgClientDPSendSpecialSurveyResponse

// optional uint32 survey_id = 1;
inline bool CMsgClientDPSendSpecialSurveyResponse::_internal_has_survey_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientDPSendSpecialSurveyResponse::has_survey_id() const {
  return _internal_has_survey_id();
}
inline void CMsgClientDPSendSpecialSurveyResponse::clear_survey_id() {
  survey_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientDPSendSpecialSurveyResponse::_internal_survey_id() const {
  return survey_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientDPSendSpecialSurveyResponse::survey_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientDPSendSpecialSurveyResponse.survey_id)
  return _internal_survey_id();
}
inline void CMsgClientDPSendSpecialSurveyResponse::_internal_set_survey_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  survey_id_ = value;
}
inline void CMsgClientDPSendSpecialSurveyResponse::set_survey_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_survey_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientDPSendSpecialSurveyResponse.survey_id)
}

// optional bytes data = 2;
inline bool CMsgClientDPSendSpecialSurveyResponse::_internal_has_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientDPSendSpecialSurveyResponse::has_data() const {
  return _internal_has_data();
}
inline void CMsgClientDPSendSpecialSurveyResponse::clear_data() {
  data_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientDPSendSpecialSurveyResponse::data() const {
  // @@protoc_insertion_point(field_get:CMsgClientDPSendSpecialSurveyResponse.data)
  return _internal_data();
}
inline void CMsgClientDPSendSpecialSurveyResponse::set_data(const std::string& value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:CMsgClientDPSendSpecialSurveyResponse.data)
}
inline std::string* CMsgClientDPSendSpecialSurveyResponse::mutable_data() {
  // @@protoc_insertion_point(field_mutable:CMsgClientDPSendSpecialSurveyResponse.data)
  return _internal_mutable_data();
}
inline const std::string& CMsgClientDPSendSpecialSurveyResponse::_internal_data() const {
  return data_.Get();
}
inline void CMsgClientDPSendSpecialSurveyResponse::_internal_set_data(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientDPSendSpecialSurveyResponse::set_data(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientDPSendSpecialSurveyResponse.data)
}
inline void CMsgClientDPSendSpecialSurveyResponse::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientDPSendSpecialSurveyResponse.data)
}
inline void CMsgClientDPSendSpecialSurveyResponse::set_data(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientDPSendSpecialSurveyResponse.data)
}
inline std::string* CMsgClientDPSendSpecialSurveyResponse::_internal_mutable_data() {
  _has_bits_[0] |= 0x00000001u;
  return data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientDPSendSpecialSurveyResponse::release_data() {
  // @@protoc_insertion_point(field_release:CMsgClientDPSendSpecialSurveyResponse.data)
  if (!_internal_has_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return data_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientDPSendSpecialSurveyResponse::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientDPSendSpecialSurveyResponse.data)
}

// -------------------------------------------------------------------

// CMsgClientDPSendSpecialSurveyResponseReply

// optional uint32 eResult = 1 [default = 2];
inline bool CMsgClientDPSendSpecialSurveyResponseReply::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientDPSendSpecialSurveyResponseReply::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::clear_eresult() {
  eresult_ = 2u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientDPSendSpecialSurveyResponseReply::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientDPSendSpecialSurveyResponseReply::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientDPSendSpecialSurveyResponseReply.eResult)
  return _internal_eresult();
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  eresult_ = value;
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientDPSendSpecialSurveyResponseReply.eResult)
}

// optional bytes token = 2;
inline bool CMsgClientDPSendSpecialSurveyResponseReply::_internal_has_token() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientDPSendSpecialSurveyResponseReply::has_token() const {
  return _internal_has_token();
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::clear_token() {
  token_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientDPSendSpecialSurveyResponseReply::token() const {
  // @@protoc_insertion_point(field_get:CMsgClientDPSendSpecialSurveyResponseReply.token)
  return _internal_token();
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::set_token(const std::string& value) {
  _internal_set_token(value);
  // @@protoc_insertion_point(field_set:CMsgClientDPSendSpecialSurveyResponseReply.token)
}
inline std::string* CMsgClientDPSendSpecialSurveyResponseReply::mutable_token() {
  // @@protoc_insertion_point(field_mutable:CMsgClientDPSendSpecialSurveyResponseReply.token)
  return _internal_mutable_token();
}
inline const std::string& CMsgClientDPSendSpecialSurveyResponseReply::_internal_token() const {
  return token_.Get();
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::_internal_set_token(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::set_token(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientDPSendSpecialSurveyResponseReply.token)
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientDPSendSpecialSurveyResponseReply.token)
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::set_token(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientDPSendSpecialSurveyResponseReply.token)
}
inline std::string* CMsgClientDPSendSpecialSurveyResponseReply::_internal_mutable_token() {
  _has_bits_[0] |= 0x00000001u;
  return token_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientDPSendSpecialSurveyResponseReply::release_token() {
  // @@protoc_insertion_point(field_release:CMsgClientDPSendSpecialSurveyResponseReply.token)
  if (!_internal_has_token()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return token_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientDPSendSpecialSurveyResponseReply::set_allocated_token(std::string* token) {
  if (token != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  token_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), token,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientDPSendSpecialSurveyResponseReply.token)
}

// -------------------------------------------------------------------

// CMsgClientRequestForgottenPasswordEmail

// optional string account_name = 1;
inline bool CMsgClientRequestForgottenPasswordEmail::_internal_has_account_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientRequestForgottenPasswordEmail::has_account_name() const {
  return _internal_has_account_name();
}
inline void CMsgClientRequestForgottenPasswordEmail::clear_account_name() {
  account_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientRequestForgottenPasswordEmail::account_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestForgottenPasswordEmail.account_name)
  return _internal_account_name();
}
inline void CMsgClientRequestForgottenPasswordEmail::set_account_name(const std::string& value) {
  _internal_set_account_name(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestForgottenPasswordEmail.account_name)
}
inline std::string* CMsgClientRequestForgottenPasswordEmail::mutable_account_name() {
  // @@protoc_insertion_point(field_mutable:CMsgClientRequestForgottenPasswordEmail.account_name)
  return _internal_mutable_account_name();
}
inline const std::string& CMsgClientRequestForgottenPasswordEmail::_internal_account_name() const {
  return account_name_.Get();
}
inline void CMsgClientRequestForgottenPasswordEmail::_internal_set_account_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  account_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientRequestForgottenPasswordEmail::set_account_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  account_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientRequestForgottenPasswordEmail.account_name)
}
inline void CMsgClientRequestForgottenPasswordEmail::set_account_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  account_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientRequestForgottenPasswordEmail.account_name)
}
inline void CMsgClientRequestForgottenPasswordEmail::set_account_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  account_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientRequestForgottenPasswordEmail.account_name)
}
inline std::string* CMsgClientRequestForgottenPasswordEmail::_internal_mutable_account_name() {
  _has_bits_[0] |= 0x00000001u;
  return account_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientRequestForgottenPasswordEmail::release_account_name() {
  // @@protoc_insertion_point(field_release:CMsgClientRequestForgottenPasswordEmail.account_name)
  if (!_internal_has_account_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return account_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientRequestForgottenPasswordEmail::set_allocated_account_name(std::string* account_name) {
  if (account_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  account_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), account_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientRequestForgottenPasswordEmail.account_name)
}

// optional string password_tried = 2;
inline bool CMsgClientRequestForgottenPasswordEmail::_internal_has_password_tried() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientRequestForgottenPasswordEmail::has_password_tried() const {
  return _internal_has_password_tried();
}
inline void CMsgClientRequestForgottenPasswordEmail::clear_password_tried() {
  password_tried_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientRequestForgottenPasswordEmail::password_tried() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestForgottenPasswordEmail.password_tried)
  return _internal_password_tried();
}
inline void CMsgClientRequestForgottenPasswordEmail::set_password_tried(const std::string& value) {
  _internal_set_password_tried(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestForgottenPasswordEmail.password_tried)
}
inline std::string* CMsgClientRequestForgottenPasswordEmail::mutable_password_tried() {
  // @@protoc_insertion_point(field_mutable:CMsgClientRequestForgottenPasswordEmail.password_tried)
  return _internal_mutable_password_tried();
}
inline const std::string& CMsgClientRequestForgottenPasswordEmail::_internal_password_tried() const {
  return password_tried_.Get();
}
inline void CMsgClientRequestForgottenPasswordEmail::_internal_set_password_tried(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  password_tried_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientRequestForgottenPasswordEmail::set_password_tried(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  password_tried_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientRequestForgottenPasswordEmail.password_tried)
}
inline void CMsgClientRequestForgottenPasswordEmail::set_password_tried(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  password_tried_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientRequestForgottenPasswordEmail.password_tried)
}
inline void CMsgClientRequestForgottenPasswordEmail::set_password_tried(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  password_tried_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientRequestForgottenPasswordEmail.password_tried)
}
inline std::string* CMsgClientRequestForgottenPasswordEmail::_internal_mutable_password_tried() {
  _has_bits_[0] |= 0x00000002u;
  return password_tried_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientRequestForgottenPasswordEmail::release_password_tried() {
  // @@protoc_insertion_point(field_release:CMsgClientRequestForgottenPasswordEmail.password_tried)
  if (!_internal_has_password_tried()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return password_tried_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientRequestForgottenPasswordEmail::set_allocated_password_tried(std::string* password_tried) {
  if (password_tried != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  password_tried_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), password_tried,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientRequestForgottenPasswordEmail.password_tried)
}

// -------------------------------------------------------------------

// CMsgClientRequestForgottenPasswordEmailResponse

// optional uint32 eResult = 1;
inline bool CMsgClientRequestForgottenPasswordEmailResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientRequestForgottenPasswordEmailResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientRequestForgottenPasswordEmailResponse::clear_eresult() {
  eresult_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestForgottenPasswordEmailResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientRequestForgottenPasswordEmailResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestForgottenPasswordEmailResponse.eResult)
  return _internal_eresult();
}
inline void CMsgClientRequestForgottenPasswordEmailResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
}
inline void CMsgClientRequestForgottenPasswordEmailResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestForgottenPasswordEmailResponse.eResult)
}

// optional bool use_secret_question = 2;
inline bool CMsgClientRequestForgottenPasswordEmailResponse::_internal_has_use_secret_question() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientRequestForgottenPasswordEmailResponse::has_use_secret_question() const {
  return _internal_has_use_secret_question();
}
inline void CMsgClientRequestForgottenPasswordEmailResponse::clear_use_secret_question() {
  use_secret_question_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgClientRequestForgottenPasswordEmailResponse::_internal_use_secret_question() const {
  return use_secret_question_;
}
inline bool CMsgClientRequestForgottenPasswordEmailResponse::use_secret_question() const {
  // @@protoc_insertion_point(field_get:CMsgClientRequestForgottenPasswordEmailResponse.use_secret_question)
  return _internal_use_secret_question();
}
inline void CMsgClientRequestForgottenPasswordEmailResponse::_internal_set_use_secret_question(bool value) {
  _has_bits_[0] |= 0x00000002u;
  use_secret_question_ = value;
}
inline void CMsgClientRequestForgottenPasswordEmailResponse::set_use_secret_question(bool value) {
  _internal_set_use_secret_question(value);
  // @@protoc_insertion_point(field_set:CMsgClientRequestForgottenPasswordEmailResponse.use_secret_question)
}

// -------------------------------------------------------------------

// CMsgClientItemAnnouncements_UnseenItem

// optional uint32 appid = 1;
inline bool CMsgClientItemAnnouncements_UnseenItem::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientItemAnnouncements_UnseenItem::has_appid() const {
  return _internal_has_appid();
}
inline void CMsgClientItemAnnouncements_UnseenItem::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientItemAnnouncements_UnseenItem::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientItemAnnouncements_UnseenItem::appid() const {
  // @@protoc_insertion_point(field_get:CMsgClientItemAnnouncements.UnseenItem.appid)
  return _internal_appid();
}
inline void CMsgClientItemAnnouncements_UnseenItem::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  appid_ = value;
}
inline void CMsgClientItemAnnouncements_UnseenItem::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CMsgClientItemAnnouncements.UnseenItem.appid)
}

// optional uint64 context_id = 2;
inline bool CMsgClientItemAnnouncements_UnseenItem::_internal_has_context_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientItemAnnouncements_UnseenItem::has_context_id() const {
  return _internal_has_context_id();
}
inline void CMsgClientItemAnnouncements_UnseenItem::clear_context_id() {
  context_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientItemAnnouncements_UnseenItem::_internal_context_id() const {
  return context_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientItemAnnouncements_UnseenItem::context_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientItemAnnouncements.UnseenItem.context_id)
  return _internal_context_id();
}
inline void CMsgClientItemAnnouncements_UnseenItem::_internal_set_context_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  context_id_ = value;
}
inline void CMsgClientItemAnnouncements_UnseenItem::set_context_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_context_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientItemAnnouncements.UnseenItem.context_id)
}

// optional uint64 asset_id = 3;
inline bool CMsgClientItemAnnouncements_UnseenItem::_internal_has_asset_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientItemAnnouncements_UnseenItem::has_asset_id() const {
  return _internal_has_asset_id();
}
inline void CMsgClientItemAnnouncements_UnseenItem::clear_asset_id() {
  asset_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientItemAnnouncements_UnseenItem::_internal_asset_id() const {
  return asset_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientItemAnnouncements_UnseenItem::asset_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientItemAnnouncements.UnseenItem.asset_id)
  return _internal_asset_id();
}
inline void CMsgClientItemAnnouncements_UnseenItem::_internal_set_asset_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  asset_id_ = value;
}
inline void CMsgClientItemAnnouncements_UnseenItem::set_asset_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_asset_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientItemAnnouncements.UnseenItem.asset_id)
}

// optional uint64 amount = 4;
inline bool CMsgClientItemAnnouncements_UnseenItem::_internal_has_amount() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientItemAnnouncements_UnseenItem::has_amount() const {
  return _internal_has_amount();
}
inline void CMsgClientItemAnnouncements_UnseenItem::clear_amount() {
  amount_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientItemAnnouncements_UnseenItem::_internal_amount() const {
  return amount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientItemAnnouncements_UnseenItem::amount() const {
  // @@protoc_insertion_point(field_get:CMsgClientItemAnnouncements.UnseenItem.amount)
  return _internal_amount();
}
inline void CMsgClientItemAnnouncements_UnseenItem::_internal_set_amount(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  amount_ = value;
}
inline void CMsgClientItemAnnouncements_UnseenItem::set_amount(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:CMsgClientItemAnnouncements.UnseenItem.amount)
}

// optional fixed32 rtime32_gained = 5;
inline bool CMsgClientItemAnnouncements_UnseenItem::_internal_has_rtime32_gained() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientItemAnnouncements_UnseenItem::has_rtime32_gained() const {
  return _internal_has_rtime32_gained();
}
inline void CMsgClientItemAnnouncements_UnseenItem::clear_rtime32_gained() {
  rtime32_gained_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientItemAnnouncements_UnseenItem::_internal_rtime32_gained() const {
  return rtime32_gained_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientItemAnnouncements_UnseenItem::rtime32_gained() const {
  // @@protoc_insertion_point(field_get:CMsgClientItemAnnouncements.UnseenItem.rtime32_gained)
  return _internal_rtime32_gained();
}
inline void CMsgClientItemAnnouncements_UnseenItem::_internal_set_rtime32_gained(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  rtime32_gained_ = value;
}
inline void CMsgClientItemAnnouncements_UnseenItem::set_rtime32_gained(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rtime32_gained(value);
  // @@protoc_insertion_point(field_set:CMsgClientItemAnnouncements.UnseenItem.rtime32_gained)
}

// optional uint32 source_appid = 6;
inline bool CMsgClientItemAnnouncements_UnseenItem::_internal_has_source_appid() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientItemAnnouncements_UnseenItem::has_source_appid() const {
  return _internal_has_source_appid();
}
inline void CMsgClientItemAnnouncements_UnseenItem::clear_source_appid() {
  source_appid_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientItemAnnouncements_UnseenItem::_internal_source_appid() const {
  return source_appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientItemAnnouncements_UnseenItem::source_appid() const {
  // @@protoc_insertion_point(field_get:CMsgClientItemAnnouncements.UnseenItem.source_appid)
  return _internal_source_appid();
}
inline void CMsgClientItemAnnouncements_UnseenItem::_internal_set_source_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  source_appid_ = value;
}
inline void CMsgClientItemAnnouncements_UnseenItem::set_source_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_source_appid(value);
  // @@protoc_insertion_point(field_set:CMsgClientItemAnnouncements.UnseenItem.source_appid)
}

// -------------------------------------------------------------------

// CMsgClientItemAnnouncements

// optional uint32 count_new_items = 1;
inline bool CMsgClientItemAnnouncements::_internal_has_count_new_items() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientItemAnnouncements::has_count_new_items() const {
  return _internal_has_count_new_items();
}
inline void CMsgClientItemAnnouncements::clear_count_new_items() {
  count_new_items_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientItemAnnouncements::_internal_count_new_items() const {
  return count_new_items_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientItemAnnouncements::count_new_items() const {
  // @@protoc_insertion_point(field_get:CMsgClientItemAnnouncements.count_new_items)
  return _internal_count_new_items();
}
inline void CMsgClientItemAnnouncements::_internal_set_count_new_items(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  count_new_items_ = value;
}
inline void CMsgClientItemAnnouncements::set_count_new_items(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count_new_items(value);
  // @@protoc_insertion_point(field_set:CMsgClientItemAnnouncements.count_new_items)
}

// repeated .CMsgClientItemAnnouncements.UnseenItem unseen_items = 2;
inline int CMsgClientItemAnnouncements::_internal_unseen_items_size() const {
  return unseen_items_.size();
}
inline int CMsgClientItemAnnouncements::unseen_items_size() const {
  return _internal_unseen_items_size();
}
inline void CMsgClientItemAnnouncements::clear_unseen_items() {
  unseen_items_.Clear();
}
inline ::CMsgClientItemAnnouncements_UnseenItem* CMsgClientItemAnnouncements::mutable_unseen_items(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientItemAnnouncements.unseen_items)
  return unseen_items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientItemAnnouncements_UnseenItem >*
CMsgClientItemAnnouncements::mutable_unseen_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientItemAnnouncements.unseen_items)
  return &unseen_items_;
}
inline const ::CMsgClientItemAnnouncements_UnseenItem& CMsgClientItemAnnouncements::_internal_unseen_items(int index) const {
  return unseen_items_.Get(index);
}
inline const ::CMsgClientItemAnnouncements_UnseenItem& CMsgClientItemAnnouncements::unseen_items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientItemAnnouncements.unseen_items)
  return _internal_unseen_items(index);
}
inline ::CMsgClientItemAnnouncements_UnseenItem* CMsgClientItemAnnouncements::_internal_add_unseen_items() {
  return unseen_items_.Add();
}
inline ::CMsgClientItemAnnouncements_UnseenItem* CMsgClientItemAnnouncements::add_unseen_items() {
  // @@protoc_insertion_point(field_add:CMsgClientItemAnnouncements.unseen_items)
  return _internal_add_unseen_items();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientItemAnnouncements_UnseenItem >&
CMsgClientItemAnnouncements::unseen_items() const {
  // @@protoc_insertion_point(field_list:CMsgClientItemAnnouncements.unseen_items)
  return unseen_items_;
}

// -------------------------------------------------------------------

// CMsgClientRequestItemAnnouncements

// -------------------------------------------------------------------

// CMsgClientUserNotifications_Notification

// optional uint32 user_notification_type = 1;
inline bool CMsgClientUserNotifications_Notification::_internal_has_user_notification_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUserNotifications_Notification::has_user_notification_type() const {
  return _internal_has_user_notification_type();
}
inline void CMsgClientUserNotifications_Notification::clear_user_notification_type() {
  user_notification_type_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUserNotifications_Notification::_internal_user_notification_type() const {
  return user_notification_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUserNotifications_Notification::user_notification_type() const {
  // @@protoc_insertion_point(field_get:CMsgClientUserNotifications.Notification.user_notification_type)
  return _internal_user_notification_type();
}
inline void CMsgClientUserNotifications_Notification::_internal_set_user_notification_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  user_notification_type_ = value;
}
inline void CMsgClientUserNotifications_Notification::set_user_notification_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_notification_type(value);
  // @@protoc_insertion_point(field_set:CMsgClientUserNotifications.Notification.user_notification_type)
}

// optional uint32 count = 2;
inline bool CMsgClientUserNotifications_Notification::_internal_has_count() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUserNotifications_Notification::has_count() const {
  return _internal_has_count();
}
inline void CMsgClientUserNotifications_Notification::clear_count() {
  count_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUserNotifications_Notification::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUserNotifications_Notification::count() const {
  // @@protoc_insertion_point(field_get:CMsgClientUserNotifications.Notification.count)
  return _internal_count();
}
inline void CMsgClientUserNotifications_Notification::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  count_ = value;
}
inline void CMsgClientUserNotifications_Notification::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:CMsgClientUserNotifications.Notification.count)
}

// -------------------------------------------------------------------

// CMsgClientUserNotifications

// repeated .CMsgClientUserNotifications.Notification notifications = 1;
inline int CMsgClientUserNotifications::_internal_notifications_size() const {
  return notifications_.size();
}
inline int CMsgClientUserNotifications::notifications_size() const {
  return _internal_notifications_size();
}
inline void CMsgClientUserNotifications::clear_notifications() {
  notifications_.Clear();
}
inline ::CMsgClientUserNotifications_Notification* CMsgClientUserNotifications::mutable_notifications(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientUserNotifications.notifications)
  return notifications_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUserNotifications_Notification >*
CMsgClientUserNotifications::mutable_notifications() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientUserNotifications.notifications)
  return &notifications_;
}
inline const ::CMsgClientUserNotifications_Notification& CMsgClientUserNotifications::_internal_notifications(int index) const {
  return notifications_.Get(index);
}
inline const ::CMsgClientUserNotifications_Notification& CMsgClientUserNotifications::notifications(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientUserNotifications.notifications)
  return _internal_notifications(index);
}
inline ::CMsgClientUserNotifications_Notification* CMsgClientUserNotifications::_internal_add_notifications() {
  return notifications_.Add();
}
inline ::CMsgClientUserNotifications_Notification* CMsgClientUserNotifications::add_notifications() {
  // @@protoc_insertion_point(field_add:CMsgClientUserNotifications.notifications)
  return _internal_add_notifications();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUserNotifications_Notification >&
CMsgClientUserNotifications::notifications() const {
  // @@protoc_insertion_point(field_list:CMsgClientUserNotifications.notifications)
  return notifications_;
}

// -------------------------------------------------------------------

// CMsgClientCommentNotifications

// optional uint32 count_new_comments = 1;
inline bool CMsgClientCommentNotifications::_internal_has_count_new_comments() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientCommentNotifications::has_count_new_comments() const {
  return _internal_has_count_new_comments();
}
inline void CMsgClientCommentNotifications::clear_count_new_comments() {
  count_new_comments_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCommentNotifications::_internal_count_new_comments() const {
  return count_new_comments_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCommentNotifications::count_new_comments() const {
  // @@protoc_insertion_point(field_get:CMsgClientCommentNotifications.count_new_comments)
  return _internal_count_new_comments();
}
inline void CMsgClientCommentNotifications::_internal_set_count_new_comments(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  count_new_comments_ = value;
}
inline void CMsgClientCommentNotifications::set_count_new_comments(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count_new_comments(value);
  // @@protoc_insertion_point(field_set:CMsgClientCommentNotifications.count_new_comments)
}

// optional uint32 count_new_comments_owner = 2;
inline bool CMsgClientCommentNotifications::_internal_has_count_new_comments_owner() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientCommentNotifications::has_count_new_comments_owner() const {
  return _internal_has_count_new_comments_owner();
}
inline void CMsgClientCommentNotifications::clear_count_new_comments_owner() {
  count_new_comments_owner_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCommentNotifications::_internal_count_new_comments_owner() const {
  return count_new_comments_owner_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCommentNotifications::count_new_comments_owner() const {
  // @@protoc_insertion_point(field_get:CMsgClientCommentNotifications.count_new_comments_owner)
  return _internal_count_new_comments_owner();
}
inline void CMsgClientCommentNotifications::_internal_set_count_new_comments_owner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  count_new_comments_owner_ = value;
}
inline void CMsgClientCommentNotifications::set_count_new_comments_owner(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count_new_comments_owner(value);
  // @@protoc_insertion_point(field_set:CMsgClientCommentNotifications.count_new_comments_owner)
}

// optional uint32 count_new_comments_subscriptions = 3;
inline bool CMsgClientCommentNotifications::_internal_has_count_new_comments_subscriptions() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientCommentNotifications::has_count_new_comments_subscriptions() const {
  return _internal_has_count_new_comments_subscriptions();
}
inline void CMsgClientCommentNotifications::clear_count_new_comments_subscriptions() {
  count_new_comments_subscriptions_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCommentNotifications::_internal_count_new_comments_subscriptions() const {
  return count_new_comments_subscriptions_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientCommentNotifications::count_new_comments_subscriptions() const {
  // @@protoc_insertion_point(field_get:CMsgClientCommentNotifications.count_new_comments_subscriptions)
  return _internal_count_new_comments_subscriptions();
}
inline void CMsgClientCommentNotifications::_internal_set_count_new_comments_subscriptions(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  count_new_comments_subscriptions_ = value;
}
inline void CMsgClientCommentNotifications::set_count_new_comments_subscriptions(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count_new_comments_subscriptions(value);
  // @@protoc_insertion_point(field_set:CMsgClientCommentNotifications.count_new_comments_subscriptions)
}

// -------------------------------------------------------------------

// CMsgClientRequestCommentNotifications

// -------------------------------------------------------------------

// CMsgClientOfflineMessageNotification

// optional uint32 offline_messages = 1;
inline bool CMsgClientOfflineMessageNotification::_internal_has_offline_messages() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientOfflineMessageNotification::has_offline_messages() const {
  return _internal_has_offline_messages();
}
inline void CMsgClientOfflineMessageNotification::clear_offline_messages() {
  offline_messages_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientOfflineMessageNotification::_internal_offline_messages() const {
  return offline_messages_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientOfflineMessageNotification::offline_messages() const {
  // @@protoc_insertion_point(field_get:CMsgClientOfflineMessageNotification.offline_messages)
  return _internal_offline_messages();
}
inline void CMsgClientOfflineMessageNotification::_internal_set_offline_messages(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  offline_messages_ = value;
}
inline void CMsgClientOfflineMessageNotification::set_offline_messages(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_offline_messages(value);
  // @@protoc_insertion_point(field_set:CMsgClientOfflineMessageNotification.offline_messages)
}

// repeated uint32 friends_with_offline_messages = 2;
inline int CMsgClientOfflineMessageNotification::_internal_friends_with_offline_messages_size() const {
  return friends_with_offline_messages_.size();
}
inline int CMsgClientOfflineMessageNotification::friends_with_offline_messages_size() const {
  return _internal_friends_with_offline_messages_size();
}
inline void CMsgClientOfflineMessageNotification::clear_friends_with_offline_messages() {
  friends_with_offline_messages_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientOfflineMessageNotification::_internal_friends_with_offline_messages(int index) const {
  return friends_with_offline_messages_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientOfflineMessageNotification::friends_with_offline_messages(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientOfflineMessageNotification.friends_with_offline_messages)
  return _internal_friends_with_offline_messages(index);
}
inline void CMsgClientOfflineMessageNotification::set_friends_with_offline_messages(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  friends_with_offline_messages_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientOfflineMessageNotification.friends_with_offline_messages)
}
inline void CMsgClientOfflineMessageNotification::_internal_add_friends_with_offline_messages(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  friends_with_offline_messages_.Add(value);
}
inline void CMsgClientOfflineMessageNotification::add_friends_with_offline_messages(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_friends_with_offline_messages(value);
  // @@protoc_insertion_point(field_add:CMsgClientOfflineMessageNotification.friends_with_offline_messages)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgClientOfflineMessageNotification::_internal_friends_with_offline_messages() const {
  return friends_with_offline_messages_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgClientOfflineMessageNotification::friends_with_offline_messages() const {
  // @@protoc_insertion_point(field_list:CMsgClientOfflineMessageNotification.friends_with_offline_messages)
  return _internal_friends_with_offline_messages();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgClientOfflineMessageNotification::_internal_mutable_friends_with_offline_messages() {
  return &friends_with_offline_messages_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgClientOfflineMessageNotification::mutable_friends_with_offline_messages() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientOfflineMessageNotification.friends_with_offline_messages)
  return _internal_mutable_friends_with_offline_messages();
}

// -------------------------------------------------------------------

// CMsgClientRequestOfflineMessageCount

// -------------------------------------------------------------------

// CMsgClientChatGetFriendMessageHistory

// optional fixed64 steamid = 1;
inline bool CMsgClientChatGetFriendMessageHistory::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientChatGetFriendMessageHistory::has_steamid() const {
  return _internal_has_steamid();
}
inline void CMsgClientChatGetFriendMessageHistory::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientChatGetFriendMessageHistory::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientChatGetFriendMessageHistory::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgClientChatGetFriendMessageHistory.steamid)
  return _internal_steamid();
}
inline void CMsgClientChatGetFriendMessageHistory::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
}
inline void CMsgClientChatGetFriendMessageHistory::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CMsgClientChatGetFriendMessageHistory.steamid)
}

// -------------------------------------------------------------------

// CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage

// optional uint32 accountid = 1;
inline bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::_internal_has_accountid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::has_accountid() const {
  return _internal_has_accountid();
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::clear_accountid() {
  accountid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::accountid() const {
  // @@protoc_insertion_point(field_get:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.accountid)
  return _internal_accountid();
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  accountid_ = value;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.accountid)
}

// optional uint32 timestamp = 2;
inline bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::_internal_has_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.timestamp)
  return _internal_timestamp();
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  timestamp_ = value;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.timestamp)
}

// optional string message = 3;
inline bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::_internal_has_message() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::has_message() const {
  return _internal_has_message();
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::clear_message() {
  message_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::message() const {
  // @@protoc_insertion_point(field_get:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message)
  return _internal_message();
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_message(const std::string& value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message)
}
inline std::string* CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::mutable_message() {
  // @@protoc_insertion_point(field_mutable:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message)
  return _internal_mutable_message();
}
inline const std::string& CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::_internal_message() const {
  return message_.Get();
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::_internal_set_message(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_message(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message)
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message)
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_message(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message)
}
inline std::string* CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::_internal_mutable_message() {
  _has_bits_[0] |= 0x00000001u;
  return message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::release_message() {
  // @@protoc_insertion_point(field_release:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message)
}

// optional bool unread = 4;
inline bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::_internal_has_unread() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::has_unread() const {
  return _internal_has_unread();
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::clear_unread() {
  unread_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::_internal_unread() const {
  return unread_;
}
inline bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::unread() const {
  // @@protoc_insertion_point(field_get:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.unread)
  return _internal_unread();
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::_internal_set_unread(bool value) {
  _has_bits_[0] |= 0x00000008u;
  unread_ = value;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_unread(bool value) {
  _internal_set_unread(value);
  // @@protoc_insertion_point(field_set:CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.unread)
}

// -------------------------------------------------------------------

// CMsgClientChatGetFriendMessageHistoryResponse

// optional fixed64 steamid = 1;
inline bool CMsgClientChatGetFriendMessageHistoryResponse::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientChatGetFriendMessageHistoryResponse::has_steamid() const {
  return _internal_has_steamid();
}
inline void CMsgClientChatGetFriendMessageHistoryResponse::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientChatGetFriendMessageHistoryResponse::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientChatGetFriendMessageHistoryResponse::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgClientChatGetFriendMessageHistoryResponse.steamid)
  return _internal_steamid();
}
inline void CMsgClientChatGetFriendMessageHistoryResponse::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CMsgClientChatGetFriendMessageHistoryResponse.steamid)
}

// optional uint32 success = 2;
inline bool CMsgClientChatGetFriendMessageHistoryResponse::_internal_has_success() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientChatGetFriendMessageHistoryResponse::has_success() const {
  return _internal_has_success();
}
inline void CMsgClientChatGetFriendMessageHistoryResponse::clear_success() {
  success_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientChatGetFriendMessageHistoryResponse::_internal_success() const {
  return success_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientChatGetFriendMessageHistoryResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgClientChatGetFriendMessageHistoryResponse.success)
  return _internal_success();
}
inline void CMsgClientChatGetFriendMessageHistoryResponse::_internal_set_success(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  success_ = value;
}
inline void CMsgClientChatGetFriendMessageHistoryResponse::set_success(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:CMsgClientChatGetFriendMessageHistoryResponse.success)
}

// repeated .CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage messages = 3;
inline int CMsgClientChatGetFriendMessageHistoryResponse::_internal_messages_size() const {
  return messages_.size();
}
inline int CMsgClientChatGetFriendMessageHistoryResponse::messages_size() const {
  return _internal_messages_size();
}
inline void CMsgClientChatGetFriendMessageHistoryResponse::clear_messages() {
  messages_.Clear();
}
inline ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* CMsgClientChatGetFriendMessageHistoryResponse::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientChatGetFriendMessageHistoryResponse.messages)
  return messages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage >*
CMsgClientChatGetFriendMessageHistoryResponse::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientChatGetFriendMessageHistoryResponse.messages)
  return &messages_;
}
inline const ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& CMsgClientChatGetFriendMessageHistoryResponse::_internal_messages(int index) const {
  return messages_.Get(index);
}
inline const ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& CMsgClientChatGetFriendMessageHistoryResponse::messages(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientChatGetFriendMessageHistoryResponse.messages)
  return _internal_messages(index);
}
inline ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* CMsgClientChatGetFriendMessageHistoryResponse::_internal_add_messages() {
  return messages_.Add();
}
inline ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* CMsgClientChatGetFriendMessageHistoryResponse::add_messages() {
  // @@protoc_insertion_point(field_add:CMsgClientChatGetFriendMessageHistoryResponse.messages)
  return _internal_add_messages();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage >&
CMsgClientChatGetFriendMessageHistoryResponse::messages() const {
  // @@protoc_insertion_point(field_list:CMsgClientChatGetFriendMessageHistoryResponse.messages)
  return messages_;
}

// -------------------------------------------------------------------

// CMsgClientChatGetFriendMessageHistoryForOfflineMessages

// -------------------------------------------------------------------

// CMsgClientFSGetFriendsSteamLevels

// repeated uint32 accountids = 1;
inline int CMsgClientFSGetFriendsSteamLevels::_internal_accountids_size() const {
  return accountids_.size();
}
inline int CMsgClientFSGetFriendsSteamLevels::accountids_size() const {
  return _internal_accountids_size();
}
inline void CMsgClientFSGetFriendsSteamLevels::clear_accountids() {
  accountids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientFSGetFriendsSteamLevels::_internal_accountids(int index) const {
  return accountids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientFSGetFriendsSteamLevels::accountids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientFSGetFriendsSteamLevels.accountids)
  return _internal_accountids(index);
}
inline void CMsgClientFSGetFriendsSteamLevels::set_accountids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  accountids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientFSGetFriendsSteamLevels.accountids)
}
inline void CMsgClientFSGetFriendsSteamLevels::_internal_add_accountids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  accountids_.Add(value);
}
inline void CMsgClientFSGetFriendsSteamLevels::add_accountids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_accountids(value);
  // @@protoc_insertion_point(field_add:CMsgClientFSGetFriendsSteamLevels.accountids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgClientFSGetFriendsSteamLevels::_internal_accountids() const {
  return accountids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgClientFSGetFriendsSteamLevels::accountids() const {
  // @@protoc_insertion_point(field_list:CMsgClientFSGetFriendsSteamLevels.accountids)
  return _internal_accountids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgClientFSGetFriendsSteamLevels::_internal_mutable_accountids() {
  return &accountids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgClientFSGetFriendsSteamLevels::mutable_accountids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientFSGetFriendsSteamLevels.accountids)
  return _internal_mutable_accountids();
}

// -------------------------------------------------------------------

// CMsgClientFSGetFriendsSteamLevelsResponse_Friend

// optional uint32 accountid = 1;
inline bool CMsgClientFSGetFriendsSteamLevelsResponse_Friend::_internal_has_accountid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientFSGetFriendsSteamLevelsResponse_Friend::has_accountid() const {
  return _internal_has_accountid();
}
inline void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::clear_accountid() {
  accountid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientFSGetFriendsSteamLevelsResponse_Friend::_internal_accountid() const {
  return accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientFSGetFriendsSteamLevelsResponse_Friend::accountid() const {
  // @@protoc_insertion_point(field_get:CMsgClientFSGetFriendsSteamLevelsResponse.Friend.accountid)
  return _internal_accountid();
}
inline void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::_internal_set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  accountid_ = value;
}
inline void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::set_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:CMsgClientFSGetFriendsSteamLevelsResponse.Friend.accountid)
}

// optional uint32 level = 2;
inline bool CMsgClientFSGetFriendsSteamLevelsResponse_Friend::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientFSGetFriendsSteamLevelsResponse_Friend::has_level() const {
  return _internal_has_level();
}
inline void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientFSGetFriendsSteamLevelsResponse_Friend::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientFSGetFriendsSteamLevelsResponse_Friend::level() const {
  // @@protoc_insertion_point(field_get:CMsgClientFSGetFriendsSteamLevelsResponse.Friend.level)
  return _internal_level();
}
inline void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  level_ = value;
}
inline void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:CMsgClientFSGetFriendsSteamLevelsResponse.Friend.level)
}

// -------------------------------------------------------------------

// CMsgClientFSGetFriendsSteamLevelsResponse

// repeated .CMsgClientFSGetFriendsSteamLevelsResponse.Friend friends = 1;
inline int CMsgClientFSGetFriendsSteamLevelsResponse::_internal_friends_size() const {
  return friends_.size();
}
inline int CMsgClientFSGetFriendsSteamLevelsResponse::friends_size() const {
  return _internal_friends_size();
}
inline void CMsgClientFSGetFriendsSteamLevelsResponse::clear_friends() {
  friends_.Clear();
}
inline ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend* CMsgClientFSGetFriendsSteamLevelsResponse::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientFSGetFriendsSteamLevelsResponse.friends)
  return friends_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend >*
CMsgClientFSGetFriendsSteamLevelsResponse::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientFSGetFriendsSteamLevelsResponse.friends)
  return &friends_;
}
inline const ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend& CMsgClientFSGetFriendsSteamLevelsResponse::_internal_friends(int index) const {
  return friends_.Get(index);
}
inline const ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend& CMsgClientFSGetFriendsSteamLevelsResponse::friends(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientFSGetFriendsSteamLevelsResponse.friends)
  return _internal_friends(index);
}
inline ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend* CMsgClientFSGetFriendsSteamLevelsResponse::_internal_add_friends() {
  return friends_.Add();
}
inline ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend* CMsgClientFSGetFriendsSteamLevelsResponse::add_friends() {
  // @@protoc_insertion_point(field_add:CMsgClientFSGetFriendsSteamLevelsResponse.friends)
  return _internal_add_friends();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientFSGetFriendsSteamLevelsResponse_Friend >&
CMsgClientFSGetFriendsSteamLevelsResponse::friends() const {
  // @@protoc_insertion_point(field_list:CMsgClientFSGetFriendsSteamLevelsResponse.friends)
  return friends_;
}

// -------------------------------------------------------------------

// CMsgClientEmailAddrInfo

// optional string email_address = 1;
inline bool CMsgClientEmailAddrInfo::_internal_has_email_address() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientEmailAddrInfo::has_email_address() const {
  return _internal_has_email_address();
}
inline void CMsgClientEmailAddrInfo::clear_email_address() {
  email_address_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientEmailAddrInfo::email_address() const {
  // @@protoc_insertion_point(field_get:CMsgClientEmailAddrInfo.email_address)
  return _internal_email_address();
}
inline void CMsgClientEmailAddrInfo::set_email_address(const std::string& value) {
  _internal_set_email_address(value);
  // @@protoc_insertion_point(field_set:CMsgClientEmailAddrInfo.email_address)
}
inline std::string* CMsgClientEmailAddrInfo::mutable_email_address() {
  // @@protoc_insertion_point(field_mutable:CMsgClientEmailAddrInfo.email_address)
  return _internal_mutable_email_address();
}
inline const std::string& CMsgClientEmailAddrInfo::_internal_email_address() const {
  return email_address_.Get();
}
inline void CMsgClientEmailAddrInfo::_internal_set_email_address(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  email_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientEmailAddrInfo::set_email_address(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  email_address_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientEmailAddrInfo.email_address)
}
inline void CMsgClientEmailAddrInfo::set_email_address(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  email_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientEmailAddrInfo.email_address)
}
inline void CMsgClientEmailAddrInfo::set_email_address(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  email_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientEmailAddrInfo.email_address)
}
inline std::string* CMsgClientEmailAddrInfo::_internal_mutable_email_address() {
  _has_bits_[0] |= 0x00000001u;
  return email_address_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientEmailAddrInfo::release_email_address() {
  // @@protoc_insertion_point(field_release:CMsgClientEmailAddrInfo.email_address)
  if (!_internal_has_email_address()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return email_address_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientEmailAddrInfo::set_allocated_email_address(std::string* email_address) {
  if (email_address != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  email_address_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), email_address,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientEmailAddrInfo.email_address)
}

// optional bool email_is_validated = 2;
inline bool CMsgClientEmailAddrInfo::_internal_has_email_is_validated() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientEmailAddrInfo::has_email_is_validated() const {
  return _internal_has_email_is_validated();
}
inline void CMsgClientEmailAddrInfo::clear_email_is_validated() {
  email_is_validated_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgClientEmailAddrInfo::_internal_email_is_validated() const {
  return email_is_validated_;
}
inline bool CMsgClientEmailAddrInfo::email_is_validated() const {
  // @@protoc_insertion_point(field_get:CMsgClientEmailAddrInfo.email_is_validated)
  return _internal_email_is_validated();
}
inline void CMsgClientEmailAddrInfo::_internal_set_email_is_validated(bool value) {
  _has_bits_[0] |= 0x00000002u;
  email_is_validated_ = value;
}
inline void CMsgClientEmailAddrInfo::set_email_is_validated(bool value) {
  _internal_set_email_is_validated(value);
  // @@protoc_insertion_point(field_set:CMsgClientEmailAddrInfo.email_is_validated)
}

// optional bool email_validation_changed = 3;
inline bool CMsgClientEmailAddrInfo::_internal_has_email_validation_changed() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientEmailAddrInfo::has_email_validation_changed() const {
  return _internal_has_email_validation_changed();
}
inline void CMsgClientEmailAddrInfo::clear_email_validation_changed() {
  email_validation_changed_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgClientEmailAddrInfo::_internal_email_validation_changed() const {
  return email_validation_changed_;
}
inline bool CMsgClientEmailAddrInfo::email_validation_changed() const {
  // @@protoc_insertion_point(field_get:CMsgClientEmailAddrInfo.email_validation_changed)
  return _internal_email_validation_changed();
}
inline void CMsgClientEmailAddrInfo::_internal_set_email_validation_changed(bool value) {
  _has_bits_[0] |= 0x00000004u;
  email_validation_changed_ = value;
}
inline void CMsgClientEmailAddrInfo::set_email_validation_changed(bool value) {
  _internal_set_email_validation_changed(value);
  // @@protoc_insertion_point(field_set:CMsgClientEmailAddrInfo.email_validation_changed)
}

// optional bool credential_change_requires_code = 4;
inline bool CMsgClientEmailAddrInfo::_internal_has_credential_change_requires_code() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientEmailAddrInfo::has_credential_change_requires_code() const {
  return _internal_has_credential_change_requires_code();
}
inline void CMsgClientEmailAddrInfo::clear_credential_change_requires_code() {
  credential_change_requires_code_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgClientEmailAddrInfo::_internal_credential_change_requires_code() const {
  return credential_change_requires_code_;
}
inline bool CMsgClientEmailAddrInfo::credential_change_requires_code() const {
  // @@protoc_insertion_point(field_get:CMsgClientEmailAddrInfo.credential_change_requires_code)
  return _internal_credential_change_requires_code();
}
inline void CMsgClientEmailAddrInfo::_internal_set_credential_change_requires_code(bool value) {
  _has_bits_[0] |= 0x00000008u;
  credential_change_requires_code_ = value;
}
inline void CMsgClientEmailAddrInfo::set_credential_change_requires_code(bool value) {
  _internal_set_credential_change_requires_code(value);
  // @@protoc_insertion_point(field_set:CMsgClientEmailAddrInfo.credential_change_requires_code)
}

// optional bool password_or_secretqa_change_requires_code = 5;
inline bool CMsgClientEmailAddrInfo::_internal_has_password_or_secretqa_change_requires_code() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientEmailAddrInfo::has_password_or_secretqa_change_requires_code() const {
  return _internal_has_password_or_secretqa_change_requires_code();
}
inline void CMsgClientEmailAddrInfo::clear_password_or_secretqa_change_requires_code() {
  password_or_secretqa_change_requires_code_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgClientEmailAddrInfo::_internal_password_or_secretqa_change_requires_code() const {
  return password_or_secretqa_change_requires_code_;
}
inline bool CMsgClientEmailAddrInfo::password_or_secretqa_change_requires_code() const {
  // @@protoc_insertion_point(field_get:CMsgClientEmailAddrInfo.password_or_secretqa_change_requires_code)
  return _internal_password_or_secretqa_change_requires_code();
}
inline void CMsgClientEmailAddrInfo::_internal_set_password_or_secretqa_change_requires_code(bool value) {
  _has_bits_[0] |= 0x00000010u;
  password_or_secretqa_change_requires_code_ = value;
}
inline void CMsgClientEmailAddrInfo::set_password_or_secretqa_change_requires_code(bool value) {
  _internal_set_password_or_secretqa_change_requires_code(value);
  // @@protoc_insertion_point(field_set:CMsgClientEmailAddrInfo.password_or_secretqa_change_requires_code)
}

// -------------------------------------------------------------------

// CMsgCREItemVoteSummary_PublishedFileId

// optional fixed64 published_file_id = 1;
inline bool CMsgCREItemVoteSummary_PublishedFileId::_internal_has_published_file_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgCREItemVoteSummary_PublishedFileId::has_published_file_id() const {
  return _internal_has_published_file_id();
}
inline void CMsgCREItemVoteSummary_PublishedFileId::clear_published_file_id() {
  published_file_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgCREItemVoteSummary_PublishedFileId::_internal_published_file_id() const {
  return published_file_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgCREItemVoteSummary_PublishedFileId::published_file_id() const {
  // @@protoc_insertion_point(field_get:CMsgCREItemVoteSummary.PublishedFileId.published_file_id)
  return _internal_published_file_id();
}
inline void CMsgCREItemVoteSummary_PublishedFileId::_internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  published_file_id_ = value;
}
inline void CMsgCREItemVoteSummary_PublishedFileId::set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_published_file_id(value);
  // @@protoc_insertion_point(field_set:CMsgCREItemVoteSummary.PublishedFileId.published_file_id)
}

// -------------------------------------------------------------------

// CMsgCREItemVoteSummary

// repeated .CMsgCREItemVoteSummary.PublishedFileId published_file_ids = 1;
inline int CMsgCREItemVoteSummary::_internal_published_file_ids_size() const {
  return published_file_ids_.size();
}
inline int CMsgCREItemVoteSummary::published_file_ids_size() const {
  return _internal_published_file_ids_size();
}
inline void CMsgCREItemVoteSummary::clear_published_file_ids() {
  published_file_ids_.Clear();
}
inline ::CMsgCREItemVoteSummary_PublishedFileId* CMsgCREItemVoteSummary::mutable_published_file_ids(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgCREItemVoteSummary.published_file_ids)
  return published_file_ids_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCREItemVoteSummary_PublishedFileId >*
CMsgCREItemVoteSummary::mutable_published_file_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgCREItemVoteSummary.published_file_ids)
  return &published_file_ids_;
}
inline const ::CMsgCREItemVoteSummary_PublishedFileId& CMsgCREItemVoteSummary::_internal_published_file_ids(int index) const {
  return published_file_ids_.Get(index);
}
inline const ::CMsgCREItemVoteSummary_PublishedFileId& CMsgCREItemVoteSummary::published_file_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgCREItemVoteSummary.published_file_ids)
  return _internal_published_file_ids(index);
}
inline ::CMsgCREItemVoteSummary_PublishedFileId* CMsgCREItemVoteSummary::_internal_add_published_file_ids() {
  return published_file_ids_.Add();
}
inline ::CMsgCREItemVoteSummary_PublishedFileId* CMsgCREItemVoteSummary::add_published_file_ids() {
  // @@protoc_insertion_point(field_add:CMsgCREItemVoteSummary.published_file_ids)
  return _internal_add_published_file_ids();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCREItemVoteSummary_PublishedFileId >&
CMsgCREItemVoteSummary::published_file_ids() const {
  // @@protoc_insertion_point(field_list:CMsgCREItemVoteSummary.published_file_ids)
  return published_file_ids_;
}

// -------------------------------------------------------------------

// CMsgCREItemVoteSummaryResponse_ItemVoteSummary

// optional fixed64 published_file_id = 1;
inline bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::_internal_has_published_file_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::has_published_file_id() const {
  return _internal_has_published_file_id();
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_published_file_id() {
  published_file_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgCREItemVoteSummaryResponse_ItemVoteSummary::_internal_published_file_id() const {
  return published_file_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgCREItemVoteSummaryResponse_ItemVoteSummary::published_file_id() const {
  // @@protoc_insertion_point(field_get:CMsgCREItemVoteSummaryResponse.ItemVoteSummary.published_file_id)
  return _internal_published_file_id();
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::_internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  published_file_id_ = value;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_published_file_id(value);
  // @@protoc_insertion_point(field_set:CMsgCREItemVoteSummaryResponse.ItemVoteSummary.published_file_id)
}

// optional int32 votes_for = 2;
inline bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::_internal_has_votes_for() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::has_votes_for() const {
  return _internal_has_votes_for();
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_votes_for() {
  votes_for_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgCREItemVoteSummaryResponse_ItemVoteSummary::_internal_votes_for() const {
  return votes_for_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgCREItemVoteSummaryResponse_ItemVoteSummary::votes_for() const {
  // @@protoc_insertion_point(field_get:CMsgCREItemVoteSummaryResponse.ItemVoteSummary.votes_for)
  return _internal_votes_for();
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::_internal_set_votes_for(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  votes_for_ = value;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_votes_for(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_votes_for(value);
  // @@protoc_insertion_point(field_set:CMsgCREItemVoteSummaryResponse.ItemVoteSummary.votes_for)
}

// optional int32 votes_against = 3;
inline bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::_internal_has_votes_against() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::has_votes_against() const {
  return _internal_has_votes_against();
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_votes_against() {
  votes_against_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgCREItemVoteSummaryResponse_ItemVoteSummary::_internal_votes_against() const {
  return votes_against_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgCREItemVoteSummaryResponse_ItemVoteSummary::votes_against() const {
  // @@protoc_insertion_point(field_get:CMsgCREItemVoteSummaryResponse.ItemVoteSummary.votes_against)
  return _internal_votes_against();
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::_internal_set_votes_against(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  votes_against_ = value;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_votes_against(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_votes_against(value);
  // @@protoc_insertion_point(field_set:CMsgCREItemVoteSummaryResponse.ItemVoteSummary.votes_against)
}

// optional int32 reports = 4;
inline bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::_internal_has_reports() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::has_reports() const {
  return _internal_has_reports();
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_reports() {
  reports_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgCREItemVoteSummaryResponse_ItemVoteSummary::_internal_reports() const {
  return reports_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgCREItemVoteSummaryResponse_ItemVoteSummary::reports() const {
  // @@protoc_insertion_point(field_get:CMsgCREItemVoteSummaryResponse.ItemVoteSummary.reports)
  return _internal_reports();
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::_internal_set_reports(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  reports_ = value;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_reports(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_reports(value);
  // @@protoc_insertion_point(field_set:CMsgCREItemVoteSummaryResponse.ItemVoteSummary.reports)
}

// optional float score = 5;
inline bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::_internal_has_score() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::has_score() const {
  return _internal_has_score();
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_score() {
  score_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float CMsgCREItemVoteSummaryResponse_ItemVoteSummary::_internal_score() const {
  return score_;
}
inline float CMsgCREItemVoteSummaryResponse_ItemVoteSummary::score() const {
  // @@protoc_insertion_point(field_get:CMsgCREItemVoteSummaryResponse.ItemVoteSummary.score)
  return _internal_score();
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::_internal_set_score(float value) {
  _has_bits_[0] |= 0x00000010u;
  score_ = value;
}
inline void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_score(float value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:CMsgCREItemVoteSummaryResponse.ItemVoteSummary.score)
}

// -------------------------------------------------------------------

// CMsgCREItemVoteSummaryResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgCREItemVoteSummaryResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgCREItemVoteSummaryResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgCREItemVoteSummaryResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgCREItemVoteSummaryResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgCREItemVoteSummaryResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgCREItemVoteSummaryResponse.eresult)
  return _internal_eresult();
}
inline void CMsgCREItemVoteSummaryResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
}
inline void CMsgCREItemVoteSummaryResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgCREItemVoteSummaryResponse.eresult)
}

// repeated .CMsgCREItemVoteSummaryResponse.ItemVoteSummary item_vote_summaries = 2;
inline int CMsgCREItemVoteSummaryResponse::_internal_item_vote_summaries_size() const {
  return item_vote_summaries_.size();
}
inline int CMsgCREItemVoteSummaryResponse::item_vote_summaries_size() const {
  return _internal_item_vote_summaries_size();
}
inline void CMsgCREItemVoteSummaryResponse::clear_item_vote_summaries() {
  item_vote_summaries_.Clear();
}
inline ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary* CMsgCREItemVoteSummaryResponse::mutable_item_vote_summaries(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgCREItemVoteSummaryResponse.item_vote_summaries)
  return item_vote_summaries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary >*
CMsgCREItemVoteSummaryResponse::mutable_item_vote_summaries() {
  // @@protoc_insertion_point(field_mutable_list:CMsgCREItemVoteSummaryResponse.item_vote_summaries)
  return &item_vote_summaries_;
}
inline const ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary& CMsgCREItemVoteSummaryResponse::_internal_item_vote_summaries(int index) const {
  return item_vote_summaries_.Get(index);
}
inline const ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary& CMsgCREItemVoteSummaryResponse::item_vote_summaries(int index) const {
  // @@protoc_insertion_point(field_get:CMsgCREItemVoteSummaryResponse.item_vote_summaries)
  return _internal_item_vote_summaries(index);
}
inline ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary* CMsgCREItemVoteSummaryResponse::_internal_add_item_vote_summaries() {
  return item_vote_summaries_.Add();
}
inline ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary* CMsgCREItemVoteSummaryResponse::add_item_vote_summaries() {
  // @@protoc_insertion_point(field_add:CMsgCREItemVoteSummaryResponse.item_vote_summaries)
  return _internal_add_item_vote_summaries();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCREItemVoteSummaryResponse_ItemVoteSummary >&
CMsgCREItemVoteSummaryResponse::item_vote_summaries() const {
  // @@protoc_insertion_point(field_list:CMsgCREItemVoteSummaryResponse.item_vote_summaries)
  return item_vote_summaries_;
}

// -------------------------------------------------------------------

// CMsgCREUpdateUserPublishedItemVote

// optional fixed64 published_file_id = 1;
inline bool CMsgCREUpdateUserPublishedItemVote::_internal_has_published_file_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgCREUpdateUserPublishedItemVote::has_published_file_id() const {
  return _internal_has_published_file_id();
}
inline void CMsgCREUpdateUserPublishedItemVote::clear_published_file_id() {
  published_file_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgCREUpdateUserPublishedItemVote::_internal_published_file_id() const {
  return published_file_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgCREUpdateUserPublishedItemVote::published_file_id() const {
  // @@protoc_insertion_point(field_get:CMsgCREUpdateUserPublishedItemVote.published_file_id)
  return _internal_published_file_id();
}
inline void CMsgCREUpdateUserPublishedItemVote::_internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  published_file_id_ = value;
}
inline void CMsgCREUpdateUserPublishedItemVote::set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_published_file_id(value);
  // @@protoc_insertion_point(field_set:CMsgCREUpdateUserPublishedItemVote.published_file_id)
}

// optional bool vote_up = 2;
inline bool CMsgCREUpdateUserPublishedItemVote::_internal_has_vote_up() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgCREUpdateUserPublishedItemVote::has_vote_up() const {
  return _internal_has_vote_up();
}
inline void CMsgCREUpdateUserPublishedItemVote::clear_vote_up() {
  vote_up_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgCREUpdateUserPublishedItemVote::_internal_vote_up() const {
  return vote_up_;
}
inline bool CMsgCREUpdateUserPublishedItemVote::vote_up() const {
  // @@protoc_insertion_point(field_get:CMsgCREUpdateUserPublishedItemVote.vote_up)
  return _internal_vote_up();
}
inline void CMsgCREUpdateUserPublishedItemVote::_internal_set_vote_up(bool value) {
  _has_bits_[0] |= 0x00000002u;
  vote_up_ = value;
}
inline void CMsgCREUpdateUserPublishedItemVote::set_vote_up(bool value) {
  _internal_set_vote_up(value);
  // @@protoc_insertion_point(field_set:CMsgCREUpdateUserPublishedItemVote.vote_up)
}

// -------------------------------------------------------------------

// CMsgCREUpdateUserPublishedItemVoteResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgCREUpdateUserPublishedItemVoteResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgCREUpdateUserPublishedItemVoteResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgCREUpdateUserPublishedItemVoteResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgCREUpdateUserPublishedItemVoteResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgCREUpdateUserPublishedItemVoteResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgCREUpdateUserPublishedItemVoteResponse.eresult)
  return _internal_eresult();
}
inline void CMsgCREUpdateUserPublishedItemVoteResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
}
inline void CMsgCREUpdateUserPublishedItemVoteResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgCREUpdateUserPublishedItemVoteResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId

// optional fixed64 published_file_id = 1;
inline bool CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::_internal_has_published_file_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::has_published_file_id() const {
  return _internal_has_published_file_id();
}
inline void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::clear_published_file_id() {
  published_file_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::_internal_published_file_id() const {
  return published_file_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::published_file_id() const {
  // @@protoc_insertion_point(field_get:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId.published_file_id)
  return _internal_published_file_id();
}
inline void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::_internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  published_file_id_ = value;
}
inline void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_published_file_id(value);
  // @@protoc_insertion_point(field_set:CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId.published_file_id)
}

// -------------------------------------------------------------------

// CMsgCREGetUserPublishedItemVoteDetails

// repeated .CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId published_file_ids = 1;
inline int CMsgCREGetUserPublishedItemVoteDetails::_internal_published_file_ids_size() const {
  return published_file_ids_.size();
}
inline int CMsgCREGetUserPublishedItemVoteDetails::published_file_ids_size() const {
  return _internal_published_file_ids_size();
}
inline void CMsgCREGetUserPublishedItemVoteDetails::clear_published_file_ids() {
  published_file_ids_.Clear();
}
inline ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* CMsgCREGetUserPublishedItemVoteDetails::mutable_published_file_ids(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgCREGetUserPublishedItemVoteDetails.published_file_ids)
  return published_file_ids_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId >*
CMsgCREGetUserPublishedItemVoteDetails::mutable_published_file_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgCREGetUserPublishedItemVoteDetails.published_file_ids)
  return &published_file_ids_;
}
inline const ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& CMsgCREGetUserPublishedItemVoteDetails::_internal_published_file_ids(int index) const {
  return published_file_ids_.Get(index);
}
inline const ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& CMsgCREGetUserPublishedItemVoteDetails::published_file_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgCREGetUserPublishedItemVoteDetails.published_file_ids)
  return _internal_published_file_ids(index);
}
inline ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* CMsgCREGetUserPublishedItemVoteDetails::_internal_add_published_file_ids() {
  return published_file_ids_.Add();
}
inline ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* CMsgCREGetUserPublishedItemVoteDetails::add_published_file_ids() {
  // @@protoc_insertion_point(field_add:CMsgCREGetUserPublishedItemVoteDetails.published_file_ids)
  return _internal_add_published_file_ids();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId >&
CMsgCREGetUserPublishedItemVoteDetails::published_file_ids() const {
  // @@protoc_insertion_point(field_list:CMsgCREGetUserPublishedItemVoteDetails.published_file_ids)
  return published_file_ids_;
}

// -------------------------------------------------------------------

// CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail

// optional fixed64 published_file_id = 1;
inline bool CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::_internal_has_published_file_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::has_published_file_id() const {
  return _internal_has_published_file_id();
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::clear_published_file_id() {
  published_file_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::_internal_published_file_id() const {
  return published_file_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::published_file_id() const {
  // @@protoc_insertion_point(field_get:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail.published_file_id)
  return _internal_published_file_id();
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::_internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  published_file_id_ = value;
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_published_file_id(value);
  // @@protoc_insertion_point(field_set:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail.published_file_id)
}

// optional int32 vote = 2 [default = 0];
inline bool CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::_internal_has_vote() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::has_vote() const {
  return _internal_has_vote();
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::clear_vote() {
  vote_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::_internal_vote() const {
  return vote_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::vote() const {
  // @@protoc_insertion_point(field_get:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail.vote)
  return _internal_vote();
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::_internal_set_vote(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  vote_ = value;
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::set_vote(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vote(value);
  // @@protoc_insertion_point(field_set:CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail.vote)
}

// -------------------------------------------------------------------

// CMsgCREGetUserPublishedItemVoteDetailsResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgCREGetUserPublishedItemVoteDetailsResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgCREGetUserPublishedItemVoteDetailsResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgCREGetUserPublishedItemVoteDetailsResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgCREGetUserPublishedItemVoteDetailsResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgCREGetUserPublishedItemVoteDetailsResponse.eresult)
  return _internal_eresult();
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgCREGetUserPublishedItemVoteDetailsResponse.eresult)
}

// repeated .CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail user_item_vote_details = 2;
inline int CMsgCREGetUserPublishedItemVoteDetailsResponse::_internal_user_item_vote_details_size() const {
  return user_item_vote_details_.size();
}
inline int CMsgCREGetUserPublishedItemVoteDetailsResponse::user_item_vote_details_size() const {
  return _internal_user_item_vote_details_size();
}
inline void CMsgCREGetUserPublishedItemVoteDetailsResponse::clear_user_item_vote_details() {
  user_item_vote_details_.Clear();
}
inline ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* CMsgCREGetUserPublishedItemVoteDetailsResponse::mutable_user_item_vote_details(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgCREGetUserPublishedItemVoteDetailsResponse.user_item_vote_details)
  return user_item_vote_details_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail >*
CMsgCREGetUserPublishedItemVoteDetailsResponse::mutable_user_item_vote_details() {
  // @@protoc_insertion_point(field_mutable_list:CMsgCREGetUserPublishedItemVoteDetailsResponse.user_item_vote_details)
  return &user_item_vote_details_;
}
inline const ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& CMsgCREGetUserPublishedItemVoteDetailsResponse::_internal_user_item_vote_details(int index) const {
  return user_item_vote_details_.Get(index);
}
inline const ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& CMsgCREGetUserPublishedItemVoteDetailsResponse::user_item_vote_details(int index) const {
  // @@protoc_insertion_point(field_get:CMsgCREGetUserPublishedItemVoteDetailsResponse.user_item_vote_details)
  return _internal_user_item_vote_details(index);
}
inline ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* CMsgCREGetUserPublishedItemVoteDetailsResponse::_internal_add_user_item_vote_details() {
  return user_item_vote_details_.Add();
}
inline ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* CMsgCREGetUserPublishedItemVoteDetailsResponse::add_user_item_vote_details() {
  // @@protoc_insertion_point(field_add:CMsgCREGetUserPublishedItemVoteDetailsResponse.user_item_vote_details)
  return _internal_add_user_item_vote_details();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail >&
CMsgCREGetUserPublishedItemVoteDetailsResponse::user_item_vote_details() const {
  // @@protoc_insertion_point(field_list:CMsgCREGetUserPublishedItemVoteDetailsResponse.user_item_vote_details)
  return user_item_vote_details_;
}

// -------------------------------------------------------------------

// CMsgFSGetFollowerCount

// optional fixed64 steam_id = 1;
inline bool CMsgFSGetFollowerCount::_internal_has_steam_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgFSGetFollowerCount::has_steam_id() const {
  return _internal_has_steam_id();
}
inline void CMsgFSGetFollowerCount::clear_steam_id() {
  steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgFSGetFollowerCount::_internal_steam_id() const {
  return steam_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgFSGetFollowerCount::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgFSGetFollowerCount.steam_id)
  return _internal_steam_id();
}
inline void CMsgFSGetFollowerCount::_internal_set_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steam_id_ = value;
}
inline void CMsgFSGetFollowerCount::set_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgFSGetFollowerCount.steam_id)
}

// -------------------------------------------------------------------

// CMsgFSGetFollowerCountResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgFSGetFollowerCountResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgFSGetFollowerCountResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgFSGetFollowerCountResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgFSGetFollowerCountResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgFSGetFollowerCountResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgFSGetFollowerCountResponse.eresult)
  return _internal_eresult();
}
inline void CMsgFSGetFollowerCountResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  eresult_ = value;
}
inline void CMsgFSGetFollowerCountResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgFSGetFollowerCountResponse.eresult)
}

// optional int32 count = 2 [default = 0];
inline bool CMsgFSGetFollowerCountResponse::_internal_has_count() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgFSGetFollowerCountResponse::has_count() const {
  return _internal_has_count();
}
inline void CMsgFSGetFollowerCountResponse::clear_count() {
  count_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgFSGetFollowerCountResponse::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgFSGetFollowerCountResponse::count() const {
  // @@protoc_insertion_point(field_get:CMsgFSGetFollowerCountResponse.count)
  return _internal_count();
}
inline void CMsgFSGetFollowerCountResponse::_internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  count_ = value;
}
inline void CMsgFSGetFollowerCountResponse::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:CMsgFSGetFollowerCountResponse.count)
}

// -------------------------------------------------------------------

// CMsgFSGetIsFollowing

// optional fixed64 steam_id = 1;
inline bool CMsgFSGetIsFollowing::_internal_has_steam_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgFSGetIsFollowing::has_steam_id() const {
  return _internal_has_steam_id();
}
inline void CMsgFSGetIsFollowing::clear_steam_id() {
  steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgFSGetIsFollowing::_internal_steam_id() const {
  return steam_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgFSGetIsFollowing::steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgFSGetIsFollowing.steam_id)
  return _internal_steam_id();
}
inline void CMsgFSGetIsFollowing::_internal_set_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steam_id_ = value;
}
inline void CMsgFSGetIsFollowing::set_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgFSGetIsFollowing.steam_id)
}

// -------------------------------------------------------------------

// CMsgFSGetIsFollowingResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgFSGetIsFollowingResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgFSGetIsFollowingResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgFSGetIsFollowingResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgFSGetIsFollowingResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgFSGetIsFollowingResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgFSGetIsFollowingResponse.eresult)
  return _internal_eresult();
}
inline void CMsgFSGetIsFollowingResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  eresult_ = value;
}
inline void CMsgFSGetIsFollowingResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgFSGetIsFollowingResponse.eresult)
}

// optional bool is_following = 2 [default = false];
inline bool CMsgFSGetIsFollowingResponse::_internal_has_is_following() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgFSGetIsFollowingResponse::has_is_following() const {
  return _internal_has_is_following();
}
inline void CMsgFSGetIsFollowingResponse::clear_is_following() {
  is_following_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgFSGetIsFollowingResponse::_internal_is_following() const {
  return is_following_;
}
inline bool CMsgFSGetIsFollowingResponse::is_following() const {
  // @@protoc_insertion_point(field_get:CMsgFSGetIsFollowingResponse.is_following)
  return _internal_is_following();
}
inline void CMsgFSGetIsFollowingResponse::_internal_set_is_following(bool value) {
  _has_bits_[0] |= 0x00000001u;
  is_following_ = value;
}
inline void CMsgFSGetIsFollowingResponse::set_is_following(bool value) {
  _internal_set_is_following(value);
  // @@protoc_insertion_point(field_set:CMsgFSGetIsFollowingResponse.is_following)
}

// -------------------------------------------------------------------

// CMsgFSEnumerateFollowingList

// optional uint32 start_index = 1;
inline bool CMsgFSEnumerateFollowingList::_internal_has_start_index() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgFSEnumerateFollowingList::has_start_index() const {
  return _internal_has_start_index();
}
inline void CMsgFSEnumerateFollowingList::clear_start_index() {
  start_index_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgFSEnumerateFollowingList::_internal_start_index() const {
  return start_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgFSEnumerateFollowingList::start_index() const {
  // @@protoc_insertion_point(field_get:CMsgFSEnumerateFollowingList.start_index)
  return _internal_start_index();
}
inline void CMsgFSEnumerateFollowingList::_internal_set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  start_index_ = value;
}
inline void CMsgFSEnumerateFollowingList::set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start_index(value);
  // @@protoc_insertion_point(field_set:CMsgFSEnumerateFollowingList.start_index)
}

// -------------------------------------------------------------------

// CMsgFSEnumerateFollowingListResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgFSEnumerateFollowingListResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgFSEnumerateFollowingListResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgFSEnumerateFollowingListResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgFSEnumerateFollowingListResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgFSEnumerateFollowingListResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgFSEnumerateFollowingListResponse.eresult)
  return _internal_eresult();
}
inline void CMsgFSEnumerateFollowingListResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  eresult_ = value;
}
inline void CMsgFSEnumerateFollowingListResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgFSEnumerateFollowingListResponse.eresult)
}

// optional int32 total_results = 2;
inline bool CMsgFSEnumerateFollowingListResponse::_internal_has_total_results() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgFSEnumerateFollowingListResponse::has_total_results() const {
  return _internal_has_total_results();
}
inline void CMsgFSEnumerateFollowingListResponse::clear_total_results() {
  total_results_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgFSEnumerateFollowingListResponse::_internal_total_results() const {
  return total_results_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgFSEnumerateFollowingListResponse::total_results() const {
  // @@protoc_insertion_point(field_get:CMsgFSEnumerateFollowingListResponse.total_results)
  return _internal_total_results();
}
inline void CMsgFSEnumerateFollowingListResponse::_internal_set_total_results(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  total_results_ = value;
}
inline void CMsgFSEnumerateFollowingListResponse::set_total_results(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_total_results(value);
  // @@protoc_insertion_point(field_set:CMsgFSEnumerateFollowingListResponse.total_results)
}

// repeated fixed64 steam_ids = 3;
inline int CMsgFSEnumerateFollowingListResponse::_internal_steam_ids_size() const {
  return steam_ids_.size();
}
inline int CMsgFSEnumerateFollowingListResponse::steam_ids_size() const {
  return _internal_steam_ids_size();
}
inline void CMsgFSEnumerateFollowingListResponse::clear_steam_ids() {
  steam_ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgFSEnumerateFollowingListResponse::_internal_steam_ids(int index) const {
  return steam_ids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgFSEnumerateFollowingListResponse::steam_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgFSEnumerateFollowingListResponse.steam_ids)
  return _internal_steam_ids(index);
}
inline void CMsgFSEnumerateFollowingListResponse::set_steam_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  steam_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgFSEnumerateFollowingListResponse.steam_ids)
}
inline void CMsgFSEnumerateFollowingListResponse::_internal_add_steam_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  steam_ids_.Add(value);
}
inline void CMsgFSEnumerateFollowingListResponse::add_steam_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_steam_ids(value);
  // @@protoc_insertion_point(field_add:CMsgFSEnumerateFollowingListResponse.steam_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgFSEnumerateFollowingListResponse::_internal_steam_ids() const {
  return steam_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgFSEnumerateFollowingListResponse::steam_ids() const {
  // @@protoc_insertion_point(field_list:CMsgFSEnumerateFollowingListResponse.steam_ids)
  return _internal_steam_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgFSEnumerateFollowingListResponse::_internal_mutable_steam_ids() {
  return &steam_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgFSEnumerateFollowingListResponse::mutable_steam_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgFSEnumerateFollowingListResponse.steam_ids)
  return _internal_mutable_steam_ids();
}

// -------------------------------------------------------------------

// CMsgDPGetNumberOfCurrentPlayers

// optional uint32 appid = 1;
inline bool CMsgDPGetNumberOfCurrentPlayers::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgDPGetNumberOfCurrentPlayers::has_appid() const {
  return _internal_has_appid();
}
inline void CMsgDPGetNumberOfCurrentPlayers::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDPGetNumberOfCurrentPlayers::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgDPGetNumberOfCurrentPlayers::appid() const {
  // @@protoc_insertion_point(field_get:CMsgDPGetNumberOfCurrentPlayers.appid)
  return _internal_appid();
}
inline void CMsgDPGetNumberOfCurrentPlayers::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
}
inline void CMsgDPGetNumberOfCurrentPlayers::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CMsgDPGetNumberOfCurrentPlayers.appid)
}

// -------------------------------------------------------------------

// CMsgDPGetNumberOfCurrentPlayersResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgDPGetNumberOfCurrentPlayersResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgDPGetNumberOfCurrentPlayersResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgDPGetNumberOfCurrentPlayersResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgDPGetNumberOfCurrentPlayersResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgDPGetNumberOfCurrentPlayersResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgDPGetNumberOfCurrentPlayersResponse.eresult)
  return _internal_eresult();
}
inline void CMsgDPGetNumberOfCurrentPlayersResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  eresult_ = value;
}
inline void CMsgDPGetNumberOfCurrentPlayersResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgDPGetNumberOfCurrentPlayersResponse.eresult)
}

// optional int32 player_count = 2;
inline bool CMsgDPGetNumberOfCurrentPlayersResponse::_internal_has_player_count() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgDPGetNumberOfCurrentPlayersResponse::has_player_count() const {
  return _internal_has_player_count();
}
inline void CMsgDPGetNumberOfCurrentPlayersResponse::clear_player_count() {
  player_count_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgDPGetNumberOfCurrentPlayersResponse::_internal_player_count() const {
  return player_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgDPGetNumberOfCurrentPlayersResponse::player_count() const {
  // @@protoc_insertion_point(field_get:CMsgDPGetNumberOfCurrentPlayersResponse.player_count)
  return _internal_player_count();
}
inline void CMsgDPGetNumberOfCurrentPlayersResponse::_internal_set_player_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_count_ = value;
}
inline void CMsgDPGetNumberOfCurrentPlayersResponse::set_player_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_count(value);
  // @@protoc_insertion_point(field_set:CMsgDPGetNumberOfCurrentPlayersResponse.player_count)
}

// -------------------------------------------------------------------

// CMsgClientFriendUserStatusPublished

// optional fixed64 friend_steamid = 1;
inline bool CMsgClientFriendUserStatusPublished::_internal_has_friend_steamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientFriendUserStatusPublished::has_friend_steamid() const {
  return _internal_has_friend_steamid();
}
inline void CMsgClientFriendUserStatusPublished::clear_friend_steamid() {
  friend_steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientFriendUserStatusPublished::_internal_friend_steamid() const {
  return friend_steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientFriendUserStatusPublished::friend_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgClientFriendUserStatusPublished.friend_steamid)
  return _internal_friend_steamid();
}
inline void CMsgClientFriendUserStatusPublished::_internal_set_friend_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  friend_steamid_ = value;
}
inline void CMsgClientFriendUserStatusPublished::set_friend_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_friend_steamid(value);
  // @@protoc_insertion_point(field_set:CMsgClientFriendUserStatusPublished.friend_steamid)
}

// optional uint32 appid = 2;
inline bool CMsgClientFriendUserStatusPublished::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientFriendUserStatusPublished::has_appid() const {
  return _internal_has_appid();
}
inline void CMsgClientFriendUserStatusPublished::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientFriendUserStatusPublished::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientFriendUserStatusPublished::appid() const {
  // @@protoc_insertion_point(field_get:CMsgClientFriendUserStatusPublished.appid)
  return _internal_appid();
}
inline void CMsgClientFriendUserStatusPublished::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  appid_ = value;
}
inline void CMsgClientFriendUserStatusPublished::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CMsgClientFriendUserStatusPublished.appid)
}

// optional string status_text = 3;
inline bool CMsgClientFriendUserStatusPublished::_internal_has_status_text() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientFriendUserStatusPublished::has_status_text() const {
  return _internal_has_status_text();
}
inline void CMsgClientFriendUserStatusPublished::clear_status_text() {
  status_text_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientFriendUserStatusPublished::status_text() const {
  // @@protoc_insertion_point(field_get:CMsgClientFriendUserStatusPublished.status_text)
  return _internal_status_text();
}
inline void CMsgClientFriendUserStatusPublished::set_status_text(const std::string& value) {
  _internal_set_status_text(value);
  // @@protoc_insertion_point(field_set:CMsgClientFriendUserStatusPublished.status_text)
}
inline std::string* CMsgClientFriendUserStatusPublished::mutable_status_text() {
  // @@protoc_insertion_point(field_mutable:CMsgClientFriendUserStatusPublished.status_text)
  return _internal_mutable_status_text();
}
inline const std::string& CMsgClientFriendUserStatusPublished::_internal_status_text() const {
  return status_text_.Get();
}
inline void CMsgClientFriendUserStatusPublished::_internal_set_status_text(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  status_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientFriendUserStatusPublished::set_status_text(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  status_text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientFriendUserStatusPublished.status_text)
}
inline void CMsgClientFriendUserStatusPublished::set_status_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  status_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientFriendUserStatusPublished.status_text)
}
inline void CMsgClientFriendUserStatusPublished::set_status_text(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  status_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientFriendUserStatusPublished.status_text)
}
inline std::string* CMsgClientFriendUserStatusPublished::_internal_mutable_status_text() {
  _has_bits_[0] |= 0x00000001u;
  return status_text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientFriendUserStatusPublished::release_status_text() {
  // @@protoc_insertion_point(field_release:CMsgClientFriendUserStatusPublished.status_text)
  if (!_internal_has_status_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return status_text_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientFriendUserStatusPublished::set_allocated_status_text(std::string* status_text) {
  if (status_text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  status_text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), status_text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientFriendUserStatusPublished.status_text)
}

// -------------------------------------------------------------------

// CMsgClientServiceMethodLegacy

// optional string method_name = 1;
inline bool CMsgClientServiceMethodLegacy::_internal_has_method_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientServiceMethodLegacy::has_method_name() const {
  return _internal_has_method_name();
}
inline void CMsgClientServiceMethodLegacy::clear_method_name() {
  method_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientServiceMethodLegacy::method_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceMethodLegacy.method_name)
  return _internal_method_name();
}
inline void CMsgClientServiceMethodLegacy::set_method_name(const std::string& value) {
  _internal_set_method_name(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceMethodLegacy.method_name)
}
inline std::string* CMsgClientServiceMethodLegacy::mutable_method_name() {
  // @@protoc_insertion_point(field_mutable:CMsgClientServiceMethodLegacy.method_name)
  return _internal_mutable_method_name();
}
inline const std::string& CMsgClientServiceMethodLegacy::_internal_method_name() const {
  return method_name_.Get();
}
inline void CMsgClientServiceMethodLegacy::_internal_set_method_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  method_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientServiceMethodLegacy::set_method_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  method_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientServiceMethodLegacy.method_name)
}
inline void CMsgClientServiceMethodLegacy::set_method_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  method_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientServiceMethodLegacy.method_name)
}
inline void CMsgClientServiceMethodLegacy::set_method_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  method_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientServiceMethodLegacy.method_name)
}
inline std::string* CMsgClientServiceMethodLegacy::_internal_mutable_method_name() {
  _has_bits_[0] |= 0x00000001u;
  return method_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientServiceMethodLegacy::release_method_name() {
  // @@protoc_insertion_point(field_release:CMsgClientServiceMethodLegacy.method_name)
  if (!_internal_has_method_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return method_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientServiceMethodLegacy::set_allocated_method_name(std::string* method_name) {
  if (method_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  method_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), method_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientServiceMethodLegacy.method_name)
}

// optional bytes serialized_method = 2;
inline bool CMsgClientServiceMethodLegacy::_internal_has_serialized_method() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientServiceMethodLegacy::has_serialized_method() const {
  return _internal_has_serialized_method();
}
inline void CMsgClientServiceMethodLegacy::clear_serialized_method() {
  serialized_method_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientServiceMethodLegacy::serialized_method() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceMethodLegacy.serialized_method)
  return _internal_serialized_method();
}
inline void CMsgClientServiceMethodLegacy::set_serialized_method(const std::string& value) {
  _internal_set_serialized_method(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceMethodLegacy.serialized_method)
}
inline std::string* CMsgClientServiceMethodLegacy::mutable_serialized_method() {
  // @@protoc_insertion_point(field_mutable:CMsgClientServiceMethodLegacy.serialized_method)
  return _internal_mutable_serialized_method();
}
inline const std::string& CMsgClientServiceMethodLegacy::_internal_serialized_method() const {
  return serialized_method_.Get();
}
inline void CMsgClientServiceMethodLegacy::_internal_set_serialized_method(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  serialized_method_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientServiceMethodLegacy::set_serialized_method(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  serialized_method_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientServiceMethodLegacy.serialized_method)
}
inline void CMsgClientServiceMethodLegacy::set_serialized_method(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  serialized_method_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientServiceMethodLegacy.serialized_method)
}
inline void CMsgClientServiceMethodLegacy::set_serialized_method(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  serialized_method_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientServiceMethodLegacy.serialized_method)
}
inline std::string* CMsgClientServiceMethodLegacy::_internal_mutable_serialized_method() {
  _has_bits_[0] |= 0x00000002u;
  return serialized_method_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientServiceMethodLegacy::release_serialized_method() {
  // @@protoc_insertion_point(field_release:CMsgClientServiceMethodLegacy.serialized_method)
  if (!_internal_has_serialized_method()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return serialized_method_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientServiceMethodLegacy::set_allocated_serialized_method(std::string* serialized_method) {
  if (serialized_method != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  serialized_method_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), serialized_method,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientServiceMethodLegacy.serialized_method)
}

// optional bool is_notification = 3;
inline bool CMsgClientServiceMethodLegacy::_internal_has_is_notification() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientServiceMethodLegacy::has_is_notification() const {
  return _internal_has_is_notification();
}
inline void CMsgClientServiceMethodLegacy::clear_is_notification() {
  is_notification_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgClientServiceMethodLegacy::_internal_is_notification() const {
  return is_notification_;
}
inline bool CMsgClientServiceMethodLegacy::is_notification() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceMethodLegacy.is_notification)
  return _internal_is_notification();
}
inline void CMsgClientServiceMethodLegacy::_internal_set_is_notification(bool value) {
  _has_bits_[0] |= 0x00000004u;
  is_notification_ = value;
}
inline void CMsgClientServiceMethodLegacy::set_is_notification(bool value) {
  _internal_set_is_notification(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceMethodLegacy.is_notification)
}

// -------------------------------------------------------------------

// CMsgClientServiceMethodLegacyResponse

// optional string method_name = 1;
inline bool CMsgClientServiceMethodLegacyResponse::_internal_has_method_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientServiceMethodLegacyResponse::has_method_name() const {
  return _internal_has_method_name();
}
inline void CMsgClientServiceMethodLegacyResponse::clear_method_name() {
  method_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientServiceMethodLegacyResponse::method_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceMethodLegacyResponse.method_name)
  return _internal_method_name();
}
inline void CMsgClientServiceMethodLegacyResponse::set_method_name(const std::string& value) {
  _internal_set_method_name(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceMethodLegacyResponse.method_name)
}
inline std::string* CMsgClientServiceMethodLegacyResponse::mutable_method_name() {
  // @@protoc_insertion_point(field_mutable:CMsgClientServiceMethodLegacyResponse.method_name)
  return _internal_mutable_method_name();
}
inline const std::string& CMsgClientServiceMethodLegacyResponse::_internal_method_name() const {
  return method_name_.Get();
}
inline void CMsgClientServiceMethodLegacyResponse::_internal_set_method_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  method_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientServiceMethodLegacyResponse::set_method_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  method_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientServiceMethodLegacyResponse.method_name)
}
inline void CMsgClientServiceMethodLegacyResponse::set_method_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  method_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientServiceMethodLegacyResponse.method_name)
}
inline void CMsgClientServiceMethodLegacyResponse::set_method_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  method_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientServiceMethodLegacyResponse.method_name)
}
inline std::string* CMsgClientServiceMethodLegacyResponse::_internal_mutable_method_name() {
  _has_bits_[0] |= 0x00000001u;
  return method_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientServiceMethodLegacyResponse::release_method_name() {
  // @@protoc_insertion_point(field_release:CMsgClientServiceMethodLegacyResponse.method_name)
  if (!_internal_has_method_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return method_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientServiceMethodLegacyResponse::set_allocated_method_name(std::string* method_name) {
  if (method_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  method_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), method_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientServiceMethodLegacyResponse.method_name)
}

// optional bytes serialized_method_response = 2;
inline bool CMsgClientServiceMethodLegacyResponse::_internal_has_serialized_method_response() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientServiceMethodLegacyResponse::has_serialized_method_response() const {
  return _internal_has_serialized_method_response();
}
inline void CMsgClientServiceMethodLegacyResponse::clear_serialized_method_response() {
  serialized_method_response_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientServiceMethodLegacyResponse::serialized_method_response() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceMethodLegacyResponse.serialized_method_response)
  return _internal_serialized_method_response();
}
inline void CMsgClientServiceMethodLegacyResponse::set_serialized_method_response(const std::string& value) {
  _internal_set_serialized_method_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceMethodLegacyResponse.serialized_method_response)
}
inline std::string* CMsgClientServiceMethodLegacyResponse::mutable_serialized_method_response() {
  // @@protoc_insertion_point(field_mutable:CMsgClientServiceMethodLegacyResponse.serialized_method_response)
  return _internal_mutable_serialized_method_response();
}
inline const std::string& CMsgClientServiceMethodLegacyResponse::_internal_serialized_method_response() const {
  return serialized_method_response_.Get();
}
inline void CMsgClientServiceMethodLegacyResponse::_internal_set_serialized_method_response(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  serialized_method_response_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientServiceMethodLegacyResponse::set_serialized_method_response(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  serialized_method_response_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientServiceMethodLegacyResponse.serialized_method_response)
}
inline void CMsgClientServiceMethodLegacyResponse::set_serialized_method_response(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  serialized_method_response_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientServiceMethodLegacyResponse.serialized_method_response)
}
inline void CMsgClientServiceMethodLegacyResponse::set_serialized_method_response(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  serialized_method_response_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientServiceMethodLegacyResponse.serialized_method_response)
}
inline std::string* CMsgClientServiceMethodLegacyResponse::_internal_mutable_serialized_method_response() {
  _has_bits_[0] |= 0x00000002u;
  return serialized_method_response_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientServiceMethodLegacyResponse::release_serialized_method_response() {
  // @@protoc_insertion_point(field_release:CMsgClientServiceMethodLegacyResponse.serialized_method_response)
  if (!_internal_has_serialized_method_response()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return serialized_method_response_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientServiceMethodLegacyResponse::set_allocated_serialized_method_response(std::string* serialized_method_response) {
  if (serialized_method_response != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  serialized_method_response_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), serialized_method_response,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientServiceMethodLegacyResponse.serialized_method_response)
}

// -------------------------------------------------------------------

// CMsgClientUIMode

// optional uint32 uimode = 1;
inline bool CMsgClientUIMode::_internal_has_uimode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUIMode::has_uimode() const {
  return _internal_has_uimode();
}
inline void CMsgClientUIMode::clear_uimode() {
  uimode_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUIMode::_internal_uimode() const {
  return uimode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUIMode::uimode() const {
  // @@protoc_insertion_point(field_get:CMsgClientUIMode.uimode)
  return _internal_uimode();
}
inline void CMsgClientUIMode::_internal_set_uimode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  uimode_ = value;
}
inline void CMsgClientUIMode::set_uimode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uimode(value);
  // @@protoc_insertion_point(field_set:CMsgClientUIMode.uimode)
}

// optional uint32 chat_mode = 2;
inline bool CMsgClientUIMode::_internal_has_chat_mode() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUIMode::has_chat_mode() const {
  return _internal_has_chat_mode();
}
inline void CMsgClientUIMode::clear_chat_mode() {
  chat_mode_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUIMode::_internal_chat_mode() const {
  return chat_mode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUIMode::chat_mode() const {
  // @@protoc_insertion_point(field_get:CMsgClientUIMode.chat_mode)
  return _internal_chat_mode();
}
inline void CMsgClientUIMode::_internal_set_chat_mode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  chat_mode_ = value;
}
inline void CMsgClientUIMode::set_chat_mode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_chat_mode(value);
  // @@protoc_insertion_point(field_set:CMsgClientUIMode.chat_mode)
}

// -------------------------------------------------------------------

// CMsgClientVanityURLChangedNotification

// optional string vanity_url = 1;
inline bool CMsgClientVanityURLChangedNotification::_internal_has_vanity_url() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientVanityURLChangedNotification::has_vanity_url() const {
  return _internal_has_vanity_url();
}
inline void CMsgClientVanityURLChangedNotification::clear_vanity_url() {
  vanity_url_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientVanityURLChangedNotification::vanity_url() const {
  // @@protoc_insertion_point(field_get:CMsgClientVanityURLChangedNotification.vanity_url)
  return _internal_vanity_url();
}
inline void CMsgClientVanityURLChangedNotification::set_vanity_url(const std::string& value) {
  _internal_set_vanity_url(value);
  // @@protoc_insertion_point(field_set:CMsgClientVanityURLChangedNotification.vanity_url)
}
inline std::string* CMsgClientVanityURLChangedNotification::mutable_vanity_url() {
  // @@protoc_insertion_point(field_mutable:CMsgClientVanityURLChangedNotification.vanity_url)
  return _internal_mutable_vanity_url();
}
inline const std::string& CMsgClientVanityURLChangedNotification::_internal_vanity_url() const {
  return vanity_url_.Get();
}
inline void CMsgClientVanityURLChangedNotification::_internal_set_vanity_url(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  vanity_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientVanityURLChangedNotification::set_vanity_url(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  vanity_url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientVanityURLChangedNotification.vanity_url)
}
inline void CMsgClientVanityURLChangedNotification::set_vanity_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  vanity_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientVanityURLChangedNotification.vanity_url)
}
inline void CMsgClientVanityURLChangedNotification::set_vanity_url(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  vanity_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientVanityURLChangedNotification.vanity_url)
}
inline std::string* CMsgClientVanityURLChangedNotification::_internal_mutable_vanity_url() {
  _has_bits_[0] |= 0x00000001u;
  return vanity_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientVanityURLChangedNotification::release_vanity_url() {
  // @@protoc_insertion_point(field_release:CMsgClientVanityURLChangedNotification.vanity_url)
  if (!_internal_has_vanity_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return vanity_url_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientVanityURLChangedNotification::set_allocated_vanity_url(std::string* vanity_url) {
  if (vanity_url != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  vanity_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), vanity_url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientVanityURLChangedNotification.vanity_url)
}

// -------------------------------------------------------------------

// CMsgClientAuthorizeLocalDeviceRequest

// optional string device_description = 1;
inline bool CMsgClientAuthorizeLocalDeviceRequest::_internal_has_device_description() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientAuthorizeLocalDeviceRequest::has_device_description() const {
  return _internal_has_device_description();
}
inline void CMsgClientAuthorizeLocalDeviceRequest::clear_device_description() {
  device_description_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientAuthorizeLocalDeviceRequest::device_description() const {
  // @@protoc_insertion_point(field_get:CMsgClientAuthorizeLocalDeviceRequest.device_description)
  return _internal_device_description();
}
inline void CMsgClientAuthorizeLocalDeviceRequest::set_device_description(const std::string& value) {
  _internal_set_device_description(value);
  // @@protoc_insertion_point(field_set:CMsgClientAuthorizeLocalDeviceRequest.device_description)
}
inline std::string* CMsgClientAuthorizeLocalDeviceRequest::mutable_device_description() {
  // @@protoc_insertion_point(field_mutable:CMsgClientAuthorizeLocalDeviceRequest.device_description)
  return _internal_mutable_device_description();
}
inline const std::string& CMsgClientAuthorizeLocalDeviceRequest::_internal_device_description() const {
  return device_description_.Get();
}
inline void CMsgClientAuthorizeLocalDeviceRequest::_internal_set_device_description(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  device_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientAuthorizeLocalDeviceRequest::set_device_description(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  device_description_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientAuthorizeLocalDeviceRequest.device_description)
}
inline void CMsgClientAuthorizeLocalDeviceRequest::set_device_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  device_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientAuthorizeLocalDeviceRequest.device_description)
}
inline void CMsgClientAuthorizeLocalDeviceRequest::set_device_description(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  device_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientAuthorizeLocalDeviceRequest.device_description)
}
inline std::string* CMsgClientAuthorizeLocalDeviceRequest::_internal_mutable_device_description() {
  _has_bits_[0] |= 0x00000001u;
  return device_description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientAuthorizeLocalDeviceRequest::release_device_description() {
  // @@protoc_insertion_point(field_release:CMsgClientAuthorizeLocalDeviceRequest.device_description)
  if (!_internal_has_device_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return device_description_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientAuthorizeLocalDeviceRequest::set_allocated_device_description(std::string* device_description) {
  if (device_description != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  device_description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), device_description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientAuthorizeLocalDeviceRequest.device_description)
}

// optional uint32 owner_account_id = 2;
inline bool CMsgClientAuthorizeLocalDeviceRequest::_internal_has_owner_account_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientAuthorizeLocalDeviceRequest::has_owner_account_id() const {
  return _internal_has_owner_account_id();
}
inline void CMsgClientAuthorizeLocalDeviceRequest::clear_owner_account_id() {
  owner_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientAuthorizeLocalDeviceRequest::_internal_owner_account_id() const {
  return owner_account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientAuthorizeLocalDeviceRequest::owner_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientAuthorizeLocalDeviceRequest.owner_account_id)
  return _internal_owner_account_id();
}
inline void CMsgClientAuthorizeLocalDeviceRequest::_internal_set_owner_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  owner_account_id_ = value;
}
inline void CMsgClientAuthorizeLocalDeviceRequest::set_owner_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_owner_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientAuthorizeLocalDeviceRequest.owner_account_id)
}

// optional uint64 local_device_token = 3;
inline bool CMsgClientAuthorizeLocalDeviceRequest::_internal_has_local_device_token() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientAuthorizeLocalDeviceRequest::has_local_device_token() const {
  return _internal_has_local_device_token();
}
inline void CMsgClientAuthorizeLocalDeviceRequest::clear_local_device_token() {
  local_device_token_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientAuthorizeLocalDeviceRequest::_internal_local_device_token() const {
  return local_device_token_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientAuthorizeLocalDeviceRequest::local_device_token() const {
  // @@protoc_insertion_point(field_get:CMsgClientAuthorizeLocalDeviceRequest.local_device_token)
  return _internal_local_device_token();
}
inline void CMsgClientAuthorizeLocalDeviceRequest::_internal_set_local_device_token(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  local_device_token_ = value;
}
inline void CMsgClientAuthorizeLocalDeviceRequest::set_local_device_token(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_local_device_token(value);
  // @@protoc_insertion_point(field_set:CMsgClientAuthorizeLocalDeviceRequest.local_device_token)
}

// -------------------------------------------------------------------

// CMsgClientAuthorizeLocalDevice

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientAuthorizeLocalDevice::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientAuthorizeLocalDevice::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientAuthorizeLocalDevice::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientAuthorizeLocalDevice::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientAuthorizeLocalDevice::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientAuthorizeLocalDevice.eresult)
  return _internal_eresult();
}
inline void CMsgClientAuthorizeLocalDevice::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  eresult_ = value;
}
inline void CMsgClientAuthorizeLocalDevice::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientAuthorizeLocalDevice.eresult)
}

// optional uint32 owner_account_id = 2;
inline bool CMsgClientAuthorizeLocalDevice::_internal_has_owner_account_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientAuthorizeLocalDevice::has_owner_account_id() const {
  return _internal_has_owner_account_id();
}
inline void CMsgClientAuthorizeLocalDevice::clear_owner_account_id() {
  owner_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientAuthorizeLocalDevice::_internal_owner_account_id() const {
  return owner_account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientAuthorizeLocalDevice::owner_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientAuthorizeLocalDevice.owner_account_id)
  return _internal_owner_account_id();
}
inline void CMsgClientAuthorizeLocalDevice::_internal_set_owner_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  owner_account_id_ = value;
}
inline void CMsgClientAuthorizeLocalDevice::set_owner_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_owner_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientAuthorizeLocalDevice.owner_account_id)
}

// optional uint64 authed_device_token = 3;
inline bool CMsgClientAuthorizeLocalDevice::_internal_has_authed_device_token() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientAuthorizeLocalDevice::has_authed_device_token() const {
  return _internal_has_authed_device_token();
}
inline void CMsgClientAuthorizeLocalDevice::clear_authed_device_token() {
  authed_device_token_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientAuthorizeLocalDevice::_internal_authed_device_token() const {
  return authed_device_token_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientAuthorizeLocalDevice::authed_device_token() const {
  // @@protoc_insertion_point(field_get:CMsgClientAuthorizeLocalDevice.authed_device_token)
  return _internal_authed_device_token();
}
inline void CMsgClientAuthorizeLocalDevice::_internal_set_authed_device_token(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  authed_device_token_ = value;
}
inline void CMsgClientAuthorizeLocalDevice::set_authed_device_token(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_authed_device_token(value);
  // @@protoc_insertion_point(field_set:CMsgClientAuthorizeLocalDevice.authed_device_token)
}

// -------------------------------------------------------------------

// CMsgClientAuthorizeLocalDeviceNotification

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientAuthorizeLocalDeviceNotification::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientAuthorizeLocalDeviceNotification::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientAuthorizeLocalDeviceNotification::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientAuthorizeLocalDeviceNotification::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientAuthorizeLocalDeviceNotification::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientAuthorizeLocalDeviceNotification.eresult)
  return _internal_eresult();
}
inline void CMsgClientAuthorizeLocalDeviceNotification::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  eresult_ = value;
}
inline void CMsgClientAuthorizeLocalDeviceNotification::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientAuthorizeLocalDeviceNotification.eresult)
}

// optional uint32 owner_account_id = 2;
inline bool CMsgClientAuthorizeLocalDeviceNotification::_internal_has_owner_account_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientAuthorizeLocalDeviceNotification::has_owner_account_id() const {
  return _internal_has_owner_account_id();
}
inline void CMsgClientAuthorizeLocalDeviceNotification::clear_owner_account_id() {
  owner_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientAuthorizeLocalDeviceNotification::_internal_owner_account_id() const {
  return owner_account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientAuthorizeLocalDeviceNotification::owner_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientAuthorizeLocalDeviceNotification.owner_account_id)
  return _internal_owner_account_id();
}
inline void CMsgClientAuthorizeLocalDeviceNotification::_internal_set_owner_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  owner_account_id_ = value;
}
inline void CMsgClientAuthorizeLocalDeviceNotification::set_owner_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_owner_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientAuthorizeLocalDeviceNotification.owner_account_id)
}

// optional uint64 local_device_token = 3;
inline bool CMsgClientAuthorizeLocalDeviceNotification::_internal_has_local_device_token() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientAuthorizeLocalDeviceNotification::has_local_device_token() const {
  return _internal_has_local_device_token();
}
inline void CMsgClientAuthorizeLocalDeviceNotification::clear_local_device_token() {
  local_device_token_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientAuthorizeLocalDeviceNotification::_internal_local_device_token() const {
  return local_device_token_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientAuthorizeLocalDeviceNotification::local_device_token() const {
  // @@protoc_insertion_point(field_get:CMsgClientAuthorizeLocalDeviceNotification.local_device_token)
  return _internal_local_device_token();
}
inline void CMsgClientAuthorizeLocalDeviceNotification::_internal_set_local_device_token(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  local_device_token_ = value;
}
inline void CMsgClientAuthorizeLocalDeviceNotification::set_local_device_token(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_local_device_token(value);
  // @@protoc_insertion_point(field_set:CMsgClientAuthorizeLocalDeviceNotification.local_device_token)
}

// -------------------------------------------------------------------

// CMsgClientDeauthorizeDeviceRequest

// optional uint32 deauthorization_account_id = 1;
inline bool CMsgClientDeauthorizeDeviceRequest::_internal_has_deauthorization_account_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientDeauthorizeDeviceRequest::has_deauthorization_account_id() const {
  return _internal_has_deauthorization_account_id();
}
inline void CMsgClientDeauthorizeDeviceRequest::clear_deauthorization_account_id() {
  deauthorization_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientDeauthorizeDeviceRequest::_internal_deauthorization_account_id() const {
  return deauthorization_account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientDeauthorizeDeviceRequest::deauthorization_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientDeauthorizeDeviceRequest.deauthorization_account_id)
  return _internal_deauthorization_account_id();
}
inline void CMsgClientDeauthorizeDeviceRequest::_internal_set_deauthorization_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  deauthorization_account_id_ = value;
}
inline void CMsgClientDeauthorizeDeviceRequest::set_deauthorization_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_deauthorization_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientDeauthorizeDeviceRequest.deauthorization_account_id)
}

// optional uint64 deauthorization_device_token = 2;
inline bool CMsgClientDeauthorizeDeviceRequest::_internal_has_deauthorization_device_token() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientDeauthorizeDeviceRequest::has_deauthorization_device_token() const {
  return _internal_has_deauthorization_device_token();
}
inline void CMsgClientDeauthorizeDeviceRequest::clear_deauthorization_device_token() {
  deauthorization_device_token_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientDeauthorizeDeviceRequest::_internal_deauthorization_device_token() const {
  return deauthorization_device_token_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientDeauthorizeDeviceRequest::deauthorization_device_token() const {
  // @@protoc_insertion_point(field_get:CMsgClientDeauthorizeDeviceRequest.deauthorization_device_token)
  return _internal_deauthorization_device_token();
}
inline void CMsgClientDeauthorizeDeviceRequest::_internal_set_deauthorization_device_token(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  deauthorization_device_token_ = value;
}
inline void CMsgClientDeauthorizeDeviceRequest::set_deauthorization_device_token(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_deauthorization_device_token(value);
  // @@protoc_insertion_point(field_set:CMsgClientDeauthorizeDeviceRequest.deauthorization_device_token)
}

// -------------------------------------------------------------------

// CMsgClientDeauthorizeDevice

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientDeauthorizeDevice::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientDeauthorizeDevice::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientDeauthorizeDevice::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientDeauthorizeDevice::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientDeauthorizeDevice::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientDeauthorizeDevice.eresult)
  return _internal_eresult();
}
inline void CMsgClientDeauthorizeDevice::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  eresult_ = value;
}
inline void CMsgClientDeauthorizeDevice::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientDeauthorizeDevice.eresult)
}

// optional uint32 deauthorization_account_id = 2;
inline bool CMsgClientDeauthorizeDevice::_internal_has_deauthorization_account_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientDeauthorizeDevice::has_deauthorization_account_id() const {
  return _internal_has_deauthorization_account_id();
}
inline void CMsgClientDeauthorizeDevice::clear_deauthorization_account_id() {
  deauthorization_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientDeauthorizeDevice::_internal_deauthorization_account_id() const {
  return deauthorization_account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientDeauthorizeDevice::deauthorization_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientDeauthorizeDevice.deauthorization_account_id)
  return _internal_deauthorization_account_id();
}
inline void CMsgClientDeauthorizeDevice::_internal_set_deauthorization_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  deauthorization_account_id_ = value;
}
inline void CMsgClientDeauthorizeDevice::set_deauthorization_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_deauthorization_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientDeauthorizeDevice.deauthorization_account_id)
}

// -------------------------------------------------------------------

// CMsgClientUseLocalDeviceAuthorizations_DeviceToken

// optional uint32 owner_account_id = 1;
inline bool CMsgClientUseLocalDeviceAuthorizations_DeviceToken::_internal_has_owner_account_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUseLocalDeviceAuthorizations_DeviceToken::has_owner_account_id() const {
  return _internal_has_owner_account_id();
}
inline void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::clear_owner_account_id() {
  owner_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUseLocalDeviceAuthorizations_DeviceToken::_internal_owner_account_id() const {
  return owner_account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUseLocalDeviceAuthorizations_DeviceToken::owner_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientUseLocalDeviceAuthorizations.DeviceToken.owner_account_id)
  return _internal_owner_account_id();
}
inline void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::_internal_set_owner_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  owner_account_id_ = value;
}
inline void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::set_owner_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_owner_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientUseLocalDeviceAuthorizations.DeviceToken.owner_account_id)
}

// optional uint64 token_id = 2;
inline bool CMsgClientUseLocalDeviceAuthorizations_DeviceToken::_internal_has_token_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUseLocalDeviceAuthorizations_DeviceToken::has_token_id() const {
  return _internal_has_token_id();
}
inline void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::clear_token_id() {
  token_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUseLocalDeviceAuthorizations_DeviceToken::_internal_token_id() const {
  return token_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUseLocalDeviceAuthorizations_DeviceToken::token_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientUseLocalDeviceAuthorizations.DeviceToken.token_id)
  return _internal_token_id();
}
inline void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::_internal_set_token_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  token_id_ = value;
}
inline void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::set_token_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_token_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientUseLocalDeviceAuthorizations.DeviceToken.token_id)
}

// -------------------------------------------------------------------

// CMsgClientUseLocalDeviceAuthorizations

// repeated uint32 authorization_account_id = 1;
inline int CMsgClientUseLocalDeviceAuthorizations::_internal_authorization_account_id_size() const {
  return authorization_account_id_.size();
}
inline int CMsgClientUseLocalDeviceAuthorizations::authorization_account_id_size() const {
  return _internal_authorization_account_id_size();
}
inline void CMsgClientUseLocalDeviceAuthorizations::clear_authorization_account_id() {
  authorization_account_id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUseLocalDeviceAuthorizations::_internal_authorization_account_id(int index) const {
  return authorization_account_id_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUseLocalDeviceAuthorizations::authorization_account_id(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientUseLocalDeviceAuthorizations.authorization_account_id)
  return _internal_authorization_account_id(index);
}
inline void CMsgClientUseLocalDeviceAuthorizations::set_authorization_account_id(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  authorization_account_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientUseLocalDeviceAuthorizations.authorization_account_id)
}
inline void CMsgClientUseLocalDeviceAuthorizations::_internal_add_authorization_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  authorization_account_id_.Add(value);
}
inline void CMsgClientUseLocalDeviceAuthorizations::add_authorization_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_authorization_account_id(value);
  // @@protoc_insertion_point(field_add:CMsgClientUseLocalDeviceAuthorizations.authorization_account_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgClientUseLocalDeviceAuthorizations::_internal_authorization_account_id() const {
  return authorization_account_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgClientUseLocalDeviceAuthorizations::authorization_account_id() const {
  // @@protoc_insertion_point(field_list:CMsgClientUseLocalDeviceAuthorizations.authorization_account_id)
  return _internal_authorization_account_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgClientUseLocalDeviceAuthorizations::_internal_mutable_authorization_account_id() {
  return &authorization_account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgClientUseLocalDeviceAuthorizations::mutable_authorization_account_id() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientUseLocalDeviceAuthorizations.authorization_account_id)
  return _internal_mutable_authorization_account_id();
}

// repeated .CMsgClientUseLocalDeviceAuthorizations.DeviceToken device_tokens = 2;
inline int CMsgClientUseLocalDeviceAuthorizations::_internal_device_tokens_size() const {
  return device_tokens_.size();
}
inline int CMsgClientUseLocalDeviceAuthorizations::device_tokens_size() const {
  return _internal_device_tokens_size();
}
inline void CMsgClientUseLocalDeviceAuthorizations::clear_device_tokens() {
  device_tokens_.Clear();
}
inline ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken* CMsgClientUseLocalDeviceAuthorizations::mutable_device_tokens(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientUseLocalDeviceAuthorizations.device_tokens)
  return device_tokens_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken >*
CMsgClientUseLocalDeviceAuthorizations::mutable_device_tokens() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientUseLocalDeviceAuthorizations.device_tokens)
  return &device_tokens_;
}
inline const ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken& CMsgClientUseLocalDeviceAuthorizations::_internal_device_tokens(int index) const {
  return device_tokens_.Get(index);
}
inline const ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken& CMsgClientUseLocalDeviceAuthorizations::device_tokens(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientUseLocalDeviceAuthorizations.device_tokens)
  return _internal_device_tokens(index);
}
inline ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken* CMsgClientUseLocalDeviceAuthorizations::_internal_add_device_tokens() {
  return device_tokens_.Add();
}
inline ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken* CMsgClientUseLocalDeviceAuthorizations::add_device_tokens() {
  // @@protoc_insertion_point(field_add:CMsgClientUseLocalDeviceAuthorizations.device_tokens)
  return _internal_add_device_tokens();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUseLocalDeviceAuthorizations_DeviceToken >&
CMsgClientUseLocalDeviceAuthorizations::device_tokens() const {
  // @@protoc_insertion_point(field_list:CMsgClientUseLocalDeviceAuthorizations.device_tokens)
  return device_tokens_;
}

// -------------------------------------------------------------------

// CMsgClientGetAuthorizedDevices

// -------------------------------------------------------------------

// CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice

// optional uint64 auth_device_token = 1;
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_internal_has_auth_device_token() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::has_auth_device_token() const {
  return _internal_has_auth_device_token();
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_auth_device_token() {
  auth_device_token_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_internal_auth_device_token() const {
  return auth_device_token_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::auth_device_token() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.auth_device_token)
  return _internal_auth_device_token();
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_internal_set_auth_device_token(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  auth_device_token_ = value;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_auth_device_token(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_auth_device_token(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.auth_device_token)
}

// optional string device_name = 2;
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_internal_has_device_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::has_device_name() const {
  return _internal_has_device_name();
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_device_name() {
  device_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::device_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name)
  return _internal_device_name();
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_device_name(const std::string& value) {
  _internal_set_device_name(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name)
}
inline std::string* CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::mutable_device_name() {
  // @@protoc_insertion_point(field_mutable:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name)
  return _internal_mutable_device_name();
}
inline const std::string& CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_internal_device_name() const {
  return device_name_.Get();
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_internal_set_device_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  device_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_device_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  device_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name)
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_device_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  device_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name)
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_device_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  device_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name)
}
inline std::string* CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_internal_mutable_device_name() {
  _has_bits_[0] |= 0x00000001u;
  return device_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::release_device_name() {
  // @@protoc_insertion_point(field_release:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name)
  if (!_internal_has_device_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return device_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_allocated_device_name(std::string* device_name) {
  if (device_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  device_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), device_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name)
}

// optional uint32 last_access_time = 3;
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_internal_has_last_access_time() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::has_last_access_time() const {
  return _internal_has_last_access_time();
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_last_access_time() {
  last_access_time_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_internal_last_access_time() const {
  return last_access_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::last_access_time() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.last_access_time)
  return _internal_last_access_time();
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_internal_set_last_access_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  last_access_time_ = value;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_last_access_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_access_time(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.last_access_time)
}

// optional uint32 borrower_id = 4;
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_internal_has_borrower_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::has_borrower_id() const {
  return _internal_has_borrower_id();
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_borrower_id() {
  borrower_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_internal_borrower_id() const {
  return borrower_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::borrower_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.borrower_id)
  return _internal_borrower_id();
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_internal_set_borrower_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  borrower_id_ = value;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_borrower_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_borrower_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.borrower_id)
}

// optional bool is_pending = 5;
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_internal_has_is_pending() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::has_is_pending() const {
  return _internal_has_is_pending();
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_is_pending() {
  is_pending_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_internal_is_pending() const {
  return is_pending_;
}
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::is_pending() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.is_pending)
  return _internal_is_pending();
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_internal_set_is_pending(bool value) {
  _has_bits_[0] |= 0x00000010u;
  is_pending_ = value;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_is_pending(bool value) {
  _internal_set_is_pending(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.is_pending)
}

// optional uint32 app_played = 6;
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_internal_has_app_played() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::has_app_played() const {
  return _internal_has_app_played();
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_app_played() {
  app_played_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_internal_app_played() const {
  return app_played_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::app_played() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.app_played)
  return _internal_app_played();
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::_internal_set_app_played(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  app_played_ = value;
}
inline void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_app_played(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_played(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.app_played)
}

// -------------------------------------------------------------------

// CMsgClientGetAuthorizedDevicesResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientGetAuthorizedDevicesResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientGetAuthorizedDevicesResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientGetAuthorizedDevicesResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientGetAuthorizedDevicesResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientGetAuthorizedDevicesResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetAuthorizedDevicesResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientGetAuthorizedDevicesResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
}
inline void CMsgClientGetAuthorizedDevicesResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetAuthorizedDevicesResponse.eresult)
}

// repeated .CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice authorized_device = 2;
inline int CMsgClientGetAuthorizedDevicesResponse::_internal_authorized_device_size() const {
  return authorized_device_.size();
}
inline int CMsgClientGetAuthorizedDevicesResponse::authorized_device_size() const {
  return _internal_authorized_device_size();
}
inline void CMsgClientGetAuthorizedDevicesResponse::clear_authorized_device() {
  authorized_device_.Clear();
}
inline ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* CMsgClientGetAuthorizedDevicesResponse::mutable_authorized_device(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientGetAuthorizedDevicesResponse.authorized_device)
  return authorized_device_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice >*
CMsgClientGetAuthorizedDevicesResponse::mutable_authorized_device() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientGetAuthorizedDevicesResponse.authorized_device)
  return &authorized_device_;
}
inline const ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& CMsgClientGetAuthorizedDevicesResponse::_internal_authorized_device(int index) const {
  return authorized_device_.Get(index);
}
inline const ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& CMsgClientGetAuthorizedDevicesResponse::authorized_device(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientGetAuthorizedDevicesResponse.authorized_device)
  return _internal_authorized_device(index);
}
inline ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* CMsgClientGetAuthorizedDevicesResponse::_internal_add_authorized_device() {
  return authorized_device_.Add();
}
inline ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* CMsgClientGetAuthorizedDevicesResponse::add_authorized_device() {
  // @@protoc_insertion_point(field_add:CMsgClientGetAuthorizedDevicesResponse.authorized_device)
  return _internal_add_authorized_device();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice >&
CMsgClientGetAuthorizedDevicesResponse::authorized_device() const {
  // @@protoc_insertion_point(field_list:CMsgClientGetAuthorizedDevicesResponse.authorized_device)
  return authorized_device_;
}

// -------------------------------------------------------------------

// CMsgClientSharedLibraryLockStatus_LockedLibrary

// optional uint32 owner_id = 1;
inline bool CMsgClientSharedLibraryLockStatus_LockedLibrary::_internal_has_owner_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientSharedLibraryLockStatus_LockedLibrary::has_owner_id() const {
  return _internal_has_owner_id();
}
inline void CMsgClientSharedLibraryLockStatus_LockedLibrary::clear_owner_id() {
  owner_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientSharedLibraryLockStatus_LockedLibrary::_internal_owner_id() const {
  return owner_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientSharedLibraryLockStatus_LockedLibrary::owner_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientSharedLibraryLockStatus.LockedLibrary.owner_id)
  return _internal_owner_id();
}
inline void CMsgClientSharedLibraryLockStatus_LockedLibrary::_internal_set_owner_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  owner_id_ = value;
}
inline void CMsgClientSharedLibraryLockStatus_LockedLibrary::set_owner_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_owner_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientSharedLibraryLockStatus.LockedLibrary.owner_id)
}

// optional uint32 locked_by = 2;
inline bool CMsgClientSharedLibraryLockStatus_LockedLibrary::_internal_has_locked_by() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientSharedLibraryLockStatus_LockedLibrary::has_locked_by() const {
  return _internal_has_locked_by();
}
inline void CMsgClientSharedLibraryLockStatus_LockedLibrary::clear_locked_by() {
  locked_by_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientSharedLibraryLockStatus_LockedLibrary::_internal_locked_by() const {
  return locked_by_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientSharedLibraryLockStatus_LockedLibrary::locked_by() const {
  // @@protoc_insertion_point(field_get:CMsgClientSharedLibraryLockStatus.LockedLibrary.locked_by)
  return _internal_locked_by();
}
inline void CMsgClientSharedLibraryLockStatus_LockedLibrary::_internal_set_locked_by(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  locked_by_ = value;
}
inline void CMsgClientSharedLibraryLockStatus_LockedLibrary::set_locked_by(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_locked_by(value);
  // @@protoc_insertion_point(field_set:CMsgClientSharedLibraryLockStatus.LockedLibrary.locked_by)
}

// -------------------------------------------------------------------

// CMsgClientSharedLibraryLockStatus

// repeated .CMsgClientSharedLibraryLockStatus.LockedLibrary locked_library = 1;
inline int CMsgClientSharedLibraryLockStatus::_internal_locked_library_size() const {
  return locked_library_.size();
}
inline int CMsgClientSharedLibraryLockStatus::locked_library_size() const {
  return _internal_locked_library_size();
}
inline void CMsgClientSharedLibraryLockStatus::clear_locked_library() {
  locked_library_.Clear();
}
inline ::CMsgClientSharedLibraryLockStatus_LockedLibrary* CMsgClientSharedLibraryLockStatus::mutable_locked_library(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientSharedLibraryLockStatus.locked_library)
  return locked_library_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientSharedLibraryLockStatus_LockedLibrary >*
CMsgClientSharedLibraryLockStatus::mutable_locked_library() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientSharedLibraryLockStatus.locked_library)
  return &locked_library_;
}
inline const ::CMsgClientSharedLibraryLockStatus_LockedLibrary& CMsgClientSharedLibraryLockStatus::_internal_locked_library(int index) const {
  return locked_library_.Get(index);
}
inline const ::CMsgClientSharedLibraryLockStatus_LockedLibrary& CMsgClientSharedLibraryLockStatus::locked_library(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientSharedLibraryLockStatus.locked_library)
  return _internal_locked_library(index);
}
inline ::CMsgClientSharedLibraryLockStatus_LockedLibrary* CMsgClientSharedLibraryLockStatus::_internal_add_locked_library() {
  return locked_library_.Add();
}
inline ::CMsgClientSharedLibraryLockStatus_LockedLibrary* CMsgClientSharedLibraryLockStatus::add_locked_library() {
  // @@protoc_insertion_point(field_add:CMsgClientSharedLibraryLockStatus.locked_library)
  return _internal_add_locked_library();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientSharedLibraryLockStatus_LockedLibrary >&
CMsgClientSharedLibraryLockStatus::locked_library() const {
  // @@protoc_insertion_point(field_list:CMsgClientSharedLibraryLockStatus.locked_library)
  return locked_library_;
}

// optional uint32 own_library_locked_by = 2;
inline bool CMsgClientSharedLibraryLockStatus::_internal_has_own_library_locked_by() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientSharedLibraryLockStatus::has_own_library_locked_by() const {
  return _internal_has_own_library_locked_by();
}
inline void CMsgClientSharedLibraryLockStatus::clear_own_library_locked_by() {
  own_library_locked_by_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientSharedLibraryLockStatus::_internal_own_library_locked_by() const {
  return own_library_locked_by_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientSharedLibraryLockStatus::own_library_locked_by() const {
  // @@protoc_insertion_point(field_get:CMsgClientSharedLibraryLockStatus.own_library_locked_by)
  return _internal_own_library_locked_by();
}
inline void CMsgClientSharedLibraryLockStatus::_internal_set_own_library_locked_by(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  own_library_locked_by_ = value;
}
inline void CMsgClientSharedLibraryLockStatus::set_own_library_locked_by(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_own_library_locked_by(value);
  // @@protoc_insertion_point(field_set:CMsgClientSharedLibraryLockStatus.own_library_locked_by)
}

// -------------------------------------------------------------------

// CMsgClientSharedLibraryStopPlaying_StopApp

// optional uint32 app_id = 1;
inline bool CMsgClientSharedLibraryStopPlaying_StopApp::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientSharedLibraryStopPlaying_StopApp::has_app_id() const {
  return _internal_has_app_id();
}
inline void CMsgClientSharedLibraryStopPlaying_StopApp::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientSharedLibraryStopPlaying_StopApp::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientSharedLibraryStopPlaying_StopApp::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientSharedLibraryStopPlaying.StopApp.app_id)
  return _internal_app_id();
}
inline void CMsgClientSharedLibraryStopPlaying_StopApp::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  app_id_ = value;
}
inline void CMsgClientSharedLibraryStopPlaying_StopApp::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientSharedLibraryStopPlaying.StopApp.app_id)
}

// optional uint32 owner_id = 2;
inline bool CMsgClientSharedLibraryStopPlaying_StopApp::_internal_has_owner_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientSharedLibraryStopPlaying_StopApp::has_owner_id() const {
  return _internal_has_owner_id();
}
inline void CMsgClientSharedLibraryStopPlaying_StopApp::clear_owner_id() {
  owner_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientSharedLibraryStopPlaying_StopApp::_internal_owner_id() const {
  return owner_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientSharedLibraryStopPlaying_StopApp::owner_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientSharedLibraryStopPlaying.StopApp.owner_id)
  return _internal_owner_id();
}
inline void CMsgClientSharedLibraryStopPlaying_StopApp::_internal_set_owner_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  owner_id_ = value;
}
inline void CMsgClientSharedLibraryStopPlaying_StopApp::set_owner_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_owner_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientSharedLibraryStopPlaying.StopApp.owner_id)
}

// -------------------------------------------------------------------

// CMsgClientSharedLibraryStopPlaying

// optional int32 seconds_left = 1;
inline bool CMsgClientSharedLibraryStopPlaying::_internal_has_seconds_left() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientSharedLibraryStopPlaying::has_seconds_left() const {
  return _internal_has_seconds_left();
}
inline void CMsgClientSharedLibraryStopPlaying::clear_seconds_left() {
  seconds_left_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientSharedLibraryStopPlaying::_internal_seconds_left() const {
  return seconds_left_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientSharedLibraryStopPlaying::seconds_left() const {
  // @@protoc_insertion_point(field_get:CMsgClientSharedLibraryStopPlaying.seconds_left)
  return _internal_seconds_left();
}
inline void CMsgClientSharedLibraryStopPlaying::_internal_set_seconds_left(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  seconds_left_ = value;
}
inline void CMsgClientSharedLibraryStopPlaying::set_seconds_left(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_seconds_left(value);
  // @@protoc_insertion_point(field_set:CMsgClientSharedLibraryStopPlaying.seconds_left)
}

// repeated .CMsgClientSharedLibraryStopPlaying.StopApp stop_apps = 2;
inline int CMsgClientSharedLibraryStopPlaying::_internal_stop_apps_size() const {
  return stop_apps_.size();
}
inline int CMsgClientSharedLibraryStopPlaying::stop_apps_size() const {
  return _internal_stop_apps_size();
}
inline void CMsgClientSharedLibraryStopPlaying::clear_stop_apps() {
  stop_apps_.Clear();
}
inline ::CMsgClientSharedLibraryStopPlaying_StopApp* CMsgClientSharedLibraryStopPlaying::mutable_stop_apps(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientSharedLibraryStopPlaying.stop_apps)
  return stop_apps_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientSharedLibraryStopPlaying_StopApp >*
CMsgClientSharedLibraryStopPlaying::mutable_stop_apps() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientSharedLibraryStopPlaying.stop_apps)
  return &stop_apps_;
}
inline const ::CMsgClientSharedLibraryStopPlaying_StopApp& CMsgClientSharedLibraryStopPlaying::_internal_stop_apps(int index) const {
  return stop_apps_.Get(index);
}
inline const ::CMsgClientSharedLibraryStopPlaying_StopApp& CMsgClientSharedLibraryStopPlaying::stop_apps(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientSharedLibraryStopPlaying.stop_apps)
  return _internal_stop_apps(index);
}
inline ::CMsgClientSharedLibraryStopPlaying_StopApp* CMsgClientSharedLibraryStopPlaying::_internal_add_stop_apps() {
  return stop_apps_.Add();
}
inline ::CMsgClientSharedLibraryStopPlaying_StopApp* CMsgClientSharedLibraryStopPlaying::add_stop_apps() {
  // @@protoc_insertion_point(field_add:CMsgClientSharedLibraryStopPlaying.stop_apps)
  return _internal_add_stop_apps();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientSharedLibraryStopPlaying_StopApp >&
CMsgClientSharedLibraryStopPlaying::stop_apps() const {
  // @@protoc_insertion_point(field_list:CMsgClientSharedLibraryStopPlaying.stop_apps)
  return stop_apps_;
}

// -------------------------------------------------------------------

// CMsgClientServiceCall

// optional bytes sysid_routing = 1;
inline bool CMsgClientServiceCall::_internal_has_sysid_routing() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientServiceCall::has_sysid_routing() const {
  return _internal_has_sysid_routing();
}
inline void CMsgClientServiceCall::clear_sysid_routing() {
  sysid_routing_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientServiceCall::sysid_routing() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCall.sysid_routing)
  return _internal_sysid_routing();
}
inline void CMsgClientServiceCall::set_sysid_routing(const std::string& value) {
  _internal_set_sysid_routing(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCall.sysid_routing)
}
inline std::string* CMsgClientServiceCall::mutable_sysid_routing() {
  // @@protoc_insertion_point(field_mutable:CMsgClientServiceCall.sysid_routing)
  return _internal_mutable_sysid_routing();
}
inline const std::string& CMsgClientServiceCall::_internal_sysid_routing() const {
  return sysid_routing_.Get();
}
inline void CMsgClientServiceCall::_internal_set_sysid_routing(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  sysid_routing_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientServiceCall::set_sysid_routing(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  sysid_routing_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientServiceCall.sysid_routing)
}
inline void CMsgClientServiceCall::set_sysid_routing(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  sysid_routing_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientServiceCall.sysid_routing)
}
inline void CMsgClientServiceCall::set_sysid_routing(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  sysid_routing_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientServiceCall.sysid_routing)
}
inline std::string* CMsgClientServiceCall::_internal_mutable_sysid_routing() {
  _has_bits_[0] |= 0x00000001u;
  return sysid_routing_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientServiceCall::release_sysid_routing() {
  // @@protoc_insertion_point(field_release:CMsgClientServiceCall.sysid_routing)
  if (!_internal_has_sysid_routing()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return sysid_routing_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientServiceCall::set_allocated_sysid_routing(std::string* sysid_routing) {
  if (sysid_routing != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  sysid_routing_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sysid_routing,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientServiceCall.sysid_routing)
}

// optional uint32 call_handle = 2;
inline bool CMsgClientServiceCall::_internal_has_call_handle() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientServiceCall::has_call_handle() const {
  return _internal_has_call_handle();
}
inline void CMsgClientServiceCall::clear_call_handle() {
  call_handle_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCall::_internal_call_handle() const {
  return call_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCall::call_handle() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCall.call_handle)
  return _internal_call_handle();
}
inline void CMsgClientServiceCall::_internal_set_call_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  call_handle_ = value;
}
inline void CMsgClientServiceCall::set_call_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_call_handle(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCall.call_handle)
}

// optional uint32 module_crc = 3;
inline bool CMsgClientServiceCall::_internal_has_module_crc() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientServiceCall::has_module_crc() const {
  return _internal_has_module_crc();
}
inline void CMsgClientServiceCall::clear_module_crc() {
  module_crc_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCall::_internal_module_crc() const {
  return module_crc_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCall::module_crc() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCall.module_crc)
  return _internal_module_crc();
}
inline void CMsgClientServiceCall::_internal_set_module_crc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  module_crc_ = value;
}
inline void CMsgClientServiceCall::set_module_crc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_module_crc(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCall.module_crc)
}

// optional bytes module_hash = 4;
inline bool CMsgClientServiceCall::_internal_has_module_hash() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientServiceCall::has_module_hash() const {
  return _internal_has_module_hash();
}
inline void CMsgClientServiceCall::clear_module_hash() {
  module_hash_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientServiceCall::module_hash() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCall.module_hash)
  return _internal_module_hash();
}
inline void CMsgClientServiceCall::set_module_hash(const std::string& value) {
  _internal_set_module_hash(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCall.module_hash)
}
inline std::string* CMsgClientServiceCall::mutable_module_hash() {
  // @@protoc_insertion_point(field_mutable:CMsgClientServiceCall.module_hash)
  return _internal_mutable_module_hash();
}
inline const std::string& CMsgClientServiceCall::_internal_module_hash() const {
  return module_hash_.Get();
}
inline void CMsgClientServiceCall::_internal_set_module_hash(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  module_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientServiceCall::set_module_hash(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  module_hash_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientServiceCall.module_hash)
}
inline void CMsgClientServiceCall::set_module_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  module_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientServiceCall.module_hash)
}
inline void CMsgClientServiceCall::set_module_hash(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  module_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientServiceCall.module_hash)
}
inline std::string* CMsgClientServiceCall::_internal_mutable_module_hash() {
  _has_bits_[0] |= 0x00000002u;
  return module_hash_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientServiceCall::release_module_hash() {
  // @@protoc_insertion_point(field_release:CMsgClientServiceCall.module_hash)
  if (!_internal_has_module_hash()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return module_hash_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientServiceCall::set_allocated_module_hash(std::string* module_hash) {
  if (module_hash != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  module_hash_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), module_hash,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientServiceCall.module_hash)
}

// optional uint32 function_id = 5;
inline bool CMsgClientServiceCall::_internal_has_function_id() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientServiceCall::has_function_id() const {
  return _internal_has_function_id();
}
inline void CMsgClientServiceCall::clear_function_id() {
  function_id_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCall::_internal_function_id() const {
  return function_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCall::function_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCall.function_id)
  return _internal_function_id();
}
inline void CMsgClientServiceCall::_internal_set_function_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  function_id_ = value;
}
inline void CMsgClientServiceCall::set_function_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_function_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCall.function_id)
}

// optional uint32 cub_output_max = 6;
inline bool CMsgClientServiceCall::_internal_has_cub_output_max() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientServiceCall::has_cub_output_max() const {
  return _internal_has_cub_output_max();
}
inline void CMsgClientServiceCall::clear_cub_output_max() {
  cub_output_max_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCall::_internal_cub_output_max() const {
  return cub_output_max_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCall::cub_output_max() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCall.cub_output_max)
  return _internal_cub_output_max();
}
inline void CMsgClientServiceCall::_internal_set_cub_output_max(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  cub_output_max_ = value;
}
inline void CMsgClientServiceCall::set_cub_output_max(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cub_output_max(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCall.cub_output_max)
}

// optional uint32 flags = 7;
inline bool CMsgClientServiceCall::_internal_has_flags() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgClientServiceCall::has_flags() const {
  return _internal_has_flags();
}
inline void CMsgClientServiceCall::clear_flags() {
  flags_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCall::_internal_flags() const {
  return flags_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCall::flags() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCall.flags)
  return _internal_flags();
}
inline void CMsgClientServiceCall::_internal_set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  flags_ = value;
}
inline void CMsgClientServiceCall::set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCall.flags)
}

// optional bytes callparameter = 8;
inline bool CMsgClientServiceCall::_internal_has_callparameter() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientServiceCall::has_callparameter() const {
  return _internal_has_callparameter();
}
inline void CMsgClientServiceCall::clear_callparameter() {
  callparameter_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgClientServiceCall::callparameter() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCall.callparameter)
  return _internal_callparameter();
}
inline void CMsgClientServiceCall::set_callparameter(const std::string& value) {
  _internal_set_callparameter(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCall.callparameter)
}
inline std::string* CMsgClientServiceCall::mutable_callparameter() {
  // @@protoc_insertion_point(field_mutable:CMsgClientServiceCall.callparameter)
  return _internal_mutable_callparameter();
}
inline const std::string& CMsgClientServiceCall::_internal_callparameter() const {
  return callparameter_.Get();
}
inline void CMsgClientServiceCall::_internal_set_callparameter(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  callparameter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientServiceCall::set_callparameter(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  callparameter_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientServiceCall.callparameter)
}
inline void CMsgClientServiceCall::set_callparameter(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  callparameter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientServiceCall.callparameter)
}
inline void CMsgClientServiceCall::set_callparameter(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  callparameter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientServiceCall.callparameter)
}
inline std::string* CMsgClientServiceCall::_internal_mutable_callparameter() {
  _has_bits_[0] |= 0x00000004u;
  return callparameter_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientServiceCall::release_callparameter() {
  // @@protoc_insertion_point(field_release:CMsgClientServiceCall.callparameter)
  if (!_internal_has_callparameter()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return callparameter_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientServiceCall::set_allocated_callparameter(std::string* callparameter) {
  if (callparameter != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  callparameter_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), callparameter,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientServiceCall.callparameter)
}

// optional bool ping_only = 9;
inline bool CMsgClientServiceCall::_internal_has_ping_only() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgClientServiceCall::has_ping_only() const {
  return _internal_has_ping_only();
}
inline void CMsgClientServiceCall::clear_ping_only() {
  ping_only_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CMsgClientServiceCall::_internal_ping_only() const {
  return ping_only_;
}
inline bool CMsgClientServiceCall::ping_only() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCall.ping_only)
  return _internal_ping_only();
}
inline void CMsgClientServiceCall::_internal_set_ping_only(bool value) {
  _has_bits_[0] |= 0x00000100u;
  ping_only_ = value;
}
inline void CMsgClientServiceCall::set_ping_only(bool value) {
  _internal_set_ping_only(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCall.ping_only)
}

// optional uint32 max_outstanding_calls = 10;
inline bool CMsgClientServiceCall::_internal_has_max_outstanding_calls() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgClientServiceCall::has_max_outstanding_calls() const {
  return _internal_has_max_outstanding_calls();
}
inline void CMsgClientServiceCall::clear_max_outstanding_calls() {
  max_outstanding_calls_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCall::_internal_max_outstanding_calls() const {
  return max_outstanding_calls_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCall::max_outstanding_calls() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCall.max_outstanding_calls)
  return _internal_max_outstanding_calls();
}
inline void CMsgClientServiceCall::_internal_set_max_outstanding_calls(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  max_outstanding_calls_ = value;
}
inline void CMsgClientServiceCall::set_max_outstanding_calls(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_max_outstanding_calls(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCall.max_outstanding_calls)
}

// optional uint32 app_id = 11;
inline bool CMsgClientServiceCall::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgClientServiceCall::has_app_id() const {
  return _internal_has_app_id();
}
inline void CMsgClientServiceCall::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCall::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCall::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCall.app_id)
  return _internal_app_id();
}
inline void CMsgClientServiceCall::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  app_id_ = value;
}
inline void CMsgClientServiceCall::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCall.app_id)
}

// -------------------------------------------------------------------

// CMsgClientServiceModule

// optional uint32 module_crc = 1;
inline bool CMsgClientServiceModule::_internal_has_module_crc() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientServiceModule::has_module_crc() const {
  return _internal_has_module_crc();
}
inline void CMsgClientServiceModule::clear_module_crc() {
  module_crc_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceModule::_internal_module_crc() const {
  return module_crc_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceModule::module_crc() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceModule.module_crc)
  return _internal_module_crc();
}
inline void CMsgClientServiceModule::_internal_set_module_crc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  module_crc_ = value;
}
inline void CMsgClientServiceModule::set_module_crc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_module_crc(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceModule.module_crc)
}

// optional bytes module_hash = 2;
inline bool CMsgClientServiceModule::_internal_has_module_hash() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientServiceModule::has_module_hash() const {
  return _internal_has_module_hash();
}
inline void CMsgClientServiceModule::clear_module_hash() {
  module_hash_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientServiceModule::module_hash() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceModule.module_hash)
  return _internal_module_hash();
}
inline void CMsgClientServiceModule::set_module_hash(const std::string& value) {
  _internal_set_module_hash(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceModule.module_hash)
}
inline std::string* CMsgClientServiceModule::mutable_module_hash() {
  // @@protoc_insertion_point(field_mutable:CMsgClientServiceModule.module_hash)
  return _internal_mutable_module_hash();
}
inline const std::string& CMsgClientServiceModule::_internal_module_hash() const {
  return module_hash_.Get();
}
inline void CMsgClientServiceModule::_internal_set_module_hash(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  module_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientServiceModule::set_module_hash(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  module_hash_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientServiceModule.module_hash)
}
inline void CMsgClientServiceModule::set_module_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  module_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientServiceModule.module_hash)
}
inline void CMsgClientServiceModule::set_module_hash(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  module_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientServiceModule.module_hash)
}
inline std::string* CMsgClientServiceModule::_internal_mutable_module_hash() {
  _has_bits_[0] |= 0x00000001u;
  return module_hash_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientServiceModule::release_module_hash() {
  // @@protoc_insertion_point(field_release:CMsgClientServiceModule.module_hash)
  if (!_internal_has_module_hash()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return module_hash_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientServiceModule::set_allocated_module_hash(std::string* module_hash) {
  if (module_hash != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  module_hash_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), module_hash,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientServiceModule.module_hash)
}

// optional bytes module_content = 3;
inline bool CMsgClientServiceModule::_internal_has_module_content() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientServiceModule::has_module_content() const {
  return _internal_has_module_content();
}
inline void CMsgClientServiceModule::clear_module_content() {
  module_content_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientServiceModule::module_content() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceModule.module_content)
  return _internal_module_content();
}
inline void CMsgClientServiceModule::set_module_content(const std::string& value) {
  _internal_set_module_content(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceModule.module_content)
}
inline std::string* CMsgClientServiceModule::mutable_module_content() {
  // @@protoc_insertion_point(field_mutable:CMsgClientServiceModule.module_content)
  return _internal_mutable_module_content();
}
inline const std::string& CMsgClientServiceModule::_internal_module_content() const {
  return module_content_.Get();
}
inline void CMsgClientServiceModule::_internal_set_module_content(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  module_content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientServiceModule::set_module_content(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  module_content_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientServiceModule.module_content)
}
inline void CMsgClientServiceModule::set_module_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  module_content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientServiceModule.module_content)
}
inline void CMsgClientServiceModule::set_module_content(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  module_content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientServiceModule.module_content)
}
inline std::string* CMsgClientServiceModule::_internal_mutable_module_content() {
  _has_bits_[0] |= 0x00000002u;
  return module_content_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientServiceModule::release_module_content() {
  // @@protoc_insertion_point(field_release:CMsgClientServiceModule.module_content)
  if (!_internal_has_module_content()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return module_content_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientServiceModule::set_allocated_module_content(std::string* module_content) {
  if (module_content != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  module_content_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), module_content,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientServiceModule.module_content)
}

// -------------------------------------------------------------------

// CMsgClientServiceCallResponse

// optional bytes sysid_routing = 1;
inline bool CMsgClientServiceCallResponse::_internal_has_sysid_routing() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_sysid_routing() const {
  return _internal_has_sysid_routing();
}
inline void CMsgClientServiceCallResponse::clear_sysid_routing() {
  sysid_routing_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientServiceCallResponse::sysid_routing() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.sysid_routing)
  return _internal_sysid_routing();
}
inline void CMsgClientServiceCallResponse::set_sysid_routing(const std::string& value) {
  _internal_set_sysid_routing(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.sysid_routing)
}
inline std::string* CMsgClientServiceCallResponse::mutable_sysid_routing() {
  // @@protoc_insertion_point(field_mutable:CMsgClientServiceCallResponse.sysid_routing)
  return _internal_mutable_sysid_routing();
}
inline const std::string& CMsgClientServiceCallResponse::_internal_sysid_routing() const {
  return sysid_routing_.Get();
}
inline void CMsgClientServiceCallResponse::_internal_set_sysid_routing(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  sysid_routing_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientServiceCallResponse::set_sysid_routing(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  sysid_routing_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientServiceCallResponse.sysid_routing)
}
inline void CMsgClientServiceCallResponse::set_sysid_routing(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  sysid_routing_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientServiceCallResponse.sysid_routing)
}
inline void CMsgClientServiceCallResponse::set_sysid_routing(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  sysid_routing_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientServiceCallResponse.sysid_routing)
}
inline std::string* CMsgClientServiceCallResponse::_internal_mutable_sysid_routing() {
  _has_bits_[0] |= 0x00000001u;
  return sysid_routing_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientServiceCallResponse::release_sysid_routing() {
  // @@protoc_insertion_point(field_release:CMsgClientServiceCallResponse.sysid_routing)
  if (!_internal_has_sysid_routing()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return sysid_routing_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientServiceCallResponse::set_allocated_sysid_routing(std::string* sysid_routing) {
  if (sysid_routing != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  sysid_routing_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sysid_routing,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientServiceCallResponse.sysid_routing)
}

// optional uint32 call_handle = 2;
inline bool CMsgClientServiceCallResponse::_internal_has_call_handle() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_call_handle() const {
  return _internal_has_call_handle();
}
inline void CMsgClientServiceCallResponse::clear_call_handle() {
  call_handle_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCallResponse::_internal_call_handle() const {
  return call_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCallResponse::call_handle() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.call_handle)
  return _internal_call_handle();
}
inline void CMsgClientServiceCallResponse::_internal_set_call_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  call_handle_ = value;
}
inline void CMsgClientServiceCallResponse::set_call_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_call_handle(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.call_handle)
}

// optional uint32 module_crc = 3;
inline bool CMsgClientServiceCallResponse::_internal_has_module_crc() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_module_crc() const {
  return _internal_has_module_crc();
}
inline void CMsgClientServiceCallResponse::clear_module_crc() {
  module_crc_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCallResponse::_internal_module_crc() const {
  return module_crc_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCallResponse::module_crc() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.module_crc)
  return _internal_module_crc();
}
inline void CMsgClientServiceCallResponse::_internal_set_module_crc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  module_crc_ = value;
}
inline void CMsgClientServiceCallResponse::set_module_crc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_module_crc(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.module_crc)
}

// optional bytes module_hash = 4;
inline bool CMsgClientServiceCallResponse::_internal_has_module_hash() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_module_hash() const {
  return _internal_has_module_hash();
}
inline void CMsgClientServiceCallResponse::clear_module_hash() {
  module_hash_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientServiceCallResponse::module_hash() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.module_hash)
  return _internal_module_hash();
}
inline void CMsgClientServiceCallResponse::set_module_hash(const std::string& value) {
  _internal_set_module_hash(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.module_hash)
}
inline std::string* CMsgClientServiceCallResponse::mutable_module_hash() {
  // @@protoc_insertion_point(field_mutable:CMsgClientServiceCallResponse.module_hash)
  return _internal_mutable_module_hash();
}
inline const std::string& CMsgClientServiceCallResponse::_internal_module_hash() const {
  return module_hash_.Get();
}
inline void CMsgClientServiceCallResponse::_internal_set_module_hash(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  module_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientServiceCallResponse::set_module_hash(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  module_hash_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientServiceCallResponse.module_hash)
}
inline void CMsgClientServiceCallResponse::set_module_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  module_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientServiceCallResponse.module_hash)
}
inline void CMsgClientServiceCallResponse::set_module_hash(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  module_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientServiceCallResponse.module_hash)
}
inline std::string* CMsgClientServiceCallResponse::_internal_mutable_module_hash() {
  _has_bits_[0] |= 0x00000002u;
  return module_hash_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientServiceCallResponse::release_module_hash() {
  // @@protoc_insertion_point(field_release:CMsgClientServiceCallResponse.module_hash)
  if (!_internal_has_module_hash()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return module_hash_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientServiceCallResponse::set_allocated_module_hash(std::string* module_hash) {
  if (module_hash != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  module_hash_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), module_hash,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientServiceCallResponse.module_hash)
}

// optional uint32 ecallresult = 5;
inline bool CMsgClientServiceCallResponse::_internal_has_ecallresult() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_ecallresult() const {
  return _internal_has_ecallresult();
}
inline void CMsgClientServiceCallResponse::clear_ecallresult() {
  ecallresult_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCallResponse::_internal_ecallresult() const {
  return ecallresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCallResponse::ecallresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.ecallresult)
  return _internal_ecallresult();
}
inline void CMsgClientServiceCallResponse::_internal_set_ecallresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  ecallresult_ = value;
}
inline void CMsgClientServiceCallResponse::set_ecallresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ecallresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.ecallresult)
}

// optional bytes result_content = 6;
inline bool CMsgClientServiceCallResponse::_internal_has_result_content() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_result_content() const {
  return _internal_has_result_content();
}
inline void CMsgClientServiceCallResponse::clear_result_content() {
  result_content_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgClientServiceCallResponse::result_content() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.result_content)
  return _internal_result_content();
}
inline void CMsgClientServiceCallResponse::set_result_content(const std::string& value) {
  _internal_set_result_content(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.result_content)
}
inline std::string* CMsgClientServiceCallResponse::mutable_result_content() {
  // @@protoc_insertion_point(field_mutable:CMsgClientServiceCallResponse.result_content)
  return _internal_mutable_result_content();
}
inline const std::string& CMsgClientServiceCallResponse::_internal_result_content() const {
  return result_content_.Get();
}
inline void CMsgClientServiceCallResponse::_internal_set_result_content(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  result_content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientServiceCallResponse::set_result_content(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  result_content_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientServiceCallResponse.result_content)
}
inline void CMsgClientServiceCallResponse::set_result_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  result_content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientServiceCallResponse.result_content)
}
inline void CMsgClientServiceCallResponse::set_result_content(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  result_content_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientServiceCallResponse.result_content)
}
inline std::string* CMsgClientServiceCallResponse::_internal_mutable_result_content() {
  _has_bits_[0] |= 0x00000004u;
  return result_content_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientServiceCallResponse::release_result_content() {
  // @@protoc_insertion_point(field_release:CMsgClientServiceCallResponse.result_content)
  if (!_internal_has_result_content()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return result_content_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientServiceCallResponse::set_allocated_result_content(std::string* result_content) {
  if (result_content != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  result_content_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), result_content,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientServiceCallResponse.result_content)
}

// optional bytes os_version_info = 7;
inline bool CMsgClientServiceCallResponse::_internal_has_os_version_info() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_os_version_info() const {
  return _internal_has_os_version_info();
}
inline void CMsgClientServiceCallResponse::clear_os_version_info() {
  os_version_info_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CMsgClientServiceCallResponse::os_version_info() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.os_version_info)
  return _internal_os_version_info();
}
inline void CMsgClientServiceCallResponse::set_os_version_info(const std::string& value) {
  _internal_set_os_version_info(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.os_version_info)
}
inline std::string* CMsgClientServiceCallResponse::mutable_os_version_info() {
  // @@protoc_insertion_point(field_mutable:CMsgClientServiceCallResponse.os_version_info)
  return _internal_mutable_os_version_info();
}
inline const std::string& CMsgClientServiceCallResponse::_internal_os_version_info() const {
  return os_version_info_.Get();
}
inline void CMsgClientServiceCallResponse::_internal_set_os_version_info(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  os_version_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientServiceCallResponse::set_os_version_info(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  os_version_info_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientServiceCallResponse.os_version_info)
}
inline void CMsgClientServiceCallResponse::set_os_version_info(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  os_version_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientServiceCallResponse.os_version_info)
}
inline void CMsgClientServiceCallResponse::set_os_version_info(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  os_version_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientServiceCallResponse.os_version_info)
}
inline std::string* CMsgClientServiceCallResponse::_internal_mutable_os_version_info() {
  _has_bits_[0] |= 0x00000008u;
  return os_version_info_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientServiceCallResponse::release_os_version_info() {
  // @@protoc_insertion_point(field_release:CMsgClientServiceCallResponse.os_version_info)
  if (!_internal_has_os_version_info()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return os_version_info_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientServiceCallResponse::set_allocated_os_version_info(std::string* os_version_info) {
  if (os_version_info != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  os_version_info_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), os_version_info,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientServiceCallResponse.os_version_info)
}

// optional bytes system_info = 8;
inline bool CMsgClientServiceCallResponse::_internal_has_system_info() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_system_info() const {
  return _internal_has_system_info();
}
inline void CMsgClientServiceCallResponse::clear_system_info() {
  system_info_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& CMsgClientServiceCallResponse::system_info() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.system_info)
  return _internal_system_info();
}
inline void CMsgClientServiceCallResponse::set_system_info(const std::string& value) {
  _internal_set_system_info(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.system_info)
}
inline std::string* CMsgClientServiceCallResponse::mutable_system_info() {
  // @@protoc_insertion_point(field_mutable:CMsgClientServiceCallResponse.system_info)
  return _internal_mutable_system_info();
}
inline const std::string& CMsgClientServiceCallResponse::_internal_system_info() const {
  return system_info_.Get();
}
inline void CMsgClientServiceCallResponse::_internal_set_system_info(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  system_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientServiceCallResponse::set_system_info(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  system_info_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientServiceCallResponse.system_info)
}
inline void CMsgClientServiceCallResponse::set_system_info(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  system_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientServiceCallResponse.system_info)
}
inline void CMsgClientServiceCallResponse::set_system_info(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000010u;
  system_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientServiceCallResponse.system_info)
}
inline std::string* CMsgClientServiceCallResponse::_internal_mutable_system_info() {
  _has_bits_[0] |= 0x00000010u;
  return system_info_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientServiceCallResponse::release_system_info() {
  // @@protoc_insertion_point(field_release:CMsgClientServiceCallResponse.system_info)
  if (!_internal_has_system_info()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return system_info_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientServiceCallResponse::set_allocated_system_info(std::string* system_info) {
  if (system_info != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  system_info_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), system_info,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientServiceCallResponse.system_info)
}

// optional fixed64 load_address = 9;
inline bool CMsgClientServiceCallResponse::_internal_has_load_address() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_load_address() const {
  return _internal_has_load_address();
}
inline void CMsgClientServiceCallResponse::clear_load_address() {
  load_address_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientServiceCallResponse::_internal_load_address() const {
  return load_address_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientServiceCallResponse::load_address() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.load_address)
  return _internal_load_address();
}
inline void CMsgClientServiceCallResponse::_internal_set_load_address(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000800u;
  load_address_ = value;
}
inline void CMsgClientServiceCallResponse::set_load_address(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_load_address(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.load_address)
}

// optional bytes exception_record = 10;
inline bool CMsgClientServiceCallResponse::_internal_has_exception_record() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_exception_record() const {
  return _internal_has_exception_record();
}
inline void CMsgClientServiceCallResponse::clear_exception_record() {
  exception_record_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& CMsgClientServiceCallResponse::exception_record() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.exception_record)
  return _internal_exception_record();
}
inline void CMsgClientServiceCallResponse::set_exception_record(const std::string& value) {
  _internal_set_exception_record(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.exception_record)
}
inline std::string* CMsgClientServiceCallResponse::mutable_exception_record() {
  // @@protoc_insertion_point(field_mutable:CMsgClientServiceCallResponse.exception_record)
  return _internal_mutable_exception_record();
}
inline const std::string& CMsgClientServiceCallResponse::_internal_exception_record() const {
  return exception_record_.Get();
}
inline void CMsgClientServiceCallResponse::_internal_set_exception_record(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  exception_record_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientServiceCallResponse::set_exception_record(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  exception_record_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientServiceCallResponse.exception_record)
}
inline void CMsgClientServiceCallResponse::set_exception_record(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  exception_record_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientServiceCallResponse.exception_record)
}
inline void CMsgClientServiceCallResponse::set_exception_record(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000020u;
  exception_record_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientServiceCallResponse.exception_record)
}
inline std::string* CMsgClientServiceCallResponse::_internal_mutable_exception_record() {
  _has_bits_[0] |= 0x00000020u;
  return exception_record_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientServiceCallResponse::release_exception_record() {
  // @@protoc_insertion_point(field_release:CMsgClientServiceCallResponse.exception_record)
  if (!_internal_has_exception_record()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return exception_record_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientServiceCallResponse::set_allocated_exception_record(std::string* exception_record) {
  if (exception_record != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  exception_record_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), exception_record,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientServiceCallResponse.exception_record)
}

// optional bytes portable_os_version_info = 11;
inline bool CMsgClientServiceCallResponse::_internal_has_portable_os_version_info() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_portable_os_version_info() const {
  return _internal_has_portable_os_version_info();
}
inline void CMsgClientServiceCallResponse::clear_portable_os_version_info() {
  portable_os_version_info_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000040u;
}
inline const std::string& CMsgClientServiceCallResponse::portable_os_version_info() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.portable_os_version_info)
  return _internal_portable_os_version_info();
}
inline void CMsgClientServiceCallResponse::set_portable_os_version_info(const std::string& value) {
  _internal_set_portable_os_version_info(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.portable_os_version_info)
}
inline std::string* CMsgClientServiceCallResponse::mutable_portable_os_version_info() {
  // @@protoc_insertion_point(field_mutable:CMsgClientServiceCallResponse.portable_os_version_info)
  return _internal_mutable_portable_os_version_info();
}
inline const std::string& CMsgClientServiceCallResponse::_internal_portable_os_version_info() const {
  return portable_os_version_info_.Get();
}
inline void CMsgClientServiceCallResponse::_internal_set_portable_os_version_info(const std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  portable_os_version_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientServiceCallResponse::set_portable_os_version_info(std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  portable_os_version_info_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientServiceCallResponse.portable_os_version_info)
}
inline void CMsgClientServiceCallResponse::set_portable_os_version_info(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  portable_os_version_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientServiceCallResponse.portable_os_version_info)
}
inline void CMsgClientServiceCallResponse::set_portable_os_version_info(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000040u;
  portable_os_version_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientServiceCallResponse.portable_os_version_info)
}
inline std::string* CMsgClientServiceCallResponse::_internal_mutable_portable_os_version_info() {
  _has_bits_[0] |= 0x00000040u;
  return portable_os_version_info_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientServiceCallResponse::release_portable_os_version_info() {
  // @@protoc_insertion_point(field_release:CMsgClientServiceCallResponse.portable_os_version_info)
  if (!_internal_has_portable_os_version_info()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return portable_os_version_info_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientServiceCallResponse::set_allocated_portable_os_version_info(std::string* portable_os_version_info) {
  if (portable_os_version_info != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  portable_os_version_info_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), portable_os_version_info,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientServiceCallResponse.portable_os_version_info)
}

// optional bytes portable_system_info = 12;
inline bool CMsgClientServiceCallResponse::_internal_has_portable_system_info() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_portable_system_info() const {
  return _internal_has_portable_system_info();
}
inline void CMsgClientServiceCallResponse::clear_portable_system_info() {
  portable_system_info_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000080u;
}
inline const std::string& CMsgClientServiceCallResponse::portable_system_info() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.portable_system_info)
  return _internal_portable_system_info();
}
inline void CMsgClientServiceCallResponse::set_portable_system_info(const std::string& value) {
  _internal_set_portable_system_info(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.portable_system_info)
}
inline std::string* CMsgClientServiceCallResponse::mutable_portable_system_info() {
  // @@protoc_insertion_point(field_mutable:CMsgClientServiceCallResponse.portable_system_info)
  return _internal_mutable_portable_system_info();
}
inline const std::string& CMsgClientServiceCallResponse::_internal_portable_system_info() const {
  return portable_system_info_.Get();
}
inline void CMsgClientServiceCallResponse::_internal_set_portable_system_info(const std::string& value) {
  _has_bits_[0] |= 0x00000080u;
  portable_system_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientServiceCallResponse::set_portable_system_info(std::string&& value) {
  _has_bits_[0] |= 0x00000080u;
  portable_system_info_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientServiceCallResponse.portable_system_info)
}
inline void CMsgClientServiceCallResponse::set_portable_system_info(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000080u;
  portable_system_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientServiceCallResponse.portable_system_info)
}
inline void CMsgClientServiceCallResponse::set_portable_system_info(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000080u;
  portable_system_info_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientServiceCallResponse.portable_system_info)
}
inline std::string* CMsgClientServiceCallResponse::_internal_mutable_portable_system_info() {
  _has_bits_[0] |= 0x00000080u;
  return portable_system_info_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientServiceCallResponse::release_portable_system_info() {
  // @@protoc_insertion_point(field_release:CMsgClientServiceCallResponse.portable_system_info)
  if (!_internal_has_portable_system_info()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000080u;
  return portable_system_info_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientServiceCallResponse::set_allocated_portable_system_info(std::string* portable_system_info) {
  if (portable_system_info != nullptr) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  portable_system_info_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), portable_system_info,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientServiceCallResponse.portable_system_info)
}

// optional bool was_converted = 13;
inline bool CMsgClientServiceCallResponse::_internal_has_was_converted() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_was_converted() const {
  return _internal_has_was_converted();
}
inline void CMsgClientServiceCallResponse::clear_was_converted() {
  was_converted_ = false;
  _has_bits_[0] &= ~0x00002000u;
}
inline bool CMsgClientServiceCallResponse::_internal_was_converted() const {
  return was_converted_;
}
inline bool CMsgClientServiceCallResponse::was_converted() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.was_converted)
  return _internal_was_converted();
}
inline void CMsgClientServiceCallResponse::_internal_set_was_converted(bool value) {
  _has_bits_[0] |= 0x00002000u;
  was_converted_ = value;
}
inline void CMsgClientServiceCallResponse::set_was_converted(bool value) {
  _internal_set_was_converted(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.was_converted)
}

// optional uint32 internal_result = 14;
inline bool CMsgClientServiceCallResponse::_internal_has_internal_result() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_internal_result() const {
  return _internal_has_internal_result();
}
inline void CMsgClientServiceCallResponse::clear_internal_result() {
  internal_result_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCallResponse::_internal_internal_result() const {
  return internal_result_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCallResponse::internal_result() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.internal_result)
  return _internal_internal_result();
}
inline void CMsgClientServiceCallResponse::_internal_set_internal_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  internal_result_ = value;
}
inline void CMsgClientServiceCallResponse::set_internal_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_internal_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.internal_result)
}

// optional uint32 current_count = 15;
inline bool CMsgClientServiceCallResponse::_internal_has_current_count() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_current_count() const {
  return _internal_has_current_count();
}
inline void CMsgClientServiceCallResponse::clear_current_count() {
  current_count_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCallResponse::_internal_current_count() const {
  return current_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCallResponse::current_count() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.current_count)
  return _internal_current_count();
}
inline void CMsgClientServiceCallResponse::_internal_set_current_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  current_count_ = value;
}
inline void CMsgClientServiceCallResponse::set_current_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_current_count(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.current_count)
}

// optional uint32 last_call_handle = 16;
inline bool CMsgClientServiceCallResponse::_internal_has_last_call_handle() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_last_call_handle() const {
  return _internal_has_last_call_handle();
}
inline void CMsgClientServiceCallResponse::clear_last_call_handle() {
  last_call_handle_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCallResponse::_internal_last_call_handle() const {
  return last_call_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCallResponse::last_call_handle() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.last_call_handle)
  return _internal_last_call_handle();
}
inline void CMsgClientServiceCallResponse::_internal_set_last_call_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  last_call_handle_ = value;
}
inline void CMsgClientServiceCallResponse::set_last_call_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_call_handle(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.last_call_handle)
}

// optional uint32 last_call_module_crc = 17;
inline bool CMsgClientServiceCallResponse::_internal_has_last_call_module_crc() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_last_call_module_crc() const {
  return _internal_has_last_call_module_crc();
}
inline void CMsgClientServiceCallResponse::clear_last_call_module_crc() {
  last_call_module_crc_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCallResponse::_internal_last_call_module_crc() const {
  return last_call_module_crc_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCallResponse::last_call_module_crc() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.last_call_module_crc)
  return _internal_last_call_module_crc();
}
inline void CMsgClientServiceCallResponse::_internal_set_last_call_module_crc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  last_call_module_crc_ = value;
}
inline void CMsgClientServiceCallResponse::set_last_call_module_crc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_call_module_crc(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.last_call_module_crc)
}

// optional bytes last_call_sysid_routing = 18;
inline bool CMsgClientServiceCallResponse::_internal_has_last_call_sysid_routing() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_last_call_sysid_routing() const {
  return _internal_has_last_call_sysid_routing();
}
inline void CMsgClientServiceCallResponse::clear_last_call_sysid_routing() {
  last_call_sysid_routing_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000100u;
}
inline const std::string& CMsgClientServiceCallResponse::last_call_sysid_routing() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.last_call_sysid_routing)
  return _internal_last_call_sysid_routing();
}
inline void CMsgClientServiceCallResponse::set_last_call_sysid_routing(const std::string& value) {
  _internal_set_last_call_sysid_routing(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.last_call_sysid_routing)
}
inline std::string* CMsgClientServiceCallResponse::mutable_last_call_sysid_routing() {
  // @@protoc_insertion_point(field_mutable:CMsgClientServiceCallResponse.last_call_sysid_routing)
  return _internal_mutable_last_call_sysid_routing();
}
inline const std::string& CMsgClientServiceCallResponse::_internal_last_call_sysid_routing() const {
  return last_call_sysid_routing_.Get();
}
inline void CMsgClientServiceCallResponse::_internal_set_last_call_sysid_routing(const std::string& value) {
  _has_bits_[0] |= 0x00000100u;
  last_call_sysid_routing_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientServiceCallResponse::set_last_call_sysid_routing(std::string&& value) {
  _has_bits_[0] |= 0x00000100u;
  last_call_sysid_routing_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientServiceCallResponse.last_call_sysid_routing)
}
inline void CMsgClientServiceCallResponse::set_last_call_sysid_routing(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000100u;
  last_call_sysid_routing_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientServiceCallResponse.last_call_sysid_routing)
}
inline void CMsgClientServiceCallResponse::set_last_call_sysid_routing(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000100u;
  last_call_sysid_routing_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientServiceCallResponse.last_call_sysid_routing)
}
inline std::string* CMsgClientServiceCallResponse::_internal_mutable_last_call_sysid_routing() {
  _has_bits_[0] |= 0x00000100u;
  return last_call_sysid_routing_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientServiceCallResponse::release_last_call_sysid_routing() {
  // @@protoc_insertion_point(field_release:CMsgClientServiceCallResponse.last_call_sysid_routing)
  if (!_internal_has_last_call_sysid_routing()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000100u;
  return last_call_sysid_routing_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientServiceCallResponse::set_allocated_last_call_sysid_routing(std::string* last_call_sysid_routing) {
  if (last_call_sysid_routing != nullptr) {
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  last_call_sysid_routing_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), last_call_sysid_routing,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientServiceCallResponse.last_call_sysid_routing)
}

// optional uint32 last_ecallresult = 19;
inline bool CMsgClientServiceCallResponse::_internal_has_last_ecallresult() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_last_ecallresult() const {
  return _internal_has_last_ecallresult();
}
inline void CMsgClientServiceCallResponse::clear_last_ecallresult() {
  last_ecallresult_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCallResponse::_internal_last_ecallresult() const {
  return last_ecallresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCallResponse::last_ecallresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.last_ecallresult)
  return _internal_last_ecallresult();
}
inline void CMsgClientServiceCallResponse::_internal_set_last_ecallresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  last_ecallresult_ = value;
}
inline void CMsgClientServiceCallResponse::set_last_ecallresult(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_ecallresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.last_ecallresult)
}

// optional uint32 last_callissue_delta = 20;
inline bool CMsgClientServiceCallResponse::_internal_has_last_callissue_delta() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_last_callissue_delta() const {
  return _internal_has_last_callissue_delta();
}
inline void CMsgClientServiceCallResponse::clear_last_callissue_delta() {
  last_callissue_delta_ = 0u;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCallResponse::_internal_last_callissue_delta() const {
  return last_callissue_delta_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCallResponse::last_callissue_delta() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.last_callissue_delta)
  return _internal_last_callissue_delta();
}
inline void CMsgClientServiceCallResponse::_internal_set_last_callissue_delta(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00080000u;
  last_callissue_delta_ = value;
}
inline void CMsgClientServiceCallResponse::set_last_callissue_delta(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_callissue_delta(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.last_callissue_delta)
}

// optional uint32 last_callcomplete_delta = 21;
inline bool CMsgClientServiceCallResponse::_internal_has_last_callcomplete_delta() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool CMsgClientServiceCallResponse::has_last_callcomplete_delta() const {
  return _internal_has_last_callcomplete_delta();
}
inline void CMsgClientServiceCallResponse::clear_last_callcomplete_delta() {
  last_callcomplete_delta_ = 0u;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCallResponse::_internal_last_callcomplete_delta() const {
  return last_callcomplete_delta_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientServiceCallResponse::last_callcomplete_delta() const {
  // @@protoc_insertion_point(field_get:CMsgClientServiceCallResponse.last_callcomplete_delta)
  return _internal_last_callcomplete_delta();
}
inline void CMsgClientServiceCallResponse::_internal_set_last_callcomplete_delta(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00100000u;
  last_callcomplete_delta_ = value;
}
inline void CMsgClientServiceCallResponse::set_last_callcomplete_delta(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_callcomplete_delta(value);
  // @@protoc_insertion_point(field_set:CMsgClientServiceCallResponse.last_callcomplete_delta)
}

// -------------------------------------------------------------------

// CMsgAMUnlockH264

// optional uint32 appid = 1;
inline bool CMsgAMUnlockH264::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgAMUnlockH264::has_appid() const {
  return _internal_has_appid();
}
inline void CMsgAMUnlockH264::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAMUnlockH264::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAMUnlockH264::appid() const {
  // @@protoc_insertion_point(field_get:CMsgAMUnlockH264.appid)
  return _internal_appid();
}
inline void CMsgAMUnlockH264::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
}
inline void CMsgAMUnlockH264::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CMsgAMUnlockH264.appid)
}

// optional int32 platform = 2;
inline bool CMsgAMUnlockH264::_internal_has_platform() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgAMUnlockH264::has_platform() const {
  return _internal_has_platform();
}
inline void CMsgAMUnlockH264::clear_platform() {
  platform_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgAMUnlockH264::_internal_platform() const {
  return platform_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgAMUnlockH264::platform() const {
  // @@protoc_insertion_point(field_get:CMsgAMUnlockH264.platform)
  return _internal_platform();
}
inline void CMsgAMUnlockH264::_internal_set_platform(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  platform_ = value;
}
inline void CMsgAMUnlockH264::set_platform(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_platform(value);
  // @@protoc_insertion_point(field_set:CMsgAMUnlockH264.platform)
}

// optional int32 reason = 3;
inline bool CMsgAMUnlockH264::_internal_has_reason() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgAMUnlockH264::has_reason() const {
  return _internal_has_reason();
}
inline void CMsgAMUnlockH264::clear_reason() {
  reason_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgAMUnlockH264::_internal_reason() const {
  return reason_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgAMUnlockH264::reason() const {
  // @@protoc_insertion_point(field_get:CMsgAMUnlockH264.reason)
  return _internal_reason();
}
inline void CMsgAMUnlockH264::_internal_set_reason(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  reason_ = value;
}
inline void CMsgAMUnlockH264::set_reason(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_reason(value);
  // @@protoc_insertion_point(field_set:CMsgAMUnlockH264.reason)
}

// -------------------------------------------------------------------

// CMsgAMUnlockH264Response

// optional int32 eresult = 1 [default = 2];
inline bool CMsgAMUnlockH264Response::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgAMUnlockH264Response::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgAMUnlockH264Response::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgAMUnlockH264Response::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgAMUnlockH264Response::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgAMUnlockH264Response.eresult)
  return _internal_eresult();
}
inline void CMsgAMUnlockH264Response::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  eresult_ = value;
}
inline void CMsgAMUnlockH264Response::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgAMUnlockH264Response.eresult)
}

// optional bytes encryption_key = 2;
inline bool CMsgAMUnlockH264Response::_internal_has_encryption_key() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgAMUnlockH264Response::has_encryption_key() const {
  return _internal_has_encryption_key();
}
inline void CMsgAMUnlockH264Response::clear_encryption_key() {
  encryption_key_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgAMUnlockH264Response::encryption_key() const {
  // @@protoc_insertion_point(field_get:CMsgAMUnlockH264Response.encryption_key)
  return _internal_encryption_key();
}
inline void CMsgAMUnlockH264Response::set_encryption_key(const std::string& value) {
  _internal_set_encryption_key(value);
  // @@protoc_insertion_point(field_set:CMsgAMUnlockH264Response.encryption_key)
}
inline std::string* CMsgAMUnlockH264Response::mutable_encryption_key() {
  // @@protoc_insertion_point(field_mutable:CMsgAMUnlockH264Response.encryption_key)
  return _internal_mutable_encryption_key();
}
inline const std::string& CMsgAMUnlockH264Response::_internal_encryption_key() const {
  return encryption_key_.Get();
}
inline void CMsgAMUnlockH264Response::_internal_set_encryption_key(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  encryption_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgAMUnlockH264Response::set_encryption_key(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  encryption_key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgAMUnlockH264Response.encryption_key)
}
inline void CMsgAMUnlockH264Response::set_encryption_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  encryption_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgAMUnlockH264Response.encryption_key)
}
inline void CMsgAMUnlockH264Response::set_encryption_key(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  encryption_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgAMUnlockH264Response.encryption_key)
}
inline std::string* CMsgAMUnlockH264Response::_internal_mutable_encryption_key() {
  _has_bits_[0] |= 0x00000001u;
  return encryption_key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgAMUnlockH264Response::release_encryption_key() {
  // @@protoc_insertion_point(field_release:CMsgAMUnlockH264Response.encryption_key)
  if (!_internal_has_encryption_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return encryption_key_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgAMUnlockH264Response::set_allocated_encryption_key(std::string* encryption_key) {
  if (encryption_key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  encryption_key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), encryption_key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgAMUnlockH264Response.encryption_key)
}

// -------------------------------------------------------------------

// CMsgClientPlayingSessionState

// optional bool playing_blocked = 2;
inline bool CMsgClientPlayingSessionState::_internal_has_playing_blocked() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientPlayingSessionState::has_playing_blocked() const {
  return _internal_has_playing_blocked();
}
inline void CMsgClientPlayingSessionState::clear_playing_blocked() {
  playing_blocked_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientPlayingSessionState::_internal_playing_blocked() const {
  return playing_blocked_;
}
inline bool CMsgClientPlayingSessionState::playing_blocked() const {
  // @@protoc_insertion_point(field_get:CMsgClientPlayingSessionState.playing_blocked)
  return _internal_playing_blocked();
}
inline void CMsgClientPlayingSessionState::_internal_set_playing_blocked(bool value) {
  _has_bits_[0] |= 0x00000001u;
  playing_blocked_ = value;
}
inline void CMsgClientPlayingSessionState::set_playing_blocked(bool value) {
  _internal_set_playing_blocked(value);
  // @@protoc_insertion_point(field_set:CMsgClientPlayingSessionState.playing_blocked)
}

// optional uint32 playing_app = 3;
inline bool CMsgClientPlayingSessionState::_internal_has_playing_app() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientPlayingSessionState::has_playing_app() const {
  return _internal_has_playing_app();
}
inline void CMsgClientPlayingSessionState::clear_playing_app() {
  playing_app_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientPlayingSessionState::_internal_playing_app() const {
  return playing_app_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientPlayingSessionState::playing_app() const {
  // @@protoc_insertion_point(field_get:CMsgClientPlayingSessionState.playing_app)
  return _internal_playing_app();
}
inline void CMsgClientPlayingSessionState::_internal_set_playing_app(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  playing_app_ = value;
}
inline void CMsgClientPlayingSessionState::set_playing_app(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_playing_app(value);
  // @@protoc_insertion_point(field_set:CMsgClientPlayingSessionState.playing_app)
}

// -------------------------------------------------------------------

// CMsgClientKickPlayingSession

// optional bool only_stop_game = 1;
inline bool CMsgClientKickPlayingSession::_internal_has_only_stop_game() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientKickPlayingSession::has_only_stop_game() const {
  return _internal_has_only_stop_game();
}
inline void CMsgClientKickPlayingSession::clear_only_stop_game() {
  only_stop_game_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientKickPlayingSession::_internal_only_stop_game() const {
  return only_stop_game_;
}
inline bool CMsgClientKickPlayingSession::only_stop_game() const {
  // @@protoc_insertion_point(field_get:CMsgClientKickPlayingSession.only_stop_game)
  return _internal_only_stop_game();
}
inline void CMsgClientKickPlayingSession::_internal_set_only_stop_game(bool value) {
  _has_bits_[0] |= 0x00000001u;
  only_stop_game_ = value;
}
inline void CMsgClientKickPlayingSession::set_only_stop_game(bool value) {
  _internal_set_only_stop_game(value);
  // @@protoc_insertion_point(field_set:CMsgClientKickPlayingSession.only_stop_game)
}

// -------------------------------------------------------------------

// CMsgClientVoiceCallPreAuthorize

// optional fixed64 caller_steamid = 1;
inline bool CMsgClientVoiceCallPreAuthorize::_internal_has_caller_steamid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientVoiceCallPreAuthorize::has_caller_steamid() const {
  return _internal_has_caller_steamid();
}
inline void CMsgClientVoiceCallPreAuthorize::clear_caller_steamid() {
  caller_steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientVoiceCallPreAuthorize::_internal_caller_steamid() const {
  return caller_steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientVoiceCallPreAuthorize::caller_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgClientVoiceCallPreAuthorize.caller_steamid)
  return _internal_caller_steamid();
}
inline void CMsgClientVoiceCallPreAuthorize::_internal_set_caller_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  caller_steamid_ = value;
}
inline void CMsgClientVoiceCallPreAuthorize::set_caller_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_caller_steamid(value);
  // @@protoc_insertion_point(field_set:CMsgClientVoiceCallPreAuthorize.caller_steamid)
}

// optional fixed64 receiver_steamid = 2;
inline bool CMsgClientVoiceCallPreAuthorize::_internal_has_receiver_steamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientVoiceCallPreAuthorize::has_receiver_steamid() const {
  return _internal_has_receiver_steamid();
}
inline void CMsgClientVoiceCallPreAuthorize::clear_receiver_steamid() {
  receiver_steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientVoiceCallPreAuthorize::_internal_receiver_steamid() const {
  return receiver_steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientVoiceCallPreAuthorize::receiver_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgClientVoiceCallPreAuthorize.receiver_steamid)
  return _internal_receiver_steamid();
}
inline void CMsgClientVoiceCallPreAuthorize::_internal_set_receiver_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  receiver_steamid_ = value;
}
inline void CMsgClientVoiceCallPreAuthorize::set_receiver_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_receiver_steamid(value);
  // @@protoc_insertion_point(field_set:CMsgClientVoiceCallPreAuthorize.receiver_steamid)
}

// optional int32 caller_id = 3;
inline bool CMsgClientVoiceCallPreAuthorize::_internal_has_caller_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientVoiceCallPreAuthorize::has_caller_id() const {
  return _internal_has_caller_id();
}
inline void CMsgClientVoiceCallPreAuthorize::clear_caller_id() {
  caller_id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientVoiceCallPreAuthorize::_internal_caller_id() const {
  return caller_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientVoiceCallPreAuthorize::caller_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientVoiceCallPreAuthorize.caller_id)
  return _internal_caller_id();
}
inline void CMsgClientVoiceCallPreAuthorize::_internal_set_caller_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  caller_id_ = value;
}
inline void CMsgClientVoiceCallPreAuthorize::set_caller_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_caller_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientVoiceCallPreAuthorize.caller_id)
}

// optional bool hangup = 4;
inline bool CMsgClientVoiceCallPreAuthorize::_internal_has_hangup() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientVoiceCallPreAuthorize::has_hangup() const {
  return _internal_has_hangup();
}
inline void CMsgClientVoiceCallPreAuthorize::clear_hangup() {
  hangup_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgClientVoiceCallPreAuthorize::_internal_hangup() const {
  return hangup_;
}
inline bool CMsgClientVoiceCallPreAuthorize::hangup() const {
  // @@protoc_insertion_point(field_get:CMsgClientVoiceCallPreAuthorize.hangup)
  return _internal_hangup();
}
inline void CMsgClientVoiceCallPreAuthorize::_internal_set_hangup(bool value) {
  _has_bits_[0] |= 0x00000008u;
  hangup_ = value;
}
inline void CMsgClientVoiceCallPreAuthorize::set_hangup(bool value) {
  _internal_set_hangup(value);
  // @@protoc_insertion_point(field_set:CMsgClientVoiceCallPreAuthorize.hangup)
}

// -------------------------------------------------------------------

// CMsgClientVoiceCallPreAuthorizeResponse

// optional fixed64 caller_steamid = 1;
inline bool CMsgClientVoiceCallPreAuthorizeResponse::_internal_has_caller_steamid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientVoiceCallPreAuthorizeResponse::has_caller_steamid() const {
  return _internal_has_caller_steamid();
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::clear_caller_steamid() {
  caller_steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientVoiceCallPreAuthorizeResponse::_internal_caller_steamid() const {
  return caller_steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientVoiceCallPreAuthorizeResponse::caller_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgClientVoiceCallPreAuthorizeResponse.caller_steamid)
  return _internal_caller_steamid();
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::_internal_set_caller_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  caller_steamid_ = value;
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::set_caller_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_caller_steamid(value);
  // @@protoc_insertion_point(field_set:CMsgClientVoiceCallPreAuthorizeResponse.caller_steamid)
}

// optional fixed64 receiver_steamid = 2;
inline bool CMsgClientVoiceCallPreAuthorizeResponse::_internal_has_receiver_steamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientVoiceCallPreAuthorizeResponse::has_receiver_steamid() const {
  return _internal_has_receiver_steamid();
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::clear_receiver_steamid() {
  receiver_steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientVoiceCallPreAuthorizeResponse::_internal_receiver_steamid() const {
  return receiver_steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientVoiceCallPreAuthorizeResponse::receiver_steamid() const {
  // @@protoc_insertion_point(field_get:CMsgClientVoiceCallPreAuthorizeResponse.receiver_steamid)
  return _internal_receiver_steamid();
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::_internal_set_receiver_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  receiver_steamid_ = value;
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::set_receiver_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_receiver_steamid(value);
  // @@protoc_insertion_point(field_set:CMsgClientVoiceCallPreAuthorizeResponse.receiver_steamid)
}

// optional int32 eresult = 3 [default = 2];
inline bool CMsgClientVoiceCallPreAuthorizeResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientVoiceCallPreAuthorizeResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientVoiceCallPreAuthorizeResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientVoiceCallPreAuthorizeResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientVoiceCallPreAuthorizeResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  eresult_ = value;
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientVoiceCallPreAuthorizeResponse.eresult)
}

// optional int32 caller_id = 4;
inline bool CMsgClientVoiceCallPreAuthorizeResponse::_internal_has_caller_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientVoiceCallPreAuthorizeResponse::has_caller_id() const {
  return _internal_has_caller_id();
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::clear_caller_id() {
  caller_id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientVoiceCallPreAuthorizeResponse::_internal_caller_id() const {
  return caller_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientVoiceCallPreAuthorizeResponse::caller_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientVoiceCallPreAuthorizeResponse.caller_id)
  return _internal_caller_id();
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::_internal_set_caller_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  caller_id_ = value;
}
inline void CMsgClientVoiceCallPreAuthorizeResponse::set_caller_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_caller_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientVoiceCallPreAuthorizeResponse.caller_id)
}

// -------------------------------------------------------------------

// CMsgBadgeCraftedNotification

// optional uint32 appid = 1;
inline bool CMsgBadgeCraftedNotification::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBadgeCraftedNotification::has_appid() const {
  return _internal_has_appid();
}
inline void CMsgBadgeCraftedNotification::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBadgeCraftedNotification::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBadgeCraftedNotification::appid() const {
  // @@protoc_insertion_point(field_get:CMsgBadgeCraftedNotification.appid)
  return _internal_appid();
}
inline void CMsgBadgeCraftedNotification::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
}
inline void CMsgBadgeCraftedNotification::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CMsgBadgeCraftedNotification.appid)
}

// optional uint32 badge_level = 2;
inline bool CMsgBadgeCraftedNotification::_internal_has_badge_level() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBadgeCraftedNotification::has_badge_level() const {
  return _internal_has_badge_level();
}
inline void CMsgBadgeCraftedNotification::clear_badge_level() {
  badge_level_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBadgeCraftedNotification::_internal_badge_level() const {
  return badge_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBadgeCraftedNotification::badge_level() const {
  // @@protoc_insertion_point(field_get:CMsgBadgeCraftedNotification.badge_level)
  return _internal_badge_level();
}
inline void CMsgBadgeCraftedNotification::_internal_set_badge_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  badge_level_ = value;
}
inline void CMsgBadgeCraftedNotification::set_badge_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_badge_level(value);
  // @@protoc_insertion_point(field_set:CMsgBadgeCraftedNotification.badge_level)
}

// -------------------------------------------------------------------

// CMsgClientStartPeerContentServer

// optional fixed64 steamid = 1;
inline bool CMsgClientStartPeerContentServer::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientStartPeerContentServer::has_steamid() const {
  return _internal_has_steamid();
}
inline void CMsgClientStartPeerContentServer::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientStartPeerContentServer::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientStartPeerContentServer::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgClientStartPeerContentServer.steamid)
  return _internal_steamid();
}
inline void CMsgClientStartPeerContentServer::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
}
inline void CMsgClientStartPeerContentServer::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CMsgClientStartPeerContentServer.steamid)
}

// optional fixed64 client_remote_id = 2;
inline bool CMsgClientStartPeerContentServer::_internal_has_client_remote_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientStartPeerContentServer::has_client_remote_id() const {
  return _internal_has_client_remote_id();
}
inline void CMsgClientStartPeerContentServer::clear_client_remote_id() {
  client_remote_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientStartPeerContentServer::_internal_client_remote_id() const {
  return client_remote_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientStartPeerContentServer::client_remote_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientStartPeerContentServer.client_remote_id)
  return _internal_client_remote_id();
}
inline void CMsgClientStartPeerContentServer::_internal_set_client_remote_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  client_remote_id_ = value;
}
inline void CMsgClientStartPeerContentServer::set_client_remote_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_client_remote_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientStartPeerContentServer.client_remote_id)
}

// optional uint32 app_id = 3;
inline bool CMsgClientStartPeerContentServer::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientStartPeerContentServer::has_app_id() const {
  return _internal_has_app_id();
}
inline void CMsgClientStartPeerContentServer::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientStartPeerContentServer::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientStartPeerContentServer::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientStartPeerContentServer.app_id)
  return _internal_app_id();
}
inline void CMsgClientStartPeerContentServer::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  app_id_ = value;
}
inline void CMsgClientStartPeerContentServer::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientStartPeerContentServer.app_id)
}

// optional uint32 current_build_id = 4;
inline bool CMsgClientStartPeerContentServer::_internal_has_current_build_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientStartPeerContentServer::has_current_build_id() const {
  return _internal_has_current_build_id();
}
inline void CMsgClientStartPeerContentServer::clear_current_build_id() {
  current_build_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientStartPeerContentServer::_internal_current_build_id() const {
  return current_build_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientStartPeerContentServer::current_build_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientStartPeerContentServer.current_build_id)
  return _internal_current_build_id();
}
inline void CMsgClientStartPeerContentServer::_internal_set_current_build_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  current_build_id_ = value;
}
inline void CMsgClientStartPeerContentServer::set_current_build_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_current_build_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientStartPeerContentServer.current_build_id)
}

// -------------------------------------------------------------------

// CMsgClientStartPeerContentServerResponse

// optional uint32 result = 1;
inline bool CMsgClientStartPeerContentServerResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientStartPeerContentServerResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientStartPeerContentServerResponse::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientStartPeerContentServerResponse::_internal_result() const {
  return result_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientStartPeerContentServerResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientStartPeerContentServerResponse.result)
  return _internal_result();
}
inline void CMsgClientStartPeerContentServerResponse::_internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
}
inline void CMsgClientStartPeerContentServerResponse::set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientStartPeerContentServerResponse.result)
}

// optional uint32 server_port = 2;
inline bool CMsgClientStartPeerContentServerResponse::_internal_has_server_port() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientStartPeerContentServerResponse::has_server_port() const {
  return _internal_has_server_port();
}
inline void CMsgClientStartPeerContentServerResponse::clear_server_port() {
  server_port_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientStartPeerContentServerResponse::_internal_server_port() const {
  return server_port_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientStartPeerContentServerResponse::server_port() const {
  // @@protoc_insertion_point(field_get:CMsgClientStartPeerContentServerResponse.server_port)
  return _internal_server_port();
}
inline void CMsgClientStartPeerContentServerResponse::_internal_set_server_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  server_port_ = value;
}
inline void CMsgClientStartPeerContentServerResponse::set_server_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_server_port(value);
  // @@protoc_insertion_point(field_set:CMsgClientStartPeerContentServerResponse.server_port)
}

// repeated uint32 installed_depots = 3;
inline int CMsgClientStartPeerContentServerResponse::_internal_installed_depots_size() const {
  return installed_depots_.size();
}
inline int CMsgClientStartPeerContentServerResponse::installed_depots_size() const {
  return _internal_installed_depots_size();
}
inline void CMsgClientStartPeerContentServerResponse::clear_installed_depots() {
  installed_depots_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientStartPeerContentServerResponse::_internal_installed_depots(int index) const {
  return installed_depots_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientStartPeerContentServerResponse::installed_depots(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientStartPeerContentServerResponse.installed_depots)
  return _internal_installed_depots(index);
}
inline void CMsgClientStartPeerContentServerResponse::set_installed_depots(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  installed_depots_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientStartPeerContentServerResponse.installed_depots)
}
inline void CMsgClientStartPeerContentServerResponse::_internal_add_installed_depots(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  installed_depots_.Add(value);
}
inline void CMsgClientStartPeerContentServerResponse::add_installed_depots(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_installed_depots(value);
  // @@protoc_insertion_point(field_add:CMsgClientStartPeerContentServerResponse.installed_depots)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgClientStartPeerContentServerResponse::_internal_installed_depots() const {
  return installed_depots_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgClientStartPeerContentServerResponse::installed_depots() const {
  // @@protoc_insertion_point(field_list:CMsgClientStartPeerContentServerResponse.installed_depots)
  return _internal_installed_depots();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgClientStartPeerContentServerResponse::_internal_mutable_installed_depots() {
  return &installed_depots_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgClientStartPeerContentServerResponse::mutable_installed_depots() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientStartPeerContentServerResponse.installed_depots)
  return _internal_mutable_installed_depots();
}

// optional uint64 access_token = 4;
inline bool CMsgClientStartPeerContentServerResponse::_internal_has_access_token() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientStartPeerContentServerResponse::has_access_token() const {
  return _internal_has_access_token();
}
inline void CMsgClientStartPeerContentServerResponse::clear_access_token() {
  access_token_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientStartPeerContentServerResponse::_internal_access_token() const {
  return access_token_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientStartPeerContentServerResponse::access_token() const {
  // @@protoc_insertion_point(field_get:CMsgClientStartPeerContentServerResponse.access_token)
  return _internal_access_token();
}
inline void CMsgClientStartPeerContentServerResponse::_internal_set_access_token(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  access_token_ = value;
}
inline void CMsgClientStartPeerContentServerResponse::set_access_token(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_access_token(value);
  // @@protoc_insertion_point(field_set:CMsgClientStartPeerContentServerResponse.access_token)
}

// -------------------------------------------------------------------

// CMsgClientGetPeerContentInfo

// optional fixed64 steamid = 1;
inline bool CMsgClientGetPeerContentInfo::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientGetPeerContentInfo::has_steamid() const {
  return _internal_has_steamid();
}
inline void CMsgClientGetPeerContentInfo::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientGetPeerContentInfo::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientGetPeerContentInfo::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetPeerContentInfo.steamid)
  return _internal_steamid();
}
inline void CMsgClientGetPeerContentInfo::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
}
inline void CMsgClientGetPeerContentInfo::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetPeerContentInfo.steamid)
}

// optional fixed64 client_remote_id = 2;
inline bool CMsgClientGetPeerContentInfo::_internal_has_client_remote_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientGetPeerContentInfo::has_client_remote_id() const {
  return _internal_has_client_remote_id();
}
inline void CMsgClientGetPeerContentInfo::clear_client_remote_id() {
  client_remote_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientGetPeerContentInfo::_internal_client_remote_id() const {
  return client_remote_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientGetPeerContentInfo::client_remote_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetPeerContentInfo.client_remote_id)
  return _internal_client_remote_id();
}
inline void CMsgClientGetPeerContentInfo::_internal_set_client_remote_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  client_remote_id_ = value;
}
inline void CMsgClientGetPeerContentInfo::set_client_remote_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_client_remote_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetPeerContentInfo.client_remote_id)
}

// optional bool owned_games_visible = 3;
inline bool CMsgClientGetPeerContentInfo::_internal_has_owned_games_visible() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientGetPeerContentInfo::has_owned_games_visible() const {
  return _internal_has_owned_games_visible();
}
inline void CMsgClientGetPeerContentInfo::clear_owned_games_visible() {
  owned_games_visible_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgClientGetPeerContentInfo::_internal_owned_games_visible() const {
  return owned_games_visible_;
}
inline bool CMsgClientGetPeerContentInfo::owned_games_visible() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetPeerContentInfo.owned_games_visible)
  return _internal_owned_games_visible();
}
inline void CMsgClientGetPeerContentInfo::_internal_set_owned_games_visible(bool value) {
  _has_bits_[0] |= 0x00000004u;
  owned_games_visible_ = value;
}
inline void CMsgClientGetPeerContentInfo::set_owned_games_visible(bool value) {
  _internal_set_owned_games_visible(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetPeerContentInfo.owned_games_visible)
}

// -------------------------------------------------------------------

// CMsgClientGetPeerContentInfoResponse

// optional uint32 result = 1;
inline bool CMsgClientGetPeerContentInfoResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientGetPeerContentInfoResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientGetPeerContentInfoResponse::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetPeerContentInfoResponse::_internal_result() const {
  return result_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetPeerContentInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientGetPeerContentInfoResponse.result)
  return _internal_result();
}
inline void CMsgClientGetPeerContentInfoResponse::_internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
}
inline void CMsgClientGetPeerContentInfoResponse::set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientGetPeerContentInfoResponse.result)
}

// repeated uint32 apps = 2;
inline int CMsgClientGetPeerContentInfoResponse::_internal_apps_size() const {
  return apps_.size();
}
inline int CMsgClientGetPeerContentInfoResponse::apps_size() const {
  return _internal_apps_size();
}
inline void CMsgClientGetPeerContentInfoResponse::clear_apps() {
  apps_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetPeerContentInfoResponse::_internal_apps(int index) const {
  return apps_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientGetPeerContentInfoResponse::apps(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientGetPeerContentInfoResponse.apps)
  return _internal_apps(index);
}
inline void CMsgClientGetPeerContentInfoResponse::set_apps(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  apps_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientGetPeerContentInfoResponse.apps)
}
inline void CMsgClientGetPeerContentInfoResponse::_internal_add_apps(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  apps_.Add(value);
}
inline void CMsgClientGetPeerContentInfoResponse::add_apps(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_apps(value);
  // @@protoc_insertion_point(field_add:CMsgClientGetPeerContentInfoResponse.apps)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgClientGetPeerContentInfoResponse::_internal_apps() const {
  return apps_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgClientGetPeerContentInfoResponse::apps() const {
  // @@protoc_insertion_point(field_list:CMsgClientGetPeerContentInfoResponse.apps)
  return _internal_apps();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgClientGetPeerContentInfoResponse::_internal_mutable_apps() {
  return &apps_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgClientGetPeerContentInfoResponse::mutable_apps() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientGetPeerContentInfoResponse.apps)
  return _internal_mutable_apps();
}

// -------------------------------------------------------------------

// CMsgClientPendingGameLaunch

// optional uint32 app_id = 1;
inline bool CMsgClientPendingGameLaunch::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientPendingGameLaunch::has_app_id() const {
  return _internal_has_app_id();
}
inline void CMsgClientPendingGameLaunch::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientPendingGameLaunch::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientPendingGameLaunch::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientPendingGameLaunch.app_id)
  return _internal_app_id();
}
inline void CMsgClientPendingGameLaunch::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  app_id_ = value;
}
inline void CMsgClientPendingGameLaunch::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientPendingGameLaunch.app_id)
}

// -------------------------------------------------------------------

// CMsgClientPendingGameLaunchResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientPendingGameLaunchResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientPendingGameLaunchResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientPendingGameLaunchResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientPendingGameLaunchResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientPendingGameLaunchResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientPendingGameLaunchResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientPendingGameLaunchResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  eresult_ = value;
}
inline void CMsgClientPendingGameLaunchResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientPendingGameLaunchResponse.eresult)
}

// optional uint32 app_id = 2;
inline bool CMsgClientPendingGameLaunchResponse::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientPendingGameLaunchResponse::has_app_id() const {
  return _internal_has_app_id();
}
inline void CMsgClientPendingGameLaunchResponse::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientPendingGameLaunchResponse::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientPendingGameLaunchResponse::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientPendingGameLaunchResponse.app_id)
  return _internal_app_id();
}
inline void CMsgClientPendingGameLaunchResponse::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  app_id_ = value;
}
inline void CMsgClientPendingGameLaunchResponse::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientPendingGameLaunchResponse.app_id)
}

// optional string envkey = 3;
inline bool CMsgClientPendingGameLaunchResponse::_internal_has_envkey() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientPendingGameLaunchResponse::has_envkey() const {
  return _internal_has_envkey();
}
inline void CMsgClientPendingGameLaunchResponse::clear_envkey() {
  envkey_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientPendingGameLaunchResponse::envkey() const {
  // @@protoc_insertion_point(field_get:CMsgClientPendingGameLaunchResponse.envkey)
  return _internal_envkey();
}
inline void CMsgClientPendingGameLaunchResponse::set_envkey(const std::string& value) {
  _internal_set_envkey(value);
  // @@protoc_insertion_point(field_set:CMsgClientPendingGameLaunchResponse.envkey)
}
inline std::string* CMsgClientPendingGameLaunchResponse::mutable_envkey() {
  // @@protoc_insertion_point(field_mutable:CMsgClientPendingGameLaunchResponse.envkey)
  return _internal_mutable_envkey();
}
inline const std::string& CMsgClientPendingGameLaunchResponse::_internal_envkey() const {
  return envkey_.Get();
}
inline void CMsgClientPendingGameLaunchResponse::_internal_set_envkey(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  envkey_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientPendingGameLaunchResponse::set_envkey(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  envkey_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientPendingGameLaunchResponse.envkey)
}
inline void CMsgClientPendingGameLaunchResponse::set_envkey(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  envkey_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientPendingGameLaunchResponse.envkey)
}
inline void CMsgClientPendingGameLaunchResponse::set_envkey(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  envkey_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientPendingGameLaunchResponse.envkey)
}
inline std::string* CMsgClientPendingGameLaunchResponse::_internal_mutable_envkey() {
  _has_bits_[0] |= 0x00000001u;
  return envkey_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientPendingGameLaunchResponse::release_envkey() {
  // @@protoc_insertion_point(field_release:CMsgClientPendingGameLaunchResponse.envkey)
  if (!_internal_has_envkey()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return envkey_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientPendingGameLaunchResponse::set_allocated_envkey(std::string* envkey) {
  if (envkey != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  envkey_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), envkey,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientPendingGameLaunchResponse.envkey)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_steammessages_5fclientserver_5f2_2eproto
