// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_clientserver_ucm.proto

#include "steammessages_clientserver_ucm.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr CMsgClientUCMAddScreenshot_Tag::CMsgClientUCMAddScreenshot_Tag(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tag_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tag_value_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CMsgClientUCMAddScreenshot_TagDefaultTypeInternal {
  constexpr CMsgClientUCMAddScreenshot_TagDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMAddScreenshot_TagDefaultTypeInternal() {}
  union {
    CMsgClientUCMAddScreenshot_Tag _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMAddScreenshot_TagDefaultTypeInternal _CMsgClientUCMAddScreenshot_Tag_default_instance_;
constexpr CMsgClientUCMAddScreenshot::CMsgClientUCMAddScreenshot(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tag_()
  , tagged_steamid_()
  , tagged_publishedfileid_()
  , filename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , thumbname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , caption_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , shortcut_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , vr_filename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , appid_(0u)
  , rtime32_created_(0u)
  , width_(0u)
  , height_(0u)
  , permissions_(0u)
  , spoiler_tag_(false){}
struct CMsgClientUCMAddScreenshotDefaultTypeInternal {
  constexpr CMsgClientUCMAddScreenshotDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMAddScreenshotDefaultTypeInternal() {}
  union {
    CMsgClientUCMAddScreenshot _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMAddScreenshotDefaultTypeInternal _CMsgClientUCMAddScreenshot_default_instance_;
constexpr CMsgClientUCMAddScreenshotResponse::CMsgClientUCMAddScreenshotResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : eresult_(2)
  , screenshotid_(PROTOBUF_ULONGLONG(18446744073709551615)){}
struct CMsgClientUCMAddScreenshotResponseDefaultTypeInternal {
  constexpr CMsgClientUCMAddScreenshotResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMAddScreenshotResponseDefaultTypeInternal() {}
  union {
    CMsgClientUCMAddScreenshotResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMAddScreenshotResponseDefaultTypeInternal _CMsgClientUCMAddScreenshotResponse_default_instance_;
constexpr CMsgClientUCMDeleteScreenshot::CMsgClientUCMDeleteScreenshot(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : screenshotid_(PROTOBUF_ULONGLONG(18446744073709551615)){}
struct CMsgClientUCMDeleteScreenshotDefaultTypeInternal {
  constexpr CMsgClientUCMDeleteScreenshotDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMDeleteScreenshotDefaultTypeInternal() {}
  union {
    CMsgClientUCMDeleteScreenshot _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMDeleteScreenshotDefaultTypeInternal _CMsgClientUCMDeleteScreenshot_default_instance_;
constexpr CMsgClientUCMDeleteScreenshotResponse::CMsgClientUCMDeleteScreenshotResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : eresult_(2){}
struct CMsgClientUCMDeleteScreenshotResponseDefaultTypeInternal {
  constexpr CMsgClientUCMDeleteScreenshotResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMDeleteScreenshotResponseDefaultTypeInternal() {}
  union {
    CMsgClientUCMDeleteScreenshotResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMDeleteScreenshotResponseDefaultTypeInternal _CMsgClientUCMDeleteScreenshotResponse_default_instance_;
constexpr CMsgClientUCMPublishFile::CMsgClientUCMPublishFile(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tags_()
  , file_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , preview_file_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , title_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , video_account_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , video_identifier_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , app_id_(0u)
  , consumer_app_id_(0u)
  , visibility_(0)
  , file_type_(0u)
  , workshop_file_(false)
  , in_progress_(false)
  , video_provider_(0u){}
struct CMsgClientUCMPublishFileDefaultTypeInternal {
  constexpr CMsgClientUCMPublishFileDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMPublishFileDefaultTypeInternal() {}
  union {
    CMsgClientUCMPublishFile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMPublishFileDefaultTypeInternal _CMsgClientUCMPublishFile_default_instance_;
constexpr CMsgClientUCMPublishFileResponse::CMsgClientUCMPublishFileResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : needs_workshop_legal_agreement_acceptance_(false)
  , eresult_(2)
  , published_file_id_(PROTOBUF_ULONGLONG(18446744073709551615)){}
struct CMsgClientUCMPublishFileResponseDefaultTypeInternal {
  constexpr CMsgClientUCMPublishFileResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMPublishFileResponseDefaultTypeInternal() {}
  union {
    CMsgClientUCMPublishFileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMPublishFileResponseDefaultTypeInternal _CMsgClientUCMPublishFileResponse_default_instance_;
constexpr CMsgClientUCMUpdatePublishedFile_KeyValueTag::CMsgClientUCMUpdatePublishedFile_KeyValueTag(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , value_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CMsgClientUCMUpdatePublishedFile_KeyValueTagDefaultTypeInternal {
  constexpr CMsgClientUCMUpdatePublishedFile_KeyValueTagDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMUpdatePublishedFile_KeyValueTagDefaultTypeInternal() {}
  union {
    CMsgClientUCMUpdatePublishedFile_KeyValueTag _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMUpdatePublishedFile_KeyValueTagDefaultTypeInternal _CMsgClientUCMUpdatePublishedFile_KeyValueTag_default_instance_;
constexpr CMsgClientUCMUpdatePublishedFile_AdditionalPreview::CMsgClientUCMUpdatePublishedFile_AdditionalPreview(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : original_file_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , internal_file_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , videoid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , preview_type_(0u)
  , update_index_(-1){}
struct CMsgClientUCMUpdatePublishedFile_AdditionalPreviewDefaultTypeInternal {
  constexpr CMsgClientUCMUpdatePublishedFile_AdditionalPreviewDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMUpdatePublishedFile_AdditionalPreviewDefaultTypeInternal() {}
  union {
    CMsgClientUCMUpdatePublishedFile_AdditionalPreview _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMUpdatePublishedFile_AdditionalPreviewDefaultTypeInternal _CMsgClientUCMUpdatePublishedFile_AdditionalPreview_default_instance_;
constexpr CMsgClientUCMUpdatePublishedFile::CMsgClientUCMUpdatePublishedFile(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tags_()
  , removed_kvtags_()
  , kvtags_()
  , previews_()
  , previews_to_remove_()
  , content_descriptors_to_add_()
  , content_descriptors_to_remove_()
  , file_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , preview_file_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , title_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , change_description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , metadata_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , published_file_id_(PROTOBUF_ULONGLONG(0))
  , app_id_(0u)
  , visibility_(0)
  , update_file_(false)
  , update_preview_file_(false)
  , update_title_(false)
  , update_description_(false)
  , update_tags_(false)
  , update_visibility_(false)
  , update_url_(false)
  , update_content_manifest_(false)
  , content_manifest_(PROTOBUF_ULONGLONG(0))
  , language_(0)
  , update_metadata_(false)
  , clear_in_progress_(false)
  , remove_all_kvtags_(false)
  , allow_admin_tags_(false)
  , external_asset_id_(PROTOBUF_ULONGLONG(0)){}
struct CMsgClientUCMUpdatePublishedFileDefaultTypeInternal {
  constexpr CMsgClientUCMUpdatePublishedFileDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMUpdatePublishedFileDefaultTypeInternal() {}
  union {
    CMsgClientUCMUpdatePublishedFile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMUpdatePublishedFileDefaultTypeInternal _CMsgClientUCMUpdatePublishedFile_default_instance_;
constexpr CMsgClientUCMUpdatePublishedFileResponse::CMsgClientUCMUpdatePublishedFileResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : needs_workshop_legal_agreement_acceptance_(false)
  , eresult_(2){}
struct CMsgClientUCMUpdatePublishedFileResponseDefaultTypeInternal {
  constexpr CMsgClientUCMUpdatePublishedFileResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMUpdatePublishedFileResponseDefaultTypeInternal() {}
  union {
    CMsgClientUCMUpdatePublishedFileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMUpdatePublishedFileResponseDefaultTypeInternal _CMsgClientUCMUpdatePublishedFileResponse_default_instance_;
constexpr CMsgClientUCMDeletePublishedFile::CMsgClientUCMDeletePublishedFile(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : published_file_id_(PROTOBUF_ULONGLONG(0))
  , app_id_(0u){}
struct CMsgClientUCMDeletePublishedFileDefaultTypeInternal {
  constexpr CMsgClientUCMDeletePublishedFileDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMDeletePublishedFileDefaultTypeInternal() {}
  union {
    CMsgClientUCMDeletePublishedFile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMDeletePublishedFileDefaultTypeInternal _CMsgClientUCMDeletePublishedFile_default_instance_;
constexpr CMsgClientUCMDeletePublishedFileResponse::CMsgClientUCMDeletePublishedFileResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : eresult_(2){}
struct CMsgClientUCMDeletePublishedFileResponseDefaultTypeInternal {
  constexpr CMsgClientUCMDeletePublishedFileResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMDeletePublishedFileResponseDefaultTypeInternal() {}
  union {
    CMsgClientUCMDeletePublishedFileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMDeletePublishedFileResponseDefaultTypeInternal _CMsgClientUCMDeletePublishedFileResponse_default_instance_;
constexpr CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : app_id_(0u)
  , start_index_(0u)
  , start_time_(0u)
  , desired_revision_(0u){}
struct CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesDefaultTypeInternal {
  constexpr CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesDefaultTypeInternal() {}
  union {
    CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesDefaultTypeInternal _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates_default_instance_;
constexpr CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : published_file_id_(PROTOBUF_ULONGLONG(0))
  , rtime32_subscribed_(0u)
  , appid_(0u)
  , file_hcontent_(PROTOBUF_ULONGLONG(0))
  , file_size_(0u)
  , rtime32_last_updated_(0u)
  , is_depot_content_(false){}
struct CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileIdDefaultTypeInternal {
  constexpr CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileIdDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileIdDefaultTypeInternal() {}
  union {
    CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileIdDefaultTypeInternal _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_default_instance_;
constexpr CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : subscribed_files_()
  , total_results_(0u)
  , eresult_(2){}
struct CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponseDefaultTypeInternal {
  constexpr CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponseDefaultTypeInternal() {}
  union {
    CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponseDefaultTypeInternal _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_default_instance_;
constexpr CMsgClientUCMPublishedFileUpdated::CMsgClientUCMPublishedFileUpdated(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : published_file_id_(PROTOBUF_ULONGLONG(0))
  , app_id_(0u)
  , time_updated_(0u)
  , hcontent_(PROTOBUF_ULONGLONG(0))
  , file_size_(0u)
  , is_depot_content_(false)
  , revision_(0u){}
struct CMsgClientUCMPublishedFileUpdatedDefaultTypeInternal {
  constexpr CMsgClientUCMPublishedFileUpdatedDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMPublishedFileUpdatedDefaultTypeInternal() {}
  union {
    CMsgClientUCMPublishedFileUpdated _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMPublishedFileUpdatedDefaultTypeInternal _CMsgClientUCMPublishedFileUpdated_default_instance_;
constexpr CMsgClientWorkshopItemChangesRequest::CMsgClientWorkshopItemChangesRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : app_id_(0u)
  , last_time_updated_(0u)
  , num_items_needed_(0u){}
struct CMsgClientWorkshopItemChangesRequestDefaultTypeInternal {
  constexpr CMsgClientWorkshopItemChangesRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientWorkshopItemChangesRequestDefaultTypeInternal() {}
  union {
    CMsgClientWorkshopItemChangesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientWorkshopItemChangesRequestDefaultTypeInternal _CMsgClientWorkshopItemChangesRequest_default_instance_;
constexpr CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : published_file_id_(PROTOBUF_ULONGLONG(0))
  , manifest_id_(PROTOBUF_ULONGLONG(0))
  , time_updated_(0u){}
struct CMsgClientWorkshopItemChangesResponse_WorkshopItemInfoDefaultTypeInternal {
  constexpr CMsgClientWorkshopItemChangesResponse_WorkshopItemInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientWorkshopItemChangesResponse_WorkshopItemInfoDefaultTypeInternal() {}
  union {
    CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientWorkshopItemChangesResponse_WorkshopItemInfoDefaultTypeInternal _CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_default_instance_;
constexpr CMsgClientWorkshopItemChangesResponse::CMsgClientWorkshopItemChangesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : workshop_items_()
  , update_time_(0u)
  , eresult_(2){}
struct CMsgClientWorkshopItemChangesResponseDefaultTypeInternal {
  constexpr CMsgClientWorkshopItemChangesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientWorkshopItemChangesResponseDefaultTypeInternal() {}
  union {
    CMsgClientWorkshopItemChangesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientWorkshopItemChangesResponseDefaultTypeInternal _CMsgClientWorkshopItemChangesResponse_default_instance_;
constexpr CMsgClientUCMSetUserPublishedFileAction::CMsgClientUCMSetUserPublishedFileAction(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : published_file_id_(PROTOBUF_ULONGLONG(0))
  , app_id_(0u)
  , action_(0){}
struct CMsgClientUCMSetUserPublishedFileActionDefaultTypeInternal {
  constexpr CMsgClientUCMSetUserPublishedFileActionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMSetUserPublishedFileActionDefaultTypeInternal() {}
  union {
    CMsgClientUCMSetUserPublishedFileAction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMSetUserPublishedFileActionDefaultTypeInternal _CMsgClientUCMSetUserPublishedFileAction_default_instance_;
constexpr CMsgClientUCMSetUserPublishedFileActionResponse::CMsgClientUCMSetUserPublishedFileActionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : eresult_(2){}
struct CMsgClientUCMSetUserPublishedFileActionResponseDefaultTypeInternal {
  constexpr CMsgClientUCMSetUserPublishedFileActionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMSetUserPublishedFileActionResponseDefaultTypeInternal() {}
  union {
    CMsgClientUCMSetUserPublishedFileActionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMSetUserPublishedFileActionResponseDefaultTypeInternal _CMsgClientUCMSetUserPublishedFileActionResponse_default_instance_;
constexpr CMsgClientUCMEnumeratePublishedFilesByUserAction::CMsgClientUCMEnumeratePublishedFilesByUserAction(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : app_id_(0u)
  , start_index_(0u)
  , action_(0){}
struct CMsgClientUCMEnumeratePublishedFilesByUserActionDefaultTypeInternal {
  constexpr CMsgClientUCMEnumeratePublishedFilesByUserActionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMEnumeratePublishedFilesByUserActionDefaultTypeInternal() {}
  union {
    CMsgClientUCMEnumeratePublishedFilesByUserAction _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMEnumeratePublishedFilesByUserActionDefaultTypeInternal _CMsgClientUCMEnumeratePublishedFilesByUserAction_default_instance_;
constexpr CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : published_file_id_(PROTOBUF_ULONGLONG(0))
  , rtime_time_stamp_(0u){}
struct CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileIdDefaultTypeInternal {
  constexpr CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileIdDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileIdDefaultTypeInternal() {}
  union {
    CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileIdDefaultTypeInternal _CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_default_instance_;
constexpr CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : published_files_()
  , total_results_(0u)
  , eresult_(2){}
struct CMsgClientUCMEnumeratePublishedFilesByUserActionResponseDefaultTypeInternal {
  constexpr CMsgClientUCMEnumeratePublishedFilesByUserActionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUCMEnumeratePublishedFilesByUserActionResponseDefaultTypeInternal() {}
  union {
    CMsgClientUCMEnumeratePublishedFilesByUserActionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUCMEnumeratePublishedFilesByUserActionResponseDefaultTypeInternal _CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_default_instance_;
constexpr CMsgClientScreenshotsChanged::CMsgClientScreenshotsChanged(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CMsgClientScreenshotsChangedDefaultTypeInternal {
  constexpr CMsgClientScreenshotsChangedDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientScreenshotsChangedDefaultTypeInternal() {}
  union {
    CMsgClientScreenshotsChanged _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientScreenshotsChangedDefaultTypeInternal _CMsgClientScreenshotsChanged_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_steammessages_5fclientserver_5fucm_2eproto[26];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_steammessages_5fclientserver_5fucm_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_steammessages_5fclientserver_5fucm_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_steammessages_5fclientserver_5fucm_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshot_Tag, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshot_Tag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshot_Tag, tag_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshot_Tag, tag_value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, appid_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, filename_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, thumbname_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, vr_filename_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, rtime32_created_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, width_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, height_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, permissions_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, caption_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, shortcut_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, tag_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, tagged_steamid_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, spoiler_tag_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshot, tagged_publishedfileid_),
  5,
  0,
  1,
  4,
  6,
  7,
  8,
  9,
  2,
  3,
  ~0u,
  ~0u,
  10,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshotResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshotResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMAddScreenshotResponse, screenshotid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMDeleteScreenshot, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMDeleteScreenshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMDeleteScreenshot, screenshotid_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMDeleteScreenshotResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMDeleteScreenshotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMDeleteScreenshotResponse, eresult_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFile, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFile, app_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFile, file_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFile, preview_file_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFile, consumer_app_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFile, title_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFile, description_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFile, tags_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFile, workshop_file_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFile, visibility_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFile, file_type_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFile, url_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFile, video_provider_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFile, video_account_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFile, video_identifier_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFile, in_progress_),
  7,
  0,
  1,
  8,
  2,
  3,
  ~0u,
  11,
  9,
  10,
  4,
  13,
  5,
  6,
  12,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFileResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFileResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFileResponse, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishFileResponse, needs_workshop_legal_agreement_acceptance_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_KeyValueTag, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_KeyValueTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_KeyValueTag, key_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_KeyValueTag, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, original_file_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, internal_file_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, videoid_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, preview_type_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile_AdditionalPreview, update_index_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, app_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, file_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, preview_file_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, title_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, description_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, tags_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, visibility_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, update_file_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, update_preview_file_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, update_title_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, update_description_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, update_tags_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, update_visibility_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, change_description_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, update_url_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, url_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, update_content_manifest_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, content_manifest_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, metadata_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, update_metadata_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, language_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, removed_kvtags_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, kvtags_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, previews_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, previews_to_remove_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, clear_in_progress_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, remove_all_kvtags_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, content_descriptors_to_add_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, content_descriptors_to_remove_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, allow_admin_tags_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFile, external_asset_id_),
  8,
  7,
  0,
  1,
  2,
  3,
  ~0u,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  4,
  16,
  5,
  17,
  18,
  6,
  20,
  19,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  21,
  22,
  ~0u,
  ~0u,
  23,
  24,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFileResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFileResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMUpdatePublishedFileResponse, needs_workshop_legal_agreement_acceptance_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMDeletePublishedFile, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMDeletePublishedFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMDeletePublishedFile, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMDeletePublishedFile, app_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMDeletePublishedFileResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMDeletePublishedFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMDeletePublishedFileResponse, eresult_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, app_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, start_index_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, start_time_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, desired_revision_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, rtime32_subscribed_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, appid_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, file_hcontent_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, file_size_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, rtime32_last_updated_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, is_depot_content_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse, subscribed_files_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse, total_results_),
  1,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishedFileUpdated, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishedFileUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishedFileUpdated, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishedFileUpdated, app_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishedFileUpdated, time_updated_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishedFileUpdated, hcontent_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishedFileUpdated, file_size_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishedFileUpdated, is_depot_content_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMPublishedFileUpdated, revision_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  PROTOBUF_FIELD_OFFSET(::CMsgClientWorkshopItemChangesRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientWorkshopItemChangesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientWorkshopItemChangesRequest, app_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientWorkshopItemChangesRequest, last_time_updated_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientWorkshopItemChangesRequest, num_items_needed_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, time_updated_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, manifest_id_),
  0,
  2,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientWorkshopItemChangesResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientWorkshopItemChangesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientWorkshopItemChangesResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientWorkshopItemChangesResponse, update_time_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientWorkshopItemChangesResponse, workshop_items_),
  1,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMSetUserPublishedFileAction, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMSetUserPublishedFileAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMSetUserPublishedFileAction, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMSetUserPublishedFileAction, app_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMSetUserPublishedFileAction, action_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMSetUserPublishedFileActionResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMSetUserPublishedFileActionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMSetUserPublishedFileActionResponse, eresult_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserAction, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserAction, app_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserAction, start_index_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserAction, action_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId, published_file_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId, rtime_time_stamp_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse, published_files_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse, total_results_),
  1,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientScreenshotsChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::CMsgClientUCMAddScreenshot_Tag)},
  { 9, 28, sizeof(::CMsgClientUCMAddScreenshot)},
  { 42, 49, sizeof(::CMsgClientUCMAddScreenshotResponse)},
  { 51, 57, sizeof(::CMsgClientUCMDeleteScreenshot)},
  { 58, 64, sizeof(::CMsgClientUCMDeleteScreenshotResponse)},
  { 65, 85, sizeof(::CMsgClientUCMPublishFile)},
  { 100, 108, sizeof(::CMsgClientUCMPublishFileResponse)},
  { 111, 118, sizeof(::CMsgClientUCMUpdatePublishedFile_KeyValueTag)},
  { 120, 130, sizeof(::CMsgClientUCMUpdatePublishedFile_AdditionalPreview)},
  { 135, 172, sizeof(::CMsgClientUCMUpdatePublishedFile)},
  { 204, 211, sizeof(::CMsgClientUCMUpdatePublishedFileResponse)},
  { 213, 220, sizeof(::CMsgClientUCMDeletePublishedFile)},
  { 222, 228, sizeof(::CMsgClientUCMDeletePublishedFileResponse)},
  { 229, 238, sizeof(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)},
  { 242, 254, sizeof(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId)},
  { 261, 269, sizeof(::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)},
  { 272, 284, sizeof(::CMsgClientUCMPublishedFileUpdated)},
  { 291, 299, sizeof(::CMsgClientWorkshopItemChangesRequest)},
  { 302, 310, sizeof(::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo)},
  { 313, 321, sizeof(::CMsgClientWorkshopItemChangesResponse)},
  { 324, 332, sizeof(::CMsgClientUCMSetUserPublishedFileAction)},
  { 335, 341, sizeof(::CMsgClientUCMSetUserPublishedFileActionResponse)},
  { 342, 350, sizeof(::CMsgClientUCMEnumeratePublishedFilesByUserAction)},
  { 353, 360, sizeof(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId)},
  { 362, 370, sizeof(::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)},
  { 373, -1, sizeof(::CMsgClientScreenshotsChanged)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMAddScreenshot_Tag_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMAddScreenshot_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMAddScreenshotResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMDeleteScreenshot_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMDeleteScreenshotResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMPublishFile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMPublishFileResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMUpdatePublishedFile_KeyValueTag_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMUpdatePublishedFile_AdditionalPreview_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMUpdatePublishedFile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMUpdatePublishedFileResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMDeletePublishedFile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMDeletePublishedFileResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMPublishedFileUpdated_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientWorkshopItemChangesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientWorkshopItemChangesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMSetUserPublishedFileAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMSetUserPublishedFileActionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMEnumeratePublishedFilesByUserAction_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientScreenshotsChanged_default_instance_),
};

const char descriptor_table_protodef_steammessages_5fclientserver_5fucm_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n$steammessages_clientserver_ucm.proto\032 "
  "google/protobuf/descriptor.proto\032\030steamm"
  "essages_base.proto\"\201\003\n\032CMsgClientUCMAddS"
  "creenshot\022\r\n\005appid\030\001 \001(\r\022\020\n\010filename\030\002 \001"
  "(\t\022\021\n\tthumbname\030\003 \001(\t\022\023\n\013vr_filename\030\016 \001"
  "(\t\022\027\n\017rtime32_created\030\004 \001(\007\022\r\n\005width\030\005 \001"
  "(\r\022\016\n\006height\030\006 \001(\r\022\023\n\013permissions\030\007 \001(\r\022"
  "\017\n\007caption\030\010 \001(\t\022\025\n\rshortcut_name\030\t \001(\t\022"
  ",\n\003tag\030\n \003(\0132\037.CMsgClientUCMAddScreensho"
  "t.Tag\022\026\n\016tagged_steamid\030\013 \003(\006\022\023\n\013spoiler"
  "_tag\030\014 \001(\010\022\036\n\026tagged_publishedfileid\030\r \003"
  "(\004\032*\n\003Tag\022\020\n\010tag_name\030\001 \001(\t\022\021\n\ttag_value"
  "\030\002 \001(\t\"d\n\"CMsgClientUCMAddScreenshotResp"
  "onse\022\022\n\007eresult\030\001 \001(\005:\0012\022*\n\014screenshotid"
  "\030\002 \001(\006:\02418446744073709551615\"K\n\035CMsgClie"
  "ntUCMDeleteScreenshot\022*\n\014screenshotid\030\001 "
  "\001(\006:\02418446744073709551615\";\n%CMsgClientU"
  "CMDeleteScreenshotResponse\022\022\n\007eresult\030\001 "
  "\001(\005:\0012\"\321\002\n\030CMsgClientUCMPublishFile\022\016\n\006a"
  "pp_id\030\001 \001(\r\022\021\n\tfile_name\030\002 \001(\t\022\031\n\021previe"
  "w_file_name\030\003 \001(\t\022\027\n\017consumer_app_id\030\004 \001"
  "(\r\022\r\n\005title\030\005 \001(\t\022\023\n\013description\030\006 \001(\t\022\014"
  "\n\004tags\030\010 \003(\t\022\025\n\rworkshop_file\030\t \001(\010\022\022\n\nv"
  "isibility\030\n \001(\005\022\021\n\tfile_type\030\013 \001(\r\022\013\n\003ur"
  "l\030\014 \001(\t\022\026\n\016video_provider\030\r \001(\r\022\032\n\022video"
  "_account_name\030\016 \001(\t\022\030\n\020video_identifier\030"
  "\017 \001(\t\022\023\n\013in_progress\030\020 \001(\010\"\241\001\n CMsgClien"
  "tUCMPublishFileResponse\022\022\n\007eresult\030\001 \001(\005"
  ":\0012\022/\n\021published_file_id\030\002 \001(\006:\02418446744"
  "073709551615\0228\n)needs_workshop_legal_agr"
  "eement_acceptance\030\003 \001(\010:\005false\"\276\010\n CMsgC"
  "lientUCMUpdatePublishedFile\022\016\n\006app_id\030\001 "
  "\001(\r\022\031\n\021published_file_id\030\002 \001(\006\022\021\n\tfile_n"
  "ame\030\003 \001(\t\022\031\n\021preview_file_name\030\004 \001(\t\022\r\n\005"
  "title\030\005 \001(\t\022\023\n\013description\030\006 \001(\t\022\014\n\004tags"
  "\030\007 \003(\t\022\022\n\nvisibility\030\010 \001(\005\022\023\n\013update_fil"
  "e\030\t \001(\010\022\033\n\023update_preview_file\030\n \001(\010\022\024\n\014"
  "update_title\030\013 \001(\010\022\032\n\022update_description"
  "\030\014 \001(\010\022\023\n\013update_tags\030\r \001(\010\022\031\n\021update_vi"
  "sibility\030\016 \001(\010\022\032\n\022change_description\030\017 \001"
  "(\t\022\022\n\nupdate_url\030\020 \001(\010\022\013\n\003url\030\021 \001(\t\022\037\n\027u"
  "pdate_content_manifest\030\022 \001(\010\022\030\n\020content_"
  "manifest\030\023 \001(\006\022\020\n\010metadata\030\024 \001(\t\022\027\n\017upda"
  "te_metadata\030\025 \001(\010\022\023\n\010language\030\026 \001(\005:\0010\022\026"
  "\n\016removed_kvtags\030\027 \003(\t\022=\n\006kvtags\030\030 \003(\0132-"
  ".CMsgClientUCMUpdatePublishedFile.KeyVal"
  "ueTag\022E\n\010previews\030\031 \003(\01323.CMsgClientUCMU"
  "pdatePublishedFile.AdditionalPreview\022\032\n\022"
  "previews_to_remove\030\032 \003(\005\022\031\n\021clear_in_pro"
  "gress\030\033 \001(\010\022\031\n\021remove_all_kvtags\030\034 \001(\010\022\""
  "\n\032content_descriptors_to_add\030\035 \003(\005\022%\n\035co"
  "ntent_descriptors_to_remove\030\036 \003(\005\022\037\n\020all"
  "ow_admin_tags\030\037 \001(\010:\005false\022\031\n\021external_a"
  "sset_id\030  \001(\004\032)\n\013KeyValueTag\022\013\n\003key\030\001 \001("
  "\t\022\r\n\005value\030\002 \001(\t\032\214\001\n\021AdditionalPreview\022\032"
  "\n\022original_file_name\030\001 \001(\t\022\032\n\022internal_f"
  "ile_name\030\002 \001(\t\022\017\n\007videoid\030\003 \001(\t\022\024\n\014previ"
  "ew_type\030\004 \001(\r\022\030\n\014update_index\030\005 \001(\005:\002-1\""
  "x\n(CMsgClientUCMUpdatePublishedFileRespo"
  "nse\022\022\n\007eresult\030\001 \001(\005:\0012\0228\n)needs_worksho"
  "p_legal_agreement_acceptance\030\002 \001(\010:\005fals"
  "e\"M\n CMsgClientUCMDeletePublishedFile\022\031\n"
  "\021published_file_id\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\r"
  "\">\n(CMsgClientUCMDeletePublishedFileResp"
  "onse\022\022\n\007eresult\030\001 \001(\005:\0012\"\214\001\n4CMsgClientU"
  "CMEnumerateUserSubscribedFilesWithUpdate"
  "s\022\016\n\006app_id\030\001 \001(\r\022\023\n\013start_index\030\002 \001(\r\022\022"
  "\n\nstart_time\030\003 \001(\007\022\033\n\020desired_revision\030\004"
  " \001(\r:\0010\"\221\003\n<CMsgClientUCMEnumerateUserSu"
  "bscribedFilesWithUpdatesResponse\022\022\n\007eres"
  "ult\030\001 \001(\005:\0012\022g\n\020subscribed_files\030\002 \003(\0132M"
  ".CMsgClientUCMEnumerateUserSubscribedFil"
  "esWithUpdatesResponse.PublishedFileId\022\025\n"
  "\rtotal_results\030\003 \001(\r\032\274\001\n\017PublishedFileId"
  "\022\031\n\021published_file_id\030\001 \001(\006\022\035\n\022rtime32_s"
  "ubscribed\030\002 \001(\007:\0010\022\r\n\005appid\030\003 \001(\r\022\025\n\rfil"
  "e_hcontent\030\004 \001(\006\022\021\n\tfile_size\030\005 \001(\r\022\034\n\024r"
  "time32_last_updated\030\006 \001(\007\022\030\n\020is_depot_co"
  "ntent\030\007 \001(\010\"\265\001\n!CMsgClientUCMPublishedFi"
  "leUpdated\022\031\n\021published_file_id\030\001 \001(\006\022\016\n\006"
  "app_id\030\002 \001(\r\022\024\n\014time_updated\030\003 \001(\r\022\020\n\010hc"
  "ontent\030\004 \001(\006\022\021\n\tfile_size\030\005 \001(\007\022\030\n\020is_de"
  "pot_content\030\006 \001(\010\022\020\n\010revision\030\007 \001(\r\"k\n$C"
  "MsgClientWorkshopItemChangesRequest\022\016\n\006a"
  "pp_id\030\001 \001(\r\022\031\n\021last_time_updated\030\002 \001(\r\022\030"
  "\n\020num_items_needed\030\003 \001(\r\"\373\001\n%CMsgClientW"
  "orkshopItemChangesResponse\022\022\n\007eresult\030\001 "
  "\001(\005:\0012\022\023\n\013update_time\030\002 \001(\r\022O\n\016workshop_"
  "items\030\005 \003(\01327.CMsgClientWorkshopItemChan"
  "gesResponse.WorkshopItemInfo\032X\n\020Workshop"
  "ItemInfo\022\031\n\021published_file_id\030\001 \001(\006\022\024\n\014t"
  "ime_updated\030\002 \001(\r\022\023\n\013manifest_id\030\003 \001(\006\"d"
  "\n\'CMsgClientUCMSetUserPublishedFileActio"
  "n\022\031\n\021published_file_id\030\001 \001(\006\022\016\n\006app_id\030\002"
  " \001(\r\022\016\n\006action\030\003 \001(\005\"E\n/CMsgClientUCMSet"
  "UserPublishedFileActionResponse\022\022\n\007eresu"
  "lt\030\001 \001(\005:\0012\"g\n0CMsgClientUCMEnumeratePub"
  "lishedFilesByUserAction\022\016\n\006app_id\030\001 \001(\r\022"
  "\023\n\013start_index\030\002 \001(\r\022\016\n\006action\030\003 \001(\005\"\224\002\n"
  "8CMsgClientUCMEnumeratePublishedFilesByU"
  "serActionResponse\022\022\n\007eresult\030\001 \001(\005:\0012\022b\n"
  "\017published_files\030\002 \003(\0132I.CMsgClientUCMEn"
  "umeratePublishedFilesByUserActionRespons"
  "e.PublishedFileId\022\025\n\rtotal_results\030\003 \001(\r"
  "\032I\n\017PublishedFileId\022\031\n\021published_file_id"
  "\030\001 \001(\006\022\033\n\020rtime_time_stamp\030\002 \001(\007:\0010\"\036\n\034C"
  "MsgClientScreenshotsChangedB\037H\001\200\001\000\252\002\027Ope"
  "nSteamworks.Protobuf"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_steammessages_5fclientserver_5fucm_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
  &::descriptor_table_steammessages_5fbase_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_steammessages_5fclientserver_5fucm_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_steammessages_5fclientserver_5fucm_2eproto = {
  false, false, 4300, descriptor_table_protodef_steammessages_5fclientserver_5fucm_2eproto, "steammessages_clientserver_ucm.proto", 
  &descriptor_table_steammessages_5fclientserver_5fucm_2eproto_once, descriptor_table_steammessages_5fclientserver_5fucm_2eproto_deps, 2, 26,
  schemas, file_default_instances, TableStruct_steammessages_5fclientserver_5fucm_2eproto::offsets,
  file_level_metadata_steammessages_5fclientserver_5fucm_2eproto, file_level_enum_descriptors_steammessages_5fclientserver_5fucm_2eproto, file_level_service_descriptors_steammessages_5fclientserver_5fucm_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_steammessages_5fclientserver_5fucm_2eproto);
  return descriptor_table_steammessages_5fclientserver_5fucm_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_steammessages_5fclientserver_5fucm_2eproto(&descriptor_table_steammessages_5fclientserver_5fucm_2eproto);

// ===================================================================

class CMsgClientUCMAddScreenshot_Tag::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMAddScreenshot_Tag>()._has_bits_);
  static void set_has_tag_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_tag_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientUCMAddScreenshot_Tag::CMsgClientUCMAddScreenshot_Tag(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMAddScreenshot.Tag)
}
CMsgClientUCMAddScreenshot_Tag::CMsgClientUCMAddScreenshot_Tag(const CMsgClientUCMAddScreenshot_Tag& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tag_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_tag_name()) {
    tag_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tag_name(), 
      GetArena());
  }
  tag_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_tag_value()) {
    tag_value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tag_value(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMAddScreenshot.Tag)
}

void CMsgClientUCMAddScreenshot_Tag::SharedCtor() {
tag_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
tag_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CMsgClientUCMAddScreenshot_Tag::~CMsgClientUCMAddScreenshot_Tag() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMAddScreenshot.Tag)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMAddScreenshot_Tag::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  tag_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tag_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMAddScreenshot_Tag::ArenaDtor(void* object) {
  CMsgClientUCMAddScreenshot_Tag* _this = reinterpret_cast< CMsgClientUCMAddScreenshot_Tag* >(object);
  (void)_this;
}
void CMsgClientUCMAddScreenshot_Tag::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMAddScreenshot_Tag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMAddScreenshot_Tag::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMAddScreenshot.Tag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      tag_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      tag_value_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMAddScreenshot_Tag::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string tag_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_tag_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMAddScreenshot.Tag.tag_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string tag_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_tag_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMAddScreenshot.Tag.tag_value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMAddScreenshot_Tag::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMAddScreenshot.Tag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string tag_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_tag_name().data(), static_cast<int>(this->_internal_tag_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.Tag.tag_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tag_name(), target);
  }

  // optional string tag_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_tag_value().data(), static_cast<int>(this->_internal_tag_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.Tag.tag_value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_tag_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMAddScreenshot.Tag)
  return target;
}

size_t CMsgClientUCMAddScreenshot_Tag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMAddScreenshot.Tag)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string tag_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_tag_name());
    }

    // optional string tag_value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_tag_value());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMAddScreenshot_Tag::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMAddScreenshot.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMAddScreenshot_Tag* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMAddScreenshot_Tag>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMAddScreenshot.Tag)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMAddScreenshot.Tag)
    MergeFrom(*source);
  }
}

void CMsgClientUCMAddScreenshot_Tag::MergeFrom(const CMsgClientUCMAddScreenshot_Tag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMAddScreenshot.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_tag_name(from._internal_tag_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_tag_value(from._internal_tag_value());
    }
  }
}

void CMsgClientUCMAddScreenshot_Tag::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMAddScreenshot.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMAddScreenshot_Tag::CopyFrom(const CMsgClientUCMAddScreenshot_Tag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMAddScreenshot.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMAddScreenshot_Tag::IsInitialized() const {
  return true;
}

void CMsgClientUCMAddScreenshot_Tag::InternalSwap(CMsgClientUCMAddScreenshot_Tag* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  tag_name_.Swap(&other->tag_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tag_value_.Swap(&other->tag_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMAddScreenshot_Tag::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMAddScreenshot::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMAddScreenshot>()._has_bits_);
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_filename(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_thumbname(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_vr_filename(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_rtime32_created(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_width(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_height(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_permissions(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_caption(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_shortcut_name(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_spoiler_tag(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
};

CMsgClientUCMAddScreenshot::CMsgClientUCMAddScreenshot(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tag_(arena),
  tagged_steamid_(arena),
  tagged_publishedfileid_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMAddScreenshot)
}
CMsgClientUCMAddScreenshot::CMsgClientUCMAddScreenshot(const CMsgClientUCMAddScreenshot& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      tag_(from.tag_),
      tagged_steamid_(from.tagged_steamid_),
      tagged_publishedfileid_(from.tagged_publishedfileid_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_filename()) {
    filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_filename(), 
      GetArena());
  }
  thumbname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_thumbname()) {
    thumbname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_thumbname(), 
      GetArena());
  }
  caption_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_caption()) {
    caption_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_caption(), 
      GetArena());
  }
  shortcut_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_shortcut_name()) {
    shortcut_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_shortcut_name(), 
      GetArena());
  }
  vr_filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_vr_filename()) {
    vr_filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_vr_filename(), 
      GetArena());
  }
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&spoiler_tag_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(spoiler_tag_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMAddScreenshot)
}

void CMsgClientUCMAddScreenshot::SharedCtor() {
filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
thumbname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
caption_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
shortcut_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
vr_filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&appid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&spoiler_tag_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(spoiler_tag_));
}

CMsgClientUCMAddScreenshot::~CMsgClientUCMAddScreenshot() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMAddScreenshot)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMAddScreenshot::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  filename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  thumbname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  caption_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  shortcut_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vr_filename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMAddScreenshot::ArenaDtor(void* object) {
  CMsgClientUCMAddScreenshot* _this = reinterpret_cast< CMsgClientUCMAddScreenshot* >(object);
  (void)_this;
}
void CMsgClientUCMAddScreenshot::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMAddScreenshot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMAddScreenshot::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMAddScreenshot)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tag_.Clear();
  tagged_steamid_.Clear();
  tagged_publishedfileid_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      filename_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      thumbname_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      caption_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      shortcut_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      vr_filename_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000e0u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&width_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(width_));
  }
  if (cached_has_bits & 0x00000700u) {
    ::memset(&height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&spoiler_tag_) -
        reinterpret_cast<char*>(&height_)) + sizeof(spoiler_tag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMAddScreenshot::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 appid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_appid(&has_bits);
          appid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string filename = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_filename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMAddScreenshot.filename");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string thumbname = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_thumbname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMAddScreenshot.thumbname");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed32 rtime32_created = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          _Internal::set_has_rtime32_created(&has_bits);
          rtime32_created_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // optional uint32 width = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_width(&has_bits);
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 height = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_height(&has_bits);
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 permissions = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_permissions(&has_bits);
          permissions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string caption = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_caption();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMAddScreenshot.caption");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string shortcut_name = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_shortcut_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMAddScreenshot.shortcut_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .CMsgClientUCMAddScreenshot.Tag tag = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tag(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated fixed64 tagged_steamid = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 89)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_tagged_steamid(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr));
            ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<89>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFixed64Parser(_internal_mutable_tagged_steamid(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool spoiler_tag = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_spoiler_tag(&has_bits);
          spoiler_tag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint64 tagged_publishedfileid = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_tagged_publishedfileid(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<104>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_tagged_publishedfileid(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string vr_filename = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_vr_filename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMAddScreenshot.vr_filename");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMAddScreenshot::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMAddScreenshot)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_appid(), target);
  }

  // optional string filename = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_filename().data(), static_cast<int>(this->_internal_filename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.filename");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_filename(), target);
  }

  // optional string thumbname = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_thumbname().data(), static_cast<int>(this->_internal_thumbname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.thumbname");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_thumbname(), target);
  }

  // optional fixed32 rtime32_created = 4;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(4, this->_internal_rtime32_created(), target);
  }

  // optional uint32 width = 5;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_width(), target);
  }

  // optional uint32 height = 6;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_height(), target);
  }

  // optional uint32 permissions = 7;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_permissions(), target);
  }

  // optional string caption = 8;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_caption().data(), static_cast<int>(this->_internal_caption().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.caption");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_caption(), target);
  }

  // optional string shortcut_name = 9;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_shortcut_name().data(), static_cast<int>(this->_internal_shortcut_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.shortcut_name");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_shortcut_name(), target);
  }

  // repeated .CMsgClientUCMAddScreenshot.Tag tag = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tag_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, this->_internal_tag(i), target, stream);
  }

  // repeated fixed64 tagged_steamid = 11;
  for (int i = 0, n = this->_internal_tagged_steamid_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(11, this->_internal_tagged_steamid(i), target);
  }

  // optional bool spoiler_tag = 12;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_spoiler_tag(), target);
  }

  // repeated uint64 tagged_publishedfileid = 13;
  for (int i = 0, n = this->_internal_tagged_publishedfileid_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(13, this->_internal_tagged_publishedfileid(i), target);
  }

  // optional string vr_filename = 14;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_vr_filename().data(), static_cast<int>(this->_internal_vr_filename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMAddScreenshot.vr_filename");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_vr_filename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMAddScreenshot)
  return target;
}

size_t CMsgClientUCMAddScreenshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMAddScreenshot)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgClientUCMAddScreenshot.Tag tag = 10;
  total_size += 1UL * this->_internal_tag_size();
  for (const auto& msg : this->tag_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated fixed64 tagged_steamid = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_tagged_steamid_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_tagged_steamid_size());
    total_size += data_size;
  }

  // repeated uint64 tagged_publishedfileid = 13;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->tagged_publishedfileid_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_tagged_publishedfileid_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string filename = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_filename());
    }

    // optional string thumbname = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_thumbname());
    }

    // optional string caption = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_caption());
    }

    // optional string shortcut_name = 9;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_shortcut_name());
    }

    // optional string vr_filename = 14;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_vr_filename());
    }

    // optional uint32 appid = 1;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_appid());
    }

    // optional fixed32 rtime32_created = 4;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 4;
    }

    // optional uint32 width = 5;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_width());
    }

  }
  if (cached_has_bits & 0x00000700u) {
    // optional uint32 height = 6;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_height());
    }

    // optional uint32 permissions = 7;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_permissions());
    }

    // optional bool spoiler_tag = 12;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMAddScreenshot::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMAddScreenshot)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMAddScreenshot* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMAddScreenshot>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMAddScreenshot)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMAddScreenshot)
    MergeFrom(*source);
  }
}

void CMsgClientUCMAddScreenshot::MergeFrom(const CMsgClientUCMAddScreenshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMAddScreenshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tag_.MergeFrom(from.tag_);
  tagged_steamid_.MergeFrom(from.tagged_steamid_);
  tagged_publishedfileid_.MergeFrom(from.tagged_publishedfileid_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_filename(from._internal_filename());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_thumbname(from._internal_thumbname());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_caption(from._internal_caption());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_shortcut_name(from._internal_shortcut_name());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_vr_filename(from._internal_vr_filename());
    }
    if (cached_has_bits & 0x00000020u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000040u) {
      rtime32_created_ = from.rtime32_created_;
    }
    if (cached_has_bits & 0x00000080u) {
      width_ = from.width_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000200u) {
      permissions_ = from.permissions_;
    }
    if (cached_has_bits & 0x00000400u) {
      spoiler_tag_ = from.spoiler_tag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMAddScreenshot::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMAddScreenshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMAddScreenshot::CopyFrom(const CMsgClientUCMAddScreenshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMAddScreenshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMAddScreenshot::IsInitialized() const {
  return true;
}

void CMsgClientUCMAddScreenshot::InternalSwap(CMsgClientUCMAddScreenshot* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  tag_.InternalSwap(&other->tag_);
  tagged_steamid_.InternalSwap(&other->tagged_steamid_);
  tagged_publishedfileid_.InternalSwap(&other->tagged_publishedfileid_);
  filename_.Swap(&other->filename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  thumbname_.Swap(&other->thumbname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  caption_.Swap(&other->caption_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  shortcut_name_.Swap(&other->shortcut_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  vr_filename_.Swap(&other->vr_filename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientUCMAddScreenshot, spoiler_tag_)
      + sizeof(CMsgClientUCMAddScreenshot::spoiler_tag_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientUCMAddScreenshot, appid_)>(
          reinterpret_cast<char*>(&appid_),
          reinterpret_cast<char*>(&other->appid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMAddScreenshot::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMAddScreenshotResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMAddScreenshotResponse>()._has_bits_);
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_screenshotid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientUCMAddScreenshotResponse::CMsgClientUCMAddScreenshotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMAddScreenshotResponse)
}
CMsgClientUCMAddScreenshotResponse::CMsgClientUCMAddScreenshotResponse(const CMsgClientUCMAddScreenshotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&eresult_, &from.eresult_,
    static_cast<size_t>(reinterpret_cast<char*>(&screenshotid_) -
    reinterpret_cast<char*>(&eresult_)) + sizeof(screenshotid_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMAddScreenshotResponse)
}

void CMsgClientUCMAddScreenshotResponse::SharedCtor() {
eresult_ = 2;
screenshotid_ = PROTOBUF_ULONGLONG(18446744073709551615);
}

CMsgClientUCMAddScreenshotResponse::~CMsgClientUCMAddScreenshotResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMAddScreenshotResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMAddScreenshotResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientUCMAddScreenshotResponse::ArenaDtor(void* object) {
  CMsgClientUCMAddScreenshotResponse* _this = reinterpret_cast< CMsgClientUCMAddScreenshotResponse* >(object);
  (void)_this;
}
void CMsgClientUCMAddScreenshotResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMAddScreenshotResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMAddScreenshotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMAddScreenshotResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    eresult_ = 2;
    screenshotid_ = PROTOBUF_ULONGLONG(18446744073709551615);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMAddScreenshotResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_eresult(&has_bits);
          eresult_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed64 screenshotid = 2 [default = 18446744073709551615];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_screenshotid(&has_bits);
          screenshotid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMAddScreenshotResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMAddScreenshotResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_eresult(), target);
  }

  // optional fixed64 screenshotid = 2 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(2, this->_internal_screenshotid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMAddScreenshotResponse)
  return target;
}

size_t CMsgClientUCMAddScreenshotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMAddScreenshotResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_eresult());
    }

    // optional fixed64 screenshotid = 2 [default = 18446744073709551615];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMAddScreenshotResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMAddScreenshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMAddScreenshotResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMAddScreenshotResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMAddScreenshotResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMAddScreenshotResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMAddScreenshotResponse::MergeFrom(const CMsgClientUCMAddScreenshotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMAddScreenshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000002u) {
      screenshotid_ = from.screenshotid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMAddScreenshotResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMAddScreenshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMAddScreenshotResponse::CopyFrom(const CMsgClientUCMAddScreenshotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMAddScreenshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMAddScreenshotResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMAddScreenshotResponse::InternalSwap(CMsgClientUCMAddScreenshotResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(eresult_, other->eresult_);
  swap(screenshotid_, other->screenshotid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMAddScreenshotResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMDeleteScreenshot::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMDeleteScreenshot>()._has_bits_);
  static void set_has_screenshotid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientUCMDeleteScreenshot::CMsgClientUCMDeleteScreenshot(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMDeleteScreenshot)
}
CMsgClientUCMDeleteScreenshot::CMsgClientUCMDeleteScreenshot(const CMsgClientUCMDeleteScreenshot& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  screenshotid_ = from.screenshotid_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMDeleteScreenshot)
}

void CMsgClientUCMDeleteScreenshot::SharedCtor() {
screenshotid_ = PROTOBUF_ULONGLONG(18446744073709551615);
}

CMsgClientUCMDeleteScreenshot::~CMsgClientUCMDeleteScreenshot() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMDeleteScreenshot)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMDeleteScreenshot::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientUCMDeleteScreenshot::ArenaDtor(void* object) {
  CMsgClientUCMDeleteScreenshot* _this = reinterpret_cast< CMsgClientUCMDeleteScreenshot* >(object);
  (void)_this;
}
void CMsgClientUCMDeleteScreenshot::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMDeleteScreenshot::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMDeleteScreenshot::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMDeleteScreenshot)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  screenshotid_ = PROTOBUF_ULONGLONG(18446744073709551615);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMDeleteScreenshot::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 screenshotid = 1 [default = 18446744073709551615];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_screenshotid(&has_bits);
          screenshotid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMDeleteScreenshot::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMDeleteScreenshot)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 screenshotid = 1 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_screenshotid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMDeleteScreenshot)
  return target;
}

size_t CMsgClientUCMDeleteScreenshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMDeleteScreenshot)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 screenshotid = 1 [default = 18446744073709551615];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMDeleteScreenshot::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMDeleteScreenshot)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMDeleteScreenshot* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMDeleteScreenshot>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMDeleteScreenshot)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMDeleteScreenshot)
    MergeFrom(*source);
  }
}

void CMsgClientUCMDeleteScreenshot::MergeFrom(const CMsgClientUCMDeleteScreenshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMDeleteScreenshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_screenshotid()) {
    _internal_set_screenshotid(from._internal_screenshotid());
  }
}

void CMsgClientUCMDeleteScreenshot::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMDeleteScreenshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMDeleteScreenshot::CopyFrom(const CMsgClientUCMDeleteScreenshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMDeleteScreenshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMDeleteScreenshot::IsInitialized() const {
  return true;
}

void CMsgClientUCMDeleteScreenshot::InternalSwap(CMsgClientUCMDeleteScreenshot* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(screenshotid_, other->screenshotid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMDeleteScreenshot::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMDeleteScreenshotResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMDeleteScreenshotResponse>()._has_bits_);
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientUCMDeleteScreenshotResponse::CMsgClientUCMDeleteScreenshotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMDeleteScreenshotResponse)
}
CMsgClientUCMDeleteScreenshotResponse::CMsgClientUCMDeleteScreenshotResponse(const CMsgClientUCMDeleteScreenshotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMDeleteScreenshotResponse)
}

void CMsgClientUCMDeleteScreenshotResponse::SharedCtor() {
eresult_ = 2;
}

CMsgClientUCMDeleteScreenshotResponse::~CMsgClientUCMDeleteScreenshotResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMDeleteScreenshotResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMDeleteScreenshotResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientUCMDeleteScreenshotResponse::ArenaDtor(void* object) {
  CMsgClientUCMDeleteScreenshotResponse* _this = reinterpret_cast< CMsgClientUCMDeleteScreenshotResponse* >(object);
  (void)_this;
}
void CMsgClientUCMDeleteScreenshotResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMDeleteScreenshotResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMDeleteScreenshotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMDeleteScreenshotResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMDeleteScreenshotResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_eresult(&has_bits);
          eresult_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMDeleteScreenshotResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMDeleteScreenshotResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_eresult(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMDeleteScreenshotResponse)
  return target;
}

size_t CMsgClientUCMDeleteScreenshotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMDeleteScreenshotResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 eresult = 1 [default = 2];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_eresult());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMDeleteScreenshotResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMDeleteScreenshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMDeleteScreenshotResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMDeleteScreenshotResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMDeleteScreenshotResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMDeleteScreenshotResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMDeleteScreenshotResponse::MergeFrom(const CMsgClientUCMDeleteScreenshotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMDeleteScreenshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_eresult()) {
    _internal_set_eresult(from._internal_eresult());
  }
}

void CMsgClientUCMDeleteScreenshotResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMDeleteScreenshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMDeleteScreenshotResponse::CopyFrom(const CMsgClientUCMDeleteScreenshotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMDeleteScreenshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMDeleteScreenshotResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMDeleteScreenshotResponse::InternalSwap(CMsgClientUCMDeleteScreenshotResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(eresult_, other->eresult_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMDeleteScreenshotResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMPublishFile::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMPublishFile>()._has_bits_);
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_file_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_preview_file_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_consumer_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_workshop_file(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_visibility(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_file_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_url(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_video_provider(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_video_account_name(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_video_identifier(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_in_progress(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
};

CMsgClientUCMPublishFile::CMsgClientUCMPublishFile(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tags_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMPublishFile)
}
CMsgClientUCMPublishFile::CMsgClientUCMPublishFile(const CMsgClientUCMPublishFile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_file_name()) {
    file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_file_name(), 
      GetArena());
  }
  preview_file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_preview_file_name()) {
    preview_file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_preview_file_name(), 
      GetArena());
  }
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_title()) {
    title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_title(), 
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_description()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_url()) {
    url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_url(), 
      GetArena());
  }
  video_account_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_video_account_name()) {
    video_account_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_video_account_name(), 
      GetArena());
  }
  video_identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_video_identifier()) {
    video_identifier_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_video_identifier(), 
      GetArena());
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&video_provider_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(video_provider_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMPublishFile)
}

void CMsgClientUCMPublishFile::SharedCtor() {
file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
preview_file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
video_account_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
video_identifier_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&app_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&video_provider_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(video_provider_));
}

CMsgClientUCMPublishFile::~CMsgClientUCMPublishFile() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMPublishFile)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMPublishFile::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  file_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  preview_file_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  video_account_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  video_identifier_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMPublishFile::ArenaDtor(void* object) {
  CMsgClientUCMPublishFile* _this = reinterpret_cast< CMsgClientUCMPublishFile* >(object);
  (void)_this;
}
void CMsgClientUCMPublishFile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMPublishFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMPublishFile::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMPublishFile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      file_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      preview_file_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      description_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      url_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      video_account_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      video_identifier_.ClearNonDefaultToEmpty();
    }
  }
  app_id_ = 0u;
  if (cached_has_bits & 0x00003f00u) {
    ::memset(&consumer_app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&video_provider_) -
        reinterpret_cast<char*>(&consumer_app_id_)) + sizeof(video_provider_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMPublishFile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_app_id(&has_bits);
          app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string file_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_file_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMPublishFile.file_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string preview_file_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_preview_file_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMPublishFile.preview_file_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 consumer_app_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_consumer_app_id(&has_bits);
          consumer_app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string title = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_title();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMPublishFile.title");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string description = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMPublishFile.description");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string tags = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_tags();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMPublishFile.tags");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bool workshop_file = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_workshop_file(&has_bits);
          workshop_file_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 visibility = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_visibility(&has_bits);
          visibility_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 file_type = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_file_type(&has_bits);
          file_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string url = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMPublishFile.url");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 video_provider = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_video_provider(&has_bits);
          video_provider_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string video_account_name = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_video_account_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMPublishFile.video_account_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string video_identifier = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_video_identifier();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMPublishFile.video_identifier");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool in_progress = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_in_progress(&has_bits);
          in_progress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMPublishFile::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMPublishFile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_app_id(), target);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_file_name().data(), static_cast<int>(this->_internal_file_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.file_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_file_name(), target);
  }

  // optional string preview_file_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_preview_file_name().data(), static_cast<int>(this->_internal_preview_file_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.preview_file_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_preview_file_name(), target);
  }

  // optional uint32 consumer_app_id = 4;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_consumer_app_id(), target);
  }

  // optional string title = 5;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.title");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_title(), target);
  }

  // optional string description = 6;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.description");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_description(), target);
  }

  // repeated string tags = 8;
  for (int i = 0, n = this->_internal_tags_size(); i < n; i++) {
    const auto& s = this->_internal_tags(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.tags");
    target = stream->WriteString(8, s, target);
  }

  // optional bool workshop_file = 9;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->_internal_workshop_file(), target);
  }

  // optional int32 visibility = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_visibility(), target);
  }

  // optional uint32 file_type = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_file_type(), target);
  }

  // optional string url = 12;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.url");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_url(), target);
  }

  // optional uint32 video_provider = 13;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_video_provider(), target);
  }

  // optional string video_account_name = 14;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_video_account_name().data(), static_cast<int>(this->_internal_video_account_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.video_account_name");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_video_account_name(), target);
  }

  // optional string video_identifier = 15;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_video_identifier().data(), static_cast<int>(this->_internal_video_identifier().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMPublishFile.video_identifier");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_video_identifier(), target);
  }

  // optional bool in_progress = 16;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->_internal_in_progress(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMPublishFile)
  return target;
}

size_t CMsgClientUCMPublishFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMPublishFile)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(tags_.size());
  for (int i = 0, n = tags_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      tags_.Get(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string file_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_file_name());
    }

    // optional string preview_file_name = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_preview_file_name());
    }

    // optional string title = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_title());
    }

    // optional string description = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_description());
    }

    // optional string url = 12;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_url());
    }

    // optional string video_account_name = 14;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_video_account_name());
    }

    // optional string video_identifier = 15;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_video_identifier());
    }

    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_app_id());
    }

  }
  if (cached_has_bits & 0x00003f00u) {
    // optional uint32 consumer_app_id = 4;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_consumer_app_id());
    }

    // optional int32 visibility = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_visibility());
    }

    // optional uint32 file_type = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_file_type());
    }

    // optional bool workshop_file = 9;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 1;
    }

    // optional bool in_progress = 16;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 + 1;
    }

    // optional uint32 video_provider = 13;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_video_provider());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMPublishFile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMPublishFile)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishFile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMPublishFile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMPublishFile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMPublishFile)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishFile::MergeFrom(const CMsgClientUCMPublishFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMPublishFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_file_name(from._internal_file_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_preview_file_name(from._internal_preview_file_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_url(from._internal_url());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_set_video_account_name(from._internal_video_account_name());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_set_video_identifier(from._internal_video_identifier());
    }
    if (cached_has_bits & 0x00000080u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00003f00u) {
    if (cached_has_bits & 0x00000100u) {
      consumer_app_id_ = from.consumer_app_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      visibility_ = from.visibility_;
    }
    if (cached_has_bits & 0x00000400u) {
      file_type_ = from.file_type_;
    }
    if (cached_has_bits & 0x00000800u) {
      workshop_file_ = from.workshop_file_;
    }
    if (cached_has_bits & 0x00001000u) {
      in_progress_ = from.in_progress_;
    }
    if (cached_has_bits & 0x00002000u) {
      video_provider_ = from.video_provider_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishFile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMPublishFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishFile::CopyFrom(const CMsgClientUCMPublishFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMPublishFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishFile::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishFile::InternalSwap(CMsgClientUCMPublishFile* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  tags_.InternalSwap(&other->tags_);
  file_name_.Swap(&other->file_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  preview_file_name_.Swap(&other->preview_file_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  title_.Swap(&other->title_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  video_account_name_.Swap(&other->video_account_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  video_identifier_.Swap(&other->video_identifier_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientUCMPublishFile, video_provider_)
      + sizeof(CMsgClientUCMPublishFile::video_provider_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientUCMPublishFile, app_id_)>(
          reinterpret_cast<char*>(&app_id_),
          reinterpret_cast<char*>(&other->app_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMPublishFile::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMPublishFileResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMPublishFileResponse>()._has_bits_);
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_published_file_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_needs_workshop_legal_agreement_acceptance(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientUCMPublishFileResponse::CMsgClientUCMPublishFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMPublishFileResponse)
}
CMsgClientUCMPublishFileResponse::CMsgClientUCMPublishFileResponse(const CMsgClientUCMPublishFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&needs_workshop_legal_agreement_acceptance_, &from.needs_workshop_legal_agreement_acceptance_,
    static_cast<size_t>(reinterpret_cast<char*>(&published_file_id_) -
    reinterpret_cast<char*>(&needs_workshop_legal_agreement_acceptance_)) + sizeof(published_file_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMPublishFileResponse)
}

void CMsgClientUCMPublishFileResponse::SharedCtor() {
needs_workshop_legal_agreement_acceptance_ = false;
eresult_ = 2;
published_file_id_ = PROTOBUF_ULONGLONG(18446744073709551615);
}

CMsgClientUCMPublishFileResponse::~CMsgClientUCMPublishFileResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMPublishFileResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMPublishFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientUCMPublishFileResponse::ArenaDtor(void* object) {
  CMsgClientUCMPublishFileResponse* _this = reinterpret_cast< CMsgClientUCMPublishFileResponse* >(object);
  (void)_this;
}
void CMsgClientUCMPublishFileResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMPublishFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMPublishFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMPublishFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    needs_workshop_legal_agreement_acceptance_ = false;
    eresult_ = 2;
    published_file_id_ = PROTOBUF_ULONGLONG(18446744073709551615);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMPublishFileResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_eresult(&has_bits);
          eresult_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed64 published_file_id = 2 [default = 18446744073709551615];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_published_file_id(&has_bits);
          published_file_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional bool needs_workshop_legal_agreement_acceptance = 3 [default = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_needs_workshop_legal_agreement_acceptance(&has_bits);
          needs_workshop_legal_agreement_acceptance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMPublishFileResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMPublishFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_eresult(), target);
  }

  // optional fixed64 published_file_id = 2 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(2, this->_internal_published_file_id(), target);
  }

  // optional bool needs_workshop_legal_agreement_acceptance = 3 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_needs_workshop_legal_agreement_acceptance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMPublishFileResponse)
  return target;
}

size_t CMsgClientUCMPublishFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMPublishFileResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bool needs_workshop_legal_agreement_acceptance = 3 [default = false];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_eresult());
    }

    // optional fixed64 published_file_id = 2 [default = 18446744073709551615];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMPublishFileResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMPublishFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishFileResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMPublishFileResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMPublishFileResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMPublishFileResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishFileResponse::MergeFrom(const CMsgClientUCMPublishFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMPublishFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      needs_workshop_legal_agreement_acceptance_ = from.needs_workshop_legal_agreement_acceptance_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000004u) {
      published_file_id_ = from.published_file_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishFileResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMPublishFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishFileResponse::CopyFrom(const CMsgClientUCMPublishFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMPublishFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishFileResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishFileResponse::InternalSwap(CMsgClientUCMPublishFileResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(needs_workshop_legal_agreement_acceptance_, other->needs_workshop_legal_agreement_acceptance_);
  swap(eresult_, other->eresult_);
  swap(published_file_id_, other->published_file_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMPublishFileResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMUpdatePublishedFile_KeyValueTag::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMUpdatePublishedFile_KeyValueTag>()._has_bits_);
  static void set_has_key(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_value(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientUCMUpdatePublishedFile_KeyValueTag::CMsgClientUCMUpdatePublishedFile_KeyValueTag(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
}
CMsgClientUCMUpdatePublishedFile_KeyValueTag::CMsgClientUCMUpdatePublishedFile_KeyValueTag(const CMsgClientUCMUpdatePublishedFile_KeyValueTag& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_key()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArena());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_value()) {
    value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_value(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::SharedCtor() {
key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CMsgClientUCMUpdatePublishedFile_KeyValueTag::~CMsgClientUCMUpdatePublishedFile_KeyValueTag() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::ArenaDtor(void* object) {
  CMsgClientUCMUpdatePublishedFile_KeyValueTag* _this = reinterpret_cast< CMsgClientUCMUpdatePublishedFile_KeyValueTag* >(object);
  (void)_this;
}
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      key_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      value_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMUpdatePublishedFile_KeyValueTag::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMUpdatePublishedFile.KeyValueTag.key");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMUpdatePublishedFile.KeyValueTag.value");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMUpdatePublishedFile_KeyValueTag::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.KeyValueTag.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.KeyValueTag.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  return target;
}

size_t CMsgClientUCMUpdatePublishedFile_KeyValueTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string key = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_key());
    }

    // optional string value = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_value());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMUpdatePublishedFile_KeyValueTag* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMUpdatePublishedFile_KeyValueTag>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
    MergeFrom(*source);
  }
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::MergeFrom(const CMsgClientUCMUpdatePublishedFile_KeyValueTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_key(from._internal_key());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_value(from._internal_value());
    }
  }
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::CopyFrom(const CMsgClientUCMUpdatePublishedFile_KeyValueTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMUpdatePublishedFile_KeyValueTag::IsInitialized() const {
  return true;
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::InternalSwap(CMsgClientUCMUpdatePublishedFile_KeyValueTag* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  key_.Swap(&other->key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMUpdatePublishedFile_KeyValueTag::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMUpdatePublishedFile_AdditionalPreview>()._has_bits_);
  static void set_has_original_file_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_internal_file_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_videoid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_preview_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_update_index(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

CMsgClientUCMUpdatePublishedFile_AdditionalPreview::CMsgClientUCMUpdatePublishedFile_AdditionalPreview(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
}
CMsgClientUCMUpdatePublishedFile_AdditionalPreview::CMsgClientUCMUpdatePublishedFile_AdditionalPreview(const CMsgClientUCMUpdatePublishedFile_AdditionalPreview& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  original_file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_original_file_name()) {
    original_file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_original_file_name(), 
      GetArena());
  }
  internal_file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_internal_file_name()) {
    internal_file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_internal_file_name(), 
      GetArena());
  }
  videoid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_videoid()) {
    videoid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_videoid(), 
      GetArena());
  }
  ::memcpy(&preview_type_, &from.preview_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&update_index_) -
    reinterpret_cast<char*>(&preview_type_)) + sizeof(update_index_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::SharedCtor() {
original_file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
internal_file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
videoid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
preview_type_ = 0u;
update_index_ = -1;
}

CMsgClientUCMUpdatePublishedFile_AdditionalPreview::~CMsgClientUCMUpdatePublishedFile_AdditionalPreview() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  original_file_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  internal_file_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  videoid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::ArenaDtor(void* object) {
  CMsgClientUCMUpdatePublishedFile_AdditionalPreview* _this = reinterpret_cast< CMsgClientUCMUpdatePublishedFile_AdditionalPreview* >(object);
  (void)_this;
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      original_file_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      internal_file_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      videoid_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    preview_type_ = 0u;
    update_index_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string original_file_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_original_file_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string internal_file_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_internal_file_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string videoid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_videoid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 preview_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_preview_type(&has_bits);
          preview_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 update_index = 5 [default = -1];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_update_index(&has_bits);
          update_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string original_file_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_original_file_name().data(), static_cast<int>(this->_internal_original_file_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_original_file_name(), target);
  }

  // optional string internal_file_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_internal_file_name().data(), static_cast<int>(this->_internal_internal_file_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_internal_file_name(), target);
  }

  // optional string videoid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_videoid().data(), static_cast<int>(this->_internal_videoid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_videoid(), target);
  }

  // optional uint32 preview_type = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_preview_type(), target);
  }

  // optional int32 update_index = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_update_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  return target;
}

size_t CMsgClientUCMUpdatePublishedFile_AdditionalPreview::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string original_file_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_original_file_name());
    }

    // optional string internal_file_name = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_internal_file_name());
    }

    // optional string videoid = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_videoid());
    }

    // optional uint32 preview_type = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_preview_type());
    }

    // optional int32 update_index = 5 [default = -1];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_update_index());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMUpdatePublishedFile_AdditionalPreview* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMUpdatePublishedFile_AdditionalPreview>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
    MergeFrom(*source);
  }
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::MergeFrom(const CMsgClientUCMUpdatePublishedFile_AdditionalPreview& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_original_file_name(from._internal_original_file_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_internal_file_name(from._internal_internal_file_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_videoid(from._internal_videoid());
    }
    if (cached_has_bits & 0x00000008u) {
      preview_type_ = from.preview_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      update_index_ = from.update_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::CopyFrom(const CMsgClientUCMUpdatePublishedFile_AdditionalPreview& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::IsInitialized() const {
  return true;
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::InternalSwap(CMsgClientUCMUpdatePublishedFile_AdditionalPreview* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  original_file_name_.Swap(&other->original_file_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  internal_file_name_.Swap(&other->internal_file_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  videoid_.Swap(&other->videoid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(preview_type_, other->preview_type_);
  swap(update_index_, other->update_index_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMUpdatePublishedFile_AdditionalPreview::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMUpdatePublishedFile::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMUpdatePublishedFile>()._has_bits_);
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_published_file_id(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_file_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_preview_file_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_title(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_visibility(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_update_file(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_update_preview_file(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_update_title(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_update_description(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_update_tags(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_update_visibility(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_change_description(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_update_url(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_url(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_update_content_manifest(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_content_manifest(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_metadata(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_update_metadata(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_language(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_clear_in_progress(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_remove_all_kvtags(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_allow_admin_tags(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_external_asset_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
};

CMsgClientUCMUpdatePublishedFile::CMsgClientUCMUpdatePublishedFile(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tags_(arena),
  removed_kvtags_(arena),
  kvtags_(arena),
  previews_(arena),
  previews_to_remove_(arena),
  content_descriptors_to_add_(arena),
  content_descriptors_to_remove_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMUpdatePublishedFile)
}
CMsgClientUCMUpdatePublishedFile::CMsgClientUCMUpdatePublishedFile(const CMsgClientUCMUpdatePublishedFile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      tags_(from.tags_),
      removed_kvtags_(from.removed_kvtags_),
      kvtags_(from.kvtags_),
      previews_(from.previews_),
      previews_to_remove_(from.previews_to_remove_),
      content_descriptors_to_add_(from.content_descriptors_to_add_),
      content_descriptors_to_remove_(from.content_descriptors_to_remove_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_file_name()) {
    file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_file_name(), 
      GetArena());
  }
  preview_file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_preview_file_name()) {
    preview_file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_preview_file_name(), 
      GetArena());
  }
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_title()) {
    title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_title(), 
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_description()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  change_description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_change_description()) {
    change_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_change_description(), 
      GetArena());
  }
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_url()) {
    url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_url(), 
      GetArena());
  }
  metadata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_metadata()) {
    metadata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_metadata(), 
      GetArena());
  }
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&external_asset_id_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(external_asset_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMUpdatePublishedFile)
}

void CMsgClientUCMUpdatePublishedFile::SharedCtor() {
file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
preview_file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
change_description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
metadata_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&published_file_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&external_asset_id_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(external_asset_id_));
}

CMsgClientUCMUpdatePublishedFile::~CMsgClientUCMUpdatePublishedFile() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMUpdatePublishedFile)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMUpdatePublishedFile::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  file_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  preview_file_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  change_description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  metadata_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMUpdatePublishedFile::ArenaDtor(void* object) {
  CMsgClientUCMUpdatePublishedFile* _this = reinterpret_cast< CMsgClientUCMUpdatePublishedFile* >(object);
  (void)_this;
}
void CMsgClientUCMUpdatePublishedFile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMUpdatePublishedFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMUpdatePublishedFile::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMUpdatePublishedFile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  removed_kvtags_.Clear();
  kvtags_.Clear();
  previews_.Clear();
  previews_to_remove_.Clear();
  content_descriptors_to_add_.Clear();
  content_descriptors_to_remove_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      file_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      preview_file_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      title_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      description_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      change_description_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      url_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000040u) {
      metadata_.ClearNonDefaultToEmpty();
    }
  }
  published_file_id_ = PROTOBUF_ULONGLONG(0);
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&update_visibility_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(update_visibility_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&update_url_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&allow_admin_tags_) -
        reinterpret_cast<char*>(&update_url_)) + sizeof(allow_admin_tags_));
  }
  external_asset_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMUpdatePublishedFile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_app_id(&has_bits);
          app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed64 published_file_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_published_file_id(&has_bits);
          published_file_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional string file_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_file_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMUpdatePublishedFile.file_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string preview_file_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_preview_file_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMUpdatePublishedFile.preview_file_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string title = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_title();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMUpdatePublishedFile.title");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string description = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMUpdatePublishedFile.description");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string tags = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_tags();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMUpdatePublishedFile.tags");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // optional int32 visibility = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_visibility(&has_bits);
          visibility_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool update_file = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_update_file(&has_bits);
          update_file_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool update_preview_file = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_update_preview_file(&has_bits);
          update_preview_file_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool update_title = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_update_title(&has_bits);
          update_title_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool update_description = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_update_description(&has_bits);
          update_description_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool update_tags = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_update_tags(&has_bits);
          update_tags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool update_visibility = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_update_visibility(&has_bits);
          update_visibility_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string change_description = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_change_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMUpdatePublishedFile.change_description");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool update_url = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_update_url(&has_bits);
          update_url_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string url = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMUpdatePublishedFile.url");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool update_content_manifest = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          _Internal::set_has_update_content_manifest(&has_bits);
          update_content_manifest_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed64 content_manifest = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 153)) {
          _Internal::set_has_content_manifest(&has_bits);
          content_manifest_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional string metadata = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          auto str = _internal_mutable_metadata();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMUpdatePublishedFile.metadata");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool update_metadata = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          _Internal::set_has_update_metadata(&has_bits);
          update_metadata_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 language = 22 [default = 0];
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_language(&has_bits);
          language_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string removed_kvtags = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_removed_kvtags();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUCMUpdatePublishedFile.removed_kvtags");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<186>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .CMsgClientUCMUpdatePublishedFile.KeyValueTag kvtags = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_kvtags(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<194>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .CMsgClientUCMUpdatePublishedFile.AdditionalPreview previews = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_previews(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<202>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated int32 previews_to_remove = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          ptr -= 2;
          do {
            ptr += 2;
            _internal_add_previews_to_remove(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<208>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_previews_to_remove(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool clear_in_progress = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 216)) {
          _Internal::set_has_clear_in_progress(&has_bits);
          clear_in_progress_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool remove_all_kvtags = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          _Internal::set_has_remove_all_kvtags(&has_bits);
          remove_all_kvtags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 content_descriptors_to_add = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 232)) {
          ptr -= 2;
          do {
            ptr += 2;
            _internal_add_content_descriptors_to_add(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<232>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_content_descriptors_to_add(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 content_descriptors_to_remove = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          ptr -= 2;
          do {
            ptr += 2;
            _internal_add_content_descriptors_to_remove(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<240>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_content_descriptors_to_remove(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool allow_admin_tags = 31 [default = false];
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 248)) {
          _Internal::set_has_allow_admin_tags(&has_bits);
          allow_admin_tags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 external_asset_id = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          _Internal::set_has_external_asset_id(&has_bits);
          external_asset_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMUpdatePublishedFile::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMUpdatePublishedFile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_app_id(), target);
  }

  // optional fixed64 published_file_id = 2;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(2, this->_internal_published_file_id(), target);
  }

  // optional string file_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_file_name().data(), static_cast<int>(this->_internal_file_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.file_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_file_name(), target);
  }

  // optional string preview_file_name = 4;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_preview_file_name().data(), static_cast<int>(this->_internal_preview_file_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.preview_file_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_preview_file_name(), target);
  }

  // optional string title = 5;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.title");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_title(), target);
  }

  // optional string description = 6;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.description");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_description(), target);
  }

  // repeated string tags = 7;
  for (int i = 0, n = this->_internal_tags_size(); i < n; i++) {
    const auto& s = this->_internal_tags(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.tags");
    target = stream->WriteString(7, s, target);
  }

  // optional int32 visibility = 8;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_visibility(), target);
  }

  // optional bool update_file = 9;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->_internal_update_file(), target);
  }

  // optional bool update_preview_file = 10;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_update_preview_file(), target);
  }

  // optional bool update_title = 11;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(11, this->_internal_update_title(), target);
  }

  // optional bool update_description = 12;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_update_description(), target);
  }

  // optional bool update_tags = 13;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(13, this->_internal_update_tags(), target);
  }

  // optional bool update_visibility = 14;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(14, this->_internal_update_visibility(), target);
  }

  // optional string change_description = 15;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_change_description().data(), static_cast<int>(this->_internal_change_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.change_description");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_change_description(), target);
  }

  // optional bool update_url = 16;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(16, this->_internal_update_url(), target);
  }

  // optional string url = 17;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.url");
    target = stream->WriteStringMaybeAliased(
        17, this->_internal_url(), target);
  }

  // optional bool update_content_manifest = 18;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(18, this->_internal_update_content_manifest(), target);
  }

  // optional fixed64 content_manifest = 19;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(19, this->_internal_content_manifest(), target);
  }

  // optional string metadata = 20;
  if (cached_has_bits & 0x00000040u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_metadata().data(), static_cast<int>(this->_internal_metadata().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.metadata");
    target = stream->WriteStringMaybeAliased(
        20, this->_internal_metadata(), target);
  }

  // optional bool update_metadata = 21;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(21, this->_internal_update_metadata(), target);
  }

  // optional int32 language = 22 [default = 0];
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(22, this->_internal_language(), target);
  }

  // repeated string removed_kvtags = 23;
  for (int i = 0, n = this->_internal_removed_kvtags_size(); i < n; i++) {
    const auto& s = this->_internal_removed_kvtags(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUCMUpdatePublishedFile.removed_kvtags");
    target = stream->WriteString(23, s, target);
  }

  // repeated .CMsgClientUCMUpdatePublishedFile.KeyValueTag kvtags = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_kvtags_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(24, this->_internal_kvtags(i), target, stream);
  }

  // repeated .CMsgClientUCMUpdatePublishedFile.AdditionalPreview previews = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_previews_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(25, this->_internal_previews(i), target, stream);
  }

  // repeated int32 previews_to_remove = 26;
  for (int i = 0, n = this->_internal_previews_to_remove_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(26, this->_internal_previews_to_remove(i), target);
  }

  // optional bool clear_in_progress = 27;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(27, this->_internal_clear_in_progress(), target);
  }

  // optional bool remove_all_kvtags = 28;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(28, this->_internal_remove_all_kvtags(), target);
  }

  // repeated int32 content_descriptors_to_add = 29;
  for (int i = 0, n = this->_internal_content_descriptors_to_add_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(29, this->_internal_content_descriptors_to_add(i), target);
  }

  // repeated int32 content_descriptors_to_remove = 30;
  for (int i = 0, n = this->_internal_content_descriptors_to_remove_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(30, this->_internal_content_descriptors_to_remove(i), target);
  }

  // optional bool allow_admin_tags = 31 [default = false];
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(31, this->_internal_allow_admin_tags(), target);
  }

  // optional uint64 external_asset_id = 32;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(32, this->_internal_external_asset_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMUpdatePublishedFile)
  return target;
}

size_t CMsgClientUCMUpdatePublishedFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMUpdatePublishedFile)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(tags_.size());
  for (int i = 0, n = tags_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      tags_.Get(i));
  }

  // repeated string removed_kvtags = 23;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(removed_kvtags_.size());
  for (int i = 0, n = removed_kvtags_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      removed_kvtags_.Get(i));
  }

  // repeated .CMsgClientUCMUpdatePublishedFile.KeyValueTag kvtags = 24;
  total_size += 2UL * this->_internal_kvtags_size();
  for (const auto& msg : this->kvtags_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .CMsgClientUCMUpdatePublishedFile.AdditionalPreview previews = 25;
  total_size += 2UL * this->_internal_previews_size();
  for (const auto& msg : this->previews_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated int32 previews_to_remove = 26;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->previews_to_remove_);
    total_size += 2 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_previews_to_remove_size());
    total_size += data_size;
  }

  // repeated int32 content_descriptors_to_add = 29;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->content_descriptors_to_add_);
    total_size += 2 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_content_descriptors_to_add_size());
    total_size += data_size;
  }

  // repeated int32 content_descriptors_to_remove = 30;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->content_descriptors_to_remove_);
    total_size += 2 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_content_descriptors_to_remove_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string file_name = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_file_name());
    }

    // optional string preview_file_name = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_preview_file_name());
    }

    // optional string title = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_title());
    }

    // optional string description = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_description());
    }

    // optional string change_description = 15;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_change_description());
    }

    // optional string url = 17;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_url());
    }

    // optional string metadata = 20;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_metadata());
    }

    // optional fixed64 published_file_id = 2;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 8;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_app_id());
    }

    // optional int32 visibility = 8;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_visibility());
    }

    // optional bool update_file = 9;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 1;
    }

    // optional bool update_preview_file = 10;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 1;
    }

    // optional bool update_title = 11;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 1;
    }

    // optional bool update_description = 12;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 + 1;
    }

    // optional bool update_tags = 13;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 + 1;
    }

    // optional bool update_visibility = 14;
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool update_url = 16;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional bool update_content_manifest = 18;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 + 1;
    }

    // optional fixed64 content_manifest = 19;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 8;
    }

    // optional int32 language = 22 [default = 0];
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_language());
    }

    // optional bool update_metadata = 21;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 1;
    }

    // optional bool clear_in_progress = 27;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 1;
    }

    // optional bool remove_all_kvtags = 28;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 1;
    }

    // optional bool allow_admin_tags = 31 [default = false];
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 1;
    }

  }
  // optional uint64 external_asset_id = 32;
  if (cached_has_bits & 0x01000000u) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_external_asset_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMUpdatePublishedFile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMUpdatePublishedFile)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMUpdatePublishedFile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMUpdatePublishedFile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMUpdatePublishedFile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMUpdatePublishedFile)
    MergeFrom(*source);
  }
}

void CMsgClientUCMUpdatePublishedFile::MergeFrom(const CMsgClientUCMUpdatePublishedFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMUpdatePublishedFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  removed_kvtags_.MergeFrom(from.removed_kvtags_);
  kvtags_.MergeFrom(from.kvtags_);
  previews_.MergeFrom(from.previews_);
  previews_to_remove_.MergeFrom(from.previews_to_remove_);
  content_descriptors_to_add_.MergeFrom(from.content_descriptors_to_add_);
  content_descriptors_to_remove_.MergeFrom(from.content_descriptors_to_remove_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_file_name(from._internal_file_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_preview_file_name(from._internal_preview_file_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_title(from._internal_title());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_change_description(from._internal_change_description());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_set_url(from._internal_url());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_set_metadata(from._internal_metadata());
    }
    if (cached_has_bits & 0x00000080u) {
      published_file_id_ = from.published_file_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      visibility_ = from.visibility_;
    }
    if (cached_has_bits & 0x00000400u) {
      update_file_ = from.update_file_;
    }
    if (cached_has_bits & 0x00000800u) {
      update_preview_file_ = from.update_preview_file_;
    }
    if (cached_has_bits & 0x00001000u) {
      update_title_ = from.update_title_;
    }
    if (cached_has_bits & 0x00002000u) {
      update_description_ = from.update_description_;
    }
    if (cached_has_bits & 0x00004000u) {
      update_tags_ = from.update_tags_;
    }
    if (cached_has_bits & 0x00008000u) {
      update_visibility_ = from.update_visibility_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      update_url_ = from.update_url_;
    }
    if (cached_has_bits & 0x00020000u) {
      update_content_manifest_ = from.update_content_manifest_;
    }
    if (cached_has_bits & 0x00040000u) {
      content_manifest_ = from.content_manifest_;
    }
    if (cached_has_bits & 0x00080000u) {
      language_ = from.language_;
    }
    if (cached_has_bits & 0x00100000u) {
      update_metadata_ = from.update_metadata_;
    }
    if (cached_has_bits & 0x00200000u) {
      clear_in_progress_ = from.clear_in_progress_;
    }
    if (cached_has_bits & 0x00400000u) {
      remove_all_kvtags_ = from.remove_all_kvtags_;
    }
    if (cached_has_bits & 0x00800000u) {
      allow_admin_tags_ = from.allow_admin_tags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x01000000u) {
    _internal_set_external_asset_id(from._internal_external_asset_id());
  }
}

void CMsgClientUCMUpdatePublishedFile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMUpdatePublishedFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMUpdatePublishedFile::CopyFrom(const CMsgClientUCMUpdatePublishedFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMUpdatePublishedFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMUpdatePublishedFile::IsInitialized() const {
  return true;
}

void CMsgClientUCMUpdatePublishedFile::InternalSwap(CMsgClientUCMUpdatePublishedFile* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  tags_.InternalSwap(&other->tags_);
  removed_kvtags_.InternalSwap(&other->removed_kvtags_);
  kvtags_.InternalSwap(&other->kvtags_);
  previews_.InternalSwap(&other->previews_);
  previews_to_remove_.InternalSwap(&other->previews_to_remove_);
  content_descriptors_to_add_.InternalSwap(&other->content_descriptors_to_add_);
  content_descriptors_to_remove_.InternalSwap(&other->content_descriptors_to_remove_);
  file_name_.Swap(&other->file_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  preview_file_name_.Swap(&other->preview_file_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  title_.Swap(&other->title_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  change_description_.Swap(&other->change_description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  metadata_.Swap(&other->metadata_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, external_asset_id_)
      + sizeof(CMsgClientUCMUpdatePublishedFile::external_asset_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, published_file_id_)>(
          reinterpret_cast<char*>(&published_file_id_),
          reinterpret_cast<char*>(&other->published_file_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMUpdatePublishedFile::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMUpdatePublishedFileResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMUpdatePublishedFileResponse>()._has_bits_);
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_needs_workshop_legal_agreement_acceptance(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientUCMUpdatePublishedFileResponse::CMsgClientUCMUpdatePublishedFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMUpdatePublishedFileResponse)
}
CMsgClientUCMUpdatePublishedFileResponse::CMsgClientUCMUpdatePublishedFileResponse(const CMsgClientUCMUpdatePublishedFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&needs_workshop_legal_agreement_acceptance_, &from.needs_workshop_legal_agreement_acceptance_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&needs_workshop_legal_agreement_acceptance_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMUpdatePublishedFileResponse)
}

void CMsgClientUCMUpdatePublishedFileResponse::SharedCtor() {
needs_workshop_legal_agreement_acceptance_ = false;
eresult_ = 2;
}

CMsgClientUCMUpdatePublishedFileResponse::~CMsgClientUCMUpdatePublishedFileResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMUpdatePublishedFileResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMUpdatePublishedFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientUCMUpdatePublishedFileResponse::ArenaDtor(void* object) {
  CMsgClientUCMUpdatePublishedFileResponse* _this = reinterpret_cast< CMsgClientUCMUpdatePublishedFileResponse* >(object);
  (void)_this;
}
void CMsgClientUCMUpdatePublishedFileResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMUpdatePublishedFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMUpdatePublishedFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMUpdatePublishedFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    needs_workshop_legal_agreement_acceptance_ = false;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMUpdatePublishedFileResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_eresult(&has_bits);
          eresult_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool needs_workshop_legal_agreement_acceptance = 2 [default = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_needs_workshop_legal_agreement_acceptance(&has_bits);
          needs_workshop_legal_agreement_acceptance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMUpdatePublishedFileResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMUpdatePublishedFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_eresult(), target);
  }

  // optional bool needs_workshop_legal_agreement_acceptance = 2 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_needs_workshop_legal_agreement_acceptance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMUpdatePublishedFileResponse)
  return target;
}

size_t CMsgClientUCMUpdatePublishedFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMUpdatePublishedFileResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bool needs_workshop_legal_agreement_acceptance = 2 [default = false];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_eresult());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMUpdatePublishedFileResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMUpdatePublishedFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMUpdatePublishedFileResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMUpdatePublishedFileResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMUpdatePublishedFileResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMUpdatePublishedFileResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMUpdatePublishedFileResponse::MergeFrom(const CMsgClientUCMUpdatePublishedFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMUpdatePublishedFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      needs_workshop_legal_agreement_acceptance_ = from.needs_workshop_legal_agreement_acceptance_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMUpdatePublishedFileResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMUpdatePublishedFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMUpdatePublishedFileResponse::CopyFrom(const CMsgClientUCMUpdatePublishedFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMUpdatePublishedFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMUpdatePublishedFileResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMUpdatePublishedFileResponse::InternalSwap(CMsgClientUCMUpdatePublishedFileResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(needs_workshop_legal_agreement_acceptance_, other->needs_workshop_legal_agreement_acceptance_);
  swap(eresult_, other->eresult_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMUpdatePublishedFileResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMDeletePublishedFile::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMDeletePublishedFile>()._has_bits_);
  static void set_has_published_file_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientUCMDeletePublishedFile::CMsgClientUCMDeletePublishedFile(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMDeletePublishedFile)
}
CMsgClientUCMDeletePublishedFile::CMsgClientUCMDeletePublishedFile(const CMsgClientUCMDeletePublishedFile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMDeletePublishedFile)
}

void CMsgClientUCMDeletePublishedFile::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&published_file_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
}

CMsgClientUCMDeletePublishedFile::~CMsgClientUCMDeletePublishedFile() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMDeletePublishedFile)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMDeletePublishedFile::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientUCMDeletePublishedFile::ArenaDtor(void* object) {
  CMsgClientUCMDeletePublishedFile* _this = reinterpret_cast< CMsgClientUCMDeletePublishedFile* >(object);
  (void)_this;
}
void CMsgClientUCMDeletePublishedFile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMDeletePublishedFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMDeletePublishedFile::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMDeletePublishedFile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMDeletePublishedFile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_published_file_id(&has_bits);
          published_file_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional uint32 app_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_app_id(&has_bits);
          app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMDeletePublishedFile::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMDeletePublishedFile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_app_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMDeletePublishedFile)
  return target;
}

size_t CMsgClientUCMDeletePublishedFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMDeletePublishedFile)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_app_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMDeletePublishedFile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMDeletePublishedFile)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMDeletePublishedFile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMDeletePublishedFile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMDeletePublishedFile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMDeletePublishedFile)
    MergeFrom(*source);
  }
}

void CMsgClientUCMDeletePublishedFile::MergeFrom(const CMsgClientUCMDeletePublishedFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMDeletePublishedFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMDeletePublishedFile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMDeletePublishedFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMDeletePublishedFile::CopyFrom(const CMsgClientUCMDeletePublishedFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMDeletePublishedFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMDeletePublishedFile::IsInitialized() const {
  return true;
}

void CMsgClientUCMDeletePublishedFile::InternalSwap(CMsgClientUCMDeletePublishedFile* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientUCMDeletePublishedFile, app_id_)
      + sizeof(CMsgClientUCMDeletePublishedFile::app_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientUCMDeletePublishedFile, published_file_id_)>(
          reinterpret_cast<char*>(&published_file_id_),
          reinterpret_cast<char*>(&other->published_file_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMDeletePublishedFile::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMDeletePublishedFileResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMDeletePublishedFileResponse>()._has_bits_);
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientUCMDeletePublishedFileResponse::CMsgClientUCMDeletePublishedFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMDeletePublishedFileResponse)
}
CMsgClientUCMDeletePublishedFileResponse::CMsgClientUCMDeletePublishedFileResponse(const CMsgClientUCMDeletePublishedFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMDeletePublishedFileResponse)
}

void CMsgClientUCMDeletePublishedFileResponse::SharedCtor() {
eresult_ = 2;
}

CMsgClientUCMDeletePublishedFileResponse::~CMsgClientUCMDeletePublishedFileResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMDeletePublishedFileResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMDeletePublishedFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientUCMDeletePublishedFileResponse::ArenaDtor(void* object) {
  CMsgClientUCMDeletePublishedFileResponse* _this = reinterpret_cast< CMsgClientUCMDeletePublishedFileResponse* >(object);
  (void)_this;
}
void CMsgClientUCMDeletePublishedFileResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMDeletePublishedFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMDeletePublishedFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMDeletePublishedFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMDeletePublishedFileResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_eresult(&has_bits);
          eresult_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMDeletePublishedFileResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMDeletePublishedFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_eresult(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMDeletePublishedFileResponse)
  return target;
}

size_t CMsgClientUCMDeletePublishedFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMDeletePublishedFileResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 eresult = 1 [default = 2];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_eresult());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMDeletePublishedFileResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMDeletePublishedFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMDeletePublishedFileResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMDeletePublishedFileResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMDeletePublishedFileResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMDeletePublishedFileResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMDeletePublishedFileResponse::MergeFrom(const CMsgClientUCMDeletePublishedFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMDeletePublishedFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_eresult()) {
    _internal_set_eresult(from._internal_eresult());
  }
}

void CMsgClientUCMDeletePublishedFileResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMDeletePublishedFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMDeletePublishedFileResponse::CopyFrom(const CMsgClientUCMDeletePublishedFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMDeletePublishedFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMDeletePublishedFileResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMDeletePublishedFileResponse::InternalSwap(CMsgClientUCMDeletePublishedFileResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(eresult_, other->eresult_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMDeletePublishedFileResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates>()._has_bits_);
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_start_index(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_start_time(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_desired_revision(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
}
CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&desired_revision_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(desired_revision_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&app_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&desired_revision_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(desired_revision_));
}

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::~CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::ArenaDtor(void* object) {
  CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* _this = reinterpret_cast< CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* >(object);
  (void)_this;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&desired_revision_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(desired_revision_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_app_id(&has_bits);
          app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 start_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_start_index(&has_bits);
          start_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed32 start_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          _Internal::set_has_start_time(&has_bits);
          start_time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // optional uint32 desired_revision = 4 [default = 0];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_desired_revision(&has_bits);
          desired_revision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_app_id(), target);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_start_index(), target);
  }

  // optional fixed32 start_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(3, this->_internal_start_time(), target);
  }

  // optional uint32 desired_revision = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_desired_revision(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_app_id());
    }

    // optional uint32 start_index = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_start_index());
    }

    // optional fixed32 start_time = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

    // optional uint32 desired_revision = 4 [default = 0];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_desired_revision());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      start_index_ = from.start_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      start_time_ = from.start_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      desired_revision_ = from.desired_revision_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, desired_revision_)
      + sizeof(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::desired_revision_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, app_id_)>(
          reinterpret_cast<char*>(&app_id_),
          reinterpret_cast<char*>(&other->app_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId>()._has_bits_);
  static void set_has_published_file_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_rtime32_subscribed(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_file_hcontent(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_file_size(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_rtime32_last_updated(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_is_depot_content(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
}
CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_depot_content_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_depot_content_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&published_file_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_depot_content_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_depot_content_));
}

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::~CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::ArenaDtor(void* object) {
  CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* _this = reinterpret_cast< CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* >(object);
  (void)_this;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_depot_content_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(is_depot_content_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_published_file_id(&has_bits);
          published_file_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional fixed32 rtime32_subscribed = 2 [default = 0];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          _Internal::set_has_rtime32_subscribed(&has_bits);
          rtime32_subscribed_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // optional uint32 appid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_appid(&has_bits);
          appid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed64 file_hcontent = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          _Internal::set_has_file_hcontent(&has_bits);
          file_hcontent_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional uint32 file_size = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_file_size(&has_bits);
          file_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed32 rtime32_last_updated = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          _Internal::set_has_rtime32_last_updated(&has_bits);
          rtime32_last_updated_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // optional bool is_depot_content = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_is_depot_content(&has_bits);
          is_depot_content_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_published_file_id(), target);
  }

  // optional fixed32 rtime32_subscribed = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(2, this->_internal_rtime32_subscribed(), target);
  }

  // optional uint32 appid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_appid(), target);
  }

  // optional fixed64 file_hcontent = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(4, this->_internal_file_hcontent(), target);
  }

  // optional uint32 file_size = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_file_size(), target);
  }

  // optional fixed32 rtime32_last_updated = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(6, this->_internal_rtime32_last_updated(), target);
  }

  // optional bool is_depot_content = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_is_depot_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional fixed32 rtime32_subscribed = 2 [default = 0];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

    // optional uint32 appid = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_appid());
    }

    // optional fixed64 file_hcontent = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional uint32 file_size = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_file_size());
    }

    // optional fixed32 rtime32_last_updated = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 4;
    }

    // optional bool is_depot_content = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      rtime32_subscribed_ = from.rtime32_subscribed_;
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000008u) {
      file_hcontent_ = from.file_hcontent_;
    }
    if (cached_has_bits & 0x00000010u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00000020u) {
      rtime32_last_updated_ = from.rtime32_last_updated_;
    }
    if (cached_has_bits & 0x00000040u) {
      is_depot_content_ = from.is_depot_content_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, is_depot_content_)
      + sizeof(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::is_depot_content_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, published_file_id_)>(
          reinterpret_cast<char*>(&published_file_id_),
          reinterpret_cast<char*>(&other->published_file_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse>()._has_bits_);
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_total_results(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  subscribed_files_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
}
CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      subscribed_files_(from.subscribed_files_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::SharedCtor() {
total_results_ = 0u;
eresult_ = 2;
}

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::~CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::ArenaDtor(void* object) {
  CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* _this = reinterpret_cast< CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* >(object);
  (void)_this;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscribed_files_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    total_results_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_eresult(&has_bits);
          eresult_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId subscribed_files = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_subscribed_files(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint32 total_results = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_total_results(&has_bits);
          total_results_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_eresult(), target);
  }

  // repeated .CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId subscribed_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_subscribed_files_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_subscribed_files(i), target, stream);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_total_results(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId subscribed_files = 2;
  total_size += 1UL * this->_internal_subscribed_files_size();
  for (const auto& msg : this->subscribed_files_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 total_results = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_eresult());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subscribed_files_.MergeFrom(from.subscribed_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  subscribed_files_.InternalSwap(&other->subscribed_files_);
  swap(total_results_, other->total_results_);
  swap(eresult_, other->eresult_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMPublishedFileUpdated::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMPublishedFileUpdated>()._has_bits_);
  static void set_has_published_file_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_time_updated(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_hcontent(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_file_size(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_is_depot_content(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_revision(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

CMsgClientUCMPublishedFileUpdated::CMsgClientUCMPublishedFileUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMPublishedFileUpdated)
}
CMsgClientUCMPublishedFileUpdated::CMsgClientUCMPublishedFileUpdated(const CMsgClientUCMPublishedFileUpdated& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&revision_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(revision_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMPublishedFileUpdated)
}

void CMsgClientUCMPublishedFileUpdated::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&published_file_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&revision_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(revision_));
}

CMsgClientUCMPublishedFileUpdated::~CMsgClientUCMPublishedFileUpdated() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMPublishedFileUpdated)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMPublishedFileUpdated::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientUCMPublishedFileUpdated::ArenaDtor(void* object) {
  CMsgClientUCMPublishedFileUpdated* _this = reinterpret_cast< CMsgClientUCMPublishedFileUpdated* >(object);
  (void)_this;
}
void CMsgClientUCMPublishedFileUpdated::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMPublishedFileUpdated::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMPublishedFileUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMPublishedFileUpdated)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&revision_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(revision_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMPublishedFileUpdated::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_published_file_id(&has_bits);
          published_file_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional uint32 app_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_app_id(&has_bits);
          app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 time_updated = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_time_updated(&has_bits);
          time_updated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed64 hcontent = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          _Internal::set_has_hcontent(&has_bits);
          hcontent_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional fixed32 file_size = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          _Internal::set_has_file_size(&has_bits);
          file_size_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // optional bool is_depot_content = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_is_depot_content(&has_bits);
          is_depot_content_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 revision = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_revision(&has_bits);
          revision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMPublishedFileUpdated::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMPublishedFileUpdated)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_app_id(), target);
  }

  // optional uint32 time_updated = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_time_updated(), target);
  }

  // optional fixed64 hcontent = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(4, this->_internal_hcontent(), target);
  }

  // optional fixed32 file_size = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(5, this->_internal_file_size(), target);
  }

  // optional bool is_depot_content = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_is_depot_content(), target);
  }

  // optional uint32 revision = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_revision(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMPublishedFileUpdated)
  return target;
}

size_t CMsgClientUCMPublishedFileUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMPublishedFileUpdated)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_app_id());
    }

    // optional uint32 time_updated = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_time_updated());
    }

    // optional fixed64 hcontent = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional fixed32 file_size = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 4;
    }

    // optional bool is_depot_content = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional uint32 revision = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_revision());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMPublishedFileUpdated::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMPublishedFileUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishedFileUpdated* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMPublishedFileUpdated>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMPublishedFileUpdated)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMPublishedFileUpdated)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishedFileUpdated::MergeFrom(const CMsgClientUCMPublishedFileUpdated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMPublishedFileUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_updated_ = from.time_updated_;
    }
    if (cached_has_bits & 0x00000008u) {
      hcontent_ = from.hcontent_;
    }
    if (cached_has_bits & 0x00000010u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_depot_content_ = from.is_depot_content_;
    }
    if (cached_has_bits & 0x00000040u) {
      revision_ = from.revision_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishedFileUpdated::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMPublishedFileUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishedFileUpdated::CopyFrom(const CMsgClientUCMPublishedFileUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMPublishedFileUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishedFileUpdated::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishedFileUpdated::InternalSwap(CMsgClientUCMPublishedFileUpdated* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientUCMPublishedFileUpdated, revision_)
      + sizeof(CMsgClientUCMPublishedFileUpdated::revision_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientUCMPublishedFileUpdated, published_file_id_)>(
          reinterpret_cast<char*>(&published_file_id_),
          reinterpret_cast<char*>(&other->published_file_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMPublishedFileUpdated::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientWorkshopItemChangesRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientWorkshopItemChangesRequest>()._has_bits_);
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_last_time_updated(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_num_items_needed(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientWorkshopItemChangesRequest::CMsgClientWorkshopItemChangesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientWorkshopItemChangesRequest)
}
CMsgClientWorkshopItemChangesRequest::CMsgClientWorkshopItemChangesRequest(const CMsgClientWorkshopItemChangesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_items_needed_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(num_items_needed_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientWorkshopItemChangesRequest)
}

void CMsgClientWorkshopItemChangesRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&app_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&num_items_needed_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(num_items_needed_));
}

CMsgClientWorkshopItemChangesRequest::~CMsgClientWorkshopItemChangesRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientWorkshopItemChangesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientWorkshopItemChangesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientWorkshopItemChangesRequest::ArenaDtor(void* object) {
  CMsgClientWorkshopItemChangesRequest* _this = reinterpret_cast< CMsgClientWorkshopItemChangesRequest* >(object);
  (void)_this;
}
void CMsgClientWorkshopItemChangesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientWorkshopItemChangesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientWorkshopItemChangesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientWorkshopItemChangesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_items_needed_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(num_items_needed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientWorkshopItemChangesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_app_id(&has_bits);
          app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 last_time_updated = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_last_time_updated(&has_bits);
          last_time_updated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 num_items_needed = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_num_items_needed(&has_bits);
          num_items_needed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientWorkshopItemChangesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientWorkshopItemChangesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_app_id(), target);
  }

  // optional uint32 last_time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_last_time_updated(), target);
  }

  // optional uint32 num_items_needed = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_num_items_needed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientWorkshopItemChangesRequest)
  return target;
}

size_t CMsgClientWorkshopItemChangesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientWorkshopItemChangesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_app_id());
    }

    // optional uint32 last_time_updated = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_last_time_updated());
    }

    // optional uint32 num_items_needed = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_num_items_needed());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientWorkshopItemChangesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientWorkshopItemChangesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemChangesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientWorkshopItemChangesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientWorkshopItemChangesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientWorkshopItemChangesRequest)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemChangesRequest::MergeFrom(const CMsgClientWorkshopItemChangesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientWorkshopItemChangesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      last_time_updated_ = from.last_time_updated_;
    }
    if (cached_has_bits & 0x00000004u) {
      num_items_needed_ = from.num_items_needed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemChangesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientWorkshopItemChangesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemChangesRequest::CopyFrom(const CMsgClientWorkshopItemChangesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientWorkshopItemChangesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemChangesRequest::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemChangesRequest::InternalSwap(CMsgClientWorkshopItemChangesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientWorkshopItemChangesRequest, num_items_needed_)
      + sizeof(CMsgClientWorkshopItemChangesRequest::num_items_needed_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientWorkshopItemChangesRequest, app_id_)>(
          reinterpret_cast<char*>(&app_id_),
          reinterpret_cast<char*>(&other->app_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientWorkshopItemChangesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo>()._has_bits_);
  static void set_has_published_file_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_time_updated(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_manifest_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
}
CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo(const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_updated_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(time_updated_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&published_file_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&time_updated_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(time_updated_));
}

CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::~CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo() {
  // @@protoc_insertion_point(destructor:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::ArenaDtor(void* object) {
  CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* _this = reinterpret_cast< CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* >(object);
  (void)_this;
}
void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_updated_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(time_updated_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_published_file_id(&has_bits);
          published_file_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional uint32 time_updated = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_time_updated(&has_bits);
          time_updated_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed64 manifest_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _Internal::set_has_manifest_id(&has_bits);
          manifest_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_published_file_id(), target);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_time_updated(), target);
  }

  // optional fixed64 manifest_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(3, this->_internal_manifest_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  return target;
}

size_t CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional fixed64 manifest_id = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional uint32 time_updated = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_time_updated());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::MergeFrom(const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      manifest_id_ = from.manifest_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_updated_ = from.time_updated_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::CopyFrom(const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::InternalSwap(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, time_updated_)
      + sizeof(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::time_updated_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, published_file_id_)>(
          reinterpret_cast<char*>(&published_file_id_),
          reinterpret_cast<char*>(&other->published_file_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientWorkshopItemChangesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientWorkshopItemChangesResponse>()._has_bits_);
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_update_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientWorkshopItemChangesResponse::CMsgClientWorkshopItemChangesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  workshop_items_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientWorkshopItemChangesResponse)
}
CMsgClientWorkshopItemChangesResponse::CMsgClientWorkshopItemChangesResponse(const CMsgClientWorkshopItemChangesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      workshop_items_(from.workshop_items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&update_time_, &from.update_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&update_time_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientWorkshopItemChangesResponse)
}

void CMsgClientWorkshopItemChangesResponse::SharedCtor() {
update_time_ = 0u;
eresult_ = 2;
}

CMsgClientWorkshopItemChangesResponse::~CMsgClientWorkshopItemChangesResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientWorkshopItemChangesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientWorkshopItemChangesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientWorkshopItemChangesResponse::ArenaDtor(void* object) {
  CMsgClientWorkshopItemChangesResponse* _this = reinterpret_cast< CMsgClientWorkshopItemChangesResponse* >(object);
  (void)_this;
}
void CMsgClientWorkshopItemChangesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientWorkshopItemChangesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientWorkshopItemChangesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientWorkshopItemChangesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  workshop_items_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    update_time_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientWorkshopItemChangesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_eresult(&has_bits);
          eresult_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 update_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_update_time(&has_bits);
          update_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo workshop_items = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_workshop_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientWorkshopItemChangesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientWorkshopItemChangesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_eresult(), target);
  }

  // optional uint32 update_time = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_update_time(), target);
  }

  // repeated .CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo workshop_items = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_workshop_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_workshop_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientWorkshopItemChangesResponse)
  return target;
}

size_t CMsgClientWorkshopItemChangesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientWorkshopItemChangesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo workshop_items = 5;
  total_size += 1UL * this->_internal_workshop_items_size();
  for (const auto& msg : this->workshop_items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 update_time = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_update_time());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_eresult());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientWorkshopItemChangesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientWorkshopItemChangesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemChangesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientWorkshopItemChangesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientWorkshopItemChangesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientWorkshopItemChangesResponse)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemChangesResponse::MergeFrom(const CMsgClientWorkshopItemChangesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientWorkshopItemChangesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  workshop_items_.MergeFrom(from.workshop_items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      update_time_ = from.update_time_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemChangesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientWorkshopItemChangesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemChangesResponse::CopyFrom(const CMsgClientWorkshopItemChangesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientWorkshopItemChangesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemChangesResponse::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemChangesResponse::InternalSwap(CMsgClientWorkshopItemChangesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  workshop_items_.InternalSwap(&other->workshop_items_);
  swap(update_time_, other->update_time_);
  swap(eresult_, other->eresult_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientWorkshopItemChangesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMSetUserPublishedFileAction::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMSetUserPublishedFileAction>()._has_bits_);
  static void set_has_published_file_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_action(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientUCMSetUserPublishedFileAction::CMsgClientUCMSetUserPublishedFileAction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMSetUserPublishedFileAction)
}
CMsgClientUCMSetUserPublishedFileAction::CMsgClientUCMSetUserPublishedFileAction(const CMsgClientUCMSetUserPublishedFileAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(action_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMSetUserPublishedFileAction)
}

void CMsgClientUCMSetUserPublishedFileAction::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&published_file_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(action_));
}

CMsgClientUCMSetUserPublishedFileAction::~CMsgClientUCMSetUserPublishedFileAction() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMSetUserPublishedFileAction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMSetUserPublishedFileAction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientUCMSetUserPublishedFileAction::ArenaDtor(void* object) {
  CMsgClientUCMSetUserPublishedFileAction* _this = reinterpret_cast< CMsgClientUCMSetUserPublishedFileAction* >(object);
  (void)_this;
}
void CMsgClientUCMSetUserPublishedFileAction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMSetUserPublishedFileAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMSetUserPublishedFileAction::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMSetUserPublishedFileAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&action_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(action_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMSetUserPublishedFileAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_published_file_id(&has_bits);
          published_file_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional uint32 app_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_app_id(&has_bits);
          app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 action = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_action(&has_bits);
          action_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMSetUserPublishedFileAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMSetUserPublishedFileAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_app_id(), target);
  }

  // optional int32 action = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMSetUserPublishedFileAction)
  return target;
}

size_t CMsgClientUCMSetUserPublishedFileAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMSetUserPublishedFileAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_app_id());
    }

    // optional int32 action = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_action());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMSetUserPublishedFileAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMSetUserPublishedFileAction)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMSetUserPublishedFileAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMSetUserPublishedFileAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMSetUserPublishedFileAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMSetUserPublishedFileAction)
    MergeFrom(*source);
  }
}

void CMsgClientUCMSetUserPublishedFileAction::MergeFrom(const CMsgClientUCMSetUserPublishedFileAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMSetUserPublishedFileAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      action_ = from.action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMSetUserPublishedFileAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMSetUserPublishedFileAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMSetUserPublishedFileAction::CopyFrom(const CMsgClientUCMSetUserPublishedFileAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMSetUserPublishedFileAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMSetUserPublishedFileAction::IsInitialized() const {
  return true;
}

void CMsgClientUCMSetUserPublishedFileAction::InternalSwap(CMsgClientUCMSetUserPublishedFileAction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientUCMSetUserPublishedFileAction, action_)
      + sizeof(CMsgClientUCMSetUserPublishedFileAction::action_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientUCMSetUserPublishedFileAction, published_file_id_)>(
          reinterpret_cast<char*>(&published_file_id_),
          reinterpret_cast<char*>(&other->published_file_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMSetUserPublishedFileAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMSetUserPublishedFileActionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMSetUserPublishedFileActionResponse>()._has_bits_);
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientUCMSetUserPublishedFileActionResponse::CMsgClientUCMSetUserPublishedFileActionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMSetUserPublishedFileActionResponse)
}
CMsgClientUCMSetUserPublishedFileActionResponse::CMsgClientUCMSetUserPublishedFileActionResponse(const CMsgClientUCMSetUserPublishedFileActionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMSetUserPublishedFileActionResponse)
}

void CMsgClientUCMSetUserPublishedFileActionResponse::SharedCtor() {
eresult_ = 2;
}

CMsgClientUCMSetUserPublishedFileActionResponse::~CMsgClientUCMSetUserPublishedFileActionResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMSetUserPublishedFileActionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMSetUserPublishedFileActionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientUCMSetUserPublishedFileActionResponse::ArenaDtor(void* object) {
  CMsgClientUCMSetUserPublishedFileActionResponse* _this = reinterpret_cast< CMsgClientUCMSetUserPublishedFileActionResponse* >(object);
  (void)_this;
}
void CMsgClientUCMSetUserPublishedFileActionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMSetUserPublishedFileActionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMSetUserPublishedFileActionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMSetUserPublishedFileActionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMSetUserPublishedFileActionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_eresult(&has_bits);
          eresult_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMSetUserPublishedFileActionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMSetUserPublishedFileActionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_eresult(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMSetUserPublishedFileActionResponse)
  return target;
}

size_t CMsgClientUCMSetUserPublishedFileActionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMSetUserPublishedFileActionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 eresult = 1 [default = 2];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_eresult());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMSetUserPublishedFileActionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMSetUserPublishedFileActionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMSetUserPublishedFileActionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMSetUserPublishedFileActionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMSetUserPublishedFileActionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMSetUserPublishedFileActionResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMSetUserPublishedFileActionResponse::MergeFrom(const CMsgClientUCMSetUserPublishedFileActionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMSetUserPublishedFileActionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_eresult()) {
    _internal_set_eresult(from._internal_eresult());
  }
}

void CMsgClientUCMSetUserPublishedFileActionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMSetUserPublishedFileActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMSetUserPublishedFileActionResponse::CopyFrom(const CMsgClientUCMSetUserPublishedFileActionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMSetUserPublishedFileActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMSetUserPublishedFileActionResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMSetUserPublishedFileActionResponse::InternalSwap(CMsgClientUCMSetUserPublishedFileActionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(eresult_, other->eresult_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMSetUserPublishedFileActionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMEnumeratePublishedFilesByUserAction::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMEnumeratePublishedFilesByUserAction>()._has_bits_);
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_start_index(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_action(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientUCMEnumeratePublishedFilesByUserAction::CMsgClientUCMEnumeratePublishedFilesByUserAction(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMEnumeratePublishedFilesByUserAction)
}
CMsgClientUCMEnumeratePublishedFilesByUserAction::CMsgClientUCMEnumeratePublishedFilesByUserAction(const CMsgClientUCMEnumeratePublishedFilesByUserAction& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(action_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMEnumeratePublishedFilesByUserAction)
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&app_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(action_));
}

CMsgClientUCMEnumeratePublishedFilesByUserAction::~CMsgClientUCMEnumeratePublishedFilesByUserAction() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::ArenaDtor(void* object) {
  CMsgClientUCMEnumeratePublishedFilesByUserAction* _this = reinterpret_cast< CMsgClientUCMEnumeratePublishedFilesByUserAction* >(object);
  (void)_this;
}
void CMsgClientUCMEnumeratePublishedFilesByUserAction::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMEnumeratePublishedFilesByUserAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&action_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(action_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMEnumeratePublishedFilesByUserAction::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_app_id(&has_bits);
          app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 start_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_start_index(&has_bits);
          start_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 action = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_action(&has_bits);
          action_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMEnumeratePublishedFilesByUserAction::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_app_id(), target);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_start_index(), target);
  }

  // optional int32 action = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  return target;
}

size_t CMsgClientUCMEnumeratePublishedFilesByUserAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_app_id());
    }

    // optional uint32 start_index = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_start_index());
    }

    // optional int32 action = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_action());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumeratePublishedFilesByUserAction* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMEnumeratePublishedFilesByUserAction>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMEnumeratePublishedFilesByUserAction)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMEnumeratePublishedFilesByUserAction)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::MergeFrom(const CMsgClientUCMEnumeratePublishedFilesByUserAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      start_index_ = from.start_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      action_ = from.action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::CopyFrom(const CMsgClientUCMEnumeratePublishedFilesByUserAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMEnumeratePublishedFilesByUserAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumeratePublishedFilesByUserAction::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::InternalSwap(CMsgClientUCMEnumeratePublishedFilesByUserAction* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientUCMEnumeratePublishedFilesByUserAction, action_)
      + sizeof(CMsgClientUCMEnumeratePublishedFilesByUserAction::action_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientUCMEnumeratePublishedFilesByUserAction, app_id_)>(
          reinterpret_cast<char*>(&app_id_),
          reinterpret_cast<char*>(&other->app_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMEnumeratePublishedFilesByUserAction::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId>()._has_bits_);
  static void set_has_published_file_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_rtime_time_stamp(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
}
CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rtime_time_stamp_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime_time_stamp_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&published_file_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&rtime_time_stamp_) -
    reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime_time_stamp_));
}

CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::~CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::ArenaDtor(void* object) {
  CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* _this = reinterpret_cast< CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* >(object);
  (void)_this;
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&published_file_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rtime_time_stamp_) -
        reinterpret_cast<char*>(&published_file_id_)) + sizeof(rtime_time_stamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 published_file_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_published_file_id(&has_bits);
          published_file_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional fixed32 rtime_time_stamp = 2 [default = 0];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          _Internal::set_has_rtime_time_stamp(&has_bits);
          rtime_time_stamp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_published_file_id(), target);
  }

  // optional fixed32 rtime_time_stamp = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(2, this->_internal_rtime_time_stamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  return target;
}

size_t CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 published_file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional fixed32 rtime_time_stamp = 2 [default = 0];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::MergeFrom(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      rtime_time_stamp_ = from.rtime_time_stamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::CopyFrom(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::InternalSwap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId, rtime_time_stamp_)
      + sizeof(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::rtime_time_stamp_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId, published_file_id_)>(
          reinterpret_cast<char*>(&published_file_id_),
          reinterpret_cast<char*>(&other->published_file_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUCMEnumeratePublishedFilesByUserActionResponse>()._has_bits_);
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_total_results(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  published_files_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
}
CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      published_files_(from.published_files_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::SharedCtor() {
total_results_ = 0u;
eresult_ = 2;
}

CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::~CMsgClientUCMEnumeratePublishedFilesByUserActionResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::ArenaDtor(void* object) {
  CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* _this = reinterpret_cast< CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* >(object);
  (void)_this;
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  published_files_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    total_results_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_eresult(&has_bits);
          eresult_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId published_files = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_published_files(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint32 total_results = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_total_results(&has_bits);
          total_results_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_eresult(), target);
  }

  // repeated .CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_published_files_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_published_files(i), target, stream);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_total_results(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  return target;
}

size_t CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId published_files = 2;
  total_size += 1UL * this->_internal_published_files_size();
  for (const auto& msg : this->published_files_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 total_results = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_eresult());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUCMEnumeratePublishedFilesByUserActionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::MergeFrom(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  published_files_.MergeFrom(from.published_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::CopyFrom(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::InternalSwap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  published_files_.InternalSwap(&other->published_files_);
  swap(total_results_, other->total_results_);
  swap(eresult_, other->eresult_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientScreenshotsChanged::_Internal {
 public:
};

CMsgClientScreenshotsChanged::CMsgClientScreenshotsChanged(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientScreenshotsChanged)
}
CMsgClientScreenshotsChanged::CMsgClientScreenshotsChanged(const CMsgClientScreenshotsChanged& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientScreenshotsChanged)
}

void CMsgClientScreenshotsChanged::SharedCtor() {
}

CMsgClientScreenshotsChanged::~CMsgClientScreenshotsChanged() {
  // @@protoc_insertion_point(destructor:CMsgClientScreenshotsChanged)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientScreenshotsChanged::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientScreenshotsChanged::ArenaDtor(void* object) {
  CMsgClientScreenshotsChanged* _this = reinterpret_cast< CMsgClientScreenshotsChanged* >(object);
  (void)_this;
}
void CMsgClientScreenshotsChanged::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientScreenshotsChanged::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientScreenshotsChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientScreenshotsChanged)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientScreenshotsChanged::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientScreenshotsChanged::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientScreenshotsChanged)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientScreenshotsChanged)
  return target;
}

size_t CMsgClientScreenshotsChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientScreenshotsChanged)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientScreenshotsChanged::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientScreenshotsChanged)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientScreenshotsChanged* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientScreenshotsChanged>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientScreenshotsChanged)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientScreenshotsChanged)
    MergeFrom(*source);
  }
}

void CMsgClientScreenshotsChanged::MergeFrom(const CMsgClientScreenshotsChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientScreenshotsChanged)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientScreenshotsChanged::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientScreenshotsChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientScreenshotsChanged::CopyFrom(const CMsgClientScreenshotsChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientScreenshotsChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientScreenshotsChanged::IsInitialized() const {
  return true;
}

void CMsgClientScreenshotsChanged::InternalSwap(CMsgClientScreenshotsChanged* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientScreenshotsChanged::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CMsgClientUCMAddScreenshot_Tag* Arena::CreateMaybeMessage< ::CMsgClientUCMAddScreenshot_Tag >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMAddScreenshot_Tag >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMAddScreenshot* Arena::CreateMaybeMessage< ::CMsgClientUCMAddScreenshot >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMAddScreenshot >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMAddScreenshotResponse* Arena::CreateMaybeMessage< ::CMsgClientUCMAddScreenshotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMAddScreenshotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMDeleteScreenshot* Arena::CreateMaybeMessage< ::CMsgClientUCMDeleteScreenshot >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMDeleteScreenshot >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMDeleteScreenshotResponse* Arena::CreateMaybeMessage< ::CMsgClientUCMDeleteScreenshotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMDeleteScreenshotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMPublishFile* Arena::CreateMaybeMessage< ::CMsgClientUCMPublishFile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMPublishFile >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMPublishFileResponse* Arena::CreateMaybeMessage< ::CMsgClientUCMPublishFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMPublishFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMUpdatePublishedFile_KeyValueTag* Arena::CreateMaybeMessage< ::CMsgClientUCMUpdatePublishedFile_KeyValueTag >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMUpdatePublishedFile_KeyValueTag >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview* Arena::CreateMaybeMessage< ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMUpdatePublishedFile* Arena::CreateMaybeMessage< ::CMsgClientUCMUpdatePublishedFile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMUpdatePublishedFile >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMUpdatePublishedFileResponse* Arena::CreateMaybeMessage< ::CMsgClientUCMUpdatePublishedFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMUpdatePublishedFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMDeletePublishedFile* Arena::CreateMaybeMessage< ::CMsgClientUCMDeletePublishedFile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMDeletePublishedFile >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMDeletePublishedFileResponse* Arena::CreateMaybeMessage< ::CMsgClientUCMDeletePublishedFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMDeletePublishedFileResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* Arena::CreateMaybeMessage< ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* Arena::CreateMaybeMessage< ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* Arena::CreateMaybeMessage< ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMPublishedFileUpdated* Arena::CreateMaybeMessage< ::CMsgClientUCMPublishedFileUpdated >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMPublishedFileUpdated >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientWorkshopItemChangesRequest* Arena::CreateMaybeMessage< ::CMsgClientWorkshopItemChangesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientWorkshopItemChangesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* Arena::CreateMaybeMessage< ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientWorkshopItemChangesResponse* Arena::CreateMaybeMessage< ::CMsgClientWorkshopItemChangesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientWorkshopItemChangesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMSetUserPublishedFileAction* Arena::CreateMaybeMessage< ::CMsgClientUCMSetUserPublishedFileAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMSetUserPublishedFileAction >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMSetUserPublishedFileActionResponse* Arena::CreateMaybeMessage< ::CMsgClientUCMSetUserPublishedFileActionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMSetUserPublishedFileActionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMEnumeratePublishedFilesByUserAction* Arena::CreateMaybeMessage< ::CMsgClientUCMEnumeratePublishedFilesByUserAction >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMEnumeratePublishedFilesByUserAction >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* Arena::CreateMaybeMessage< ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* Arena::CreateMaybeMessage< ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientScreenshotsChanged* Arena::CreateMaybeMessage< ::CMsgClientScreenshotsChanged >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientScreenshotsChanged >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
