// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_clientserver_ucm.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_steammessages_5fclientserver_5fucm_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_steammessages_5fclientserver_5fucm_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
#include "steammessages_base.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fclientserver_5fucm_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fclientserver_5fucm_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[26]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_steammessages_5fclientserver_5fucm_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(int index);
class CMsgClientScreenshotsChanged;
struct CMsgClientScreenshotsChangedDefaultTypeInternal;
extern CMsgClientScreenshotsChangedDefaultTypeInternal _CMsgClientScreenshotsChanged_default_instance_;
class CMsgClientUCMAddScreenshot;
struct CMsgClientUCMAddScreenshotDefaultTypeInternal;
extern CMsgClientUCMAddScreenshotDefaultTypeInternal _CMsgClientUCMAddScreenshot_default_instance_;
class CMsgClientUCMAddScreenshotResponse;
struct CMsgClientUCMAddScreenshotResponseDefaultTypeInternal;
extern CMsgClientUCMAddScreenshotResponseDefaultTypeInternal _CMsgClientUCMAddScreenshotResponse_default_instance_;
class CMsgClientUCMAddScreenshot_Tag;
struct CMsgClientUCMAddScreenshot_TagDefaultTypeInternal;
extern CMsgClientUCMAddScreenshot_TagDefaultTypeInternal _CMsgClientUCMAddScreenshot_Tag_default_instance_;
class CMsgClientUCMDeletePublishedFile;
struct CMsgClientUCMDeletePublishedFileDefaultTypeInternal;
extern CMsgClientUCMDeletePublishedFileDefaultTypeInternal _CMsgClientUCMDeletePublishedFile_default_instance_;
class CMsgClientUCMDeletePublishedFileResponse;
struct CMsgClientUCMDeletePublishedFileResponseDefaultTypeInternal;
extern CMsgClientUCMDeletePublishedFileResponseDefaultTypeInternal _CMsgClientUCMDeletePublishedFileResponse_default_instance_;
class CMsgClientUCMDeleteScreenshot;
struct CMsgClientUCMDeleteScreenshotDefaultTypeInternal;
extern CMsgClientUCMDeleteScreenshotDefaultTypeInternal _CMsgClientUCMDeleteScreenshot_default_instance_;
class CMsgClientUCMDeleteScreenshotResponse;
struct CMsgClientUCMDeleteScreenshotResponseDefaultTypeInternal;
extern CMsgClientUCMDeleteScreenshotResponseDefaultTypeInternal _CMsgClientUCMDeleteScreenshotResponse_default_instance_;
class CMsgClientUCMEnumeratePublishedFilesByUserAction;
struct CMsgClientUCMEnumeratePublishedFilesByUserActionDefaultTypeInternal;
extern CMsgClientUCMEnumeratePublishedFilesByUserActionDefaultTypeInternal _CMsgClientUCMEnumeratePublishedFilesByUserAction_default_instance_;
class CMsgClientUCMEnumeratePublishedFilesByUserActionResponse;
struct CMsgClientUCMEnumeratePublishedFilesByUserActionResponseDefaultTypeInternal;
extern CMsgClientUCMEnumeratePublishedFilesByUserActionResponseDefaultTypeInternal _CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_default_instance_;
class CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId;
struct CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileIdDefaultTypeInternal;
extern CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileIdDefaultTypeInternal _CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates;
struct CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesDefaultTypeInternal;
extern CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesDefaultTypeInternal _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse;
struct CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponseDefaultTypeInternal;
extern CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponseDefaultTypeInternal _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId;
struct CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileIdDefaultTypeInternal;
extern CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileIdDefaultTypeInternal _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_default_instance_;
class CMsgClientUCMPublishFile;
struct CMsgClientUCMPublishFileDefaultTypeInternal;
extern CMsgClientUCMPublishFileDefaultTypeInternal _CMsgClientUCMPublishFile_default_instance_;
class CMsgClientUCMPublishFileResponse;
struct CMsgClientUCMPublishFileResponseDefaultTypeInternal;
extern CMsgClientUCMPublishFileResponseDefaultTypeInternal _CMsgClientUCMPublishFileResponse_default_instance_;
class CMsgClientUCMPublishedFileUpdated;
struct CMsgClientUCMPublishedFileUpdatedDefaultTypeInternal;
extern CMsgClientUCMPublishedFileUpdatedDefaultTypeInternal _CMsgClientUCMPublishedFileUpdated_default_instance_;
class CMsgClientUCMSetUserPublishedFileAction;
struct CMsgClientUCMSetUserPublishedFileActionDefaultTypeInternal;
extern CMsgClientUCMSetUserPublishedFileActionDefaultTypeInternal _CMsgClientUCMSetUserPublishedFileAction_default_instance_;
class CMsgClientUCMSetUserPublishedFileActionResponse;
struct CMsgClientUCMSetUserPublishedFileActionResponseDefaultTypeInternal;
extern CMsgClientUCMSetUserPublishedFileActionResponseDefaultTypeInternal _CMsgClientUCMSetUserPublishedFileActionResponse_default_instance_;
class CMsgClientUCMUpdatePublishedFile;
struct CMsgClientUCMUpdatePublishedFileDefaultTypeInternal;
extern CMsgClientUCMUpdatePublishedFileDefaultTypeInternal _CMsgClientUCMUpdatePublishedFile_default_instance_;
class CMsgClientUCMUpdatePublishedFileResponse;
struct CMsgClientUCMUpdatePublishedFileResponseDefaultTypeInternal;
extern CMsgClientUCMUpdatePublishedFileResponseDefaultTypeInternal _CMsgClientUCMUpdatePublishedFileResponse_default_instance_;
class CMsgClientUCMUpdatePublishedFile_AdditionalPreview;
struct CMsgClientUCMUpdatePublishedFile_AdditionalPreviewDefaultTypeInternal;
extern CMsgClientUCMUpdatePublishedFile_AdditionalPreviewDefaultTypeInternal _CMsgClientUCMUpdatePublishedFile_AdditionalPreview_default_instance_;
class CMsgClientUCMUpdatePublishedFile_KeyValueTag;
struct CMsgClientUCMUpdatePublishedFile_KeyValueTagDefaultTypeInternal;
extern CMsgClientUCMUpdatePublishedFile_KeyValueTagDefaultTypeInternal _CMsgClientUCMUpdatePublishedFile_KeyValueTag_default_instance_;
class CMsgClientWorkshopItemChangesRequest;
struct CMsgClientWorkshopItemChangesRequestDefaultTypeInternal;
extern CMsgClientWorkshopItemChangesRequestDefaultTypeInternal _CMsgClientWorkshopItemChangesRequest_default_instance_;
class CMsgClientWorkshopItemChangesResponse;
struct CMsgClientWorkshopItemChangesResponseDefaultTypeInternal;
extern CMsgClientWorkshopItemChangesResponseDefaultTypeInternal _CMsgClientWorkshopItemChangesResponse_default_instance_;
class CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo;
struct CMsgClientWorkshopItemChangesResponse_WorkshopItemInfoDefaultTypeInternal;
extern CMsgClientWorkshopItemChangesResponse_WorkshopItemInfoDefaultTypeInternal _CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CMsgClientScreenshotsChanged* Arena::CreateMaybeMessage<::CMsgClientScreenshotsChanged>(Arena*);
template<> ::CMsgClientUCMAddScreenshot* Arena::CreateMaybeMessage<::CMsgClientUCMAddScreenshot>(Arena*);
template<> ::CMsgClientUCMAddScreenshotResponse* Arena::CreateMaybeMessage<::CMsgClientUCMAddScreenshotResponse>(Arena*);
template<> ::CMsgClientUCMAddScreenshot_Tag* Arena::CreateMaybeMessage<::CMsgClientUCMAddScreenshot_Tag>(Arena*);
template<> ::CMsgClientUCMDeletePublishedFile* Arena::CreateMaybeMessage<::CMsgClientUCMDeletePublishedFile>(Arena*);
template<> ::CMsgClientUCMDeletePublishedFileResponse* Arena::CreateMaybeMessage<::CMsgClientUCMDeletePublishedFileResponse>(Arena*);
template<> ::CMsgClientUCMDeleteScreenshot* Arena::CreateMaybeMessage<::CMsgClientUCMDeleteScreenshot>(Arena*);
template<> ::CMsgClientUCMDeleteScreenshotResponse* Arena::CreateMaybeMessage<::CMsgClientUCMDeleteScreenshotResponse>(Arena*);
template<> ::CMsgClientUCMEnumeratePublishedFilesByUserAction* Arena::CreateMaybeMessage<::CMsgClientUCMEnumeratePublishedFilesByUserAction>(Arena*);
template<> ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* Arena::CreateMaybeMessage<::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse>(Arena*);
template<> ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* Arena::CreateMaybeMessage<::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId>(Arena*);
template<> ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* Arena::CreateMaybeMessage<::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates>(Arena*);
template<> ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* Arena::CreateMaybeMessage<::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse>(Arena*);
template<> ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* Arena::CreateMaybeMessage<::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId>(Arena*);
template<> ::CMsgClientUCMPublishFile* Arena::CreateMaybeMessage<::CMsgClientUCMPublishFile>(Arena*);
template<> ::CMsgClientUCMPublishFileResponse* Arena::CreateMaybeMessage<::CMsgClientUCMPublishFileResponse>(Arena*);
template<> ::CMsgClientUCMPublishedFileUpdated* Arena::CreateMaybeMessage<::CMsgClientUCMPublishedFileUpdated>(Arena*);
template<> ::CMsgClientUCMSetUserPublishedFileAction* Arena::CreateMaybeMessage<::CMsgClientUCMSetUserPublishedFileAction>(Arena*);
template<> ::CMsgClientUCMSetUserPublishedFileActionResponse* Arena::CreateMaybeMessage<::CMsgClientUCMSetUserPublishedFileActionResponse>(Arena*);
template<> ::CMsgClientUCMUpdatePublishedFile* Arena::CreateMaybeMessage<::CMsgClientUCMUpdatePublishedFile>(Arena*);
template<> ::CMsgClientUCMUpdatePublishedFileResponse* Arena::CreateMaybeMessage<::CMsgClientUCMUpdatePublishedFileResponse>(Arena*);
template<> ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview* Arena::CreateMaybeMessage<::CMsgClientUCMUpdatePublishedFile_AdditionalPreview>(Arena*);
template<> ::CMsgClientUCMUpdatePublishedFile_KeyValueTag* Arena::CreateMaybeMessage<::CMsgClientUCMUpdatePublishedFile_KeyValueTag>(Arena*);
template<> ::CMsgClientWorkshopItemChangesRequest* Arena::CreateMaybeMessage<::CMsgClientWorkshopItemChangesRequest>(Arena*);
template<> ::CMsgClientWorkshopItemChangesResponse* Arena::CreateMaybeMessage<::CMsgClientWorkshopItemChangesResponse>(Arena*);
template<> ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* Arena::CreateMaybeMessage<::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class CMsgClientUCMAddScreenshot_Tag PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMAddScreenshot.Tag) */ {
 public:
  inline CMsgClientUCMAddScreenshot_Tag() : CMsgClientUCMAddScreenshot_Tag(nullptr) {}
  virtual ~CMsgClientUCMAddScreenshot_Tag();
  explicit constexpr CMsgClientUCMAddScreenshot_Tag(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMAddScreenshot_Tag(const CMsgClientUCMAddScreenshot_Tag& from);
  CMsgClientUCMAddScreenshot_Tag(CMsgClientUCMAddScreenshot_Tag&& from) noexcept
    : CMsgClientUCMAddScreenshot_Tag() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMAddScreenshot_Tag& operator=(const CMsgClientUCMAddScreenshot_Tag& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMAddScreenshot_Tag& operator=(CMsgClientUCMAddScreenshot_Tag&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMAddScreenshot_Tag& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMAddScreenshot_Tag* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMAddScreenshot_Tag*>(
               &_CMsgClientUCMAddScreenshot_Tag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CMsgClientUCMAddScreenshot_Tag& a, CMsgClientUCMAddScreenshot_Tag& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMAddScreenshot_Tag* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMAddScreenshot_Tag* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMAddScreenshot_Tag* New() const final {
    return CreateMaybeMessage<CMsgClientUCMAddScreenshot_Tag>(nullptr);
  }

  CMsgClientUCMAddScreenshot_Tag* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMAddScreenshot_Tag>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMAddScreenshot_Tag& from);
  void MergeFrom(const CMsgClientUCMAddScreenshot_Tag& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMAddScreenshot_Tag* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMAddScreenshot.Tag";
  }
  protected:
  explicit CMsgClientUCMAddScreenshot_Tag(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagNameFieldNumber = 1,
    kTagValueFieldNumber = 2,
  };
  // optional string tag_name = 1;
  bool has_tag_name() const;
  private:
  bool _internal_has_tag_name() const;
  public:
  void clear_tag_name();
  const std::string& tag_name() const;
  void set_tag_name(const std::string& value);
  void set_tag_name(std::string&& value);
  void set_tag_name(const char* value);
  void set_tag_name(const char* value, size_t size);
  std::string* mutable_tag_name();
  std::string* release_tag_name();
  void set_allocated_tag_name(std::string* tag_name);
  private:
  const std::string& _internal_tag_name() const;
  void _internal_set_tag_name(const std::string& value);
  std::string* _internal_mutable_tag_name();
  public:

  // optional string tag_value = 2;
  bool has_tag_value() const;
  private:
  bool _internal_has_tag_value() const;
  public:
  void clear_tag_value();
  const std::string& tag_value() const;
  void set_tag_value(const std::string& value);
  void set_tag_value(std::string&& value);
  void set_tag_value(const char* value);
  void set_tag_value(const char* value, size_t size);
  std::string* mutable_tag_value();
  std::string* release_tag_value();
  void set_allocated_tag_value(std::string* tag_value);
  private:
  const std::string& _internal_tag_value() const;
  void _internal_set_tag_value(const std::string& value);
  std::string* _internal_mutable_tag_value();
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMAddScreenshot.Tag)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tag_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tag_value_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMAddScreenshot PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMAddScreenshot) */ {
 public:
  inline CMsgClientUCMAddScreenshot() : CMsgClientUCMAddScreenshot(nullptr) {}
  virtual ~CMsgClientUCMAddScreenshot();
  explicit constexpr CMsgClientUCMAddScreenshot(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMAddScreenshot(const CMsgClientUCMAddScreenshot& from);
  CMsgClientUCMAddScreenshot(CMsgClientUCMAddScreenshot&& from) noexcept
    : CMsgClientUCMAddScreenshot() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMAddScreenshot& operator=(const CMsgClientUCMAddScreenshot& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMAddScreenshot& operator=(CMsgClientUCMAddScreenshot&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMAddScreenshot& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMAddScreenshot* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMAddScreenshot*>(
               &_CMsgClientUCMAddScreenshot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CMsgClientUCMAddScreenshot& a, CMsgClientUCMAddScreenshot& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMAddScreenshot* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMAddScreenshot* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMAddScreenshot* New() const final {
    return CreateMaybeMessage<CMsgClientUCMAddScreenshot>(nullptr);
  }

  CMsgClientUCMAddScreenshot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMAddScreenshot>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMAddScreenshot& from);
  void MergeFrom(const CMsgClientUCMAddScreenshot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMAddScreenshot* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMAddScreenshot";
  }
  protected:
  explicit CMsgClientUCMAddScreenshot(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientUCMAddScreenshot_Tag Tag;

  // accessors -------------------------------------------------------

  enum : int {
    kTagFieldNumber = 10,
    kTaggedSteamidFieldNumber = 11,
    kTaggedPublishedfileidFieldNumber = 13,
    kFilenameFieldNumber = 2,
    kThumbnameFieldNumber = 3,
    kCaptionFieldNumber = 8,
    kShortcutNameFieldNumber = 9,
    kVrFilenameFieldNumber = 14,
    kAppidFieldNumber = 1,
    kRtime32CreatedFieldNumber = 4,
    kWidthFieldNumber = 5,
    kHeightFieldNumber = 6,
    kPermissionsFieldNumber = 7,
    kSpoilerTagFieldNumber = 12,
  };
  // repeated .CMsgClientUCMAddScreenshot.Tag tag = 10;
  int tag_size() const;
  private:
  int _internal_tag_size() const;
  public:
  void clear_tag();
  ::CMsgClientUCMAddScreenshot_Tag* mutable_tag(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMAddScreenshot_Tag >*
      mutable_tag();
  private:
  const ::CMsgClientUCMAddScreenshot_Tag& _internal_tag(int index) const;
  ::CMsgClientUCMAddScreenshot_Tag* _internal_add_tag();
  public:
  const ::CMsgClientUCMAddScreenshot_Tag& tag(int index) const;
  ::CMsgClientUCMAddScreenshot_Tag* add_tag();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMAddScreenshot_Tag >&
      tag() const;

  // repeated fixed64 tagged_steamid = 11;
  int tagged_steamid_size() const;
  private:
  int _internal_tagged_steamid_size() const;
  public:
  void clear_tagged_steamid();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tagged_steamid(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_tagged_steamid() const;
  void _internal_add_tagged_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_tagged_steamid();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 tagged_steamid(int index) const;
  void set_tagged_steamid(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_tagged_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      tagged_steamid() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_tagged_steamid();

  // repeated uint64 tagged_publishedfileid = 13;
  int tagged_publishedfileid_size() const;
  private:
  int _internal_tagged_publishedfileid_size() const;
  public:
  void clear_tagged_publishedfileid();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tagged_publishedfileid(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_tagged_publishedfileid() const;
  void _internal_add_tagged_publishedfileid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_tagged_publishedfileid();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 tagged_publishedfileid(int index) const;
  void set_tagged_publishedfileid(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_tagged_publishedfileid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      tagged_publishedfileid() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_tagged_publishedfileid();

  // optional string filename = 2;
  bool has_filename() const;
  private:
  bool _internal_has_filename() const;
  public:
  void clear_filename();
  const std::string& filename() const;
  void set_filename(const std::string& value);
  void set_filename(std::string&& value);
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  std::string* mutable_filename();
  std::string* release_filename();
  void set_allocated_filename(std::string* filename);
  private:
  const std::string& _internal_filename() const;
  void _internal_set_filename(const std::string& value);
  std::string* _internal_mutable_filename();
  public:

  // optional string thumbname = 3;
  bool has_thumbname() const;
  private:
  bool _internal_has_thumbname() const;
  public:
  void clear_thumbname();
  const std::string& thumbname() const;
  void set_thumbname(const std::string& value);
  void set_thumbname(std::string&& value);
  void set_thumbname(const char* value);
  void set_thumbname(const char* value, size_t size);
  std::string* mutable_thumbname();
  std::string* release_thumbname();
  void set_allocated_thumbname(std::string* thumbname);
  private:
  const std::string& _internal_thumbname() const;
  void _internal_set_thumbname(const std::string& value);
  std::string* _internal_mutable_thumbname();
  public:

  // optional string caption = 8;
  bool has_caption() const;
  private:
  bool _internal_has_caption() const;
  public:
  void clear_caption();
  const std::string& caption() const;
  void set_caption(const std::string& value);
  void set_caption(std::string&& value);
  void set_caption(const char* value);
  void set_caption(const char* value, size_t size);
  std::string* mutable_caption();
  std::string* release_caption();
  void set_allocated_caption(std::string* caption);
  private:
  const std::string& _internal_caption() const;
  void _internal_set_caption(const std::string& value);
  std::string* _internal_mutable_caption();
  public:

  // optional string shortcut_name = 9;
  bool has_shortcut_name() const;
  private:
  bool _internal_has_shortcut_name() const;
  public:
  void clear_shortcut_name();
  const std::string& shortcut_name() const;
  void set_shortcut_name(const std::string& value);
  void set_shortcut_name(std::string&& value);
  void set_shortcut_name(const char* value);
  void set_shortcut_name(const char* value, size_t size);
  std::string* mutable_shortcut_name();
  std::string* release_shortcut_name();
  void set_allocated_shortcut_name(std::string* shortcut_name);
  private:
  const std::string& _internal_shortcut_name() const;
  void _internal_set_shortcut_name(const std::string& value);
  std::string* _internal_mutable_shortcut_name();
  public:

  // optional string vr_filename = 14;
  bool has_vr_filename() const;
  private:
  bool _internal_has_vr_filename() const;
  public:
  void clear_vr_filename();
  const std::string& vr_filename() const;
  void set_vr_filename(const std::string& value);
  void set_vr_filename(std::string&& value);
  void set_vr_filename(const char* value);
  void set_vr_filename(const char* value, size_t size);
  std::string* mutable_vr_filename();
  std::string* release_vr_filename();
  void set_allocated_vr_filename(std::string* vr_filename);
  private:
  const std::string& _internal_vr_filename() const;
  void _internal_set_vr_filename(const std::string& value);
  std::string* _internal_mutable_vr_filename();
  public:

  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed32 rtime32_created = 4;
  bool has_rtime32_created() const;
  private:
  bool _internal_has_rtime32_created() const;
  public:
  void clear_rtime32_created();
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime32_created() const;
  void set_rtime32_created(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rtime32_created() const;
  void _internal_set_rtime32_created(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 width = 5;
  bool has_width() const;
  private:
  bool _internal_has_width() const;
  public:
  void clear_width();
  ::PROTOBUF_NAMESPACE_ID::uint32 width() const;
  void set_width(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_width() const;
  void _internal_set_width(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 height = 6;
  bool has_height() const;
  private:
  bool _internal_has_height() const;
  public:
  void clear_height();
  ::PROTOBUF_NAMESPACE_ID::uint32 height() const;
  void set_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_height() const;
  void _internal_set_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 permissions = 7;
  bool has_permissions() const;
  private:
  bool _internal_has_permissions() const;
  public:
  void clear_permissions();
  ::PROTOBUF_NAMESPACE_ID::uint32 permissions() const;
  void set_permissions(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_permissions() const;
  void _internal_set_permissions(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool spoiler_tag = 12;
  bool has_spoiler_tag() const;
  private:
  bool _internal_has_spoiler_tag() const;
  public:
  void clear_spoiler_tag();
  bool spoiler_tag() const;
  void set_spoiler_tag(bool value);
  private:
  bool _internal_spoiler_tag() const;
  void _internal_set_spoiler_tag(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMAddScreenshot)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMAddScreenshot_Tag > tag_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > tagged_steamid_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > tagged_publishedfileid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr filename_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr thumbname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr caption_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr shortcut_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr vr_filename_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime32_created_;
  ::PROTOBUF_NAMESPACE_ID::uint32 width_;
  ::PROTOBUF_NAMESPACE_ID::uint32 height_;
  ::PROTOBUF_NAMESPACE_ID::uint32 permissions_;
  bool spoiler_tag_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMAddScreenshotResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMAddScreenshotResponse) */ {
 public:
  inline CMsgClientUCMAddScreenshotResponse() : CMsgClientUCMAddScreenshotResponse(nullptr) {}
  virtual ~CMsgClientUCMAddScreenshotResponse();
  explicit constexpr CMsgClientUCMAddScreenshotResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMAddScreenshotResponse(const CMsgClientUCMAddScreenshotResponse& from);
  CMsgClientUCMAddScreenshotResponse(CMsgClientUCMAddScreenshotResponse&& from) noexcept
    : CMsgClientUCMAddScreenshotResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMAddScreenshotResponse& operator=(const CMsgClientUCMAddScreenshotResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMAddScreenshotResponse& operator=(CMsgClientUCMAddScreenshotResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMAddScreenshotResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMAddScreenshotResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMAddScreenshotResponse*>(
               &_CMsgClientUCMAddScreenshotResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CMsgClientUCMAddScreenshotResponse& a, CMsgClientUCMAddScreenshotResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMAddScreenshotResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMAddScreenshotResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMAddScreenshotResponse* New() const final {
    return CreateMaybeMessage<CMsgClientUCMAddScreenshotResponse>(nullptr);
  }

  CMsgClientUCMAddScreenshotResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMAddScreenshotResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMAddScreenshotResponse& from);
  void MergeFrom(const CMsgClientUCMAddScreenshotResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMAddScreenshotResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMAddScreenshotResponse";
  }
  protected:
  explicit CMsgClientUCMAddScreenshotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEresultFieldNumber = 1,
    kScreenshotidFieldNumber = 2,
  };
  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional fixed64 screenshotid = 2 [default = 18446744073709551615];
  bool has_screenshotid() const;
  private:
  bool _internal_has_screenshotid() const;
  public:
  void clear_screenshotid();
  ::PROTOBUF_NAMESPACE_ID::uint64 screenshotid() const;
  void set_screenshotid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_screenshotid() const;
  void _internal_set_screenshotid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMAddScreenshotResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  ::PROTOBUF_NAMESPACE_ID::uint64 screenshotid_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMDeleteScreenshot PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMDeleteScreenshot) */ {
 public:
  inline CMsgClientUCMDeleteScreenshot() : CMsgClientUCMDeleteScreenshot(nullptr) {}
  virtual ~CMsgClientUCMDeleteScreenshot();
  explicit constexpr CMsgClientUCMDeleteScreenshot(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMDeleteScreenshot(const CMsgClientUCMDeleteScreenshot& from);
  CMsgClientUCMDeleteScreenshot(CMsgClientUCMDeleteScreenshot&& from) noexcept
    : CMsgClientUCMDeleteScreenshot() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMDeleteScreenshot& operator=(const CMsgClientUCMDeleteScreenshot& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMDeleteScreenshot& operator=(CMsgClientUCMDeleteScreenshot&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMDeleteScreenshot& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMDeleteScreenshot* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMDeleteScreenshot*>(
               &_CMsgClientUCMDeleteScreenshot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CMsgClientUCMDeleteScreenshot& a, CMsgClientUCMDeleteScreenshot& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMDeleteScreenshot* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMDeleteScreenshot* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMDeleteScreenshot* New() const final {
    return CreateMaybeMessage<CMsgClientUCMDeleteScreenshot>(nullptr);
  }

  CMsgClientUCMDeleteScreenshot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMDeleteScreenshot>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMDeleteScreenshot& from);
  void MergeFrom(const CMsgClientUCMDeleteScreenshot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMDeleteScreenshot* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMDeleteScreenshot";
  }
  protected:
  explicit CMsgClientUCMDeleteScreenshot(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kScreenshotidFieldNumber = 1,
  };
  // optional fixed64 screenshotid = 1 [default = 18446744073709551615];
  bool has_screenshotid() const;
  private:
  bool _internal_has_screenshotid() const;
  public:
  void clear_screenshotid();
  ::PROTOBUF_NAMESPACE_ID::uint64 screenshotid() const;
  void set_screenshotid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_screenshotid() const;
  void _internal_set_screenshotid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMDeleteScreenshot)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 screenshotid_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMDeleteScreenshotResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMDeleteScreenshotResponse) */ {
 public:
  inline CMsgClientUCMDeleteScreenshotResponse() : CMsgClientUCMDeleteScreenshotResponse(nullptr) {}
  virtual ~CMsgClientUCMDeleteScreenshotResponse();
  explicit constexpr CMsgClientUCMDeleteScreenshotResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMDeleteScreenshotResponse(const CMsgClientUCMDeleteScreenshotResponse& from);
  CMsgClientUCMDeleteScreenshotResponse(CMsgClientUCMDeleteScreenshotResponse&& from) noexcept
    : CMsgClientUCMDeleteScreenshotResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMDeleteScreenshotResponse& operator=(const CMsgClientUCMDeleteScreenshotResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMDeleteScreenshotResponse& operator=(CMsgClientUCMDeleteScreenshotResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMDeleteScreenshotResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMDeleteScreenshotResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMDeleteScreenshotResponse*>(
               &_CMsgClientUCMDeleteScreenshotResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CMsgClientUCMDeleteScreenshotResponse& a, CMsgClientUCMDeleteScreenshotResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMDeleteScreenshotResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMDeleteScreenshotResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMDeleteScreenshotResponse* New() const final {
    return CreateMaybeMessage<CMsgClientUCMDeleteScreenshotResponse>(nullptr);
  }

  CMsgClientUCMDeleteScreenshotResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMDeleteScreenshotResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMDeleteScreenshotResponse& from);
  void MergeFrom(const CMsgClientUCMDeleteScreenshotResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMDeleteScreenshotResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMDeleteScreenshotResponse";
  }
  protected:
  explicit CMsgClientUCMDeleteScreenshotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEresultFieldNumber = 1,
  };
  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMDeleteScreenshotResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMPublishFile PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMPublishFile) */ {
 public:
  inline CMsgClientUCMPublishFile() : CMsgClientUCMPublishFile(nullptr) {}
  virtual ~CMsgClientUCMPublishFile();
  explicit constexpr CMsgClientUCMPublishFile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMPublishFile(const CMsgClientUCMPublishFile& from);
  CMsgClientUCMPublishFile(CMsgClientUCMPublishFile&& from) noexcept
    : CMsgClientUCMPublishFile() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMPublishFile& operator=(const CMsgClientUCMPublishFile& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMPublishFile& operator=(CMsgClientUCMPublishFile&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMPublishFile& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMPublishFile* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMPublishFile*>(
               &_CMsgClientUCMPublishFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CMsgClientUCMPublishFile& a, CMsgClientUCMPublishFile& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMPublishFile* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMPublishFile* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMPublishFile* New() const final {
    return CreateMaybeMessage<CMsgClientUCMPublishFile>(nullptr);
  }

  CMsgClientUCMPublishFile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMPublishFile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMPublishFile& from);
  void MergeFrom(const CMsgClientUCMPublishFile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMPublishFile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMPublishFile";
  }
  protected:
  explicit CMsgClientUCMPublishFile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagsFieldNumber = 8,
    kFileNameFieldNumber = 2,
    kPreviewFileNameFieldNumber = 3,
    kTitleFieldNumber = 5,
    kDescriptionFieldNumber = 6,
    kUrlFieldNumber = 12,
    kVideoAccountNameFieldNumber = 14,
    kVideoIdentifierFieldNumber = 15,
    kAppIdFieldNumber = 1,
    kConsumerAppIdFieldNumber = 4,
    kVisibilityFieldNumber = 10,
    kFileTypeFieldNumber = 11,
    kWorkshopFileFieldNumber = 9,
    kInProgressFieldNumber = 16,
    kVideoProviderFieldNumber = 13,
  };
  // repeated string tags = 8;
  int tags_size() const;
  private:
  int _internal_tags_size() const;
  public:
  void clear_tags();
  const std::string& tags(int index) const;
  std::string* mutable_tags(int index);
  void set_tags(int index, const std::string& value);
  void set_tags(int index, std::string&& value);
  void set_tags(int index, const char* value);
  void set_tags(int index, const char* value, size_t size);
  std::string* add_tags();
  void add_tags(const std::string& value);
  void add_tags(std::string&& value);
  void add_tags(const char* value);
  void add_tags(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& tags() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_tags();
  private:
  const std::string& _internal_tags(int index) const;
  std::string* _internal_add_tags();
  public:

  // optional string file_name = 2;
  bool has_file_name() const;
  private:
  bool _internal_has_file_name() const;
  public:
  void clear_file_name();
  const std::string& file_name() const;
  void set_file_name(const std::string& value);
  void set_file_name(std::string&& value);
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  std::string* mutable_file_name();
  std::string* release_file_name();
  void set_allocated_file_name(std::string* file_name);
  private:
  const std::string& _internal_file_name() const;
  void _internal_set_file_name(const std::string& value);
  std::string* _internal_mutable_file_name();
  public:

  // optional string preview_file_name = 3;
  bool has_preview_file_name() const;
  private:
  bool _internal_has_preview_file_name() const;
  public:
  void clear_preview_file_name();
  const std::string& preview_file_name() const;
  void set_preview_file_name(const std::string& value);
  void set_preview_file_name(std::string&& value);
  void set_preview_file_name(const char* value);
  void set_preview_file_name(const char* value, size_t size);
  std::string* mutable_preview_file_name();
  std::string* release_preview_file_name();
  void set_allocated_preview_file_name(std::string* preview_file_name);
  private:
  const std::string& _internal_preview_file_name() const;
  void _internal_set_preview_file_name(const std::string& value);
  std::string* _internal_mutable_preview_file_name();
  public:

  // optional string title = 5;
  bool has_title() const;
  private:
  bool _internal_has_title() const;
  public:
  void clear_title();
  const std::string& title() const;
  void set_title(const std::string& value);
  void set_title(std::string&& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  std::string* mutable_title();
  std::string* release_title();
  void set_allocated_title(std::string* title);
  private:
  const std::string& _internal_title() const;
  void _internal_set_title(const std::string& value);
  std::string* _internal_mutable_title();
  public:

  // optional string description = 6;
  bool has_description() const;
  private:
  bool _internal_has_description() const;
  public:
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // optional string url = 12;
  bool has_url() const;
  private:
  bool _internal_has_url() const;
  public:
  void clear_url();
  const std::string& url() const;
  void set_url(const std::string& value);
  void set_url(std::string&& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  std::string* mutable_url();
  std::string* release_url();
  void set_allocated_url(std::string* url);
  private:
  const std::string& _internal_url() const;
  void _internal_set_url(const std::string& value);
  std::string* _internal_mutable_url();
  public:

  // optional string video_account_name = 14;
  bool has_video_account_name() const;
  private:
  bool _internal_has_video_account_name() const;
  public:
  void clear_video_account_name();
  const std::string& video_account_name() const;
  void set_video_account_name(const std::string& value);
  void set_video_account_name(std::string&& value);
  void set_video_account_name(const char* value);
  void set_video_account_name(const char* value, size_t size);
  std::string* mutable_video_account_name();
  std::string* release_video_account_name();
  void set_allocated_video_account_name(std::string* video_account_name);
  private:
  const std::string& _internal_video_account_name() const;
  void _internal_set_video_account_name(const std::string& value);
  std::string* _internal_mutable_video_account_name();
  public:

  // optional string video_identifier = 15;
  bool has_video_identifier() const;
  private:
  bool _internal_has_video_identifier() const;
  public:
  void clear_video_identifier();
  const std::string& video_identifier() const;
  void set_video_identifier(const std::string& value);
  void set_video_identifier(std::string&& value);
  void set_video_identifier(const char* value);
  void set_video_identifier(const char* value, size_t size);
  std::string* mutable_video_identifier();
  std::string* release_video_identifier();
  void set_allocated_video_identifier(std::string* video_identifier);
  private:
  const std::string& _internal_video_identifier() const;
  void _internal_set_video_identifier(const std::string& value);
  std::string* _internal_mutable_video_identifier();
  public:

  // optional uint32 app_id = 1;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 consumer_app_id = 4;
  bool has_consumer_app_id() const;
  private:
  bool _internal_has_consumer_app_id() const;
  public:
  void clear_consumer_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 consumer_app_id() const;
  void set_consumer_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_consumer_app_id() const;
  void _internal_set_consumer_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 visibility = 10;
  bool has_visibility() const;
  private:
  bool _internal_has_visibility() const;
  public:
  void clear_visibility();
  ::PROTOBUF_NAMESPACE_ID::int32 visibility() const;
  void set_visibility(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_visibility() const;
  void _internal_set_visibility(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 file_type = 11;
  bool has_file_type() const;
  private:
  bool _internal_has_file_type() const;
  public:
  void clear_file_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_type() const;
  void set_file_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_type() const;
  void _internal_set_file_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool workshop_file = 9;
  bool has_workshop_file() const;
  private:
  bool _internal_has_workshop_file() const;
  public:
  void clear_workshop_file();
  bool workshop_file() const;
  void set_workshop_file(bool value);
  private:
  bool _internal_workshop_file() const;
  void _internal_set_workshop_file(bool value);
  public:

  // optional bool in_progress = 16;
  bool has_in_progress() const;
  private:
  bool _internal_has_in_progress() const;
  public:
  void clear_in_progress();
  bool in_progress() const;
  void set_in_progress(bool value);
  private:
  bool _internal_in_progress() const;
  void _internal_set_in_progress(bool value);
  public:

  // optional uint32 video_provider = 13;
  bool has_video_provider() const;
  private:
  bool _internal_has_video_provider() const;
  public:
  void clear_video_provider();
  ::PROTOBUF_NAMESPACE_ID::uint32 video_provider() const;
  void set_video_provider(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_video_provider() const;
  void _internal_set_video_provider(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMPublishFile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> tags_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr preview_file_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr title_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr url_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr video_account_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr video_identifier_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 consumer_app_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 visibility_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_type_;
  bool workshop_file_;
  bool in_progress_;
  ::PROTOBUF_NAMESPACE_ID::uint32 video_provider_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMPublishFileResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMPublishFileResponse) */ {
 public:
  inline CMsgClientUCMPublishFileResponse() : CMsgClientUCMPublishFileResponse(nullptr) {}
  virtual ~CMsgClientUCMPublishFileResponse();
  explicit constexpr CMsgClientUCMPublishFileResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMPublishFileResponse(const CMsgClientUCMPublishFileResponse& from);
  CMsgClientUCMPublishFileResponse(CMsgClientUCMPublishFileResponse&& from) noexcept
    : CMsgClientUCMPublishFileResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMPublishFileResponse& operator=(const CMsgClientUCMPublishFileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMPublishFileResponse& operator=(CMsgClientUCMPublishFileResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMPublishFileResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMPublishFileResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMPublishFileResponse*>(
               &_CMsgClientUCMPublishFileResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CMsgClientUCMPublishFileResponse& a, CMsgClientUCMPublishFileResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMPublishFileResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMPublishFileResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMPublishFileResponse* New() const final {
    return CreateMaybeMessage<CMsgClientUCMPublishFileResponse>(nullptr);
  }

  CMsgClientUCMPublishFileResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMPublishFileResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMPublishFileResponse& from);
  void MergeFrom(const CMsgClientUCMPublishFileResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMPublishFileResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMPublishFileResponse";
  }
  protected:
  explicit CMsgClientUCMPublishFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNeedsWorkshopLegalAgreementAcceptanceFieldNumber = 3,
    kEresultFieldNumber = 1,
    kPublishedFileIdFieldNumber = 2,
  };
  // optional bool needs_workshop_legal_agreement_acceptance = 3 [default = false];
  bool has_needs_workshop_legal_agreement_acceptance() const;
  private:
  bool _internal_has_needs_workshop_legal_agreement_acceptance() const;
  public:
  void clear_needs_workshop_legal_agreement_acceptance();
  bool needs_workshop_legal_agreement_acceptance() const;
  void set_needs_workshop_legal_agreement_acceptance(bool value);
  private:
  bool _internal_needs_workshop_legal_agreement_acceptance() const;
  void _internal_set_needs_workshop_legal_agreement_acceptance(bool value);
  public:

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional fixed64 published_file_id = 2 [default = 18446744073709551615];
  bool has_published_file_id() const;
  private:
  bool _internal_has_published_file_id() const;
  public:
  void clear_published_file_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id() const;
  void set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_published_file_id() const;
  void _internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMPublishFileResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool needs_workshop_legal_agreement_acceptance_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMUpdatePublishedFile_KeyValueTag PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMUpdatePublishedFile.KeyValueTag) */ {
 public:
  inline CMsgClientUCMUpdatePublishedFile_KeyValueTag() : CMsgClientUCMUpdatePublishedFile_KeyValueTag(nullptr) {}
  virtual ~CMsgClientUCMUpdatePublishedFile_KeyValueTag();
  explicit constexpr CMsgClientUCMUpdatePublishedFile_KeyValueTag(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMUpdatePublishedFile_KeyValueTag(const CMsgClientUCMUpdatePublishedFile_KeyValueTag& from);
  CMsgClientUCMUpdatePublishedFile_KeyValueTag(CMsgClientUCMUpdatePublishedFile_KeyValueTag&& from) noexcept
    : CMsgClientUCMUpdatePublishedFile_KeyValueTag() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMUpdatePublishedFile_KeyValueTag& operator=(const CMsgClientUCMUpdatePublishedFile_KeyValueTag& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMUpdatePublishedFile_KeyValueTag& operator=(CMsgClientUCMUpdatePublishedFile_KeyValueTag&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMUpdatePublishedFile_KeyValueTag& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMUpdatePublishedFile_KeyValueTag* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMUpdatePublishedFile_KeyValueTag*>(
               &_CMsgClientUCMUpdatePublishedFile_KeyValueTag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CMsgClientUCMUpdatePublishedFile_KeyValueTag& a, CMsgClientUCMUpdatePublishedFile_KeyValueTag& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMUpdatePublishedFile_KeyValueTag* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMUpdatePublishedFile_KeyValueTag* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMUpdatePublishedFile_KeyValueTag* New() const final {
    return CreateMaybeMessage<CMsgClientUCMUpdatePublishedFile_KeyValueTag>(nullptr);
  }

  CMsgClientUCMUpdatePublishedFile_KeyValueTag* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMUpdatePublishedFile_KeyValueTag>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMUpdatePublishedFile_KeyValueTag& from);
  void MergeFrom(const CMsgClientUCMUpdatePublishedFile_KeyValueTag& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMUpdatePublishedFile_KeyValueTag* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMUpdatePublishedFile.KeyValueTag";
  }
  protected:
  explicit CMsgClientUCMUpdatePublishedFile_KeyValueTag(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // optional string key = 1;
  bool has_key() const;
  private:
  bool _internal_has_key() const;
  public:
  void clear_key();
  const std::string& key() const;
  void set_key(const std::string& value);
  void set_key(std::string&& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  std::string* mutable_key();
  std::string* release_key();
  void set_allocated_key(std::string* key);
  private:
  const std::string& _internal_key() const;
  void _internal_set_key(const std::string& value);
  std::string* _internal_mutable_key();
  public:

  // optional string value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);
  private:
  const std::string& _internal_value() const;
  void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMUpdatePublishedFile.KeyValueTag)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMUpdatePublishedFile_AdditionalPreview PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMUpdatePublishedFile.AdditionalPreview) */ {
 public:
  inline CMsgClientUCMUpdatePublishedFile_AdditionalPreview() : CMsgClientUCMUpdatePublishedFile_AdditionalPreview(nullptr) {}
  virtual ~CMsgClientUCMUpdatePublishedFile_AdditionalPreview();
  explicit constexpr CMsgClientUCMUpdatePublishedFile_AdditionalPreview(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMUpdatePublishedFile_AdditionalPreview(const CMsgClientUCMUpdatePublishedFile_AdditionalPreview& from);
  CMsgClientUCMUpdatePublishedFile_AdditionalPreview(CMsgClientUCMUpdatePublishedFile_AdditionalPreview&& from) noexcept
    : CMsgClientUCMUpdatePublishedFile_AdditionalPreview() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMUpdatePublishedFile_AdditionalPreview& operator=(const CMsgClientUCMUpdatePublishedFile_AdditionalPreview& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMUpdatePublishedFile_AdditionalPreview& operator=(CMsgClientUCMUpdatePublishedFile_AdditionalPreview&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMUpdatePublishedFile_AdditionalPreview& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMUpdatePublishedFile_AdditionalPreview* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMUpdatePublishedFile_AdditionalPreview*>(
               &_CMsgClientUCMUpdatePublishedFile_AdditionalPreview_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CMsgClientUCMUpdatePublishedFile_AdditionalPreview& a, CMsgClientUCMUpdatePublishedFile_AdditionalPreview& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMUpdatePublishedFile_AdditionalPreview* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMUpdatePublishedFile_AdditionalPreview* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMUpdatePublishedFile_AdditionalPreview* New() const final {
    return CreateMaybeMessage<CMsgClientUCMUpdatePublishedFile_AdditionalPreview>(nullptr);
  }

  CMsgClientUCMUpdatePublishedFile_AdditionalPreview* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMUpdatePublishedFile_AdditionalPreview>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMUpdatePublishedFile_AdditionalPreview& from);
  void MergeFrom(const CMsgClientUCMUpdatePublishedFile_AdditionalPreview& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMUpdatePublishedFile_AdditionalPreview* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMUpdatePublishedFile.AdditionalPreview";
  }
  protected:
  explicit CMsgClientUCMUpdatePublishedFile_AdditionalPreview(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOriginalFileNameFieldNumber = 1,
    kInternalFileNameFieldNumber = 2,
    kVideoidFieldNumber = 3,
    kPreviewTypeFieldNumber = 4,
    kUpdateIndexFieldNumber = 5,
  };
  // optional string original_file_name = 1;
  bool has_original_file_name() const;
  private:
  bool _internal_has_original_file_name() const;
  public:
  void clear_original_file_name();
  const std::string& original_file_name() const;
  void set_original_file_name(const std::string& value);
  void set_original_file_name(std::string&& value);
  void set_original_file_name(const char* value);
  void set_original_file_name(const char* value, size_t size);
  std::string* mutable_original_file_name();
  std::string* release_original_file_name();
  void set_allocated_original_file_name(std::string* original_file_name);
  private:
  const std::string& _internal_original_file_name() const;
  void _internal_set_original_file_name(const std::string& value);
  std::string* _internal_mutable_original_file_name();
  public:

  // optional string internal_file_name = 2;
  bool has_internal_file_name() const;
  private:
  bool _internal_has_internal_file_name() const;
  public:
  void clear_internal_file_name();
  const std::string& internal_file_name() const;
  void set_internal_file_name(const std::string& value);
  void set_internal_file_name(std::string&& value);
  void set_internal_file_name(const char* value);
  void set_internal_file_name(const char* value, size_t size);
  std::string* mutable_internal_file_name();
  std::string* release_internal_file_name();
  void set_allocated_internal_file_name(std::string* internal_file_name);
  private:
  const std::string& _internal_internal_file_name() const;
  void _internal_set_internal_file_name(const std::string& value);
  std::string* _internal_mutable_internal_file_name();
  public:

  // optional string videoid = 3;
  bool has_videoid() const;
  private:
  bool _internal_has_videoid() const;
  public:
  void clear_videoid();
  const std::string& videoid() const;
  void set_videoid(const std::string& value);
  void set_videoid(std::string&& value);
  void set_videoid(const char* value);
  void set_videoid(const char* value, size_t size);
  std::string* mutable_videoid();
  std::string* release_videoid();
  void set_allocated_videoid(std::string* videoid);
  private:
  const std::string& _internal_videoid() const;
  void _internal_set_videoid(const std::string& value);
  std::string* _internal_mutable_videoid();
  public:

  // optional uint32 preview_type = 4;
  bool has_preview_type() const;
  private:
  bool _internal_has_preview_type() const;
  public:
  void clear_preview_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 preview_type() const;
  void set_preview_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_preview_type() const;
  void _internal_set_preview_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 update_index = 5 [default = -1];
  bool has_update_index() const;
  private:
  bool _internal_has_update_index() const;
  public:
  void clear_update_index();
  ::PROTOBUF_NAMESPACE_ID::int32 update_index() const;
  void set_update_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_update_index() const;
  void _internal_set_update_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr original_file_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr internal_file_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr videoid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 preview_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 update_index_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMUpdatePublishedFile PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMUpdatePublishedFile) */ {
 public:
  inline CMsgClientUCMUpdatePublishedFile() : CMsgClientUCMUpdatePublishedFile(nullptr) {}
  virtual ~CMsgClientUCMUpdatePublishedFile();
  explicit constexpr CMsgClientUCMUpdatePublishedFile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMUpdatePublishedFile(const CMsgClientUCMUpdatePublishedFile& from);
  CMsgClientUCMUpdatePublishedFile(CMsgClientUCMUpdatePublishedFile&& from) noexcept
    : CMsgClientUCMUpdatePublishedFile() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMUpdatePublishedFile& operator=(const CMsgClientUCMUpdatePublishedFile& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMUpdatePublishedFile& operator=(CMsgClientUCMUpdatePublishedFile&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMUpdatePublishedFile& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMUpdatePublishedFile* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMUpdatePublishedFile*>(
               &_CMsgClientUCMUpdatePublishedFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CMsgClientUCMUpdatePublishedFile& a, CMsgClientUCMUpdatePublishedFile& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMUpdatePublishedFile* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMUpdatePublishedFile* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMUpdatePublishedFile* New() const final {
    return CreateMaybeMessage<CMsgClientUCMUpdatePublishedFile>(nullptr);
  }

  CMsgClientUCMUpdatePublishedFile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMUpdatePublishedFile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMUpdatePublishedFile& from);
  void MergeFrom(const CMsgClientUCMUpdatePublishedFile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMUpdatePublishedFile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMUpdatePublishedFile";
  }
  protected:
  explicit CMsgClientUCMUpdatePublishedFile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientUCMUpdatePublishedFile_KeyValueTag KeyValueTag;
  typedef CMsgClientUCMUpdatePublishedFile_AdditionalPreview AdditionalPreview;

  // accessors -------------------------------------------------------

  enum : int {
    kTagsFieldNumber = 7,
    kRemovedKvtagsFieldNumber = 23,
    kKvtagsFieldNumber = 24,
    kPreviewsFieldNumber = 25,
    kPreviewsToRemoveFieldNumber = 26,
    kContentDescriptorsToAddFieldNumber = 29,
    kContentDescriptorsToRemoveFieldNumber = 30,
    kFileNameFieldNumber = 3,
    kPreviewFileNameFieldNumber = 4,
    kTitleFieldNumber = 5,
    kDescriptionFieldNumber = 6,
    kChangeDescriptionFieldNumber = 15,
    kUrlFieldNumber = 17,
    kMetadataFieldNumber = 20,
    kPublishedFileIdFieldNumber = 2,
    kAppIdFieldNumber = 1,
    kVisibilityFieldNumber = 8,
    kUpdateFileFieldNumber = 9,
    kUpdatePreviewFileFieldNumber = 10,
    kUpdateTitleFieldNumber = 11,
    kUpdateDescriptionFieldNumber = 12,
    kUpdateTagsFieldNumber = 13,
    kUpdateVisibilityFieldNumber = 14,
    kUpdateUrlFieldNumber = 16,
    kUpdateContentManifestFieldNumber = 18,
    kContentManifestFieldNumber = 19,
    kLanguageFieldNumber = 22,
    kUpdateMetadataFieldNumber = 21,
    kClearInProgressFieldNumber = 27,
    kRemoveAllKvtagsFieldNumber = 28,
    kAllowAdminTagsFieldNumber = 31,
    kExternalAssetIdFieldNumber = 32,
  };
  // repeated string tags = 7;
  int tags_size() const;
  private:
  int _internal_tags_size() const;
  public:
  void clear_tags();
  const std::string& tags(int index) const;
  std::string* mutable_tags(int index);
  void set_tags(int index, const std::string& value);
  void set_tags(int index, std::string&& value);
  void set_tags(int index, const char* value);
  void set_tags(int index, const char* value, size_t size);
  std::string* add_tags();
  void add_tags(const std::string& value);
  void add_tags(std::string&& value);
  void add_tags(const char* value);
  void add_tags(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& tags() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_tags();
  private:
  const std::string& _internal_tags(int index) const;
  std::string* _internal_add_tags();
  public:

  // repeated string removed_kvtags = 23;
  int removed_kvtags_size() const;
  private:
  int _internal_removed_kvtags_size() const;
  public:
  void clear_removed_kvtags();
  const std::string& removed_kvtags(int index) const;
  std::string* mutable_removed_kvtags(int index);
  void set_removed_kvtags(int index, const std::string& value);
  void set_removed_kvtags(int index, std::string&& value);
  void set_removed_kvtags(int index, const char* value);
  void set_removed_kvtags(int index, const char* value, size_t size);
  std::string* add_removed_kvtags();
  void add_removed_kvtags(const std::string& value);
  void add_removed_kvtags(std::string&& value);
  void add_removed_kvtags(const char* value);
  void add_removed_kvtags(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& removed_kvtags() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_removed_kvtags();
  private:
  const std::string& _internal_removed_kvtags(int index) const;
  std::string* _internal_add_removed_kvtags();
  public:

  // repeated .CMsgClientUCMUpdatePublishedFile.KeyValueTag kvtags = 24;
  int kvtags_size() const;
  private:
  int _internal_kvtags_size() const;
  public:
  void clear_kvtags();
  ::CMsgClientUCMUpdatePublishedFile_KeyValueTag* mutable_kvtags(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMUpdatePublishedFile_KeyValueTag >*
      mutable_kvtags();
  private:
  const ::CMsgClientUCMUpdatePublishedFile_KeyValueTag& _internal_kvtags(int index) const;
  ::CMsgClientUCMUpdatePublishedFile_KeyValueTag* _internal_add_kvtags();
  public:
  const ::CMsgClientUCMUpdatePublishedFile_KeyValueTag& kvtags(int index) const;
  ::CMsgClientUCMUpdatePublishedFile_KeyValueTag* add_kvtags();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMUpdatePublishedFile_KeyValueTag >&
      kvtags() const;

  // repeated .CMsgClientUCMUpdatePublishedFile.AdditionalPreview previews = 25;
  int previews_size() const;
  private:
  int _internal_previews_size() const;
  public:
  void clear_previews();
  ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview* mutable_previews(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview >*
      mutable_previews();
  private:
  const ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview& _internal_previews(int index) const;
  ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview* _internal_add_previews();
  public:
  const ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview& previews(int index) const;
  ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview* add_previews();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview >&
      previews() const;

  // repeated int32 previews_to_remove = 26;
  int previews_to_remove_size() const;
  private:
  int _internal_previews_to_remove_size() const;
  public:
  void clear_previews_to_remove();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_previews_to_remove(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_previews_to_remove() const;
  void _internal_add_previews_to_remove(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_previews_to_remove();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 previews_to_remove(int index) const;
  void set_previews_to_remove(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_previews_to_remove(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      previews_to_remove() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_previews_to_remove();

  // repeated int32 content_descriptors_to_add = 29;
  int content_descriptors_to_add_size() const;
  private:
  int _internal_content_descriptors_to_add_size() const;
  public:
  void clear_content_descriptors_to_add();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_content_descriptors_to_add(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_content_descriptors_to_add() const;
  void _internal_add_content_descriptors_to_add(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_content_descriptors_to_add();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 content_descriptors_to_add(int index) const;
  void set_content_descriptors_to_add(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_content_descriptors_to_add(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      content_descriptors_to_add() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_content_descriptors_to_add();

  // repeated int32 content_descriptors_to_remove = 30;
  int content_descriptors_to_remove_size() const;
  private:
  int _internal_content_descriptors_to_remove_size() const;
  public:
  void clear_content_descriptors_to_remove();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_content_descriptors_to_remove(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_content_descriptors_to_remove() const;
  void _internal_add_content_descriptors_to_remove(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_content_descriptors_to_remove();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 content_descriptors_to_remove(int index) const;
  void set_content_descriptors_to_remove(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_content_descriptors_to_remove(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      content_descriptors_to_remove() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_content_descriptors_to_remove();

  // optional string file_name = 3;
  bool has_file_name() const;
  private:
  bool _internal_has_file_name() const;
  public:
  void clear_file_name();
  const std::string& file_name() const;
  void set_file_name(const std::string& value);
  void set_file_name(std::string&& value);
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  std::string* mutable_file_name();
  std::string* release_file_name();
  void set_allocated_file_name(std::string* file_name);
  private:
  const std::string& _internal_file_name() const;
  void _internal_set_file_name(const std::string& value);
  std::string* _internal_mutable_file_name();
  public:

  // optional string preview_file_name = 4;
  bool has_preview_file_name() const;
  private:
  bool _internal_has_preview_file_name() const;
  public:
  void clear_preview_file_name();
  const std::string& preview_file_name() const;
  void set_preview_file_name(const std::string& value);
  void set_preview_file_name(std::string&& value);
  void set_preview_file_name(const char* value);
  void set_preview_file_name(const char* value, size_t size);
  std::string* mutable_preview_file_name();
  std::string* release_preview_file_name();
  void set_allocated_preview_file_name(std::string* preview_file_name);
  private:
  const std::string& _internal_preview_file_name() const;
  void _internal_set_preview_file_name(const std::string& value);
  std::string* _internal_mutable_preview_file_name();
  public:

  // optional string title = 5;
  bool has_title() const;
  private:
  bool _internal_has_title() const;
  public:
  void clear_title();
  const std::string& title() const;
  void set_title(const std::string& value);
  void set_title(std::string&& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  std::string* mutable_title();
  std::string* release_title();
  void set_allocated_title(std::string* title);
  private:
  const std::string& _internal_title() const;
  void _internal_set_title(const std::string& value);
  std::string* _internal_mutable_title();
  public:

  // optional string description = 6;
  bool has_description() const;
  private:
  bool _internal_has_description() const;
  public:
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // optional string change_description = 15;
  bool has_change_description() const;
  private:
  bool _internal_has_change_description() const;
  public:
  void clear_change_description();
  const std::string& change_description() const;
  void set_change_description(const std::string& value);
  void set_change_description(std::string&& value);
  void set_change_description(const char* value);
  void set_change_description(const char* value, size_t size);
  std::string* mutable_change_description();
  std::string* release_change_description();
  void set_allocated_change_description(std::string* change_description);
  private:
  const std::string& _internal_change_description() const;
  void _internal_set_change_description(const std::string& value);
  std::string* _internal_mutable_change_description();
  public:

  // optional string url = 17;
  bool has_url() const;
  private:
  bool _internal_has_url() const;
  public:
  void clear_url();
  const std::string& url() const;
  void set_url(const std::string& value);
  void set_url(std::string&& value);
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  std::string* mutable_url();
  std::string* release_url();
  void set_allocated_url(std::string* url);
  private:
  const std::string& _internal_url() const;
  void _internal_set_url(const std::string& value);
  std::string* _internal_mutable_url();
  public:

  // optional string metadata = 20;
  bool has_metadata() const;
  private:
  bool _internal_has_metadata() const;
  public:
  void clear_metadata();
  const std::string& metadata() const;
  void set_metadata(const std::string& value);
  void set_metadata(std::string&& value);
  void set_metadata(const char* value);
  void set_metadata(const char* value, size_t size);
  std::string* mutable_metadata();
  std::string* release_metadata();
  void set_allocated_metadata(std::string* metadata);
  private:
  const std::string& _internal_metadata() const;
  void _internal_set_metadata(const std::string& value);
  std::string* _internal_mutable_metadata();
  public:

  // optional fixed64 published_file_id = 2;
  bool has_published_file_id() const;
  private:
  bool _internal_has_published_file_id() const;
  public:
  void clear_published_file_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id() const;
  void set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_published_file_id() const;
  void _internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 app_id = 1;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 visibility = 8;
  bool has_visibility() const;
  private:
  bool _internal_has_visibility() const;
  public:
  void clear_visibility();
  ::PROTOBUF_NAMESPACE_ID::int32 visibility() const;
  void set_visibility(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_visibility() const;
  void _internal_set_visibility(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool update_file = 9;
  bool has_update_file() const;
  private:
  bool _internal_has_update_file() const;
  public:
  void clear_update_file();
  bool update_file() const;
  void set_update_file(bool value);
  private:
  bool _internal_update_file() const;
  void _internal_set_update_file(bool value);
  public:

  // optional bool update_preview_file = 10;
  bool has_update_preview_file() const;
  private:
  bool _internal_has_update_preview_file() const;
  public:
  void clear_update_preview_file();
  bool update_preview_file() const;
  void set_update_preview_file(bool value);
  private:
  bool _internal_update_preview_file() const;
  void _internal_set_update_preview_file(bool value);
  public:

  // optional bool update_title = 11;
  bool has_update_title() const;
  private:
  bool _internal_has_update_title() const;
  public:
  void clear_update_title();
  bool update_title() const;
  void set_update_title(bool value);
  private:
  bool _internal_update_title() const;
  void _internal_set_update_title(bool value);
  public:

  // optional bool update_description = 12;
  bool has_update_description() const;
  private:
  bool _internal_has_update_description() const;
  public:
  void clear_update_description();
  bool update_description() const;
  void set_update_description(bool value);
  private:
  bool _internal_update_description() const;
  void _internal_set_update_description(bool value);
  public:

  // optional bool update_tags = 13;
  bool has_update_tags() const;
  private:
  bool _internal_has_update_tags() const;
  public:
  void clear_update_tags();
  bool update_tags() const;
  void set_update_tags(bool value);
  private:
  bool _internal_update_tags() const;
  void _internal_set_update_tags(bool value);
  public:

  // optional bool update_visibility = 14;
  bool has_update_visibility() const;
  private:
  bool _internal_has_update_visibility() const;
  public:
  void clear_update_visibility();
  bool update_visibility() const;
  void set_update_visibility(bool value);
  private:
  bool _internal_update_visibility() const;
  void _internal_set_update_visibility(bool value);
  public:

  // optional bool update_url = 16;
  bool has_update_url() const;
  private:
  bool _internal_has_update_url() const;
  public:
  void clear_update_url();
  bool update_url() const;
  void set_update_url(bool value);
  private:
  bool _internal_update_url() const;
  void _internal_set_update_url(bool value);
  public:

  // optional bool update_content_manifest = 18;
  bool has_update_content_manifest() const;
  private:
  bool _internal_has_update_content_manifest() const;
  public:
  void clear_update_content_manifest();
  bool update_content_manifest() const;
  void set_update_content_manifest(bool value);
  private:
  bool _internal_update_content_manifest() const;
  void _internal_set_update_content_manifest(bool value);
  public:

  // optional fixed64 content_manifest = 19;
  bool has_content_manifest() const;
  private:
  bool _internal_has_content_manifest() const;
  public:
  void clear_content_manifest();
  ::PROTOBUF_NAMESPACE_ID::uint64 content_manifest() const;
  void set_content_manifest(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_content_manifest() const;
  void _internal_set_content_manifest(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional int32 language = 22 [default = 0];
  bool has_language() const;
  private:
  bool _internal_has_language() const;
  public:
  void clear_language();
  ::PROTOBUF_NAMESPACE_ID::int32 language() const;
  void set_language(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_language() const;
  void _internal_set_language(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool update_metadata = 21;
  bool has_update_metadata() const;
  private:
  bool _internal_has_update_metadata() const;
  public:
  void clear_update_metadata();
  bool update_metadata() const;
  void set_update_metadata(bool value);
  private:
  bool _internal_update_metadata() const;
  void _internal_set_update_metadata(bool value);
  public:

  // optional bool clear_in_progress = 27;
  bool has_clear_in_progress() const;
  private:
  bool _internal_has_clear_in_progress() const;
  public:
  void clear_clear_in_progress();
  bool clear_in_progress() const;
  void set_clear_in_progress(bool value);
  private:
  bool _internal_clear_in_progress() const;
  void _internal_set_clear_in_progress(bool value);
  public:

  // optional bool remove_all_kvtags = 28;
  bool has_remove_all_kvtags() const;
  private:
  bool _internal_has_remove_all_kvtags() const;
  public:
  void clear_remove_all_kvtags();
  bool remove_all_kvtags() const;
  void set_remove_all_kvtags(bool value);
  private:
  bool _internal_remove_all_kvtags() const;
  void _internal_set_remove_all_kvtags(bool value);
  public:

  // optional bool allow_admin_tags = 31 [default = false];
  bool has_allow_admin_tags() const;
  private:
  bool _internal_has_allow_admin_tags() const;
  public:
  void clear_allow_admin_tags();
  bool allow_admin_tags() const;
  void set_allow_admin_tags(bool value);
  private:
  bool _internal_allow_admin_tags() const;
  void _internal_set_allow_admin_tags(bool value);
  public:

  // optional uint64 external_asset_id = 32;
  bool has_external_asset_id() const;
  private:
  bool _internal_has_external_asset_id() const;
  public:
  void clear_external_asset_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 external_asset_id() const;
  void set_external_asset_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_external_asset_id() const;
  void _internal_set_external_asset_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMUpdatePublishedFile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> tags_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> removed_kvtags_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMUpdatePublishedFile_KeyValueTag > kvtags_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview > previews_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > previews_to_remove_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > content_descriptors_to_add_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > content_descriptors_to_remove_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr file_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr preview_file_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr title_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr change_description_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr url_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 visibility_;
  bool update_file_;
  bool update_preview_file_;
  bool update_title_;
  bool update_description_;
  bool update_tags_;
  bool update_visibility_;
  bool update_url_;
  bool update_content_manifest_;
  ::PROTOBUF_NAMESPACE_ID::uint64 content_manifest_;
  ::PROTOBUF_NAMESPACE_ID::int32 language_;
  bool update_metadata_;
  bool clear_in_progress_;
  bool remove_all_kvtags_;
  bool allow_admin_tags_;
  ::PROTOBUF_NAMESPACE_ID::uint64 external_asset_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMUpdatePublishedFileResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMUpdatePublishedFileResponse) */ {
 public:
  inline CMsgClientUCMUpdatePublishedFileResponse() : CMsgClientUCMUpdatePublishedFileResponse(nullptr) {}
  virtual ~CMsgClientUCMUpdatePublishedFileResponse();
  explicit constexpr CMsgClientUCMUpdatePublishedFileResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMUpdatePublishedFileResponse(const CMsgClientUCMUpdatePublishedFileResponse& from);
  CMsgClientUCMUpdatePublishedFileResponse(CMsgClientUCMUpdatePublishedFileResponse&& from) noexcept
    : CMsgClientUCMUpdatePublishedFileResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMUpdatePublishedFileResponse& operator=(const CMsgClientUCMUpdatePublishedFileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMUpdatePublishedFileResponse& operator=(CMsgClientUCMUpdatePublishedFileResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMUpdatePublishedFileResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMUpdatePublishedFileResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMUpdatePublishedFileResponse*>(
               &_CMsgClientUCMUpdatePublishedFileResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CMsgClientUCMUpdatePublishedFileResponse& a, CMsgClientUCMUpdatePublishedFileResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMUpdatePublishedFileResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMUpdatePublishedFileResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMUpdatePublishedFileResponse* New() const final {
    return CreateMaybeMessage<CMsgClientUCMUpdatePublishedFileResponse>(nullptr);
  }

  CMsgClientUCMUpdatePublishedFileResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMUpdatePublishedFileResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMUpdatePublishedFileResponse& from);
  void MergeFrom(const CMsgClientUCMUpdatePublishedFileResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMUpdatePublishedFileResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMUpdatePublishedFileResponse";
  }
  protected:
  explicit CMsgClientUCMUpdatePublishedFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNeedsWorkshopLegalAgreementAcceptanceFieldNumber = 2,
    kEresultFieldNumber = 1,
  };
  // optional bool needs_workshop_legal_agreement_acceptance = 2 [default = false];
  bool has_needs_workshop_legal_agreement_acceptance() const;
  private:
  bool _internal_has_needs_workshop_legal_agreement_acceptance() const;
  public:
  void clear_needs_workshop_legal_agreement_acceptance();
  bool needs_workshop_legal_agreement_acceptance() const;
  void set_needs_workshop_legal_agreement_acceptance(bool value);
  private:
  bool _internal_needs_workshop_legal_agreement_acceptance() const;
  void _internal_set_needs_workshop_legal_agreement_acceptance(bool value);
  public:

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMUpdatePublishedFileResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool needs_workshop_legal_agreement_acceptance_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMDeletePublishedFile PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMDeletePublishedFile) */ {
 public:
  inline CMsgClientUCMDeletePublishedFile() : CMsgClientUCMDeletePublishedFile(nullptr) {}
  virtual ~CMsgClientUCMDeletePublishedFile();
  explicit constexpr CMsgClientUCMDeletePublishedFile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMDeletePublishedFile(const CMsgClientUCMDeletePublishedFile& from);
  CMsgClientUCMDeletePublishedFile(CMsgClientUCMDeletePublishedFile&& from) noexcept
    : CMsgClientUCMDeletePublishedFile() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMDeletePublishedFile& operator=(const CMsgClientUCMDeletePublishedFile& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMDeletePublishedFile& operator=(CMsgClientUCMDeletePublishedFile&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMDeletePublishedFile& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMDeletePublishedFile* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMDeletePublishedFile*>(
               &_CMsgClientUCMDeletePublishedFile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CMsgClientUCMDeletePublishedFile& a, CMsgClientUCMDeletePublishedFile& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMDeletePublishedFile* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMDeletePublishedFile* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMDeletePublishedFile* New() const final {
    return CreateMaybeMessage<CMsgClientUCMDeletePublishedFile>(nullptr);
  }

  CMsgClientUCMDeletePublishedFile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMDeletePublishedFile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMDeletePublishedFile& from);
  void MergeFrom(const CMsgClientUCMDeletePublishedFile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMDeletePublishedFile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMDeletePublishedFile";
  }
  protected:
  explicit CMsgClientUCMDeletePublishedFile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPublishedFileIdFieldNumber = 1,
    kAppIdFieldNumber = 2,
  };
  // optional fixed64 published_file_id = 1;
  bool has_published_file_id() const;
  private:
  bool _internal_has_published_file_id() const;
  public:
  void clear_published_file_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id() const;
  void set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_published_file_id() const;
  void _internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 app_id = 2;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMDeletePublishedFile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMDeletePublishedFileResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMDeletePublishedFileResponse) */ {
 public:
  inline CMsgClientUCMDeletePublishedFileResponse() : CMsgClientUCMDeletePublishedFileResponse(nullptr) {}
  virtual ~CMsgClientUCMDeletePublishedFileResponse();
  explicit constexpr CMsgClientUCMDeletePublishedFileResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMDeletePublishedFileResponse(const CMsgClientUCMDeletePublishedFileResponse& from);
  CMsgClientUCMDeletePublishedFileResponse(CMsgClientUCMDeletePublishedFileResponse&& from) noexcept
    : CMsgClientUCMDeletePublishedFileResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMDeletePublishedFileResponse& operator=(const CMsgClientUCMDeletePublishedFileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMDeletePublishedFileResponse& operator=(CMsgClientUCMDeletePublishedFileResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMDeletePublishedFileResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMDeletePublishedFileResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMDeletePublishedFileResponse*>(
               &_CMsgClientUCMDeletePublishedFileResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CMsgClientUCMDeletePublishedFileResponse& a, CMsgClientUCMDeletePublishedFileResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMDeletePublishedFileResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMDeletePublishedFileResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMDeletePublishedFileResponse* New() const final {
    return CreateMaybeMessage<CMsgClientUCMDeletePublishedFileResponse>(nullptr);
  }

  CMsgClientUCMDeletePublishedFileResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMDeletePublishedFileResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMDeletePublishedFileResponse& from);
  void MergeFrom(const CMsgClientUCMDeletePublishedFileResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMDeletePublishedFileResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMDeletePublishedFileResponse";
  }
  protected:
  explicit CMsgClientUCMDeletePublishedFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEresultFieldNumber = 1,
  };
  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMDeletePublishedFileResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates) */ {
 public:
  inline CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates() : CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates(nullptr) {}
  virtual ~CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates();
  explicit constexpr CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& from);
  CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates&& from) noexcept
    : CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& operator=(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& operator=(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates*>(
               &_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& a, CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* New() const final {
    return CreateMaybeMessage<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates>(nullptr);
  }

  CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& from);
  void MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates";
  }
  protected:
  explicit CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppIdFieldNumber = 1,
    kStartIndexFieldNumber = 2,
    kStartTimeFieldNumber = 3,
    kDesiredRevisionFieldNumber = 4,
  };
  // optional uint32 app_id = 1;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 start_index = 2;
  bool has_start_index() const;
  private:
  bool _internal_has_start_index() const;
  public:
  void clear_start_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 start_index() const;
  void set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start_index() const;
  void _internal_set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed32 start_time = 3;
  bool has_start_time() const;
  private:
  bool _internal_has_start_time() const;
  public:
  void clear_start_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 start_time() const;
  void set_start_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start_time() const;
  void _internal_set_start_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 desired_revision = 4 [default = 0];
  bool has_desired_revision() const;
  private:
  bool _internal_has_desired_revision() const;
  public:
  void clear_desired_revision();
  ::PROTOBUF_NAMESPACE_ID::uint32 desired_revision() const;
  void set_desired_revision(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_desired_revision() const;
  void _internal_set_desired_revision(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 desired_revision_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId) */ {
 public:
  inline CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId() : CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId(nullptr) {}
  virtual ~CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId();
  explicit constexpr CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& from);
  CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId&& from) noexcept
    : CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& operator=(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& operator=(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId*>(
               &_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& a, CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* New() const final {
    return CreateMaybeMessage<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId>(nullptr);
  }

  CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& from);
  void MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId";
  }
  protected:
  explicit CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPublishedFileIdFieldNumber = 1,
    kRtime32SubscribedFieldNumber = 2,
    kAppidFieldNumber = 3,
    kFileHcontentFieldNumber = 4,
    kFileSizeFieldNumber = 5,
    kRtime32LastUpdatedFieldNumber = 6,
    kIsDepotContentFieldNumber = 7,
  };
  // optional fixed64 published_file_id = 1;
  bool has_published_file_id() const;
  private:
  bool _internal_has_published_file_id() const;
  public:
  void clear_published_file_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id() const;
  void set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_published_file_id() const;
  void _internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed32 rtime32_subscribed = 2 [default = 0];
  bool has_rtime32_subscribed() const;
  private:
  bool _internal_has_rtime32_subscribed() const;
  public:
  void clear_rtime32_subscribed();
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime32_subscribed() const;
  void set_rtime32_subscribed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rtime32_subscribed() const;
  void _internal_set_rtime32_subscribed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 appid = 3;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed64 file_hcontent = 4;
  bool has_file_hcontent() const;
  private:
  bool _internal_has_file_hcontent() const;
  public:
  void clear_file_hcontent();
  ::PROTOBUF_NAMESPACE_ID::uint64 file_hcontent() const;
  void set_file_hcontent(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_file_hcontent() const;
  void _internal_set_file_hcontent(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 file_size = 5;
  bool has_file_size() const;
  private:
  bool _internal_has_file_size() const;
  public:
  void clear_file_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_size() const;
  void set_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_size() const;
  void _internal_set_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed32 rtime32_last_updated = 6;
  bool has_rtime32_last_updated() const;
  private:
  bool _internal_has_rtime32_last_updated() const;
  public:
  void clear_rtime32_last_updated();
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime32_last_updated() const;
  void set_rtime32_last_updated(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rtime32_last_updated() const;
  void _internal_set_rtime32_last_updated(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool is_depot_content = 7;
  bool has_is_depot_content() const;
  private:
  bool _internal_has_is_depot_content() const;
  public:
  void clear_is_depot_content();
  bool is_depot_content() const;
  void set_is_depot_content(bool value);
  private:
  bool _internal_is_depot_content() const;
  void _internal_set_is_depot_content(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime32_subscribed_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 file_hcontent_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime32_last_updated_;
  bool is_depot_content_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse) */ {
 public:
  inline CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse() : CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse(nullptr) {}
  virtual ~CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse();
  explicit constexpr CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& from);
  CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse&& from) noexcept
    : CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& operator=(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& operator=(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse*>(
               &_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& a, CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* New() const final {
    return CreateMaybeMessage<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse>(nullptr);
  }

  CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& from);
  void MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse";
  }
  protected:
  explicit CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId PublishedFileId;

  // accessors -------------------------------------------------------

  enum : int {
    kSubscribedFilesFieldNumber = 2,
    kTotalResultsFieldNumber = 3,
    kEresultFieldNumber = 1,
  };
  // repeated .CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId subscribed_files = 2;
  int subscribed_files_size() const;
  private:
  int _internal_subscribed_files_size() const;
  public:
  void clear_subscribed_files();
  ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* mutable_subscribed_files(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId >*
      mutable_subscribed_files();
  private:
  const ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& _internal_subscribed_files(int index) const;
  ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* _internal_add_subscribed_files();
  public:
  const ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& subscribed_files(int index) const;
  ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* add_subscribed_files();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId >&
      subscribed_files() const;

  // optional uint32 total_results = 3;
  bool has_total_results() const;
  private:
  bool _internal_has_total_results() const;
  public:
  void clear_total_results();
  ::PROTOBUF_NAMESPACE_ID::uint32 total_results() const;
  void set_total_results(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_results() const;
  void _internal_set_total_results(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId > subscribed_files_;
  ::PROTOBUF_NAMESPACE_ID::uint32 total_results_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMPublishedFileUpdated PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMPublishedFileUpdated) */ {
 public:
  inline CMsgClientUCMPublishedFileUpdated() : CMsgClientUCMPublishedFileUpdated(nullptr) {}
  virtual ~CMsgClientUCMPublishedFileUpdated();
  explicit constexpr CMsgClientUCMPublishedFileUpdated(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMPublishedFileUpdated(const CMsgClientUCMPublishedFileUpdated& from);
  CMsgClientUCMPublishedFileUpdated(CMsgClientUCMPublishedFileUpdated&& from) noexcept
    : CMsgClientUCMPublishedFileUpdated() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMPublishedFileUpdated& operator=(const CMsgClientUCMPublishedFileUpdated& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMPublishedFileUpdated& operator=(CMsgClientUCMPublishedFileUpdated&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMPublishedFileUpdated& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMPublishedFileUpdated* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMPublishedFileUpdated*>(
               &_CMsgClientUCMPublishedFileUpdated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CMsgClientUCMPublishedFileUpdated& a, CMsgClientUCMPublishedFileUpdated& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMPublishedFileUpdated* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMPublishedFileUpdated* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMPublishedFileUpdated* New() const final {
    return CreateMaybeMessage<CMsgClientUCMPublishedFileUpdated>(nullptr);
  }

  CMsgClientUCMPublishedFileUpdated* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMPublishedFileUpdated>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMPublishedFileUpdated& from);
  void MergeFrom(const CMsgClientUCMPublishedFileUpdated& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMPublishedFileUpdated* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMPublishedFileUpdated";
  }
  protected:
  explicit CMsgClientUCMPublishedFileUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPublishedFileIdFieldNumber = 1,
    kAppIdFieldNumber = 2,
    kTimeUpdatedFieldNumber = 3,
    kHcontentFieldNumber = 4,
    kFileSizeFieldNumber = 5,
    kIsDepotContentFieldNumber = 6,
    kRevisionFieldNumber = 7,
  };
  // optional fixed64 published_file_id = 1;
  bool has_published_file_id() const;
  private:
  bool _internal_has_published_file_id() const;
  public:
  void clear_published_file_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id() const;
  void set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_published_file_id() const;
  void _internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 app_id = 2;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 time_updated = 3;
  bool has_time_updated() const;
  private:
  bool _internal_has_time_updated() const;
  public:
  void clear_time_updated();
  ::PROTOBUF_NAMESPACE_ID::uint32 time_updated() const;
  void set_time_updated(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_time_updated() const;
  void _internal_set_time_updated(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed64 hcontent = 4;
  bool has_hcontent() const;
  private:
  bool _internal_has_hcontent() const;
  public:
  void clear_hcontent();
  ::PROTOBUF_NAMESPACE_ID::uint64 hcontent() const;
  void set_hcontent(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_hcontent() const;
  void _internal_set_hcontent(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed32 file_size = 5;
  bool has_file_size() const;
  private:
  bool _internal_has_file_size() const;
  public:
  void clear_file_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_size() const;
  void set_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_size() const;
  void _internal_set_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool is_depot_content = 6;
  bool has_is_depot_content() const;
  private:
  bool _internal_has_is_depot_content() const;
  public:
  void clear_is_depot_content();
  bool is_depot_content() const;
  void set_is_depot_content(bool value);
  private:
  bool _internal_is_depot_content() const;
  void _internal_set_is_depot_content(bool value);
  public:

  // optional uint32 revision = 7;
  bool has_revision() const;
  private:
  bool _internal_has_revision() const;
  public:
  void clear_revision();
  ::PROTOBUF_NAMESPACE_ID::uint32 revision() const;
  void set_revision(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_revision() const;
  void _internal_set_revision(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMPublishedFileUpdated)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 time_updated_;
  ::PROTOBUF_NAMESPACE_ID::uint64 hcontent_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_size_;
  bool is_depot_content_;
  ::PROTOBUF_NAMESPACE_ID::uint32 revision_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientWorkshopItemChangesRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientWorkshopItemChangesRequest) */ {
 public:
  inline CMsgClientWorkshopItemChangesRequest() : CMsgClientWorkshopItemChangesRequest(nullptr) {}
  virtual ~CMsgClientWorkshopItemChangesRequest();
  explicit constexpr CMsgClientWorkshopItemChangesRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientWorkshopItemChangesRequest(const CMsgClientWorkshopItemChangesRequest& from);
  CMsgClientWorkshopItemChangesRequest(CMsgClientWorkshopItemChangesRequest&& from) noexcept
    : CMsgClientWorkshopItemChangesRequest() {
    *this = ::std::move(from);
  }

  inline CMsgClientWorkshopItemChangesRequest& operator=(const CMsgClientWorkshopItemChangesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientWorkshopItemChangesRequest& operator=(CMsgClientWorkshopItemChangesRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientWorkshopItemChangesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientWorkshopItemChangesRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientWorkshopItemChangesRequest*>(
               &_CMsgClientWorkshopItemChangesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CMsgClientWorkshopItemChangesRequest& a, CMsgClientWorkshopItemChangesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientWorkshopItemChangesRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientWorkshopItemChangesRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientWorkshopItemChangesRequest* New() const final {
    return CreateMaybeMessage<CMsgClientWorkshopItemChangesRequest>(nullptr);
  }

  CMsgClientWorkshopItemChangesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientWorkshopItemChangesRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientWorkshopItemChangesRequest& from);
  void MergeFrom(const CMsgClientWorkshopItemChangesRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientWorkshopItemChangesRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientWorkshopItemChangesRequest";
  }
  protected:
  explicit CMsgClientWorkshopItemChangesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppIdFieldNumber = 1,
    kLastTimeUpdatedFieldNumber = 2,
    kNumItemsNeededFieldNumber = 3,
  };
  // optional uint32 app_id = 1;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 last_time_updated = 2;
  bool has_last_time_updated() const;
  private:
  bool _internal_has_last_time_updated() const;
  public:
  void clear_last_time_updated();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_time_updated() const;
  void set_last_time_updated(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_time_updated() const;
  void _internal_set_last_time_updated(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 num_items_needed = 3;
  bool has_num_items_needed() const;
  private:
  bool _internal_has_num_items_needed() const;
  public:
  void clear_num_items_needed();
  ::PROTOBUF_NAMESPACE_ID::uint32 num_items_needed() const;
  void set_num_items_needed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num_items_needed() const;
  void _internal_set_num_items_needed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientWorkshopItemChangesRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_time_updated_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_items_needed_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo) */ {
 public:
  inline CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo() : CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo(nullptr) {}
  virtual ~CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo();
  explicit constexpr CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo(const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& from);
  CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo&& from) noexcept
    : CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo() {
    *this = ::std::move(from);
  }

  inline CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& operator=(const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& operator=(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo*>(
               &_CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& a, CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* New() const final {
    return CreateMaybeMessage<CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo>(nullptr);
  }

  CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& from);
  void MergeFrom(const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo";
  }
  protected:
  explicit CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPublishedFileIdFieldNumber = 1,
    kManifestIdFieldNumber = 3,
    kTimeUpdatedFieldNumber = 2,
  };
  // optional fixed64 published_file_id = 1;
  bool has_published_file_id() const;
  private:
  bool _internal_has_published_file_id() const;
  public:
  void clear_published_file_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id() const;
  void set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_published_file_id() const;
  void _internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 manifest_id = 3;
  bool has_manifest_id() const;
  private:
  bool _internal_has_manifest_id() const;
  public:
  void clear_manifest_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 manifest_id() const;
  void set_manifest_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_manifest_id() const;
  void _internal_set_manifest_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 time_updated = 2;
  bool has_time_updated() const;
  private:
  bool _internal_has_time_updated() const;
  public:
  void clear_time_updated();
  ::PROTOBUF_NAMESPACE_ID::uint32 time_updated() const;
  void set_time_updated(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_time_updated() const;
  void _internal_set_time_updated(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 manifest_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 time_updated_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientWorkshopItemChangesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientWorkshopItemChangesResponse) */ {
 public:
  inline CMsgClientWorkshopItemChangesResponse() : CMsgClientWorkshopItemChangesResponse(nullptr) {}
  virtual ~CMsgClientWorkshopItemChangesResponse();
  explicit constexpr CMsgClientWorkshopItemChangesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientWorkshopItemChangesResponse(const CMsgClientWorkshopItemChangesResponse& from);
  CMsgClientWorkshopItemChangesResponse(CMsgClientWorkshopItemChangesResponse&& from) noexcept
    : CMsgClientWorkshopItemChangesResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientWorkshopItemChangesResponse& operator=(const CMsgClientWorkshopItemChangesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientWorkshopItemChangesResponse& operator=(CMsgClientWorkshopItemChangesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientWorkshopItemChangesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientWorkshopItemChangesResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientWorkshopItemChangesResponse*>(
               &_CMsgClientWorkshopItemChangesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CMsgClientWorkshopItemChangesResponse& a, CMsgClientWorkshopItemChangesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientWorkshopItemChangesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientWorkshopItemChangesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientWorkshopItemChangesResponse* New() const final {
    return CreateMaybeMessage<CMsgClientWorkshopItemChangesResponse>(nullptr);
  }

  CMsgClientWorkshopItemChangesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientWorkshopItemChangesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientWorkshopItemChangesResponse& from);
  void MergeFrom(const CMsgClientWorkshopItemChangesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientWorkshopItemChangesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientWorkshopItemChangesResponse";
  }
  protected:
  explicit CMsgClientWorkshopItemChangesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo WorkshopItemInfo;

  // accessors -------------------------------------------------------

  enum : int {
    kWorkshopItemsFieldNumber = 5,
    kUpdateTimeFieldNumber = 2,
    kEresultFieldNumber = 1,
  };
  // repeated .CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo workshop_items = 5;
  int workshop_items_size() const;
  private:
  int _internal_workshop_items_size() const;
  public:
  void clear_workshop_items();
  ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* mutable_workshop_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo >*
      mutable_workshop_items();
  private:
  const ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& _internal_workshop_items(int index) const;
  ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* _internal_add_workshop_items();
  public:
  const ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& workshop_items(int index) const;
  ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* add_workshop_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo >&
      workshop_items() const;

  // optional uint32 update_time = 2;
  bool has_update_time() const;
  private:
  bool _internal_has_update_time() const;
  public:
  void clear_update_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 update_time() const;
  void set_update_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_update_time() const;
  void _internal_set_update_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientWorkshopItemChangesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo > workshop_items_;
  ::PROTOBUF_NAMESPACE_ID::uint32 update_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMSetUserPublishedFileAction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMSetUserPublishedFileAction) */ {
 public:
  inline CMsgClientUCMSetUserPublishedFileAction() : CMsgClientUCMSetUserPublishedFileAction(nullptr) {}
  virtual ~CMsgClientUCMSetUserPublishedFileAction();
  explicit constexpr CMsgClientUCMSetUserPublishedFileAction(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMSetUserPublishedFileAction(const CMsgClientUCMSetUserPublishedFileAction& from);
  CMsgClientUCMSetUserPublishedFileAction(CMsgClientUCMSetUserPublishedFileAction&& from) noexcept
    : CMsgClientUCMSetUserPublishedFileAction() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMSetUserPublishedFileAction& operator=(const CMsgClientUCMSetUserPublishedFileAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMSetUserPublishedFileAction& operator=(CMsgClientUCMSetUserPublishedFileAction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMSetUserPublishedFileAction& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMSetUserPublishedFileAction* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMSetUserPublishedFileAction*>(
               &_CMsgClientUCMSetUserPublishedFileAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CMsgClientUCMSetUserPublishedFileAction& a, CMsgClientUCMSetUserPublishedFileAction& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMSetUserPublishedFileAction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMSetUserPublishedFileAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMSetUserPublishedFileAction* New() const final {
    return CreateMaybeMessage<CMsgClientUCMSetUserPublishedFileAction>(nullptr);
  }

  CMsgClientUCMSetUserPublishedFileAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMSetUserPublishedFileAction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMSetUserPublishedFileAction& from);
  void MergeFrom(const CMsgClientUCMSetUserPublishedFileAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMSetUserPublishedFileAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMSetUserPublishedFileAction";
  }
  protected:
  explicit CMsgClientUCMSetUserPublishedFileAction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPublishedFileIdFieldNumber = 1,
    kAppIdFieldNumber = 2,
    kActionFieldNumber = 3,
  };
  // optional fixed64 published_file_id = 1;
  bool has_published_file_id() const;
  private:
  bool _internal_has_published_file_id() const;
  public:
  void clear_published_file_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id() const;
  void set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_published_file_id() const;
  void _internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 app_id = 2;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 action = 3;
  bool has_action() const;
  private:
  bool _internal_has_action() const;
  public:
  void clear_action();
  ::PROTOBUF_NAMESPACE_ID::int32 action() const;
  void set_action(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_action() const;
  void _internal_set_action(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMSetUserPublishedFileAction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 action_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMSetUserPublishedFileActionResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMSetUserPublishedFileActionResponse) */ {
 public:
  inline CMsgClientUCMSetUserPublishedFileActionResponse() : CMsgClientUCMSetUserPublishedFileActionResponse(nullptr) {}
  virtual ~CMsgClientUCMSetUserPublishedFileActionResponse();
  explicit constexpr CMsgClientUCMSetUserPublishedFileActionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMSetUserPublishedFileActionResponse(const CMsgClientUCMSetUserPublishedFileActionResponse& from);
  CMsgClientUCMSetUserPublishedFileActionResponse(CMsgClientUCMSetUserPublishedFileActionResponse&& from) noexcept
    : CMsgClientUCMSetUserPublishedFileActionResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMSetUserPublishedFileActionResponse& operator=(const CMsgClientUCMSetUserPublishedFileActionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMSetUserPublishedFileActionResponse& operator=(CMsgClientUCMSetUserPublishedFileActionResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMSetUserPublishedFileActionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMSetUserPublishedFileActionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMSetUserPublishedFileActionResponse*>(
               &_CMsgClientUCMSetUserPublishedFileActionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CMsgClientUCMSetUserPublishedFileActionResponse& a, CMsgClientUCMSetUserPublishedFileActionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMSetUserPublishedFileActionResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMSetUserPublishedFileActionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMSetUserPublishedFileActionResponse* New() const final {
    return CreateMaybeMessage<CMsgClientUCMSetUserPublishedFileActionResponse>(nullptr);
  }

  CMsgClientUCMSetUserPublishedFileActionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMSetUserPublishedFileActionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMSetUserPublishedFileActionResponse& from);
  void MergeFrom(const CMsgClientUCMSetUserPublishedFileActionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMSetUserPublishedFileActionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMSetUserPublishedFileActionResponse";
  }
  protected:
  explicit CMsgClientUCMSetUserPublishedFileActionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEresultFieldNumber = 1,
  };
  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMSetUserPublishedFileActionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMEnumeratePublishedFilesByUserAction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMEnumeratePublishedFilesByUserAction) */ {
 public:
  inline CMsgClientUCMEnumeratePublishedFilesByUserAction() : CMsgClientUCMEnumeratePublishedFilesByUserAction(nullptr) {}
  virtual ~CMsgClientUCMEnumeratePublishedFilesByUserAction();
  explicit constexpr CMsgClientUCMEnumeratePublishedFilesByUserAction(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMEnumeratePublishedFilesByUserAction(const CMsgClientUCMEnumeratePublishedFilesByUserAction& from);
  CMsgClientUCMEnumeratePublishedFilesByUserAction(CMsgClientUCMEnumeratePublishedFilesByUserAction&& from) noexcept
    : CMsgClientUCMEnumeratePublishedFilesByUserAction() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMEnumeratePublishedFilesByUserAction& operator=(const CMsgClientUCMEnumeratePublishedFilesByUserAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMEnumeratePublishedFilesByUserAction& operator=(CMsgClientUCMEnumeratePublishedFilesByUserAction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMEnumeratePublishedFilesByUserAction& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMEnumeratePublishedFilesByUserAction* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMEnumeratePublishedFilesByUserAction*>(
               &_CMsgClientUCMEnumeratePublishedFilesByUserAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CMsgClientUCMEnumeratePublishedFilesByUserAction& a, CMsgClientUCMEnumeratePublishedFilesByUserAction& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMEnumeratePublishedFilesByUserAction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMEnumeratePublishedFilesByUserAction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMEnumeratePublishedFilesByUserAction* New() const final {
    return CreateMaybeMessage<CMsgClientUCMEnumeratePublishedFilesByUserAction>(nullptr);
  }

  CMsgClientUCMEnumeratePublishedFilesByUserAction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMEnumeratePublishedFilesByUserAction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMEnumeratePublishedFilesByUserAction& from);
  void MergeFrom(const CMsgClientUCMEnumeratePublishedFilesByUserAction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMEnumeratePublishedFilesByUserAction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMEnumeratePublishedFilesByUserAction";
  }
  protected:
  explicit CMsgClientUCMEnumeratePublishedFilesByUserAction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppIdFieldNumber = 1,
    kStartIndexFieldNumber = 2,
    kActionFieldNumber = 3,
  };
  // optional uint32 app_id = 1;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 start_index = 2;
  bool has_start_index() const;
  private:
  bool _internal_has_start_index() const;
  public:
  void clear_start_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 start_index() const;
  void set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start_index() const;
  void _internal_set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 action = 3;
  bool has_action() const;
  private:
  bool _internal_has_action() const;
  public:
  void clear_action();
  ::PROTOBUF_NAMESPACE_ID::int32 action() const;
  void set_action(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_action() const;
  void _internal_set_action(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMEnumeratePublishedFilesByUserAction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_index_;
  ::PROTOBUF_NAMESPACE_ID::int32 action_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId) */ {
 public:
  inline CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId() : CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId(nullptr) {}
  virtual ~CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId();
  explicit constexpr CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& from);
  CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId&& from) noexcept
    : CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& operator=(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& operator=(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId*>(
               &_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& a, CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* New() const final {
    return CreateMaybeMessage<CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId>(nullptr);
  }

  CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& from);
  void MergeFrom(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId";
  }
  protected:
  explicit CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPublishedFileIdFieldNumber = 1,
    kRtimeTimeStampFieldNumber = 2,
  };
  // optional fixed64 published_file_id = 1;
  bool has_published_file_id() const;
  private:
  bool _internal_has_published_file_id() const;
  public:
  void clear_published_file_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id() const;
  void set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_published_file_id() const;
  void _internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed32 rtime_time_stamp = 2 [default = 0];
  bool has_rtime_time_stamp() const;
  private:
  bool _internal_has_rtime_time_stamp() const;
  public:
  void clear_rtime_time_stamp();
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime_time_stamp() const;
  void set_rtime_time_stamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rtime_time_stamp() const;
  void _internal_set_rtime_time_stamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 published_file_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime_time_stamp_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientUCMEnumeratePublishedFilesByUserActionResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse) */ {
 public:
  inline CMsgClientUCMEnumeratePublishedFilesByUserActionResponse() : CMsgClientUCMEnumeratePublishedFilesByUserActionResponse(nullptr) {}
  virtual ~CMsgClientUCMEnumeratePublishedFilesByUserActionResponse();
  explicit constexpr CMsgClientUCMEnumeratePublishedFilesByUserActionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientUCMEnumeratePublishedFilesByUserActionResponse(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& from);
  CMsgClientUCMEnumeratePublishedFilesByUserActionResponse(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse&& from) noexcept
    : CMsgClientUCMEnumeratePublishedFilesByUserActionResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& operator=(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& operator=(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse*>(
               &_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& a, CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* New() const final {
    return CreateMaybeMessage<CMsgClientUCMEnumeratePublishedFilesByUserActionResponse>(nullptr);
  }

  CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientUCMEnumeratePublishedFilesByUserActionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& from);
  void MergeFrom(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientUCMEnumeratePublishedFilesByUserActionResponse";
  }
  protected:
  explicit CMsgClientUCMEnumeratePublishedFilesByUserActionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId PublishedFileId;

  // accessors -------------------------------------------------------

  enum : int {
    kPublishedFilesFieldNumber = 2,
    kTotalResultsFieldNumber = 3,
    kEresultFieldNumber = 1,
  };
  // repeated .CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId published_files = 2;
  int published_files_size() const;
  private:
  int _internal_published_files_size() const;
  public:
  void clear_published_files();
  ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* mutable_published_files(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId >*
      mutable_published_files();
  private:
  const ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& _internal_published_files(int index) const;
  ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* _internal_add_published_files();
  public:
  const ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& published_files(int index) const;
  ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* add_published_files();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId >&
      published_files() const;

  // optional uint32 total_results = 3;
  bool has_total_results() const;
  private:
  bool _internal_has_total_results() const;
  public:
  void clear_total_results();
  ::PROTOBUF_NAMESPACE_ID::uint32 total_results() const;
  void set_total_results(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_results() const;
  void _internal_set_total_results(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId > published_files_;
  ::PROTOBUF_NAMESPACE_ID::uint32 total_results_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientScreenshotsChanged PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientScreenshotsChanged) */ {
 public:
  inline CMsgClientScreenshotsChanged() : CMsgClientScreenshotsChanged(nullptr) {}
  virtual ~CMsgClientScreenshotsChanged();
  explicit constexpr CMsgClientScreenshotsChanged(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientScreenshotsChanged(const CMsgClientScreenshotsChanged& from);
  CMsgClientScreenshotsChanged(CMsgClientScreenshotsChanged&& from) noexcept
    : CMsgClientScreenshotsChanged() {
    *this = ::std::move(from);
  }

  inline CMsgClientScreenshotsChanged& operator=(const CMsgClientScreenshotsChanged& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientScreenshotsChanged& operator=(CMsgClientScreenshotsChanged&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientScreenshotsChanged& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientScreenshotsChanged* internal_default_instance() {
    return reinterpret_cast<const CMsgClientScreenshotsChanged*>(
               &_CMsgClientScreenshotsChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CMsgClientScreenshotsChanged& a, CMsgClientScreenshotsChanged& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientScreenshotsChanged* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientScreenshotsChanged* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientScreenshotsChanged* New() const final {
    return CreateMaybeMessage<CMsgClientScreenshotsChanged>(nullptr);
  }

  CMsgClientScreenshotsChanged* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientScreenshotsChanged>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientScreenshotsChanged& from);
  void MergeFrom(const CMsgClientScreenshotsChanged& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientScreenshotsChanged* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientScreenshotsChanged";
  }
  protected:
  explicit CMsgClientScreenshotsChanged(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fclientserver_5fucm_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientScreenshotsChanged)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fclientserver_5fucm_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMsgClientUCMAddScreenshot_Tag

// optional string tag_name = 1;
inline bool CMsgClientUCMAddScreenshot_Tag::_internal_has_tag_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMAddScreenshot_Tag::has_tag_name() const {
  return _internal_has_tag_name();
}
inline void CMsgClientUCMAddScreenshot_Tag::clear_tag_name() {
  tag_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientUCMAddScreenshot_Tag::tag_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMAddScreenshot.Tag.tag_name)
  return _internal_tag_name();
}
inline void CMsgClientUCMAddScreenshot_Tag::set_tag_name(const std::string& value) {
  _internal_set_tag_name(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMAddScreenshot.Tag.tag_name)
}
inline std::string* CMsgClientUCMAddScreenshot_Tag::mutable_tag_name() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMAddScreenshot.Tag.tag_name)
  return _internal_mutable_tag_name();
}
inline const std::string& CMsgClientUCMAddScreenshot_Tag::_internal_tag_name() const {
  return tag_name_.Get();
}
inline void CMsgClientUCMAddScreenshot_Tag::_internal_set_tag_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  tag_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMAddScreenshot_Tag::set_tag_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  tag_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMAddScreenshot.Tag.tag_name)
}
inline void CMsgClientUCMAddScreenshot_Tag::set_tag_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  tag_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMAddScreenshot.Tag.tag_name)
}
inline void CMsgClientUCMAddScreenshot_Tag::set_tag_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  tag_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMAddScreenshot.Tag.tag_name)
}
inline std::string* CMsgClientUCMAddScreenshot_Tag::_internal_mutable_tag_name() {
  _has_bits_[0] |= 0x00000001u;
  return tag_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMAddScreenshot_Tag::release_tag_name() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMAddScreenshot.Tag.tag_name)
  if (!_internal_has_tag_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return tag_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMAddScreenshot_Tag::set_allocated_tag_name(std::string* tag_name) {
  if (tag_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  tag_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tag_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMAddScreenshot.Tag.tag_name)
}

// optional string tag_value = 2;
inline bool CMsgClientUCMAddScreenshot_Tag::_internal_has_tag_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUCMAddScreenshot_Tag::has_tag_value() const {
  return _internal_has_tag_value();
}
inline void CMsgClientUCMAddScreenshot_Tag::clear_tag_value() {
  tag_value_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientUCMAddScreenshot_Tag::tag_value() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMAddScreenshot.Tag.tag_value)
  return _internal_tag_value();
}
inline void CMsgClientUCMAddScreenshot_Tag::set_tag_value(const std::string& value) {
  _internal_set_tag_value(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMAddScreenshot.Tag.tag_value)
}
inline std::string* CMsgClientUCMAddScreenshot_Tag::mutable_tag_value() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMAddScreenshot.Tag.tag_value)
  return _internal_mutable_tag_value();
}
inline const std::string& CMsgClientUCMAddScreenshot_Tag::_internal_tag_value() const {
  return tag_value_.Get();
}
inline void CMsgClientUCMAddScreenshot_Tag::_internal_set_tag_value(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  tag_value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMAddScreenshot_Tag::set_tag_value(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  tag_value_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMAddScreenshot.Tag.tag_value)
}
inline void CMsgClientUCMAddScreenshot_Tag::set_tag_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  tag_value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMAddScreenshot.Tag.tag_value)
}
inline void CMsgClientUCMAddScreenshot_Tag::set_tag_value(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  tag_value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMAddScreenshot.Tag.tag_value)
}
inline std::string* CMsgClientUCMAddScreenshot_Tag::_internal_mutable_tag_value() {
  _has_bits_[0] |= 0x00000002u;
  return tag_value_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMAddScreenshot_Tag::release_tag_value() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMAddScreenshot.Tag.tag_value)
  if (!_internal_has_tag_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return tag_value_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMAddScreenshot_Tag::set_allocated_tag_value(std::string* tag_value) {
  if (tag_value != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  tag_value_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tag_value,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMAddScreenshot.Tag.tag_value)
}

// -------------------------------------------------------------------

// CMsgClientUCMAddScreenshot

// optional uint32 appid = 1;
inline bool CMsgClientUCMAddScreenshot::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientUCMAddScreenshot::has_appid() const {
  return _internal_has_appid();
}
inline void CMsgClientUCMAddScreenshot::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMAddScreenshot::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMAddScreenshot::appid() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMAddScreenshot.appid)
  return _internal_appid();
}
inline void CMsgClientUCMAddScreenshot::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  appid_ = value;
}
inline void CMsgClientUCMAddScreenshot::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMAddScreenshot.appid)
}

// optional string filename = 2;
inline bool CMsgClientUCMAddScreenshot::_internal_has_filename() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMAddScreenshot::has_filename() const {
  return _internal_has_filename();
}
inline void CMsgClientUCMAddScreenshot::clear_filename() {
  filename_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientUCMAddScreenshot::filename() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMAddScreenshot.filename)
  return _internal_filename();
}
inline void CMsgClientUCMAddScreenshot::set_filename(const std::string& value) {
  _internal_set_filename(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMAddScreenshot.filename)
}
inline std::string* CMsgClientUCMAddScreenshot::mutable_filename() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMAddScreenshot.filename)
  return _internal_mutable_filename();
}
inline const std::string& CMsgClientUCMAddScreenshot::_internal_filename() const {
  return filename_.Get();
}
inline void CMsgClientUCMAddScreenshot::_internal_set_filename(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMAddScreenshot::set_filename(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMAddScreenshot.filename)
}
inline void CMsgClientUCMAddScreenshot::set_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMAddScreenshot.filename)
}
inline void CMsgClientUCMAddScreenshot::set_filename(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMAddScreenshot.filename)
}
inline std::string* CMsgClientUCMAddScreenshot::_internal_mutable_filename() {
  _has_bits_[0] |= 0x00000001u;
  return filename_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMAddScreenshot::release_filename() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMAddScreenshot.filename)
  if (!_internal_has_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return filename_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMAddScreenshot::set_allocated_filename(std::string* filename) {
  if (filename != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  filename_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), filename,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMAddScreenshot.filename)
}

// optional string thumbname = 3;
inline bool CMsgClientUCMAddScreenshot::_internal_has_thumbname() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUCMAddScreenshot::has_thumbname() const {
  return _internal_has_thumbname();
}
inline void CMsgClientUCMAddScreenshot::clear_thumbname() {
  thumbname_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientUCMAddScreenshot::thumbname() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMAddScreenshot.thumbname)
  return _internal_thumbname();
}
inline void CMsgClientUCMAddScreenshot::set_thumbname(const std::string& value) {
  _internal_set_thumbname(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMAddScreenshot.thumbname)
}
inline std::string* CMsgClientUCMAddScreenshot::mutable_thumbname() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMAddScreenshot.thumbname)
  return _internal_mutable_thumbname();
}
inline const std::string& CMsgClientUCMAddScreenshot::_internal_thumbname() const {
  return thumbname_.Get();
}
inline void CMsgClientUCMAddScreenshot::_internal_set_thumbname(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  thumbname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMAddScreenshot::set_thumbname(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  thumbname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMAddScreenshot.thumbname)
}
inline void CMsgClientUCMAddScreenshot::set_thumbname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  thumbname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMAddScreenshot.thumbname)
}
inline void CMsgClientUCMAddScreenshot::set_thumbname(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  thumbname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMAddScreenshot.thumbname)
}
inline std::string* CMsgClientUCMAddScreenshot::_internal_mutable_thumbname() {
  _has_bits_[0] |= 0x00000002u;
  return thumbname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMAddScreenshot::release_thumbname() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMAddScreenshot.thumbname)
  if (!_internal_has_thumbname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return thumbname_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMAddScreenshot::set_allocated_thumbname(std::string* thumbname) {
  if (thumbname != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  thumbname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), thumbname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMAddScreenshot.thumbname)
}

// optional string vr_filename = 14;
inline bool CMsgClientUCMAddScreenshot::_internal_has_vr_filename() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientUCMAddScreenshot::has_vr_filename() const {
  return _internal_has_vr_filename();
}
inline void CMsgClientUCMAddScreenshot::clear_vr_filename() {
  vr_filename_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& CMsgClientUCMAddScreenshot::vr_filename() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMAddScreenshot.vr_filename)
  return _internal_vr_filename();
}
inline void CMsgClientUCMAddScreenshot::set_vr_filename(const std::string& value) {
  _internal_set_vr_filename(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMAddScreenshot.vr_filename)
}
inline std::string* CMsgClientUCMAddScreenshot::mutable_vr_filename() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMAddScreenshot.vr_filename)
  return _internal_mutable_vr_filename();
}
inline const std::string& CMsgClientUCMAddScreenshot::_internal_vr_filename() const {
  return vr_filename_.Get();
}
inline void CMsgClientUCMAddScreenshot::_internal_set_vr_filename(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  vr_filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMAddScreenshot::set_vr_filename(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  vr_filename_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMAddScreenshot.vr_filename)
}
inline void CMsgClientUCMAddScreenshot::set_vr_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  vr_filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMAddScreenshot.vr_filename)
}
inline void CMsgClientUCMAddScreenshot::set_vr_filename(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000010u;
  vr_filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMAddScreenshot.vr_filename)
}
inline std::string* CMsgClientUCMAddScreenshot::_internal_mutable_vr_filename() {
  _has_bits_[0] |= 0x00000010u;
  return vr_filename_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMAddScreenshot::release_vr_filename() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMAddScreenshot.vr_filename)
  if (!_internal_has_vr_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return vr_filename_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMAddScreenshot::set_allocated_vr_filename(std::string* vr_filename) {
  if (vr_filename != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  vr_filename_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), vr_filename,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMAddScreenshot.vr_filename)
}

// optional fixed32 rtime32_created = 4;
inline bool CMsgClientUCMAddScreenshot::_internal_has_rtime32_created() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientUCMAddScreenshot::has_rtime32_created() const {
  return _internal_has_rtime32_created();
}
inline void CMsgClientUCMAddScreenshot::clear_rtime32_created() {
  rtime32_created_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMAddScreenshot::_internal_rtime32_created() const {
  return rtime32_created_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMAddScreenshot::rtime32_created() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMAddScreenshot.rtime32_created)
  return _internal_rtime32_created();
}
inline void CMsgClientUCMAddScreenshot::_internal_set_rtime32_created(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  rtime32_created_ = value;
}
inline void CMsgClientUCMAddScreenshot::set_rtime32_created(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rtime32_created(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMAddScreenshot.rtime32_created)
}

// optional uint32 width = 5;
inline bool CMsgClientUCMAddScreenshot::_internal_has_width() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgClientUCMAddScreenshot::has_width() const {
  return _internal_has_width();
}
inline void CMsgClientUCMAddScreenshot::clear_width() {
  width_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMAddScreenshot::_internal_width() const {
  return width_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMAddScreenshot::width() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMAddScreenshot.width)
  return _internal_width();
}
inline void CMsgClientUCMAddScreenshot::_internal_set_width(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  width_ = value;
}
inline void CMsgClientUCMAddScreenshot::set_width(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMAddScreenshot.width)
}

// optional uint32 height = 6;
inline bool CMsgClientUCMAddScreenshot::_internal_has_height() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgClientUCMAddScreenshot::has_height() const {
  return _internal_has_height();
}
inline void CMsgClientUCMAddScreenshot::clear_height() {
  height_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMAddScreenshot::_internal_height() const {
  return height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMAddScreenshot::height() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMAddScreenshot.height)
  return _internal_height();
}
inline void CMsgClientUCMAddScreenshot::_internal_set_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  height_ = value;
}
inline void CMsgClientUCMAddScreenshot::set_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMAddScreenshot.height)
}

// optional uint32 permissions = 7;
inline bool CMsgClientUCMAddScreenshot::_internal_has_permissions() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgClientUCMAddScreenshot::has_permissions() const {
  return _internal_has_permissions();
}
inline void CMsgClientUCMAddScreenshot::clear_permissions() {
  permissions_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMAddScreenshot::_internal_permissions() const {
  return permissions_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMAddScreenshot::permissions() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMAddScreenshot.permissions)
  return _internal_permissions();
}
inline void CMsgClientUCMAddScreenshot::_internal_set_permissions(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  permissions_ = value;
}
inline void CMsgClientUCMAddScreenshot::set_permissions(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_permissions(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMAddScreenshot.permissions)
}

// optional string caption = 8;
inline bool CMsgClientUCMAddScreenshot::_internal_has_caption() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientUCMAddScreenshot::has_caption() const {
  return _internal_has_caption();
}
inline void CMsgClientUCMAddScreenshot::clear_caption() {
  caption_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgClientUCMAddScreenshot::caption() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMAddScreenshot.caption)
  return _internal_caption();
}
inline void CMsgClientUCMAddScreenshot::set_caption(const std::string& value) {
  _internal_set_caption(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMAddScreenshot.caption)
}
inline std::string* CMsgClientUCMAddScreenshot::mutable_caption() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMAddScreenshot.caption)
  return _internal_mutable_caption();
}
inline const std::string& CMsgClientUCMAddScreenshot::_internal_caption() const {
  return caption_.Get();
}
inline void CMsgClientUCMAddScreenshot::_internal_set_caption(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  caption_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMAddScreenshot::set_caption(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  caption_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMAddScreenshot.caption)
}
inline void CMsgClientUCMAddScreenshot::set_caption(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  caption_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMAddScreenshot.caption)
}
inline void CMsgClientUCMAddScreenshot::set_caption(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  caption_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMAddScreenshot.caption)
}
inline std::string* CMsgClientUCMAddScreenshot::_internal_mutable_caption() {
  _has_bits_[0] |= 0x00000004u;
  return caption_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMAddScreenshot::release_caption() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMAddScreenshot.caption)
  if (!_internal_has_caption()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return caption_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMAddScreenshot::set_allocated_caption(std::string* caption) {
  if (caption != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  caption_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), caption,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMAddScreenshot.caption)
}

// optional string shortcut_name = 9;
inline bool CMsgClientUCMAddScreenshot::_internal_has_shortcut_name() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientUCMAddScreenshot::has_shortcut_name() const {
  return _internal_has_shortcut_name();
}
inline void CMsgClientUCMAddScreenshot::clear_shortcut_name() {
  shortcut_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CMsgClientUCMAddScreenshot::shortcut_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMAddScreenshot.shortcut_name)
  return _internal_shortcut_name();
}
inline void CMsgClientUCMAddScreenshot::set_shortcut_name(const std::string& value) {
  _internal_set_shortcut_name(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMAddScreenshot.shortcut_name)
}
inline std::string* CMsgClientUCMAddScreenshot::mutable_shortcut_name() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMAddScreenshot.shortcut_name)
  return _internal_mutable_shortcut_name();
}
inline const std::string& CMsgClientUCMAddScreenshot::_internal_shortcut_name() const {
  return shortcut_name_.Get();
}
inline void CMsgClientUCMAddScreenshot::_internal_set_shortcut_name(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  shortcut_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMAddScreenshot::set_shortcut_name(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  shortcut_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMAddScreenshot.shortcut_name)
}
inline void CMsgClientUCMAddScreenshot::set_shortcut_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  shortcut_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMAddScreenshot.shortcut_name)
}
inline void CMsgClientUCMAddScreenshot::set_shortcut_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  shortcut_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMAddScreenshot.shortcut_name)
}
inline std::string* CMsgClientUCMAddScreenshot::_internal_mutable_shortcut_name() {
  _has_bits_[0] |= 0x00000008u;
  return shortcut_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMAddScreenshot::release_shortcut_name() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMAddScreenshot.shortcut_name)
  if (!_internal_has_shortcut_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return shortcut_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMAddScreenshot::set_allocated_shortcut_name(std::string* shortcut_name) {
  if (shortcut_name != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  shortcut_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), shortcut_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMAddScreenshot.shortcut_name)
}

// repeated .CMsgClientUCMAddScreenshot.Tag tag = 10;
inline int CMsgClientUCMAddScreenshot::_internal_tag_size() const {
  return tag_.size();
}
inline int CMsgClientUCMAddScreenshot::tag_size() const {
  return _internal_tag_size();
}
inline void CMsgClientUCMAddScreenshot::clear_tag() {
  tag_.Clear();
}
inline ::CMsgClientUCMAddScreenshot_Tag* CMsgClientUCMAddScreenshot::mutable_tag(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMAddScreenshot.tag)
  return tag_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMAddScreenshot_Tag >*
CMsgClientUCMAddScreenshot::mutable_tag() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientUCMAddScreenshot.tag)
  return &tag_;
}
inline const ::CMsgClientUCMAddScreenshot_Tag& CMsgClientUCMAddScreenshot::_internal_tag(int index) const {
  return tag_.Get(index);
}
inline const ::CMsgClientUCMAddScreenshot_Tag& CMsgClientUCMAddScreenshot::tag(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMAddScreenshot.tag)
  return _internal_tag(index);
}
inline ::CMsgClientUCMAddScreenshot_Tag* CMsgClientUCMAddScreenshot::_internal_add_tag() {
  return tag_.Add();
}
inline ::CMsgClientUCMAddScreenshot_Tag* CMsgClientUCMAddScreenshot::add_tag() {
  // @@protoc_insertion_point(field_add:CMsgClientUCMAddScreenshot.tag)
  return _internal_add_tag();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMAddScreenshot_Tag >&
CMsgClientUCMAddScreenshot::tag() const {
  // @@protoc_insertion_point(field_list:CMsgClientUCMAddScreenshot.tag)
  return tag_;
}

// repeated fixed64 tagged_steamid = 11;
inline int CMsgClientUCMAddScreenshot::_internal_tagged_steamid_size() const {
  return tagged_steamid_.size();
}
inline int CMsgClientUCMAddScreenshot::tagged_steamid_size() const {
  return _internal_tagged_steamid_size();
}
inline void CMsgClientUCMAddScreenshot::clear_tagged_steamid() {
  tagged_steamid_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMAddScreenshot::_internal_tagged_steamid(int index) const {
  return tagged_steamid_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMAddScreenshot::tagged_steamid(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMAddScreenshot.tagged_steamid)
  return _internal_tagged_steamid(index);
}
inline void CMsgClientUCMAddScreenshot::set_tagged_steamid(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  tagged_steamid_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMAddScreenshot.tagged_steamid)
}
inline void CMsgClientUCMAddScreenshot::_internal_add_tagged_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  tagged_steamid_.Add(value);
}
inline void CMsgClientUCMAddScreenshot::add_tagged_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_tagged_steamid(value);
  // @@protoc_insertion_point(field_add:CMsgClientUCMAddScreenshot.tagged_steamid)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgClientUCMAddScreenshot::_internal_tagged_steamid() const {
  return tagged_steamid_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgClientUCMAddScreenshot::tagged_steamid() const {
  // @@protoc_insertion_point(field_list:CMsgClientUCMAddScreenshot.tagged_steamid)
  return _internal_tagged_steamid();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgClientUCMAddScreenshot::_internal_mutable_tagged_steamid() {
  return &tagged_steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgClientUCMAddScreenshot::mutable_tagged_steamid() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientUCMAddScreenshot.tagged_steamid)
  return _internal_mutable_tagged_steamid();
}

// optional bool spoiler_tag = 12;
inline bool CMsgClientUCMAddScreenshot::_internal_has_spoiler_tag() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgClientUCMAddScreenshot::has_spoiler_tag() const {
  return _internal_has_spoiler_tag();
}
inline void CMsgClientUCMAddScreenshot::clear_spoiler_tag() {
  spoiler_tag_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool CMsgClientUCMAddScreenshot::_internal_spoiler_tag() const {
  return spoiler_tag_;
}
inline bool CMsgClientUCMAddScreenshot::spoiler_tag() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMAddScreenshot.spoiler_tag)
  return _internal_spoiler_tag();
}
inline void CMsgClientUCMAddScreenshot::_internal_set_spoiler_tag(bool value) {
  _has_bits_[0] |= 0x00000400u;
  spoiler_tag_ = value;
}
inline void CMsgClientUCMAddScreenshot::set_spoiler_tag(bool value) {
  _internal_set_spoiler_tag(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMAddScreenshot.spoiler_tag)
}

// repeated uint64 tagged_publishedfileid = 13;
inline int CMsgClientUCMAddScreenshot::_internal_tagged_publishedfileid_size() const {
  return tagged_publishedfileid_.size();
}
inline int CMsgClientUCMAddScreenshot::tagged_publishedfileid_size() const {
  return _internal_tagged_publishedfileid_size();
}
inline void CMsgClientUCMAddScreenshot::clear_tagged_publishedfileid() {
  tagged_publishedfileid_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMAddScreenshot::_internal_tagged_publishedfileid(int index) const {
  return tagged_publishedfileid_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMAddScreenshot::tagged_publishedfileid(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMAddScreenshot.tagged_publishedfileid)
  return _internal_tagged_publishedfileid(index);
}
inline void CMsgClientUCMAddScreenshot::set_tagged_publishedfileid(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  tagged_publishedfileid_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMAddScreenshot.tagged_publishedfileid)
}
inline void CMsgClientUCMAddScreenshot::_internal_add_tagged_publishedfileid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  tagged_publishedfileid_.Add(value);
}
inline void CMsgClientUCMAddScreenshot::add_tagged_publishedfileid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_tagged_publishedfileid(value);
  // @@protoc_insertion_point(field_add:CMsgClientUCMAddScreenshot.tagged_publishedfileid)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgClientUCMAddScreenshot::_internal_tagged_publishedfileid() const {
  return tagged_publishedfileid_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgClientUCMAddScreenshot::tagged_publishedfileid() const {
  // @@protoc_insertion_point(field_list:CMsgClientUCMAddScreenshot.tagged_publishedfileid)
  return _internal_tagged_publishedfileid();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgClientUCMAddScreenshot::_internal_mutable_tagged_publishedfileid() {
  return &tagged_publishedfileid_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgClientUCMAddScreenshot::mutable_tagged_publishedfileid() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientUCMAddScreenshot.tagged_publishedfileid)
  return _internal_mutable_tagged_publishedfileid();
}

// -------------------------------------------------------------------

// CMsgClientUCMAddScreenshotResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientUCMAddScreenshotResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMAddScreenshotResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientUCMAddScreenshotResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMAddScreenshotResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMAddScreenshotResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMAddScreenshotResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientUCMAddScreenshotResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
}
inline void CMsgClientUCMAddScreenshotResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMAddScreenshotResponse.eresult)
}

// optional fixed64 screenshotid = 2 [default = 18446744073709551615];
inline bool CMsgClientUCMAddScreenshotResponse::_internal_has_screenshotid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUCMAddScreenshotResponse::has_screenshotid() const {
  return _internal_has_screenshotid();
}
inline void CMsgClientUCMAddScreenshotResponse::clear_screenshotid() {
  screenshotid_ = PROTOBUF_ULONGLONG(18446744073709551615);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMAddScreenshotResponse::_internal_screenshotid() const {
  return screenshotid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMAddScreenshotResponse::screenshotid() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMAddScreenshotResponse.screenshotid)
  return _internal_screenshotid();
}
inline void CMsgClientUCMAddScreenshotResponse::_internal_set_screenshotid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  screenshotid_ = value;
}
inline void CMsgClientUCMAddScreenshotResponse::set_screenshotid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_screenshotid(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMAddScreenshotResponse.screenshotid)
}

// -------------------------------------------------------------------

// CMsgClientUCMDeleteScreenshot

// optional fixed64 screenshotid = 1 [default = 18446744073709551615];
inline bool CMsgClientUCMDeleteScreenshot::_internal_has_screenshotid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMDeleteScreenshot::has_screenshotid() const {
  return _internal_has_screenshotid();
}
inline void CMsgClientUCMDeleteScreenshot::clear_screenshotid() {
  screenshotid_ = PROTOBUF_ULONGLONG(18446744073709551615);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMDeleteScreenshot::_internal_screenshotid() const {
  return screenshotid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMDeleteScreenshot::screenshotid() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMDeleteScreenshot.screenshotid)
  return _internal_screenshotid();
}
inline void CMsgClientUCMDeleteScreenshot::_internal_set_screenshotid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  screenshotid_ = value;
}
inline void CMsgClientUCMDeleteScreenshot::set_screenshotid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_screenshotid(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMDeleteScreenshot.screenshotid)
}

// -------------------------------------------------------------------

// CMsgClientUCMDeleteScreenshotResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientUCMDeleteScreenshotResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMDeleteScreenshotResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientUCMDeleteScreenshotResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMDeleteScreenshotResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMDeleteScreenshotResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMDeleteScreenshotResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientUCMDeleteScreenshotResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
}
inline void CMsgClientUCMDeleteScreenshotResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMDeleteScreenshotResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgClientUCMPublishFile

// optional uint32 app_id = 1;
inline bool CMsgClientUCMPublishFile::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishFile::has_app_id() const {
  return _internal_has_app_id();
}
inline void CMsgClientUCMPublishFile::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMPublishFile::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMPublishFile::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishFile.app_id)
  return _internal_app_id();
}
inline void CMsgClientUCMPublishFile::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  app_id_ = value;
}
inline void CMsgClientUCMPublishFile::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishFile.app_id)
}

// optional string file_name = 2;
inline bool CMsgClientUCMPublishFile::_internal_has_file_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishFile::has_file_name() const {
  return _internal_has_file_name();
}
inline void CMsgClientUCMPublishFile::clear_file_name() {
  file_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientUCMPublishFile::file_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishFile.file_name)
  return _internal_file_name();
}
inline void CMsgClientUCMPublishFile::set_file_name(const std::string& value) {
  _internal_set_file_name(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishFile.file_name)
}
inline std::string* CMsgClientUCMPublishFile::mutable_file_name() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMPublishFile.file_name)
  return _internal_mutable_file_name();
}
inline const std::string& CMsgClientUCMPublishFile::_internal_file_name() const {
  return file_name_.Get();
}
inline void CMsgClientUCMPublishFile::_internal_set_file_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMPublishFile::set_file_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  file_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMPublishFile.file_name)
}
inline void CMsgClientUCMPublishFile::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMPublishFile.file_name)
}
inline void CMsgClientUCMPublishFile::set_file_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMPublishFile.file_name)
}
inline std::string* CMsgClientUCMPublishFile::_internal_mutable_file_name() {
  _has_bits_[0] |= 0x00000001u;
  return file_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMPublishFile::release_file_name() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMPublishFile.file_name)
  if (!_internal_has_file_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return file_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMPublishFile::set_allocated_file_name(std::string* file_name) {
  if (file_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  file_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMPublishFile.file_name)
}

// optional string preview_file_name = 3;
inline bool CMsgClientUCMPublishFile::_internal_has_preview_file_name() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishFile::has_preview_file_name() const {
  return _internal_has_preview_file_name();
}
inline void CMsgClientUCMPublishFile::clear_preview_file_name() {
  preview_file_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientUCMPublishFile::preview_file_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishFile.preview_file_name)
  return _internal_preview_file_name();
}
inline void CMsgClientUCMPublishFile::set_preview_file_name(const std::string& value) {
  _internal_set_preview_file_name(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishFile.preview_file_name)
}
inline std::string* CMsgClientUCMPublishFile::mutable_preview_file_name() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMPublishFile.preview_file_name)
  return _internal_mutable_preview_file_name();
}
inline const std::string& CMsgClientUCMPublishFile::_internal_preview_file_name() const {
  return preview_file_name_.Get();
}
inline void CMsgClientUCMPublishFile::_internal_set_preview_file_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  preview_file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMPublishFile::set_preview_file_name(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  preview_file_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMPublishFile.preview_file_name)
}
inline void CMsgClientUCMPublishFile::set_preview_file_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  preview_file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMPublishFile.preview_file_name)
}
inline void CMsgClientUCMPublishFile::set_preview_file_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  preview_file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMPublishFile.preview_file_name)
}
inline std::string* CMsgClientUCMPublishFile::_internal_mutable_preview_file_name() {
  _has_bits_[0] |= 0x00000002u;
  return preview_file_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMPublishFile::release_preview_file_name() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMPublishFile.preview_file_name)
  if (!_internal_has_preview_file_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return preview_file_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMPublishFile::set_allocated_preview_file_name(std::string* preview_file_name) {
  if (preview_file_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  preview_file_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), preview_file_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMPublishFile.preview_file_name)
}

// optional uint32 consumer_app_id = 4;
inline bool CMsgClientUCMPublishFile::_internal_has_consumer_app_id() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishFile::has_consumer_app_id() const {
  return _internal_has_consumer_app_id();
}
inline void CMsgClientUCMPublishFile::clear_consumer_app_id() {
  consumer_app_id_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMPublishFile::_internal_consumer_app_id() const {
  return consumer_app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMPublishFile::consumer_app_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishFile.consumer_app_id)
  return _internal_consumer_app_id();
}
inline void CMsgClientUCMPublishFile::_internal_set_consumer_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  consumer_app_id_ = value;
}
inline void CMsgClientUCMPublishFile::set_consumer_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_consumer_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishFile.consumer_app_id)
}

// optional string title = 5;
inline bool CMsgClientUCMPublishFile::_internal_has_title() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishFile::has_title() const {
  return _internal_has_title();
}
inline void CMsgClientUCMPublishFile::clear_title() {
  title_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgClientUCMPublishFile::title() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishFile.title)
  return _internal_title();
}
inline void CMsgClientUCMPublishFile::set_title(const std::string& value) {
  _internal_set_title(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishFile.title)
}
inline std::string* CMsgClientUCMPublishFile::mutable_title() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMPublishFile.title)
  return _internal_mutable_title();
}
inline const std::string& CMsgClientUCMPublishFile::_internal_title() const {
  return title_.Get();
}
inline void CMsgClientUCMPublishFile::_internal_set_title(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMPublishFile::set_title(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  title_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMPublishFile.title)
}
inline void CMsgClientUCMPublishFile::set_title(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMPublishFile.title)
}
inline void CMsgClientUCMPublishFile::set_title(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMPublishFile.title)
}
inline std::string* CMsgClientUCMPublishFile::_internal_mutable_title() {
  _has_bits_[0] |= 0x00000004u;
  return title_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMPublishFile::release_title() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMPublishFile.title)
  if (!_internal_has_title()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return title_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMPublishFile::set_allocated_title(std::string* title) {
  if (title != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  title_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), title,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMPublishFile.title)
}

// optional string description = 6;
inline bool CMsgClientUCMPublishFile::_internal_has_description() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishFile::has_description() const {
  return _internal_has_description();
}
inline void CMsgClientUCMPublishFile::clear_description() {
  description_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CMsgClientUCMPublishFile::description() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishFile.description)
  return _internal_description();
}
inline void CMsgClientUCMPublishFile::set_description(const std::string& value) {
  _internal_set_description(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishFile.description)
}
inline std::string* CMsgClientUCMPublishFile::mutable_description() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMPublishFile.description)
  return _internal_mutable_description();
}
inline const std::string& CMsgClientUCMPublishFile::_internal_description() const {
  return description_.Get();
}
inline void CMsgClientUCMPublishFile::_internal_set_description(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMPublishFile::set_description(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  description_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMPublishFile.description)
}
inline void CMsgClientUCMPublishFile::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMPublishFile.description)
}
inline void CMsgClientUCMPublishFile::set_description(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMPublishFile.description)
}
inline std::string* CMsgClientUCMPublishFile::_internal_mutable_description() {
  _has_bits_[0] |= 0x00000008u;
  return description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMPublishFile::release_description() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMPublishFile.description)
  if (!_internal_has_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return description_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMPublishFile::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMPublishFile.description)
}

// repeated string tags = 8;
inline int CMsgClientUCMPublishFile::_internal_tags_size() const {
  return tags_.size();
}
inline int CMsgClientUCMPublishFile::tags_size() const {
  return _internal_tags_size();
}
inline void CMsgClientUCMPublishFile::clear_tags() {
  tags_.Clear();
}
inline std::string* CMsgClientUCMPublishFile::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:CMsgClientUCMPublishFile.tags)
  return _internal_add_tags();
}
inline const std::string& CMsgClientUCMPublishFile::_internal_tags(int index) const {
  return tags_.Get(index);
}
inline const std::string& CMsgClientUCMPublishFile::tags(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishFile.tags)
  return _internal_tags(index);
}
inline std::string* CMsgClientUCMPublishFile::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMPublishFile.tags)
  return tags_.Mutable(index);
}
inline void CMsgClientUCMPublishFile::set_tags(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishFile.tags)
  tags_.Mutable(index)->assign(value);
}
inline void CMsgClientUCMPublishFile::set_tags(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishFile.tags)
  tags_.Mutable(index)->assign(std::move(value));
}
inline void CMsgClientUCMPublishFile::set_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMPublishFile.tags)
}
inline void CMsgClientUCMPublishFile::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMPublishFile.tags)
}
inline std::string* CMsgClientUCMPublishFile::_internal_add_tags() {
  return tags_.Add();
}
inline void CMsgClientUCMPublishFile::add_tags(const std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgClientUCMPublishFile.tags)
}
inline void CMsgClientUCMPublishFile::add_tags(std::string&& value) {
  tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CMsgClientUCMPublishFile.tags)
}
inline void CMsgClientUCMPublishFile::add_tags(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgClientUCMPublishFile.tags)
}
inline void CMsgClientUCMPublishFile::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgClientUCMPublishFile.tags)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CMsgClientUCMPublishFile::tags() const {
  // @@protoc_insertion_point(field_list:CMsgClientUCMPublishFile.tags)
  return tags_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CMsgClientUCMPublishFile::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientUCMPublishFile.tags)
  return &tags_;
}

// optional bool workshop_file = 9;
inline bool CMsgClientUCMPublishFile::_internal_has_workshop_file() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishFile::has_workshop_file() const {
  return _internal_has_workshop_file();
}
inline void CMsgClientUCMPublishFile::clear_workshop_file() {
  workshop_file_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool CMsgClientUCMPublishFile::_internal_workshop_file() const {
  return workshop_file_;
}
inline bool CMsgClientUCMPublishFile::workshop_file() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishFile.workshop_file)
  return _internal_workshop_file();
}
inline void CMsgClientUCMPublishFile::_internal_set_workshop_file(bool value) {
  _has_bits_[0] |= 0x00000800u;
  workshop_file_ = value;
}
inline void CMsgClientUCMPublishFile::set_workshop_file(bool value) {
  _internal_set_workshop_file(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishFile.workshop_file)
}

// optional int32 visibility = 10;
inline bool CMsgClientUCMPublishFile::_internal_has_visibility() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishFile::has_visibility() const {
  return _internal_has_visibility();
}
inline void CMsgClientUCMPublishFile::clear_visibility() {
  visibility_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMPublishFile::_internal_visibility() const {
  return visibility_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMPublishFile::visibility() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishFile.visibility)
  return _internal_visibility();
}
inline void CMsgClientUCMPublishFile::_internal_set_visibility(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  visibility_ = value;
}
inline void CMsgClientUCMPublishFile::set_visibility(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_visibility(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishFile.visibility)
}

// optional uint32 file_type = 11;
inline bool CMsgClientUCMPublishFile::_internal_has_file_type() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishFile::has_file_type() const {
  return _internal_has_file_type();
}
inline void CMsgClientUCMPublishFile::clear_file_type() {
  file_type_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMPublishFile::_internal_file_type() const {
  return file_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMPublishFile::file_type() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishFile.file_type)
  return _internal_file_type();
}
inline void CMsgClientUCMPublishFile::_internal_set_file_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  file_type_ = value;
}
inline void CMsgClientUCMPublishFile::set_file_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_type(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishFile.file_type)
}

// optional string url = 12;
inline bool CMsgClientUCMPublishFile::_internal_has_url() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishFile::has_url() const {
  return _internal_has_url();
}
inline void CMsgClientUCMPublishFile::clear_url() {
  url_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& CMsgClientUCMPublishFile::url() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishFile.url)
  return _internal_url();
}
inline void CMsgClientUCMPublishFile::set_url(const std::string& value) {
  _internal_set_url(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishFile.url)
}
inline std::string* CMsgClientUCMPublishFile::mutable_url() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMPublishFile.url)
  return _internal_mutable_url();
}
inline const std::string& CMsgClientUCMPublishFile::_internal_url() const {
  return url_.Get();
}
inline void CMsgClientUCMPublishFile::_internal_set_url(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMPublishFile::set_url(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMPublishFile.url)
}
inline void CMsgClientUCMPublishFile::set_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMPublishFile.url)
}
inline void CMsgClientUCMPublishFile::set_url(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000010u;
  url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMPublishFile.url)
}
inline std::string* CMsgClientUCMPublishFile::_internal_mutable_url() {
  _has_bits_[0] |= 0x00000010u;
  return url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMPublishFile::release_url() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMPublishFile.url)
  if (!_internal_has_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return url_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMPublishFile::set_allocated_url(std::string* url) {
  if (url != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMPublishFile.url)
}

// optional uint32 video_provider = 13;
inline bool CMsgClientUCMPublishFile::_internal_has_video_provider() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishFile::has_video_provider() const {
  return _internal_has_video_provider();
}
inline void CMsgClientUCMPublishFile::clear_video_provider() {
  video_provider_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMPublishFile::_internal_video_provider() const {
  return video_provider_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMPublishFile::video_provider() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishFile.video_provider)
  return _internal_video_provider();
}
inline void CMsgClientUCMPublishFile::_internal_set_video_provider(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  video_provider_ = value;
}
inline void CMsgClientUCMPublishFile::set_video_provider(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_video_provider(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishFile.video_provider)
}

// optional string video_account_name = 14;
inline bool CMsgClientUCMPublishFile::_internal_has_video_account_name() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishFile::has_video_account_name() const {
  return _internal_has_video_account_name();
}
inline void CMsgClientUCMPublishFile::clear_video_account_name() {
  video_account_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& CMsgClientUCMPublishFile::video_account_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishFile.video_account_name)
  return _internal_video_account_name();
}
inline void CMsgClientUCMPublishFile::set_video_account_name(const std::string& value) {
  _internal_set_video_account_name(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishFile.video_account_name)
}
inline std::string* CMsgClientUCMPublishFile::mutable_video_account_name() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMPublishFile.video_account_name)
  return _internal_mutable_video_account_name();
}
inline const std::string& CMsgClientUCMPublishFile::_internal_video_account_name() const {
  return video_account_name_.Get();
}
inline void CMsgClientUCMPublishFile::_internal_set_video_account_name(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  video_account_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMPublishFile::set_video_account_name(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  video_account_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMPublishFile.video_account_name)
}
inline void CMsgClientUCMPublishFile::set_video_account_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  video_account_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMPublishFile.video_account_name)
}
inline void CMsgClientUCMPublishFile::set_video_account_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000020u;
  video_account_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMPublishFile.video_account_name)
}
inline std::string* CMsgClientUCMPublishFile::_internal_mutable_video_account_name() {
  _has_bits_[0] |= 0x00000020u;
  return video_account_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMPublishFile::release_video_account_name() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMPublishFile.video_account_name)
  if (!_internal_has_video_account_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return video_account_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMPublishFile::set_allocated_video_account_name(std::string* video_account_name) {
  if (video_account_name != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  video_account_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), video_account_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMPublishFile.video_account_name)
}

// optional string video_identifier = 15;
inline bool CMsgClientUCMPublishFile::_internal_has_video_identifier() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishFile::has_video_identifier() const {
  return _internal_has_video_identifier();
}
inline void CMsgClientUCMPublishFile::clear_video_identifier() {
  video_identifier_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000040u;
}
inline const std::string& CMsgClientUCMPublishFile::video_identifier() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishFile.video_identifier)
  return _internal_video_identifier();
}
inline void CMsgClientUCMPublishFile::set_video_identifier(const std::string& value) {
  _internal_set_video_identifier(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishFile.video_identifier)
}
inline std::string* CMsgClientUCMPublishFile::mutable_video_identifier() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMPublishFile.video_identifier)
  return _internal_mutable_video_identifier();
}
inline const std::string& CMsgClientUCMPublishFile::_internal_video_identifier() const {
  return video_identifier_.Get();
}
inline void CMsgClientUCMPublishFile::_internal_set_video_identifier(const std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  video_identifier_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMPublishFile::set_video_identifier(std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  video_identifier_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMPublishFile.video_identifier)
}
inline void CMsgClientUCMPublishFile::set_video_identifier(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  video_identifier_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMPublishFile.video_identifier)
}
inline void CMsgClientUCMPublishFile::set_video_identifier(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000040u;
  video_identifier_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMPublishFile.video_identifier)
}
inline std::string* CMsgClientUCMPublishFile::_internal_mutable_video_identifier() {
  _has_bits_[0] |= 0x00000040u;
  return video_identifier_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMPublishFile::release_video_identifier() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMPublishFile.video_identifier)
  if (!_internal_has_video_identifier()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return video_identifier_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMPublishFile::set_allocated_video_identifier(std::string* video_identifier) {
  if (video_identifier != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  video_identifier_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), video_identifier,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMPublishFile.video_identifier)
}

// optional bool in_progress = 16;
inline bool CMsgClientUCMPublishFile::_internal_has_in_progress() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishFile::has_in_progress() const {
  return _internal_has_in_progress();
}
inline void CMsgClientUCMPublishFile::clear_in_progress() {
  in_progress_ = false;
  _has_bits_[0] &= ~0x00001000u;
}
inline bool CMsgClientUCMPublishFile::_internal_in_progress() const {
  return in_progress_;
}
inline bool CMsgClientUCMPublishFile::in_progress() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishFile.in_progress)
  return _internal_in_progress();
}
inline void CMsgClientUCMPublishFile::_internal_set_in_progress(bool value) {
  _has_bits_[0] |= 0x00001000u;
  in_progress_ = value;
}
inline void CMsgClientUCMPublishFile::set_in_progress(bool value) {
  _internal_set_in_progress(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishFile.in_progress)
}

// -------------------------------------------------------------------

// CMsgClientUCMPublishFileResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientUCMPublishFileResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishFileResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientUCMPublishFileResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMPublishFileResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMPublishFileResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishFileResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientUCMPublishFileResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  eresult_ = value;
}
inline void CMsgClientUCMPublishFileResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishFileResponse.eresult)
}

// optional fixed64 published_file_id = 2 [default = 18446744073709551615];
inline bool CMsgClientUCMPublishFileResponse::_internal_has_published_file_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishFileResponse::has_published_file_id() const {
  return _internal_has_published_file_id();
}
inline void CMsgClientUCMPublishFileResponse::clear_published_file_id() {
  published_file_id_ = PROTOBUF_ULONGLONG(18446744073709551615);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMPublishFileResponse::_internal_published_file_id() const {
  return published_file_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMPublishFileResponse::published_file_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishFileResponse.published_file_id)
  return _internal_published_file_id();
}
inline void CMsgClientUCMPublishFileResponse::_internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  published_file_id_ = value;
}
inline void CMsgClientUCMPublishFileResponse::set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_published_file_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishFileResponse.published_file_id)
}

// optional bool needs_workshop_legal_agreement_acceptance = 3 [default = false];
inline bool CMsgClientUCMPublishFileResponse::_internal_has_needs_workshop_legal_agreement_acceptance() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishFileResponse::has_needs_workshop_legal_agreement_acceptance() const {
  return _internal_has_needs_workshop_legal_agreement_acceptance();
}
inline void CMsgClientUCMPublishFileResponse::clear_needs_workshop_legal_agreement_acceptance() {
  needs_workshop_legal_agreement_acceptance_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientUCMPublishFileResponse::_internal_needs_workshop_legal_agreement_acceptance() const {
  return needs_workshop_legal_agreement_acceptance_;
}
inline bool CMsgClientUCMPublishFileResponse::needs_workshop_legal_agreement_acceptance() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishFileResponse.needs_workshop_legal_agreement_acceptance)
  return _internal_needs_workshop_legal_agreement_acceptance();
}
inline void CMsgClientUCMPublishFileResponse::_internal_set_needs_workshop_legal_agreement_acceptance(bool value) {
  _has_bits_[0] |= 0x00000001u;
  needs_workshop_legal_agreement_acceptance_ = value;
}
inline void CMsgClientUCMPublishFileResponse::set_needs_workshop_legal_agreement_acceptance(bool value) {
  _internal_set_needs_workshop_legal_agreement_acceptance(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishFileResponse.needs_workshop_legal_agreement_acceptance)
}

// -------------------------------------------------------------------

// CMsgClientUCMUpdatePublishedFile_KeyValueTag

// optional string key = 1;
inline bool CMsgClientUCMUpdatePublishedFile_KeyValueTag::_internal_has_key() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile_KeyValueTag::has_key() const {
  return _internal_has_key();
}
inline void CMsgClientUCMUpdatePublishedFile_KeyValueTag::clear_key() {
  key_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientUCMUpdatePublishedFile_KeyValueTag::key() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.KeyValueTag.key)
  return _internal_key();
}
inline void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_key(const std::string& value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.KeyValueTag.key)
}
inline std::string* CMsgClientUCMUpdatePublishedFile_KeyValueTag::mutable_key() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMUpdatePublishedFile.KeyValueTag.key)
  return _internal_mutable_key();
}
inline const std::string& CMsgClientUCMUpdatePublishedFile_KeyValueTag::_internal_key() const {
  return key_.Get();
}
inline void CMsgClientUCMUpdatePublishedFile_KeyValueTag::_internal_set_key(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_key(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMUpdatePublishedFile.KeyValueTag.key)
}
inline void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMUpdatePublishedFile.KeyValueTag.key)
}
inline void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_key(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMUpdatePublishedFile.KeyValueTag.key)
}
inline std::string* CMsgClientUCMUpdatePublishedFile_KeyValueTag::_internal_mutable_key() {
  _has_bits_[0] |= 0x00000001u;
  return key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMUpdatePublishedFile_KeyValueTag::release_key() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMUpdatePublishedFile.KeyValueTag.key)
  if (!_internal_has_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return key_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_allocated_key(std::string* key) {
  if (key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMUpdatePublishedFile.KeyValueTag.key)
}

// optional string value = 2;
inline bool CMsgClientUCMUpdatePublishedFile_KeyValueTag::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile_KeyValueTag::has_value() const {
  return _internal_has_value();
}
inline void CMsgClientUCMUpdatePublishedFile_KeyValueTag::clear_value() {
  value_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientUCMUpdatePublishedFile_KeyValueTag::value() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.KeyValueTag.value)
  return _internal_value();
}
inline void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_value(const std::string& value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.KeyValueTag.value)
}
inline std::string* CMsgClientUCMUpdatePublishedFile_KeyValueTag::mutable_value() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMUpdatePublishedFile.KeyValueTag.value)
  return _internal_mutable_value();
}
inline const std::string& CMsgClientUCMUpdatePublishedFile_KeyValueTag::_internal_value() const {
  return value_.Get();
}
inline void CMsgClientUCMUpdatePublishedFile_KeyValueTag::_internal_set_value(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_value(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMUpdatePublishedFile.KeyValueTag.value)
}
inline void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMUpdatePublishedFile.KeyValueTag.value)
}
inline void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_value(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMUpdatePublishedFile.KeyValueTag.value)
}
inline std::string* CMsgClientUCMUpdatePublishedFile_KeyValueTag::_internal_mutable_value() {
  _has_bits_[0] |= 0x00000002u;
  return value_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMUpdatePublishedFile_KeyValueTag::release_value() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMUpdatePublishedFile.KeyValueTag.value)
  if (!_internal_has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return value_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  value_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMUpdatePublishedFile.KeyValueTag.value)
}

// -------------------------------------------------------------------

// CMsgClientUCMUpdatePublishedFile_AdditionalPreview

// optional string original_file_name = 1;
inline bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_internal_has_original_file_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::has_original_file_name() const {
  return _internal_has_original_file_name();
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::clear_original_file_name() {
  original_file_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientUCMUpdatePublishedFile_AdditionalPreview::original_file_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name)
  return _internal_original_file_name();
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_original_file_name(const std::string& value) {
  _internal_set_original_file_name(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name)
}
inline std::string* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::mutable_original_file_name() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name)
  return _internal_mutable_original_file_name();
}
inline const std::string& CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_internal_original_file_name() const {
  return original_file_name_.Get();
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_internal_set_original_file_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  original_file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_original_file_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  original_file_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name)
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_original_file_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  original_file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name)
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_original_file_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  original_file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name)
}
inline std::string* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_internal_mutable_original_file_name() {
  _has_bits_[0] |= 0x00000001u;
  return original_file_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::release_original_file_name() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name)
  if (!_internal_has_original_file_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return original_file_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_allocated_original_file_name(std::string* original_file_name) {
  if (original_file_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  original_file_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), original_file_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name)
}

// optional string internal_file_name = 2;
inline bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_internal_has_internal_file_name() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::has_internal_file_name() const {
  return _internal_has_internal_file_name();
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::clear_internal_file_name() {
  internal_file_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientUCMUpdatePublishedFile_AdditionalPreview::internal_file_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name)
  return _internal_internal_file_name();
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_internal_file_name(const std::string& value) {
  _internal_set_internal_file_name(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name)
}
inline std::string* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::mutable_internal_file_name() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name)
  return _internal_mutable_internal_file_name();
}
inline const std::string& CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_internal_internal_file_name() const {
  return internal_file_name_.Get();
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_internal_set_internal_file_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  internal_file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_internal_file_name(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  internal_file_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name)
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_internal_file_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  internal_file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name)
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_internal_file_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  internal_file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name)
}
inline std::string* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_internal_mutable_internal_file_name() {
  _has_bits_[0] |= 0x00000002u;
  return internal_file_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::release_internal_file_name() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name)
  if (!_internal_has_internal_file_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return internal_file_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_allocated_internal_file_name(std::string* internal_file_name) {
  if (internal_file_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  internal_file_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), internal_file_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name)
}

// optional string videoid = 3;
inline bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_internal_has_videoid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::has_videoid() const {
  return _internal_has_videoid();
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::clear_videoid() {
  videoid_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgClientUCMUpdatePublishedFile_AdditionalPreview::videoid() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid)
  return _internal_videoid();
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_videoid(const std::string& value) {
  _internal_set_videoid(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid)
}
inline std::string* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::mutable_videoid() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid)
  return _internal_mutable_videoid();
}
inline const std::string& CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_internal_videoid() const {
  return videoid_.Get();
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_internal_set_videoid(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  videoid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_videoid(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  videoid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid)
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_videoid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  videoid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid)
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_videoid(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  videoid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid)
}
inline std::string* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_internal_mutable_videoid() {
  _has_bits_[0] |= 0x00000004u;
  return videoid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::release_videoid() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid)
  if (!_internal_has_videoid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return videoid_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_allocated_videoid(std::string* videoid) {
  if (videoid != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  videoid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), videoid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid)
}

// optional uint32 preview_type = 4;
inline bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_internal_has_preview_type() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::has_preview_type() const {
  return _internal_has_preview_type();
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::clear_preview_type() {
  preview_type_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_internal_preview_type() const {
  return preview_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMUpdatePublishedFile_AdditionalPreview::preview_type() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.preview_type)
  return _internal_preview_type();
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_internal_set_preview_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  preview_type_ = value;
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_preview_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_preview_type(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.preview_type)
}

// optional int32 update_index = 5 [default = -1];
inline bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_internal_has_update_index() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::has_update_index() const {
  return _internal_has_update_index();
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::clear_update_index() {
  update_index_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_internal_update_index() const {
  return update_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMUpdatePublishedFile_AdditionalPreview::update_index() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.update_index)
  return _internal_update_index();
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::_internal_set_update_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  update_index_ = value;
}
inline void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_update_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_update_index(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.AdditionalPreview.update_index)
}

// -------------------------------------------------------------------

// CMsgClientUCMUpdatePublishedFile

// optional uint32 app_id = 1;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_app_id() const {
  return _internal_has_app_id();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMUpdatePublishedFile::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMUpdatePublishedFile::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.app_id)
  return _internal_app_id();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  app_id_ = value;
}
inline void CMsgClientUCMUpdatePublishedFile::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.app_id)
}

// optional fixed64 published_file_id = 2;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_published_file_id() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_published_file_id() const {
  return _internal_has_published_file_id();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_published_file_id() {
  published_file_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMUpdatePublishedFile::_internal_published_file_id() const {
  return published_file_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMUpdatePublishedFile::published_file_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.published_file_id)
  return _internal_published_file_id();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000080u;
  published_file_id_ = value;
}
inline void CMsgClientUCMUpdatePublishedFile::set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_published_file_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.published_file_id)
}

// optional string file_name = 3;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_file_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_file_name() const {
  return _internal_has_file_name();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_file_name() {
  file_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientUCMUpdatePublishedFile::file_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.file_name)
  return _internal_file_name();
}
inline void CMsgClientUCMUpdatePublishedFile::set_file_name(const std::string& value) {
  _internal_set_file_name(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.file_name)
}
inline std::string* CMsgClientUCMUpdatePublishedFile::mutable_file_name() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMUpdatePublishedFile.file_name)
  return _internal_mutable_file_name();
}
inline const std::string& CMsgClientUCMUpdatePublishedFile::_internal_file_name() const {
  return file_name_.Get();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_file_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile::set_file_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  file_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMUpdatePublishedFile.file_name)
}
inline void CMsgClientUCMUpdatePublishedFile::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMUpdatePublishedFile.file_name)
}
inline void CMsgClientUCMUpdatePublishedFile::set_file_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMUpdatePublishedFile.file_name)
}
inline std::string* CMsgClientUCMUpdatePublishedFile::_internal_mutable_file_name() {
  _has_bits_[0] |= 0x00000001u;
  return file_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMUpdatePublishedFile::release_file_name() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMUpdatePublishedFile.file_name)
  if (!_internal_has_file_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return file_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile::set_allocated_file_name(std::string* file_name) {
  if (file_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  file_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), file_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMUpdatePublishedFile.file_name)
}

// optional string preview_file_name = 4;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_preview_file_name() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_preview_file_name() const {
  return _internal_has_preview_file_name();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_preview_file_name() {
  preview_file_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientUCMUpdatePublishedFile::preview_file_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.preview_file_name)
  return _internal_preview_file_name();
}
inline void CMsgClientUCMUpdatePublishedFile::set_preview_file_name(const std::string& value) {
  _internal_set_preview_file_name(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.preview_file_name)
}
inline std::string* CMsgClientUCMUpdatePublishedFile::mutable_preview_file_name() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMUpdatePublishedFile.preview_file_name)
  return _internal_mutable_preview_file_name();
}
inline const std::string& CMsgClientUCMUpdatePublishedFile::_internal_preview_file_name() const {
  return preview_file_name_.Get();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_preview_file_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  preview_file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile::set_preview_file_name(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  preview_file_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMUpdatePublishedFile.preview_file_name)
}
inline void CMsgClientUCMUpdatePublishedFile::set_preview_file_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  preview_file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMUpdatePublishedFile.preview_file_name)
}
inline void CMsgClientUCMUpdatePublishedFile::set_preview_file_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  preview_file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMUpdatePublishedFile.preview_file_name)
}
inline std::string* CMsgClientUCMUpdatePublishedFile::_internal_mutable_preview_file_name() {
  _has_bits_[0] |= 0x00000002u;
  return preview_file_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMUpdatePublishedFile::release_preview_file_name() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMUpdatePublishedFile.preview_file_name)
  if (!_internal_has_preview_file_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return preview_file_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile::set_allocated_preview_file_name(std::string* preview_file_name) {
  if (preview_file_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  preview_file_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), preview_file_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMUpdatePublishedFile.preview_file_name)
}

// optional string title = 5;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_title() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_title() const {
  return _internal_has_title();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_title() {
  title_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgClientUCMUpdatePublishedFile::title() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.title)
  return _internal_title();
}
inline void CMsgClientUCMUpdatePublishedFile::set_title(const std::string& value) {
  _internal_set_title(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.title)
}
inline std::string* CMsgClientUCMUpdatePublishedFile::mutable_title() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMUpdatePublishedFile.title)
  return _internal_mutable_title();
}
inline const std::string& CMsgClientUCMUpdatePublishedFile::_internal_title() const {
  return title_.Get();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_title(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile::set_title(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  title_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMUpdatePublishedFile.title)
}
inline void CMsgClientUCMUpdatePublishedFile::set_title(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMUpdatePublishedFile.title)
}
inline void CMsgClientUCMUpdatePublishedFile::set_title(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMUpdatePublishedFile.title)
}
inline std::string* CMsgClientUCMUpdatePublishedFile::_internal_mutable_title() {
  _has_bits_[0] |= 0x00000004u;
  return title_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMUpdatePublishedFile::release_title() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMUpdatePublishedFile.title)
  if (!_internal_has_title()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return title_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile::set_allocated_title(std::string* title) {
  if (title != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  title_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), title,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMUpdatePublishedFile.title)
}

// optional string description = 6;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_description() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_description() const {
  return _internal_has_description();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_description() {
  description_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CMsgClientUCMUpdatePublishedFile::description() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.description)
  return _internal_description();
}
inline void CMsgClientUCMUpdatePublishedFile::set_description(const std::string& value) {
  _internal_set_description(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.description)
}
inline std::string* CMsgClientUCMUpdatePublishedFile::mutable_description() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMUpdatePublishedFile.description)
  return _internal_mutable_description();
}
inline const std::string& CMsgClientUCMUpdatePublishedFile::_internal_description() const {
  return description_.Get();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_description(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile::set_description(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  description_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMUpdatePublishedFile.description)
}
inline void CMsgClientUCMUpdatePublishedFile::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMUpdatePublishedFile.description)
}
inline void CMsgClientUCMUpdatePublishedFile::set_description(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMUpdatePublishedFile.description)
}
inline std::string* CMsgClientUCMUpdatePublishedFile::_internal_mutable_description() {
  _has_bits_[0] |= 0x00000008u;
  return description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMUpdatePublishedFile::release_description() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMUpdatePublishedFile.description)
  if (!_internal_has_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return description_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMUpdatePublishedFile.description)
}

// repeated string tags = 7;
inline int CMsgClientUCMUpdatePublishedFile::_internal_tags_size() const {
  return tags_.size();
}
inline int CMsgClientUCMUpdatePublishedFile::tags_size() const {
  return _internal_tags_size();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_tags() {
  tags_.Clear();
}
inline std::string* CMsgClientUCMUpdatePublishedFile::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:CMsgClientUCMUpdatePublishedFile.tags)
  return _internal_add_tags();
}
inline const std::string& CMsgClientUCMUpdatePublishedFile::_internal_tags(int index) const {
  return tags_.Get(index);
}
inline const std::string& CMsgClientUCMUpdatePublishedFile::tags(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.tags)
  return _internal_tags(index);
}
inline std::string* CMsgClientUCMUpdatePublishedFile::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMUpdatePublishedFile.tags)
  return tags_.Mutable(index);
}
inline void CMsgClientUCMUpdatePublishedFile::set_tags(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.tags)
  tags_.Mutable(index)->assign(value);
}
inline void CMsgClientUCMUpdatePublishedFile::set_tags(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.tags)
  tags_.Mutable(index)->assign(std::move(value));
}
inline void CMsgClientUCMUpdatePublishedFile::set_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMUpdatePublishedFile.tags)
}
inline void CMsgClientUCMUpdatePublishedFile::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMUpdatePublishedFile.tags)
}
inline std::string* CMsgClientUCMUpdatePublishedFile::_internal_add_tags() {
  return tags_.Add();
}
inline void CMsgClientUCMUpdatePublishedFile::add_tags(const std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgClientUCMUpdatePublishedFile.tags)
}
inline void CMsgClientUCMUpdatePublishedFile::add_tags(std::string&& value) {
  tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CMsgClientUCMUpdatePublishedFile.tags)
}
inline void CMsgClientUCMUpdatePublishedFile::add_tags(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgClientUCMUpdatePublishedFile.tags)
}
inline void CMsgClientUCMUpdatePublishedFile::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgClientUCMUpdatePublishedFile.tags)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CMsgClientUCMUpdatePublishedFile::tags() const {
  // @@protoc_insertion_point(field_list:CMsgClientUCMUpdatePublishedFile.tags)
  return tags_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CMsgClientUCMUpdatePublishedFile::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientUCMUpdatePublishedFile.tags)
  return &tags_;
}

// optional int32 visibility = 8;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_visibility() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_visibility() const {
  return _internal_has_visibility();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_visibility() {
  visibility_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMUpdatePublishedFile::_internal_visibility() const {
  return visibility_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMUpdatePublishedFile::visibility() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.visibility)
  return _internal_visibility();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_visibility(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  visibility_ = value;
}
inline void CMsgClientUCMUpdatePublishedFile::set_visibility(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_visibility(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.visibility)
}

// optional bool update_file = 9;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_update_file() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_update_file() const {
  return _internal_has_update_file();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_update_file() {
  update_file_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool CMsgClientUCMUpdatePublishedFile::_internal_update_file() const {
  return update_file_;
}
inline bool CMsgClientUCMUpdatePublishedFile::update_file() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.update_file)
  return _internal_update_file();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_update_file(bool value) {
  _has_bits_[0] |= 0x00000400u;
  update_file_ = value;
}
inline void CMsgClientUCMUpdatePublishedFile::set_update_file(bool value) {
  _internal_set_update_file(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.update_file)
}

// optional bool update_preview_file = 10;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_update_preview_file() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_update_preview_file() const {
  return _internal_has_update_preview_file();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_update_preview_file() {
  update_preview_file_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool CMsgClientUCMUpdatePublishedFile::_internal_update_preview_file() const {
  return update_preview_file_;
}
inline bool CMsgClientUCMUpdatePublishedFile::update_preview_file() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.update_preview_file)
  return _internal_update_preview_file();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_update_preview_file(bool value) {
  _has_bits_[0] |= 0x00000800u;
  update_preview_file_ = value;
}
inline void CMsgClientUCMUpdatePublishedFile::set_update_preview_file(bool value) {
  _internal_set_update_preview_file(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.update_preview_file)
}

// optional bool update_title = 11;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_update_title() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_update_title() const {
  return _internal_has_update_title();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_update_title() {
  update_title_ = false;
  _has_bits_[0] &= ~0x00001000u;
}
inline bool CMsgClientUCMUpdatePublishedFile::_internal_update_title() const {
  return update_title_;
}
inline bool CMsgClientUCMUpdatePublishedFile::update_title() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.update_title)
  return _internal_update_title();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_update_title(bool value) {
  _has_bits_[0] |= 0x00001000u;
  update_title_ = value;
}
inline void CMsgClientUCMUpdatePublishedFile::set_update_title(bool value) {
  _internal_set_update_title(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.update_title)
}

// optional bool update_description = 12;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_update_description() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_update_description() const {
  return _internal_has_update_description();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_update_description() {
  update_description_ = false;
  _has_bits_[0] &= ~0x00002000u;
}
inline bool CMsgClientUCMUpdatePublishedFile::_internal_update_description() const {
  return update_description_;
}
inline bool CMsgClientUCMUpdatePublishedFile::update_description() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.update_description)
  return _internal_update_description();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_update_description(bool value) {
  _has_bits_[0] |= 0x00002000u;
  update_description_ = value;
}
inline void CMsgClientUCMUpdatePublishedFile::set_update_description(bool value) {
  _internal_set_update_description(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.update_description)
}

// optional bool update_tags = 13;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_update_tags() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_update_tags() const {
  return _internal_has_update_tags();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_update_tags() {
  update_tags_ = false;
  _has_bits_[0] &= ~0x00004000u;
}
inline bool CMsgClientUCMUpdatePublishedFile::_internal_update_tags() const {
  return update_tags_;
}
inline bool CMsgClientUCMUpdatePublishedFile::update_tags() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.update_tags)
  return _internal_update_tags();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_update_tags(bool value) {
  _has_bits_[0] |= 0x00004000u;
  update_tags_ = value;
}
inline void CMsgClientUCMUpdatePublishedFile::set_update_tags(bool value) {
  _internal_set_update_tags(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.update_tags)
}

// optional bool update_visibility = 14;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_update_visibility() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_update_visibility() const {
  return _internal_has_update_visibility();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_update_visibility() {
  update_visibility_ = false;
  _has_bits_[0] &= ~0x00008000u;
}
inline bool CMsgClientUCMUpdatePublishedFile::_internal_update_visibility() const {
  return update_visibility_;
}
inline bool CMsgClientUCMUpdatePublishedFile::update_visibility() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.update_visibility)
  return _internal_update_visibility();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_update_visibility(bool value) {
  _has_bits_[0] |= 0x00008000u;
  update_visibility_ = value;
}
inline void CMsgClientUCMUpdatePublishedFile::set_update_visibility(bool value) {
  _internal_set_update_visibility(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.update_visibility)
}

// optional string change_description = 15;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_change_description() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_change_description() const {
  return _internal_has_change_description();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_change_description() {
  change_description_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& CMsgClientUCMUpdatePublishedFile::change_description() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.change_description)
  return _internal_change_description();
}
inline void CMsgClientUCMUpdatePublishedFile::set_change_description(const std::string& value) {
  _internal_set_change_description(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.change_description)
}
inline std::string* CMsgClientUCMUpdatePublishedFile::mutable_change_description() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMUpdatePublishedFile.change_description)
  return _internal_mutable_change_description();
}
inline const std::string& CMsgClientUCMUpdatePublishedFile::_internal_change_description() const {
  return change_description_.Get();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_change_description(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  change_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile::set_change_description(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  change_description_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMUpdatePublishedFile.change_description)
}
inline void CMsgClientUCMUpdatePublishedFile::set_change_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  change_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMUpdatePublishedFile.change_description)
}
inline void CMsgClientUCMUpdatePublishedFile::set_change_description(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000010u;
  change_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMUpdatePublishedFile.change_description)
}
inline std::string* CMsgClientUCMUpdatePublishedFile::_internal_mutable_change_description() {
  _has_bits_[0] |= 0x00000010u;
  return change_description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMUpdatePublishedFile::release_change_description() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMUpdatePublishedFile.change_description)
  if (!_internal_has_change_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return change_description_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile::set_allocated_change_description(std::string* change_description) {
  if (change_description != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  change_description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), change_description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMUpdatePublishedFile.change_description)
}

// optional bool update_url = 16;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_update_url() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_update_url() const {
  return _internal_has_update_url();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_update_url() {
  update_url_ = false;
  _has_bits_[0] &= ~0x00010000u;
}
inline bool CMsgClientUCMUpdatePublishedFile::_internal_update_url() const {
  return update_url_;
}
inline bool CMsgClientUCMUpdatePublishedFile::update_url() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.update_url)
  return _internal_update_url();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_update_url(bool value) {
  _has_bits_[0] |= 0x00010000u;
  update_url_ = value;
}
inline void CMsgClientUCMUpdatePublishedFile::set_update_url(bool value) {
  _internal_set_update_url(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.update_url)
}

// optional string url = 17;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_url() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_url() const {
  return _internal_has_url();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_url() {
  url_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& CMsgClientUCMUpdatePublishedFile::url() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.url)
  return _internal_url();
}
inline void CMsgClientUCMUpdatePublishedFile::set_url(const std::string& value) {
  _internal_set_url(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.url)
}
inline std::string* CMsgClientUCMUpdatePublishedFile::mutable_url() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMUpdatePublishedFile.url)
  return _internal_mutable_url();
}
inline const std::string& CMsgClientUCMUpdatePublishedFile::_internal_url() const {
  return url_.Get();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_url(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile::set_url(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMUpdatePublishedFile.url)
}
inline void CMsgClientUCMUpdatePublishedFile::set_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMUpdatePublishedFile.url)
}
inline void CMsgClientUCMUpdatePublishedFile::set_url(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000020u;
  url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMUpdatePublishedFile.url)
}
inline std::string* CMsgClientUCMUpdatePublishedFile::_internal_mutable_url() {
  _has_bits_[0] |= 0x00000020u;
  return url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMUpdatePublishedFile::release_url() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMUpdatePublishedFile.url)
  if (!_internal_has_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return url_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile::set_allocated_url(std::string* url) {
  if (url != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMUpdatePublishedFile.url)
}

// optional bool update_content_manifest = 18;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_update_content_manifest() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_update_content_manifest() const {
  return _internal_has_update_content_manifest();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_update_content_manifest() {
  update_content_manifest_ = false;
  _has_bits_[0] &= ~0x00020000u;
}
inline bool CMsgClientUCMUpdatePublishedFile::_internal_update_content_manifest() const {
  return update_content_manifest_;
}
inline bool CMsgClientUCMUpdatePublishedFile::update_content_manifest() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.update_content_manifest)
  return _internal_update_content_manifest();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_update_content_manifest(bool value) {
  _has_bits_[0] |= 0x00020000u;
  update_content_manifest_ = value;
}
inline void CMsgClientUCMUpdatePublishedFile::set_update_content_manifest(bool value) {
  _internal_set_update_content_manifest(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.update_content_manifest)
}

// optional fixed64 content_manifest = 19;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_content_manifest() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_content_manifest() const {
  return _internal_has_content_manifest();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_content_manifest() {
  content_manifest_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMUpdatePublishedFile::_internal_content_manifest() const {
  return content_manifest_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMUpdatePublishedFile::content_manifest() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.content_manifest)
  return _internal_content_manifest();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_content_manifest(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00040000u;
  content_manifest_ = value;
}
inline void CMsgClientUCMUpdatePublishedFile::set_content_manifest(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_content_manifest(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.content_manifest)
}

// optional string metadata = 20;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_metadata() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_metadata() const {
  return _internal_has_metadata();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_metadata() {
  metadata_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000040u;
}
inline const std::string& CMsgClientUCMUpdatePublishedFile::metadata() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.metadata)
  return _internal_metadata();
}
inline void CMsgClientUCMUpdatePublishedFile::set_metadata(const std::string& value) {
  _internal_set_metadata(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.metadata)
}
inline std::string* CMsgClientUCMUpdatePublishedFile::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMUpdatePublishedFile.metadata)
  return _internal_mutable_metadata();
}
inline const std::string& CMsgClientUCMUpdatePublishedFile::_internal_metadata() const {
  return metadata_.Get();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_metadata(const std::string& value) {
  _has_bits_[0] |= 0x00000040u;
  metadata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile::set_metadata(std::string&& value) {
  _has_bits_[0] |= 0x00000040u;
  metadata_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientUCMUpdatePublishedFile.metadata)
}
inline void CMsgClientUCMUpdatePublishedFile::set_metadata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000040u;
  metadata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMUpdatePublishedFile.metadata)
}
inline void CMsgClientUCMUpdatePublishedFile::set_metadata(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000040u;
  metadata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMUpdatePublishedFile.metadata)
}
inline std::string* CMsgClientUCMUpdatePublishedFile::_internal_mutable_metadata() {
  _has_bits_[0] |= 0x00000040u;
  return metadata_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientUCMUpdatePublishedFile::release_metadata() {
  // @@protoc_insertion_point(field_release:CMsgClientUCMUpdatePublishedFile.metadata)
  if (!_internal_has_metadata()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000040u;
  return metadata_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientUCMUpdatePublishedFile::set_allocated_metadata(std::string* metadata) {
  if (metadata != nullptr) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  metadata_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), metadata,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientUCMUpdatePublishedFile.metadata)
}

// optional bool update_metadata = 21;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_update_metadata() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_update_metadata() const {
  return _internal_has_update_metadata();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_update_metadata() {
  update_metadata_ = false;
  _has_bits_[0] &= ~0x00100000u;
}
inline bool CMsgClientUCMUpdatePublishedFile::_internal_update_metadata() const {
  return update_metadata_;
}
inline bool CMsgClientUCMUpdatePublishedFile::update_metadata() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.update_metadata)
  return _internal_update_metadata();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_update_metadata(bool value) {
  _has_bits_[0] |= 0x00100000u;
  update_metadata_ = value;
}
inline void CMsgClientUCMUpdatePublishedFile::set_update_metadata(bool value) {
  _internal_set_update_metadata(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.update_metadata)
}

// optional int32 language = 22 [default = 0];
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_language() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_language() const {
  return _internal_has_language();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_language() {
  language_ = 0;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMUpdatePublishedFile::_internal_language() const {
  return language_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMUpdatePublishedFile::language() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.language)
  return _internal_language();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_language(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00080000u;
  language_ = value;
}
inline void CMsgClientUCMUpdatePublishedFile::set_language(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_language(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.language)
}

// repeated string removed_kvtags = 23;
inline int CMsgClientUCMUpdatePublishedFile::_internal_removed_kvtags_size() const {
  return removed_kvtags_.size();
}
inline int CMsgClientUCMUpdatePublishedFile::removed_kvtags_size() const {
  return _internal_removed_kvtags_size();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_removed_kvtags() {
  removed_kvtags_.Clear();
}
inline std::string* CMsgClientUCMUpdatePublishedFile::add_removed_kvtags() {
  // @@protoc_insertion_point(field_add_mutable:CMsgClientUCMUpdatePublishedFile.removed_kvtags)
  return _internal_add_removed_kvtags();
}
inline const std::string& CMsgClientUCMUpdatePublishedFile::_internal_removed_kvtags(int index) const {
  return removed_kvtags_.Get(index);
}
inline const std::string& CMsgClientUCMUpdatePublishedFile::removed_kvtags(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.removed_kvtags)
  return _internal_removed_kvtags(index);
}
inline std::string* CMsgClientUCMUpdatePublishedFile::mutable_removed_kvtags(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMUpdatePublishedFile.removed_kvtags)
  return removed_kvtags_.Mutable(index);
}
inline void CMsgClientUCMUpdatePublishedFile::set_removed_kvtags(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.removed_kvtags)
  removed_kvtags_.Mutable(index)->assign(value);
}
inline void CMsgClientUCMUpdatePublishedFile::set_removed_kvtags(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.removed_kvtags)
  removed_kvtags_.Mutable(index)->assign(std::move(value));
}
inline void CMsgClientUCMUpdatePublishedFile::set_removed_kvtags(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  removed_kvtags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgClientUCMUpdatePublishedFile.removed_kvtags)
}
inline void CMsgClientUCMUpdatePublishedFile::set_removed_kvtags(int index, const char* value, size_t size) {
  removed_kvtags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgClientUCMUpdatePublishedFile.removed_kvtags)
}
inline std::string* CMsgClientUCMUpdatePublishedFile::_internal_add_removed_kvtags() {
  return removed_kvtags_.Add();
}
inline void CMsgClientUCMUpdatePublishedFile::add_removed_kvtags(const std::string& value) {
  removed_kvtags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgClientUCMUpdatePublishedFile.removed_kvtags)
}
inline void CMsgClientUCMUpdatePublishedFile::add_removed_kvtags(std::string&& value) {
  removed_kvtags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CMsgClientUCMUpdatePublishedFile.removed_kvtags)
}
inline void CMsgClientUCMUpdatePublishedFile::add_removed_kvtags(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  removed_kvtags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgClientUCMUpdatePublishedFile.removed_kvtags)
}
inline void CMsgClientUCMUpdatePublishedFile::add_removed_kvtags(const char* value, size_t size) {
  removed_kvtags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgClientUCMUpdatePublishedFile.removed_kvtags)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CMsgClientUCMUpdatePublishedFile::removed_kvtags() const {
  // @@protoc_insertion_point(field_list:CMsgClientUCMUpdatePublishedFile.removed_kvtags)
  return removed_kvtags_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CMsgClientUCMUpdatePublishedFile::mutable_removed_kvtags() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientUCMUpdatePublishedFile.removed_kvtags)
  return &removed_kvtags_;
}

// repeated .CMsgClientUCMUpdatePublishedFile.KeyValueTag kvtags = 24;
inline int CMsgClientUCMUpdatePublishedFile::_internal_kvtags_size() const {
  return kvtags_.size();
}
inline int CMsgClientUCMUpdatePublishedFile::kvtags_size() const {
  return _internal_kvtags_size();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_kvtags() {
  kvtags_.Clear();
}
inline ::CMsgClientUCMUpdatePublishedFile_KeyValueTag* CMsgClientUCMUpdatePublishedFile::mutable_kvtags(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMUpdatePublishedFile.kvtags)
  return kvtags_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMUpdatePublishedFile_KeyValueTag >*
CMsgClientUCMUpdatePublishedFile::mutable_kvtags() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientUCMUpdatePublishedFile.kvtags)
  return &kvtags_;
}
inline const ::CMsgClientUCMUpdatePublishedFile_KeyValueTag& CMsgClientUCMUpdatePublishedFile::_internal_kvtags(int index) const {
  return kvtags_.Get(index);
}
inline const ::CMsgClientUCMUpdatePublishedFile_KeyValueTag& CMsgClientUCMUpdatePublishedFile::kvtags(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.kvtags)
  return _internal_kvtags(index);
}
inline ::CMsgClientUCMUpdatePublishedFile_KeyValueTag* CMsgClientUCMUpdatePublishedFile::_internal_add_kvtags() {
  return kvtags_.Add();
}
inline ::CMsgClientUCMUpdatePublishedFile_KeyValueTag* CMsgClientUCMUpdatePublishedFile::add_kvtags() {
  // @@protoc_insertion_point(field_add:CMsgClientUCMUpdatePublishedFile.kvtags)
  return _internal_add_kvtags();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMUpdatePublishedFile_KeyValueTag >&
CMsgClientUCMUpdatePublishedFile::kvtags() const {
  // @@protoc_insertion_point(field_list:CMsgClientUCMUpdatePublishedFile.kvtags)
  return kvtags_;
}

// repeated .CMsgClientUCMUpdatePublishedFile.AdditionalPreview previews = 25;
inline int CMsgClientUCMUpdatePublishedFile::_internal_previews_size() const {
  return previews_.size();
}
inline int CMsgClientUCMUpdatePublishedFile::previews_size() const {
  return _internal_previews_size();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_previews() {
  previews_.Clear();
}
inline ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview* CMsgClientUCMUpdatePublishedFile::mutable_previews(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMUpdatePublishedFile.previews)
  return previews_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview >*
CMsgClientUCMUpdatePublishedFile::mutable_previews() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientUCMUpdatePublishedFile.previews)
  return &previews_;
}
inline const ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview& CMsgClientUCMUpdatePublishedFile::_internal_previews(int index) const {
  return previews_.Get(index);
}
inline const ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview& CMsgClientUCMUpdatePublishedFile::previews(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.previews)
  return _internal_previews(index);
}
inline ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview* CMsgClientUCMUpdatePublishedFile::_internal_add_previews() {
  return previews_.Add();
}
inline ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview* CMsgClientUCMUpdatePublishedFile::add_previews() {
  // @@protoc_insertion_point(field_add:CMsgClientUCMUpdatePublishedFile.previews)
  return _internal_add_previews();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMUpdatePublishedFile_AdditionalPreview >&
CMsgClientUCMUpdatePublishedFile::previews() const {
  // @@protoc_insertion_point(field_list:CMsgClientUCMUpdatePublishedFile.previews)
  return previews_;
}

// repeated int32 previews_to_remove = 26;
inline int CMsgClientUCMUpdatePublishedFile::_internal_previews_to_remove_size() const {
  return previews_to_remove_.size();
}
inline int CMsgClientUCMUpdatePublishedFile::previews_to_remove_size() const {
  return _internal_previews_to_remove_size();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_previews_to_remove() {
  previews_to_remove_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMUpdatePublishedFile::_internal_previews_to_remove(int index) const {
  return previews_to_remove_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMUpdatePublishedFile::previews_to_remove(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.previews_to_remove)
  return _internal_previews_to_remove(index);
}
inline void CMsgClientUCMUpdatePublishedFile::set_previews_to_remove(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  previews_to_remove_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.previews_to_remove)
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_add_previews_to_remove(::PROTOBUF_NAMESPACE_ID::int32 value) {
  previews_to_remove_.Add(value);
}
inline void CMsgClientUCMUpdatePublishedFile::add_previews_to_remove(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_previews_to_remove(value);
  // @@protoc_insertion_point(field_add:CMsgClientUCMUpdatePublishedFile.previews_to_remove)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgClientUCMUpdatePublishedFile::_internal_previews_to_remove() const {
  return previews_to_remove_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgClientUCMUpdatePublishedFile::previews_to_remove() const {
  // @@protoc_insertion_point(field_list:CMsgClientUCMUpdatePublishedFile.previews_to_remove)
  return _internal_previews_to_remove();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgClientUCMUpdatePublishedFile::_internal_mutable_previews_to_remove() {
  return &previews_to_remove_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgClientUCMUpdatePublishedFile::mutable_previews_to_remove() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientUCMUpdatePublishedFile.previews_to_remove)
  return _internal_mutable_previews_to_remove();
}

// optional bool clear_in_progress = 27;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_clear_in_progress() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_clear_in_progress() const {
  return _internal_has_clear_in_progress();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_clear_in_progress() {
  clear_in_progress_ = false;
  _has_bits_[0] &= ~0x00200000u;
}
inline bool CMsgClientUCMUpdatePublishedFile::_internal_clear_in_progress() const {
  return clear_in_progress_;
}
inline bool CMsgClientUCMUpdatePublishedFile::clear_in_progress() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.clear_in_progress)
  return _internal_clear_in_progress();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_clear_in_progress(bool value) {
  _has_bits_[0] |= 0x00200000u;
  clear_in_progress_ = value;
}
inline void CMsgClientUCMUpdatePublishedFile::set_clear_in_progress(bool value) {
  _internal_set_clear_in_progress(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.clear_in_progress)
}

// optional bool remove_all_kvtags = 28;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_remove_all_kvtags() const {
  bool value = (_has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_remove_all_kvtags() const {
  return _internal_has_remove_all_kvtags();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_remove_all_kvtags() {
  remove_all_kvtags_ = false;
  _has_bits_[0] &= ~0x00400000u;
}
inline bool CMsgClientUCMUpdatePublishedFile::_internal_remove_all_kvtags() const {
  return remove_all_kvtags_;
}
inline bool CMsgClientUCMUpdatePublishedFile::remove_all_kvtags() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.remove_all_kvtags)
  return _internal_remove_all_kvtags();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_remove_all_kvtags(bool value) {
  _has_bits_[0] |= 0x00400000u;
  remove_all_kvtags_ = value;
}
inline void CMsgClientUCMUpdatePublishedFile::set_remove_all_kvtags(bool value) {
  _internal_set_remove_all_kvtags(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.remove_all_kvtags)
}

// repeated int32 content_descriptors_to_add = 29;
inline int CMsgClientUCMUpdatePublishedFile::_internal_content_descriptors_to_add_size() const {
  return content_descriptors_to_add_.size();
}
inline int CMsgClientUCMUpdatePublishedFile::content_descriptors_to_add_size() const {
  return _internal_content_descriptors_to_add_size();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_content_descriptors_to_add() {
  content_descriptors_to_add_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMUpdatePublishedFile::_internal_content_descriptors_to_add(int index) const {
  return content_descriptors_to_add_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMUpdatePublishedFile::content_descriptors_to_add(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.content_descriptors_to_add)
  return _internal_content_descriptors_to_add(index);
}
inline void CMsgClientUCMUpdatePublishedFile::set_content_descriptors_to_add(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  content_descriptors_to_add_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.content_descriptors_to_add)
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_add_content_descriptors_to_add(::PROTOBUF_NAMESPACE_ID::int32 value) {
  content_descriptors_to_add_.Add(value);
}
inline void CMsgClientUCMUpdatePublishedFile::add_content_descriptors_to_add(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_content_descriptors_to_add(value);
  // @@protoc_insertion_point(field_add:CMsgClientUCMUpdatePublishedFile.content_descriptors_to_add)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgClientUCMUpdatePublishedFile::_internal_content_descriptors_to_add() const {
  return content_descriptors_to_add_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgClientUCMUpdatePublishedFile::content_descriptors_to_add() const {
  // @@protoc_insertion_point(field_list:CMsgClientUCMUpdatePublishedFile.content_descriptors_to_add)
  return _internal_content_descriptors_to_add();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgClientUCMUpdatePublishedFile::_internal_mutable_content_descriptors_to_add() {
  return &content_descriptors_to_add_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgClientUCMUpdatePublishedFile::mutable_content_descriptors_to_add() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientUCMUpdatePublishedFile.content_descriptors_to_add)
  return _internal_mutable_content_descriptors_to_add();
}

// repeated int32 content_descriptors_to_remove = 30;
inline int CMsgClientUCMUpdatePublishedFile::_internal_content_descriptors_to_remove_size() const {
  return content_descriptors_to_remove_.size();
}
inline int CMsgClientUCMUpdatePublishedFile::content_descriptors_to_remove_size() const {
  return _internal_content_descriptors_to_remove_size();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_content_descriptors_to_remove() {
  content_descriptors_to_remove_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMUpdatePublishedFile::_internal_content_descriptors_to_remove(int index) const {
  return content_descriptors_to_remove_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMUpdatePublishedFile::content_descriptors_to_remove(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.content_descriptors_to_remove)
  return _internal_content_descriptors_to_remove(index);
}
inline void CMsgClientUCMUpdatePublishedFile::set_content_descriptors_to_remove(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  content_descriptors_to_remove_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.content_descriptors_to_remove)
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_add_content_descriptors_to_remove(::PROTOBUF_NAMESPACE_ID::int32 value) {
  content_descriptors_to_remove_.Add(value);
}
inline void CMsgClientUCMUpdatePublishedFile::add_content_descriptors_to_remove(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_content_descriptors_to_remove(value);
  // @@protoc_insertion_point(field_add:CMsgClientUCMUpdatePublishedFile.content_descriptors_to_remove)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgClientUCMUpdatePublishedFile::_internal_content_descriptors_to_remove() const {
  return content_descriptors_to_remove_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgClientUCMUpdatePublishedFile::content_descriptors_to_remove() const {
  // @@protoc_insertion_point(field_list:CMsgClientUCMUpdatePublishedFile.content_descriptors_to_remove)
  return _internal_content_descriptors_to_remove();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgClientUCMUpdatePublishedFile::_internal_mutable_content_descriptors_to_remove() {
  return &content_descriptors_to_remove_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgClientUCMUpdatePublishedFile::mutable_content_descriptors_to_remove() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientUCMUpdatePublishedFile.content_descriptors_to_remove)
  return _internal_mutable_content_descriptors_to_remove();
}

// optional bool allow_admin_tags = 31 [default = false];
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_allow_admin_tags() const {
  bool value = (_has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_allow_admin_tags() const {
  return _internal_has_allow_admin_tags();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_allow_admin_tags() {
  allow_admin_tags_ = false;
  _has_bits_[0] &= ~0x00800000u;
}
inline bool CMsgClientUCMUpdatePublishedFile::_internal_allow_admin_tags() const {
  return allow_admin_tags_;
}
inline bool CMsgClientUCMUpdatePublishedFile::allow_admin_tags() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.allow_admin_tags)
  return _internal_allow_admin_tags();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_allow_admin_tags(bool value) {
  _has_bits_[0] |= 0x00800000u;
  allow_admin_tags_ = value;
}
inline void CMsgClientUCMUpdatePublishedFile::set_allow_admin_tags(bool value) {
  _internal_set_allow_admin_tags(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.allow_admin_tags)
}

// optional uint64 external_asset_id = 32;
inline bool CMsgClientUCMUpdatePublishedFile::_internal_has_external_asset_id() const {
  bool value = (_has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFile::has_external_asset_id() const {
  return _internal_has_external_asset_id();
}
inline void CMsgClientUCMUpdatePublishedFile::clear_external_asset_id() {
  external_asset_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x01000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMUpdatePublishedFile::_internal_external_asset_id() const {
  return external_asset_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMUpdatePublishedFile::external_asset_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFile.external_asset_id)
  return _internal_external_asset_id();
}
inline void CMsgClientUCMUpdatePublishedFile::_internal_set_external_asset_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x01000000u;
  external_asset_id_ = value;
}
inline void CMsgClientUCMUpdatePublishedFile::set_external_asset_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_external_asset_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFile.external_asset_id)
}

// -------------------------------------------------------------------

// CMsgClientUCMUpdatePublishedFileResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientUCMUpdatePublishedFileResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFileResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientUCMUpdatePublishedFileResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMUpdatePublishedFileResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMUpdatePublishedFileResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFileResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientUCMUpdatePublishedFileResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  eresult_ = value;
}
inline void CMsgClientUCMUpdatePublishedFileResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFileResponse.eresult)
}

// optional bool needs_workshop_legal_agreement_acceptance = 2 [default = false];
inline bool CMsgClientUCMUpdatePublishedFileResponse::_internal_has_needs_workshop_legal_agreement_acceptance() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMUpdatePublishedFileResponse::has_needs_workshop_legal_agreement_acceptance() const {
  return _internal_has_needs_workshop_legal_agreement_acceptance();
}
inline void CMsgClientUCMUpdatePublishedFileResponse::clear_needs_workshop_legal_agreement_acceptance() {
  needs_workshop_legal_agreement_acceptance_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgClientUCMUpdatePublishedFileResponse::_internal_needs_workshop_legal_agreement_acceptance() const {
  return needs_workshop_legal_agreement_acceptance_;
}
inline bool CMsgClientUCMUpdatePublishedFileResponse::needs_workshop_legal_agreement_acceptance() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMUpdatePublishedFileResponse.needs_workshop_legal_agreement_acceptance)
  return _internal_needs_workshop_legal_agreement_acceptance();
}
inline void CMsgClientUCMUpdatePublishedFileResponse::_internal_set_needs_workshop_legal_agreement_acceptance(bool value) {
  _has_bits_[0] |= 0x00000001u;
  needs_workshop_legal_agreement_acceptance_ = value;
}
inline void CMsgClientUCMUpdatePublishedFileResponse::set_needs_workshop_legal_agreement_acceptance(bool value) {
  _internal_set_needs_workshop_legal_agreement_acceptance(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMUpdatePublishedFileResponse.needs_workshop_legal_agreement_acceptance)
}

// -------------------------------------------------------------------

// CMsgClientUCMDeletePublishedFile

// optional fixed64 published_file_id = 1;
inline bool CMsgClientUCMDeletePublishedFile::_internal_has_published_file_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMDeletePublishedFile::has_published_file_id() const {
  return _internal_has_published_file_id();
}
inline void CMsgClientUCMDeletePublishedFile::clear_published_file_id() {
  published_file_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMDeletePublishedFile::_internal_published_file_id() const {
  return published_file_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMDeletePublishedFile::published_file_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMDeletePublishedFile.published_file_id)
  return _internal_published_file_id();
}
inline void CMsgClientUCMDeletePublishedFile::_internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  published_file_id_ = value;
}
inline void CMsgClientUCMDeletePublishedFile::set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_published_file_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMDeletePublishedFile.published_file_id)
}

// optional uint32 app_id = 2;
inline bool CMsgClientUCMDeletePublishedFile::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUCMDeletePublishedFile::has_app_id() const {
  return _internal_has_app_id();
}
inline void CMsgClientUCMDeletePublishedFile::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMDeletePublishedFile::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMDeletePublishedFile::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMDeletePublishedFile.app_id)
  return _internal_app_id();
}
inline void CMsgClientUCMDeletePublishedFile::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  app_id_ = value;
}
inline void CMsgClientUCMDeletePublishedFile::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMDeletePublishedFile.app_id)
}

// -------------------------------------------------------------------

// CMsgClientUCMDeletePublishedFileResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientUCMDeletePublishedFileResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMDeletePublishedFileResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientUCMDeletePublishedFileResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMDeletePublishedFileResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMDeletePublishedFileResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMDeletePublishedFileResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientUCMDeletePublishedFileResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
}
inline void CMsgClientUCMDeletePublishedFileResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMDeletePublishedFileResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates

// optional uint32 app_id = 1;
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::has_app_id() const {
  return _internal_has_app_id();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates.app_id)
  return _internal_app_id();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  app_id_ = value;
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates.app_id)
}

// optional uint32 start_index = 2;
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::_internal_has_start_index() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::has_start_index() const {
  return _internal_has_start_index();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::clear_start_index() {
  start_index_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::_internal_start_index() const {
  return start_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::start_index() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates.start_index)
  return _internal_start_index();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::_internal_set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  start_index_ = value;
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start_index(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates.start_index)
}

// optional fixed32 start_time = 3;
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::_internal_has_start_time() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::has_start_time() const {
  return _internal_has_start_time();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::clear_start_time() {
  start_time_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::_internal_start_time() const {
  return start_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::start_time() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates.start_time)
  return _internal_start_time();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::_internal_set_start_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  start_time_ = value;
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::set_start_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start_time(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates.start_time)
}

// optional uint32 desired_revision = 4 [default = 0];
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::_internal_has_desired_revision() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::has_desired_revision() const {
  return _internal_has_desired_revision();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::clear_desired_revision() {
  desired_revision_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::_internal_desired_revision() const {
  return desired_revision_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::desired_revision() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates.desired_revision)
  return _internal_desired_revision();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::_internal_set_desired_revision(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  desired_revision_ = value;
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::set_desired_revision(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_desired_revision(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates.desired_revision)
}

// -------------------------------------------------------------------

// CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId

// optional fixed64 published_file_id = 1;
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_has_published_file_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::has_published_file_id() const {
  return _internal_has_published_file_id();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_published_file_id() {
  published_file_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_published_file_id() const {
  return published_file_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::published_file_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.published_file_id)
  return _internal_published_file_id();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  published_file_id_ = value;
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_published_file_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.published_file_id)
}

// optional fixed32 rtime32_subscribed = 2 [default = 0];
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_has_rtime32_subscribed() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::has_rtime32_subscribed() const {
  return _internal_has_rtime32_subscribed();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_rtime32_subscribed() {
  rtime32_subscribed_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_rtime32_subscribed() const {
  return rtime32_subscribed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::rtime32_subscribed() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.rtime32_subscribed)
  return _internal_rtime32_subscribed();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_set_rtime32_subscribed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  rtime32_subscribed_ = value;
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_rtime32_subscribed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rtime32_subscribed(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.rtime32_subscribed)
}

// optional uint32 appid = 3;
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::has_appid() const {
  return _internal_has_appid();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::appid() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.appid)
  return _internal_appid();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  appid_ = value;
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.appid)
}

// optional fixed64 file_hcontent = 4;
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_has_file_hcontent() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::has_file_hcontent() const {
  return _internal_has_file_hcontent();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_file_hcontent() {
  file_hcontent_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_file_hcontent() const {
  return file_hcontent_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::file_hcontent() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.file_hcontent)
  return _internal_file_hcontent();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_set_file_hcontent(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  file_hcontent_ = value;
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_file_hcontent(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_file_hcontent(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.file_hcontent)
}

// optional uint32 file_size = 5;
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_has_file_size() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::has_file_size() const {
  return _internal_has_file_size();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_file_size() {
  file_size_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_file_size() const {
  return file_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::file_size() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.file_size)
  return _internal_file_size();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_set_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  file_size_ = value;
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_size(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.file_size)
}

// optional fixed32 rtime32_last_updated = 6;
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_has_rtime32_last_updated() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::has_rtime32_last_updated() const {
  return _internal_has_rtime32_last_updated();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_rtime32_last_updated() {
  rtime32_last_updated_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_rtime32_last_updated() const {
  return rtime32_last_updated_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::rtime32_last_updated() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.rtime32_last_updated)
  return _internal_rtime32_last_updated();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_set_rtime32_last_updated(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  rtime32_last_updated_ = value;
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_rtime32_last_updated(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rtime32_last_updated(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.rtime32_last_updated)
}

// optional bool is_depot_content = 7;
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_has_is_depot_content() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::has_is_depot_content() const {
  return _internal_has_is_depot_content();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_is_depot_content() {
  is_depot_content_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_is_depot_content() const {
  return is_depot_content_;
}
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::is_depot_content() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.is_depot_content)
  return _internal_is_depot_content();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::_internal_set_is_depot_content(bool value) {
  _has_bits_[0] |= 0x00000040u;
  is_depot_content_ = value;
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_is_depot_content(bool value) {
  _internal_set_is_depot_content(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.is_depot_content)
}

// -------------------------------------------------------------------

// CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  eresult_ = value;
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.eresult)
}

// repeated .CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId subscribed_files = 2;
inline int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::_internal_subscribed_files_size() const {
  return subscribed_files_.size();
}
inline int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::subscribed_files_size() const {
  return _internal_subscribed_files_size();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::clear_subscribed_files() {
  subscribed_files_.Clear();
}
inline ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::mutable_subscribed_files(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.subscribed_files)
  return subscribed_files_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId >*
CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::mutable_subscribed_files() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.subscribed_files)
  return &subscribed_files_;
}
inline const ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::_internal_subscribed_files(int index) const {
  return subscribed_files_.Get(index);
}
inline const ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::subscribed_files(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.subscribed_files)
  return _internal_subscribed_files(index);
}
inline ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::_internal_add_subscribed_files() {
  return subscribed_files_.Add();
}
inline ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::add_subscribed_files() {
  // @@protoc_insertion_point(field_add:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.subscribed_files)
  return _internal_add_subscribed_files();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId >&
CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::subscribed_files() const {
  // @@protoc_insertion_point(field_list:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.subscribed_files)
  return subscribed_files_;
}

// optional uint32 total_results = 3;
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::_internal_has_total_results() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::has_total_results() const {
  return _internal_has_total_results();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::clear_total_results() {
  total_results_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::_internal_total_results() const {
  return total_results_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::total_results() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.total_results)
  return _internal_total_results();
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::_internal_set_total_results(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  total_results_ = value;
}
inline void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::set_total_results(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_total_results(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.total_results)
}

// -------------------------------------------------------------------

// CMsgClientUCMPublishedFileUpdated

// optional fixed64 published_file_id = 1;
inline bool CMsgClientUCMPublishedFileUpdated::_internal_has_published_file_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishedFileUpdated::has_published_file_id() const {
  return _internal_has_published_file_id();
}
inline void CMsgClientUCMPublishedFileUpdated::clear_published_file_id() {
  published_file_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMPublishedFileUpdated::_internal_published_file_id() const {
  return published_file_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMPublishedFileUpdated::published_file_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishedFileUpdated.published_file_id)
  return _internal_published_file_id();
}
inline void CMsgClientUCMPublishedFileUpdated::_internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  published_file_id_ = value;
}
inline void CMsgClientUCMPublishedFileUpdated::set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_published_file_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishedFileUpdated.published_file_id)
}

// optional uint32 app_id = 2;
inline bool CMsgClientUCMPublishedFileUpdated::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishedFileUpdated::has_app_id() const {
  return _internal_has_app_id();
}
inline void CMsgClientUCMPublishedFileUpdated::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMPublishedFileUpdated::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMPublishedFileUpdated::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishedFileUpdated.app_id)
  return _internal_app_id();
}
inline void CMsgClientUCMPublishedFileUpdated::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  app_id_ = value;
}
inline void CMsgClientUCMPublishedFileUpdated::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishedFileUpdated.app_id)
}

// optional uint32 time_updated = 3;
inline bool CMsgClientUCMPublishedFileUpdated::_internal_has_time_updated() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishedFileUpdated::has_time_updated() const {
  return _internal_has_time_updated();
}
inline void CMsgClientUCMPublishedFileUpdated::clear_time_updated() {
  time_updated_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMPublishedFileUpdated::_internal_time_updated() const {
  return time_updated_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMPublishedFileUpdated::time_updated() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishedFileUpdated.time_updated)
  return _internal_time_updated();
}
inline void CMsgClientUCMPublishedFileUpdated::_internal_set_time_updated(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  time_updated_ = value;
}
inline void CMsgClientUCMPublishedFileUpdated::set_time_updated(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_time_updated(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishedFileUpdated.time_updated)
}

// optional fixed64 hcontent = 4;
inline bool CMsgClientUCMPublishedFileUpdated::_internal_has_hcontent() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishedFileUpdated::has_hcontent() const {
  return _internal_has_hcontent();
}
inline void CMsgClientUCMPublishedFileUpdated::clear_hcontent() {
  hcontent_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMPublishedFileUpdated::_internal_hcontent() const {
  return hcontent_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMPublishedFileUpdated::hcontent() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishedFileUpdated.hcontent)
  return _internal_hcontent();
}
inline void CMsgClientUCMPublishedFileUpdated::_internal_set_hcontent(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  hcontent_ = value;
}
inline void CMsgClientUCMPublishedFileUpdated::set_hcontent(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_hcontent(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishedFileUpdated.hcontent)
}

// optional fixed32 file_size = 5;
inline bool CMsgClientUCMPublishedFileUpdated::_internal_has_file_size() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishedFileUpdated::has_file_size() const {
  return _internal_has_file_size();
}
inline void CMsgClientUCMPublishedFileUpdated::clear_file_size() {
  file_size_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMPublishedFileUpdated::_internal_file_size() const {
  return file_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMPublishedFileUpdated::file_size() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishedFileUpdated.file_size)
  return _internal_file_size();
}
inline void CMsgClientUCMPublishedFileUpdated::_internal_set_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  file_size_ = value;
}
inline void CMsgClientUCMPublishedFileUpdated::set_file_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_size(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishedFileUpdated.file_size)
}

// optional bool is_depot_content = 6;
inline bool CMsgClientUCMPublishedFileUpdated::_internal_has_is_depot_content() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishedFileUpdated::has_is_depot_content() const {
  return _internal_has_is_depot_content();
}
inline void CMsgClientUCMPublishedFileUpdated::clear_is_depot_content() {
  is_depot_content_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CMsgClientUCMPublishedFileUpdated::_internal_is_depot_content() const {
  return is_depot_content_;
}
inline bool CMsgClientUCMPublishedFileUpdated::is_depot_content() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishedFileUpdated.is_depot_content)
  return _internal_is_depot_content();
}
inline void CMsgClientUCMPublishedFileUpdated::_internal_set_is_depot_content(bool value) {
  _has_bits_[0] |= 0x00000020u;
  is_depot_content_ = value;
}
inline void CMsgClientUCMPublishedFileUpdated::set_is_depot_content(bool value) {
  _internal_set_is_depot_content(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishedFileUpdated.is_depot_content)
}

// optional uint32 revision = 7;
inline bool CMsgClientUCMPublishedFileUpdated::_internal_has_revision() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientUCMPublishedFileUpdated::has_revision() const {
  return _internal_has_revision();
}
inline void CMsgClientUCMPublishedFileUpdated::clear_revision() {
  revision_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMPublishedFileUpdated::_internal_revision() const {
  return revision_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMPublishedFileUpdated::revision() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMPublishedFileUpdated.revision)
  return _internal_revision();
}
inline void CMsgClientUCMPublishedFileUpdated::_internal_set_revision(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  revision_ = value;
}
inline void CMsgClientUCMPublishedFileUpdated::set_revision(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_revision(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMPublishedFileUpdated.revision)
}

// -------------------------------------------------------------------

// CMsgClientWorkshopItemChangesRequest

// optional uint32 app_id = 1;
inline bool CMsgClientWorkshopItemChangesRequest::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientWorkshopItemChangesRequest::has_app_id() const {
  return _internal_has_app_id();
}
inline void CMsgClientWorkshopItemChangesRequest::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWorkshopItemChangesRequest::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWorkshopItemChangesRequest::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientWorkshopItemChangesRequest.app_id)
  return _internal_app_id();
}
inline void CMsgClientWorkshopItemChangesRequest::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  app_id_ = value;
}
inline void CMsgClientWorkshopItemChangesRequest::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientWorkshopItemChangesRequest.app_id)
}

// optional uint32 last_time_updated = 2;
inline bool CMsgClientWorkshopItemChangesRequest::_internal_has_last_time_updated() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientWorkshopItemChangesRequest::has_last_time_updated() const {
  return _internal_has_last_time_updated();
}
inline void CMsgClientWorkshopItemChangesRequest::clear_last_time_updated() {
  last_time_updated_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWorkshopItemChangesRequest::_internal_last_time_updated() const {
  return last_time_updated_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWorkshopItemChangesRequest::last_time_updated() const {
  // @@protoc_insertion_point(field_get:CMsgClientWorkshopItemChangesRequest.last_time_updated)
  return _internal_last_time_updated();
}
inline void CMsgClientWorkshopItemChangesRequest::_internal_set_last_time_updated(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  last_time_updated_ = value;
}
inline void CMsgClientWorkshopItemChangesRequest::set_last_time_updated(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_time_updated(value);
  // @@protoc_insertion_point(field_set:CMsgClientWorkshopItemChangesRequest.last_time_updated)
}

// optional uint32 num_items_needed = 3;
inline bool CMsgClientWorkshopItemChangesRequest::_internal_has_num_items_needed() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientWorkshopItemChangesRequest::has_num_items_needed() const {
  return _internal_has_num_items_needed();
}
inline void CMsgClientWorkshopItemChangesRequest::clear_num_items_needed() {
  num_items_needed_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWorkshopItemChangesRequest::_internal_num_items_needed() const {
  return num_items_needed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWorkshopItemChangesRequest::num_items_needed() const {
  // @@protoc_insertion_point(field_get:CMsgClientWorkshopItemChangesRequest.num_items_needed)
  return _internal_num_items_needed();
}
inline void CMsgClientWorkshopItemChangesRequest::_internal_set_num_items_needed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  num_items_needed_ = value;
}
inline void CMsgClientWorkshopItemChangesRequest::set_num_items_needed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num_items_needed(value);
  // @@protoc_insertion_point(field_set:CMsgClientWorkshopItemChangesRequest.num_items_needed)
}

// -------------------------------------------------------------------

// CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo

// optional fixed64 published_file_id = 1;
inline bool CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::_internal_has_published_file_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::has_published_file_id() const {
  return _internal_has_published_file_id();
}
inline void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::clear_published_file_id() {
  published_file_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::_internal_published_file_id() const {
  return published_file_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::published_file_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo.published_file_id)
  return _internal_published_file_id();
}
inline void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::_internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  published_file_id_ = value;
}
inline void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_published_file_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo.published_file_id)
}

// optional uint32 time_updated = 2;
inline bool CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::_internal_has_time_updated() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::has_time_updated() const {
  return _internal_has_time_updated();
}
inline void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::clear_time_updated() {
  time_updated_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::_internal_time_updated() const {
  return time_updated_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::time_updated() const {
  // @@protoc_insertion_point(field_get:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo.time_updated)
  return _internal_time_updated();
}
inline void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::_internal_set_time_updated(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  time_updated_ = value;
}
inline void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::set_time_updated(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_time_updated(value);
  // @@protoc_insertion_point(field_set:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo.time_updated)
}

// optional fixed64 manifest_id = 3;
inline bool CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::_internal_has_manifest_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::has_manifest_id() const {
  return _internal_has_manifest_id();
}
inline void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::clear_manifest_id() {
  manifest_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::_internal_manifest_id() const {
  return manifest_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::manifest_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo.manifest_id)
  return _internal_manifest_id();
}
inline void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::_internal_set_manifest_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  manifest_id_ = value;
}
inline void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::set_manifest_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_manifest_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo.manifest_id)
}

// -------------------------------------------------------------------

// CMsgClientWorkshopItemChangesResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientWorkshopItemChangesResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientWorkshopItemChangesResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientWorkshopItemChangesResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientWorkshopItemChangesResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientWorkshopItemChangesResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientWorkshopItemChangesResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientWorkshopItemChangesResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  eresult_ = value;
}
inline void CMsgClientWorkshopItemChangesResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientWorkshopItemChangesResponse.eresult)
}

// optional uint32 update_time = 2;
inline bool CMsgClientWorkshopItemChangesResponse::_internal_has_update_time() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientWorkshopItemChangesResponse::has_update_time() const {
  return _internal_has_update_time();
}
inline void CMsgClientWorkshopItemChangesResponse::clear_update_time() {
  update_time_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWorkshopItemChangesResponse::_internal_update_time() const {
  return update_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWorkshopItemChangesResponse::update_time() const {
  // @@protoc_insertion_point(field_get:CMsgClientWorkshopItemChangesResponse.update_time)
  return _internal_update_time();
}
inline void CMsgClientWorkshopItemChangesResponse::_internal_set_update_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  update_time_ = value;
}
inline void CMsgClientWorkshopItemChangesResponse::set_update_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_update_time(value);
  // @@protoc_insertion_point(field_set:CMsgClientWorkshopItemChangesResponse.update_time)
}

// repeated .CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo workshop_items = 5;
inline int CMsgClientWorkshopItemChangesResponse::_internal_workshop_items_size() const {
  return workshop_items_.size();
}
inline int CMsgClientWorkshopItemChangesResponse::workshop_items_size() const {
  return _internal_workshop_items_size();
}
inline void CMsgClientWorkshopItemChangesResponse::clear_workshop_items() {
  workshop_items_.Clear();
}
inline ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* CMsgClientWorkshopItemChangesResponse::mutable_workshop_items(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientWorkshopItemChangesResponse.workshop_items)
  return workshop_items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo >*
CMsgClientWorkshopItemChangesResponse::mutable_workshop_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientWorkshopItemChangesResponse.workshop_items)
  return &workshop_items_;
}
inline const ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& CMsgClientWorkshopItemChangesResponse::_internal_workshop_items(int index) const {
  return workshop_items_.Get(index);
}
inline const ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& CMsgClientWorkshopItemChangesResponse::workshop_items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientWorkshopItemChangesResponse.workshop_items)
  return _internal_workshop_items(index);
}
inline ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* CMsgClientWorkshopItemChangesResponse::_internal_add_workshop_items() {
  return workshop_items_.Add();
}
inline ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* CMsgClientWorkshopItemChangesResponse::add_workshop_items() {
  // @@protoc_insertion_point(field_add:CMsgClientWorkshopItemChangesResponse.workshop_items)
  return _internal_add_workshop_items();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo >&
CMsgClientWorkshopItemChangesResponse::workshop_items() const {
  // @@protoc_insertion_point(field_list:CMsgClientWorkshopItemChangesResponse.workshop_items)
  return workshop_items_;
}

// -------------------------------------------------------------------

// CMsgClientUCMSetUserPublishedFileAction

// optional fixed64 published_file_id = 1;
inline bool CMsgClientUCMSetUserPublishedFileAction::_internal_has_published_file_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMSetUserPublishedFileAction::has_published_file_id() const {
  return _internal_has_published_file_id();
}
inline void CMsgClientUCMSetUserPublishedFileAction::clear_published_file_id() {
  published_file_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMSetUserPublishedFileAction::_internal_published_file_id() const {
  return published_file_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMSetUserPublishedFileAction::published_file_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMSetUserPublishedFileAction.published_file_id)
  return _internal_published_file_id();
}
inline void CMsgClientUCMSetUserPublishedFileAction::_internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  published_file_id_ = value;
}
inline void CMsgClientUCMSetUserPublishedFileAction::set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_published_file_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMSetUserPublishedFileAction.published_file_id)
}

// optional uint32 app_id = 2;
inline bool CMsgClientUCMSetUserPublishedFileAction::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUCMSetUserPublishedFileAction::has_app_id() const {
  return _internal_has_app_id();
}
inline void CMsgClientUCMSetUserPublishedFileAction::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMSetUserPublishedFileAction::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMSetUserPublishedFileAction::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMSetUserPublishedFileAction.app_id)
  return _internal_app_id();
}
inline void CMsgClientUCMSetUserPublishedFileAction::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  app_id_ = value;
}
inline void CMsgClientUCMSetUserPublishedFileAction::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMSetUserPublishedFileAction.app_id)
}

// optional int32 action = 3;
inline bool CMsgClientUCMSetUserPublishedFileAction::_internal_has_action() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientUCMSetUserPublishedFileAction::has_action() const {
  return _internal_has_action();
}
inline void CMsgClientUCMSetUserPublishedFileAction::clear_action() {
  action_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMSetUserPublishedFileAction::_internal_action() const {
  return action_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMSetUserPublishedFileAction::action() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMSetUserPublishedFileAction.action)
  return _internal_action();
}
inline void CMsgClientUCMSetUserPublishedFileAction::_internal_set_action(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  action_ = value;
}
inline void CMsgClientUCMSetUserPublishedFileAction::set_action(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMSetUserPublishedFileAction.action)
}

// -------------------------------------------------------------------

// CMsgClientUCMSetUserPublishedFileActionResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientUCMSetUserPublishedFileActionResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMSetUserPublishedFileActionResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientUCMSetUserPublishedFileActionResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMSetUserPublishedFileActionResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMSetUserPublishedFileActionResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMSetUserPublishedFileActionResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientUCMSetUserPublishedFileActionResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
}
inline void CMsgClientUCMSetUserPublishedFileActionResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMSetUserPublishedFileActionResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgClientUCMEnumeratePublishedFilesByUserAction

// optional uint32 app_id = 1;
inline bool CMsgClientUCMEnumeratePublishedFilesByUserAction::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMEnumeratePublishedFilesByUserAction::has_app_id() const {
  return _internal_has_app_id();
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserAction::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumeratePublishedFilesByUserAction::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumeratePublishedFilesByUserAction::app_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumeratePublishedFilesByUserAction.app_id)
  return _internal_app_id();
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserAction::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  app_id_ = value;
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserAction::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMEnumeratePublishedFilesByUserAction.app_id)
}

// optional uint32 start_index = 2;
inline bool CMsgClientUCMEnumeratePublishedFilesByUserAction::_internal_has_start_index() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUCMEnumeratePublishedFilesByUserAction::has_start_index() const {
  return _internal_has_start_index();
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserAction::clear_start_index() {
  start_index_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumeratePublishedFilesByUserAction::_internal_start_index() const {
  return start_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumeratePublishedFilesByUserAction::start_index() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumeratePublishedFilesByUserAction.start_index)
  return _internal_start_index();
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserAction::_internal_set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  start_index_ = value;
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserAction::set_start_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start_index(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMEnumeratePublishedFilesByUserAction.start_index)
}

// optional int32 action = 3;
inline bool CMsgClientUCMEnumeratePublishedFilesByUserAction::_internal_has_action() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientUCMEnumeratePublishedFilesByUserAction::has_action() const {
  return _internal_has_action();
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserAction::clear_action() {
  action_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMEnumeratePublishedFilesByUserAction::_internal_action() const {
  return action_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMEnumeratePublishedFilesByUserAction::action() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumeratePublishedFilesByUserAction.action)
  return _internal_action();
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserAction::_internal_set_action(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  action_ = value;
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserAction::set_action(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMEnumeratePublishedFilesByUserAction.action)
}

// -------------------------------------------------------------------

// CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId

// optional fixed64 published_file_id = 1;
inline bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::_internal_has_published_file_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::has_published_file_id() const {
  return _internal_has_published_file_id();
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::clear_published_file_id() {
  published_file_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::_internal_published_file_id() const {
  return published_file_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::published_file_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId.published_file_id)
  return _internal_published_file_id();
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::_internal_set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  published_file_id_ = value;
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::set_published_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_published_file_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId.published_file_id)
}

// optional fixed32 rtime_time_stamp = 2 [default = 0];
inline bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::_internal_has_rtime_time_stamp() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::has_rtime_time_stamp() const {
  return _internal_has_rtime_time_stamp();
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::clear_rtime_time_stamp() {
  rtime_time_stamp_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::_internal_rtime_time_stamp() const {
  return rtime_time_stamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::rtime_time_stamp() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId.rtime_time_stamp)
  return _internal_rtime_time_stamp();
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::_internal_set_rtime_time_stamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  rtime_time_stamp_ = value;
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::set_rtime_time_stamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rtime_time_stamp(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId.rtime_time_stamp)
}

// -------------------------------------------------------------------

// CMsgClientUCMEnumeratePublishedFilesByUserActionResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.eresult)
  return _internal_eresult();
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  eresult_ = value;
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.eresult)
}

// repeated .CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId published_files = 2;
inline int CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::_internal_published_files_size() const {
  return published_files_.size();
}
inline int CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::published_files_size() const {
  return _internal_published_files_size();
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::clear_published_files() {
  published_files_.Clear();
}
inline ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::mutable_published_files(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.published_files)
  return published_files_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId >*
CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::mutable_published_files() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.published_files)
  return &published_files_;
}
inline const ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::_internal_published_files(int index) const {
  return published_files_.Get(index);
}
inline const ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::published_files(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.published_files)
  return _internal_published_files(index);
}
inline ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::_internal_add_published_files() {
  return published_files_.Add();
}
inline ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::add_published_files() {
  // @@protoc_insertion_point(field_add:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.published_files)
  return _internal_add_published_files();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId >&
CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::published_files() const {
  // @@protoc_insertion_point(field_list:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.published_files)
  return published_files_;
}

// optional uint32 total_results = 3;
inline bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::_internal_has_total_results() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::has_total_results() const {
  return _internal_has_total_results();
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::clear_total_results() {
  total_results_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::_internal_total_results() const {
  return total_results_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::total_results() const {
  // @@protoc_insertion_point(field_get:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.total_results)
  return _internal_total_results();
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::_internal_set_total_results(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  total_results_ = value;
}
inline void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::set_total_results(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_total_results(value);
  // @@protoc_insertion_point(field_set:CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.total_results)
}

// -------------------------------------------------------------------

// CMsgClientScreenshotsChanged

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_steammessages_5fclientserver_5fucm_2eproto
