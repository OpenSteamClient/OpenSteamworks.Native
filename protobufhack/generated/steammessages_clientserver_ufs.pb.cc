// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_clientserver_ufs.proto

#include "steammessages_clientserver_ufs.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr CMsgClientUFSGetUGCDetails::CMsgClientUFSGetUGCDetails(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hcontent_(PROTOBUF_ULONGLONG(18446744073709551615)){}
struct CMsgClientUFSGetUGCDetailsDefaultTypeInternal {
  constexpr CMsgClientUFSGetUGCDetailsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUFSGetUGCDetailsDefaultTypeInternal() {}
  union {
    CMsgClientUFSGetUGCDetails _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUFSGetUGCDetailsDefaultTypeInternal _CMsgClientUFSGetUGCDetails_default_instance_;
constexpr CMsgClientUFSGetUGCDetailsResponse::CMsgClientUFSGetUGCDetailsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , filename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rangechechost_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , file_encoded_sha1_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , app_id_(0u)
  , file_size_(0u)
  , steamid_creator_(PROTOBUF_ULONGLONG(0))
  , compressed_file_size_(0u)
  , eresult_(2){}
struct CMsgClientUFSGetUGCDetailsResponseDefaultTypeInternal {
  constexpr CMsgClientUFSGetUGCDetailsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUFSGetUGCDetailsResponseDefaultTypeInternal() {}
  union {
    CMsgClientUFSGetUGCDetailsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUFSGetUGCDetailsResponseDefaultTypeInternal _CMsgClientUFSGetUGCDetailsResponse_default_instance_;
constexpr CMsgClientUFSGetSingleFileInfo::CMsgClientUFSGetSingleFileInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : file_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , app_id_(0u){}
struct CMsgClientUFSGetSingleFileInfoDefaultTypeInternal {
  constexpr CMsgClientUFSGetSingleFileInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUFSGetSingleFileInfoDefaultTypeInternal() {}
  union {
    CMsgClientUFSGetSingleFileInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUFSGetSingleFileInfoDefaultTypeInternal _CMsgClientUFSGetSingleFileInfo_default_instance_;
constexpr CMsgClientUFSGetSingleFileInfoResponse::CMsgClientUFSGetSingleFileInfoResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : file_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sha_file_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , app_id_(0u)
  , raw_file_size_(0u)
  , time_stamp_(PROTOBUF_ULONGLONG(0))
  , is_explicit_delete_(false)
  , eresult_(2){}
struct CMsgClientUFSGetSingleFileInfoResponseDefaultTypeInternal {
  constexpr CMsgClientUFSGetSingleFileInfoResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUFSGetSingleFileInfoResponseDefaultTypeInternal() {}
  union {
    CMsgClientUFSGetSingleFileInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUFSGetSingleFileInfoResponseDefaultTypeInternal _CMsgClientUFSGetSingleFileInfoResponse_default_instance_;
constexpr CMsgClientUFSShareFile::CMsgClientUFSShareFile(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : file_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , app_id_(0u){}
struct CMsgClientUFSShareFileDefaultTypeInternal {
  constexpr CMsgClientUFSShareFileDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUFSShareFileDefaultTypeInternal() {}
  union {
    CMsgClientUFSShareFile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUFSShareFileDefaultTypeInternal _CMsgClientUFSShareFile_default_instance_;
constexpr CMsgClientUFSShareFileResponse::CMsgClientUFSShareFileResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : eresult_(2)
  , hcontent_(PROTOBUF_ULONGLONG(18446744073709551615)){}
struct CMsgClientUFSShareFileResponseDefaultTypeInternal {
  constexpr CMsgClientUFSShareFileResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientUFSShareFileResponseDefaultTypeInternal() {}
  union {
    CMsgClientUFSShareFileResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientUFSShareFileResponseDefaultTypeInternal _CMsgClientUFSShareFileResponse_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_steammessages_5fclientserver_5fufs_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_steammessages_5fclientserver_5fufs_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_steammessages_5fclientserver_5fufs_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_steammessages_5fclientserver_5fufs_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetUGCDetails, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetUGCDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetUGCDetails, hcontent_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, url_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, app_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, filename_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, steamid_creator_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, file_size_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, compressed_file_size_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, rangechechost_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetUGCDetailsResponse, file_encoded_sha1_),
  8,
  0,
  4,
  1,
  6,
  5,
  7,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfo, app_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfo, file_name_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfoResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfoResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfoResponse, app_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfoResponse, file_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfoResponse, sha_file_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfoResponse, time_stamp_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfoResponse, raw_file_size_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSGetSingleFileInfoResponse, is_explicit_delete_),
  6,
  2,
  0,
  1,
  4,
  3,
  5,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSShareFile, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSShareFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSShareFile, app_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSShareFile, file_name_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSShareFileResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSShareFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSShareFileResponse, eresult_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientUFSShareFileResponse, hcontent_),
  0,
  1,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::CMsgClientUFSGetUGCDetails)},
  { 7, 21, sizeof(::CMsgClientUFSGetUGCDetailsResponse)},
  { 30, 37, sizeof(::CMsgClientUFSGetSingleFileInfo)},
  { 39, 51, sizeof(::CMsgClientUFSGetSingleFileInfoResponse)},
  { 58, 65, sizeof(::CMsgClientUFSShareFile)},
  { 67, 74, sizeof(::CMsgClientUFSShareFileResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUFSGetUGCDetails_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUFSGetUGCDetailsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUFSGetSingleFileInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUFSGetSingleFileInfoResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUFSShareFile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientUFSShareFileResponse_default_instance_),
};

const char descriptor_table_protodef_steammessages_5fclientserver_5fufs_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n$steammessages_clientserver_ufs.proto\032 "
  "google/protobuf/descriptor.proto\032\030steamm"
  "essages_base.proto\"D\n\032CMsgClientUFSGetUG"
  "CDetails\022&\n\010hcontent\030\001 \001(\006:\024184467440737"
  "09551615\"\343\001\n\"CMsgClientUFSGetUGCDetailsR"
  "esponse\022\022\n\007eresult\030\001 \001(\005:\0012\022\013\n\003url\030\002 \001(\t"
  "\022\016\n\006app_id\030\003 \001(\r\022\020\n\010filename\030\004 \001(\t\022\027\n\017st"
  "eamid_creator\030\005 \001(\006\022\021\n\tfile_size\030\006 \001(\r\022\034"
  "\n\024compressed_file_size\030\007 \001(\r\022\025\n\rrangeche"
  "chost\030\010 \001(\t\022\031\n\021file_encoded_sha1\030\t \001(\t\"C"
  "\n\036CMsgClientUFSGetSingleFileInfo\022\016\n\006app_"
  "id\030\001 \001(\r\022\021\n\tfile_name\030\002 \001(\t\"\270\001\n&CMsgClie"
  "ntUFSGetSingleFileInfoResponse\022\022\n\007eresul"
  "t\030\001 \001(\005:\0012\022\016\n\006app_id\030\002 \001(\r\022\021\n\tfile_name\030"
  "\003 \001(\t\022\020\n\010sha_file\030\004 \001(\014\022\022\n\ntime_stamp\030\005 "
  "\001(\004\022\025\n\rraw_file_size\030\006 \001(\r\022\032\n\022is_explici"
  "t_delete\030\007 \001(\010\";\n\026CMsgClientUFSShareFile"
  "\022\016\n\006app_id\030\001 \001(\r\022\021\n\tfile_name\030\002 \001(\t\"\\\n\036C"
  "MsgClientUFSShareFileResponse\022\022\n\007eresult"
  "\030\001 \001(\005:\0012\022&\n\010hcontent\030\002 \001(\006:\02418446744073"
  "709551615B\037H\001\200\001\000\252\002\027OpenSteamworks.Protob"
  "uf"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_steammessages_5fclientserver_5fufs_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
  &::descriptor_table_steammessages_5fbase_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_steammessages_5fclientserver_5fufs_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_steammessages_5fclientserver_5fufs_2eproto = {
  false, false, 842, descriptor_table_protodef_steammessages_5fclientserver_5fufs_2eproto, "steammessages_clientserver_ufs.proto", 
  &descriptor_table_steammessages_5fclientserver_5fufs_2eproto_once, descriptor_table_steammessages_5fclientserver_5fufs_2eproto_deps, 2, 6,
  schemas, file_default_instances, TableStruct_steammessages_5fclientserver_5fufs_2eproto::offsets,
  file_level_metadata_steammessages_5fclientserver_5fufs_2eproto, file_level_enum_descriptors_steammessages_5fclientserver_5fufs_2eproto, file_level_service_descriptors_steammessages_5fclientserver_5fufs_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_steammessages_5fclientserver_5fufs_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_steammessages_5fclientserver_5fufs_2eproto);
  return descriptor_table_steammessages_5fclientserver_5fufs_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_steammessages_5fclientserver_5fufs_2eproto(&descriptor_table_steammessages_5fclientserver_5fufs_2eproto);

// ===================================================================

class CMsgClientUFSGetUGCDetails::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUFSGetUGCDetails>()._has_bits_);
  static void set_has_hcontent(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientUFSGetUGCDetails::CMsgClientUFSGetUGCDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUFSGetUGCDetails)
}
CMsgClientUFSGetUGCDetails::CMsgClientUFSGetUGCDetails(const CMsgClientUFSGetUGCDetails& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hcontent_ = from.hcontent_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSGetUGCDetails)
}

void CMsgClientUFSGetUGCDetails::SharedCtor() {
hcontent_ = PROTOBUF_ULONGLONG(18446744073709551615);
}

CMsgClientUFSGetUGCDetails::~CMsgClientUFSGetUGCDetails() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSGetUGCDetails)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUFSGetUGCDetails::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientUFSGetUGCDetails::ArenaDtor(void* object) {
  CMsgClientUFSGetUGCDetails* _this = reinterpret_cast< CMsgClientUFSGetUGCDetails* >(object);
  (void)_this;
}
void CMsgClientUFSGetUGCDetails::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUFSGetUGCDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUFSGetUGCDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSGetUGCDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hcontent_ = PROTOBUF_ULONGLONG(18446744073709551615);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUFSGetUGCDetails::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 hcontent = 1 [default = 18446744073709551615];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_hcontent(&has_bits);
          hcontent_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUFSGetUGCDetails::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSGetUGCDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 hcontent = 1 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_hcontent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSGetUGCDetails)
  return target;
}

size_t CMsgClientUFSGetUGCDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSGetUGCDetails)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 hcontent = 1 [default = 18446744073709551615];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSGetUGCDetails::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSGetUGCDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSGetUGCDetails* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUFSGetUGCDetails>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSGetUGCDetails)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSGetUGCDetails)
    MergeFrom(*source);
  }
}

void CMsgClientUFSGetUGCDetails::MergeFrom(const CMsgClientUFSGetUGCDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSGetUGCDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_hcontent()) {
    _internal_set_hcontent(from._internal_hcontent());
  }
}

void CMsgClientUFSGetUGCDetails::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSGetUGCDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSGetUGCDetails::CopyFrom(const CMsgClientUFSGetUGCDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSGetUGCDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSGetUGCDetails::IsInitialized() const {
  return true;
}

void CMsgClientUFSGetUGCDetails::InternalSwap(CMsgClientUFSGetUGCDetails* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(hcontent_, other->hcontent_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUFSGetUGCDetails::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUFSGetUGCDetailsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUFSGetUGCDetailsResponse>()._has_bits_);
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_url(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_filename(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_steamid_creator(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_file_size(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_compressed_file_size(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_rangechechost(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_file_encoded_sha1(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgClientUFSGetUGCDetailsResponse::CMsgClientUFSGetUGCDetailsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUFSGetUGCDetailsResponse)
}
CMsgClientUFSGetUGCDetailsResponse::CMsgClientUFSGetUGCDetailsResponse(const CMsgClientUFSGetUGCDetailsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_url()) {
    url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_url(), 
      GetArena());
  }
  filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_filename()) {
    filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_filename(), 
      GetArena());
  }
  rangechechost_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_rangechechost()) {
    rangechechost_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rangechechost(), 
      GetArena());
  }
  file_encoded_sha1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_file_encoded_sha1()) {
    file_encoded_sha1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_file_encoded_sha1(), 
      GetArena());
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSGetUGCDetailsResponse)
}

void CMsgClientUFSGetUGCDetailsResponse::SharedCtor() {
url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
rangechechost_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
file_encoded_sha1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&app_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&compressed_file_size_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(compressed_file_size_));
eresult_ = 2;
}

CMsgClientUFSGetUGCDetailsResponse::~CMsgClientUFSGetUGCDetailsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSGetUGCDetailsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUFSGetUGCDetailsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rangechechost_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  file_encoded_sha1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUFSGetUGCDetailsResponse::ArenaDtor(void* object) {
  CMsgClientUFSGetUGCDetailsResponse* _this = reinterpret_cast< CMsgClientUFSGetUGCDetailsResponse* >(object);
  (void)_this;
}
void CMsgClientUFSGetUGCDetailsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUFSGetUGCDetailsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUFSGetUGCDetailsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSGetUGCDetailsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      url_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      filename_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      rangechechost_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      file_encoded_sha1_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&compressed_file_size_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(compressed_file_size_));
  }
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUFSGetUGCDetailsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_eresult(&has_bits);
          eresult_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string url = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUFSGetUGCDetailsResponse.url");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 app_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_app_id(&has_bits);
          app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string filename = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_filename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUFSGetUGCDetailsResponse.filename");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed64 steamid_creator = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          _Internal::set_has_steamid_creator(&has_bits);
          steamid_creator_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional uint32 file_size = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_file_size(&has_bits);
          file_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 compressed_file_size = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_compressed_file_size(&has_bits);
          compressed_file_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string rangechechost = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_rangechechost();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUFSGetUGCDetailsResponse.rangechechost");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string file_encoded_sha1 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_file_encoded_sha1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUFSGetUGCDetailsResponse.file_encoded_sha1");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUFSGetUGCDetailsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSGetUGCDetailsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_eresult(), target);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetUGCDetailsResponse.url");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_url(), target);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_app_id(), target);
  }

  // optional string filename = 4;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_filename().data(), static_cast<int>(this->_internal_filename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetUGCDetailsResponse.filename");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_filename(), target);
  }

  // optional fixed64 steamid_creator = 5;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(5, this->_internal_steamid_creator(), target);
  }

  // optional uint32 file_size = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_file_size(), target);
  }

  // optional uint32 compressed_file_size = 7;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_compressed_file_size(), target);
  }

  // optional string rangechechost = 8;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_rangechechost().data(), static_cast<int>(this->_internal_rangechechost().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetUGCDetailsResponse.rangechechost");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_rangechechost(), target);
  }

  // optional string file_encoded_sha1 = 9;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_file_encoded_sha1().data(), static_cast<int>(this->_internal_file_encoded_sha1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetUGCDetailsResponse.file_encoded_sha1");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_file_encoded_sha1(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSGetUGCDetailsResponse)
  return target;
}

size_t CMsgClientUFSGetUGCDetailsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSGetUGCDetailsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string url = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_url());
    }

    // optional string filename = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_filename());
    }

    // optional string rangechechost = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_rangechechost());
    }

    // optional string file_encoded_sha1 = 9;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_file_encoded_sha1());
    }

    // optional uint32 app_id = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_app_id());
    }

    // optional uint32 file_size = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_file_size());
    }

    // optional fixed64 steamid_creator = 5;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 8;
    }

    // optional uint32 compressed_file_size = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_compressed_file_size());
    }

  }
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_eresult());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSGetUGCDetailsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSGetUGCDetailsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSGetUGCDetailsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUFSGetUGCDetailsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSGetUGCDetailsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSGetUGCDetailsResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUFSGetUGCDetailsResponse::MergeFrom(const CMsgClientUFSGetUGCDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSGetUGCDetailsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_url(from._internal_url());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_filename(from._internal_filename());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_rangechechost(from._internal_rangechechost());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_file_encoded_sha1(from._internal_file_encoded_sha1());
    }
    if (cached_has_bits & 0x00000010u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00000040u) {
      steamid_creator_ = from.steamid_creator_;
    }
    if (cached_has_bits & 0x00000080u) {
      compressed_file_size_ = from.compressed_file_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _internal_set_eresult(from._internal_eresult());
  }
}

void CMsgClientUFSGetUGCDetailsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSGetUGCDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSGetUGCDetailsResponse::CopyFrom(const CMsgClientUFSGetUGCDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSGetUGCDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSGetUGCDetailsResponse::IsInitialized() const {
  return true;
}

void CMsgClientUFSGetUGCDetailsResponse::InternalSwap(CMsgClientUFSGetUGCDetailsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  url_.Swap(&other->url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  filename_.Swap(&other->filename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  rangechechost_.Swap(&other->rangechechost_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  file_encoded_sha1_.Swap(&other->file_encoded_sha1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientUFSGetUGCDetailsResponse, compressed_file_size_)
      + sizeof(CMsgClientUFSGetUGCDetailsResponse::compressed_file_size_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientUFSGetUGCDetailsResponse, app_id_)>(
          reinterpret_cast<char*>(&app_id_),
          reinterpret_cast<char*>(&other->app_id_));
  swap(eresult_, other->eresult_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUFSGetUGCDetailsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUFSGetSingleFileInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUFSGetSingleFileInfo>()._has_bits_);
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_file_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientUFSGetSingleFileInfo::CMsgClientUFSGetSingleFileInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUFSGetSingleFileInfo)
}
CMsgClientUFSGetSingleFileInfo::CMsgClientUFSGetSingleFileInfo(const CMsgClientUFSGetSingleFileInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_file_name()) {
    file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_file_name(), 
      GetArena());
  }
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSGetSingleFileInfo)
}

void CMsgClientUFSGetSingleFileInfo::SharedCtor() {
file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
app_id_ = 0u;
}

CMsgClientUFSGetSingleFileInfo::~CMsgClientUFSGetSingleFileInfo() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSGetSingleFileInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUFSGetSingleFileInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  file_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUFSGetSingleFileInfo::ArenaDtor(void* object) {
  CMsgClientUFSGetSingleFileInfo* _this = reinterpret_cast< CMsgClientUFSGetSingleFileInfo* >(object);
  (void)_this;
}
void CMsgClientUFSGetSingleFileInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUFSGetSingleFileInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUFSGetSingleFileInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSGetSingleFileInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    file_name_.ClearNonDefaultToEmpty();
  }
  app_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUFSGetSingleFileInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_app_id(&has_bits);
          app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string file_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_file_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUFSGetSingleFileInfo.file_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUFSGetSingleFileInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSGetSingleFileInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_app_id(), target);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_file_name().data(), static_cast<int>(this->_internal_file_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetSingleFileInfo.file_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_file_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSGetSingleFileInfo)
  return target;
}

size_t CMsgClientUFSGetSingleFileInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSGetSingleFileInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string file_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_file_name());
    }

    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_app_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSGetSingleFileInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSGetSingleFileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSGetSingleFileInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUFSGetSingleFileInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSGetSingleFileInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSGetSingleFileInfo)
    MergeFrom(*source);
  }
}

void CMsgClientUFSGetSingleFileInfo::MergeFrom(const CMsgClientUFSGetSingleFileInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSGetSingleFileInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_file_name(from._internal_file_name());
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUFSGetSingleFileInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSGetSingleFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSGetSingleFileInfo::CopyFrom(const CMsgClientUFSGetSingleFileInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSGetSingleFileInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSGetSingleFileInfo::IsInitialized() const {
  return true;
}

void CMsgClientUFSGetSingleFileInfo::InternalSwap(CMsgClientUFSGetSingleFileInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  file_name_.Swap(&other->file_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(app_id_, other->app_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUFSGetSingleFileInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUFSGetSingleFileInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUFSGetSingleFileInfoResponse>()._has_bits_);
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_file_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_sha_file(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_time_stamp(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_raw_file_size(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_is_explicit_delete(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

CMsgClientUFSGetSingleFileInfoResponse::CMsgClientUFSGetSingleFileInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUFSGetSingleFileInfoResponse)
}
CMsgClientUFSGetSingleFileInfoResponse::CMsgClientUFSGetSingleFileInfoResponse(const CMsgClientUFSGetSingleFileInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_file_name()) {
    file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_file_name(), 
      GetArena());
  }
  sha_file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_sha_file()) {
    sha_file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sha_file(), 
      GetArena());
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSGetSingleFileInfoResponse)
}

void CMsgClientUFSGetSingleFileInfoResponse::SharedCtor() {
file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
sha_file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&app_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&is_explicit_delete_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(is_explicit_delete_));
eresult_ = 2;
}

CMsgClientUFSGetSingleFileInfoResponse::~CMsgClientUFSGetSingleFileInfoResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSGetSingleFileInfoResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUFSGetSingleFileInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  file_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sha_file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUFSGetSingleFileInfoResponse::ArenaDtor(void* object) {
  CMsgClientUFSGetSingleFileInfoResponse* _this = reinterpret_cast< CMsgClientUFSGetSingleFileInfoResponse* >(object);
  (void)_this;
}
void CMsgClientUFSGetSingleFileInfoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUFSGetSingleFileInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUFSGetSingleFileInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSGetSingleFileInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      file_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      sha_file_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_explicit_delete_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(is_explicit_delete_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUFSGetSingleFileInfoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_eresult(&has_bits);
          eresult_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 app_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_app_id(&has_bits);
          app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string file_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_file_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUFSGetSingleFileInfoResponse.file_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes sha_file = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_sha_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 time_stamp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_time_stamp(&has_bits);
          time_stamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 raw_file_size = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_raw_file_size(&has_bits);
          raw_file_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_explicit_delete = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_is_explicit_delete(&has_bits);
          is_explicit_delete_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUFSGetSingleFileInfoResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSGetSingleFileInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_eresult(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_app_id(), target);
  }

  // optional string file_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_file_name().data(), static_cast<int>(this->_internal_file_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSGetSingleFileInfoResponse.file_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_file_name(), target);
  }

  // optional bytes sha_file = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_sha_file(), target);
  }

  // optional uint64 time_stamp = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_time_stamp(), target);
  }

  // optional uint32 raw_file_size = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_raw_file_size(), target);
  }

  // optional bool is_explicit_delete = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_is_explicit_delete(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSGetSingleFileInfoResponse)
  return target;
}

size_t CMsgClientUFSGetSingleFileInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSGetSingleFileInfoResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string file_name = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_file_name());
    }

    // optional bytes sha_file = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_sha_file());
    }

    // optional uint32 app_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_app_id());
    }

    // optional uint32 raw_file_size = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_raw_file_size());
    }

    // optional uint64 time_stamp = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_time_stamp());
    }

    // optional bool is_explicit_delete = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_eresult());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSGetSingleFileInfoResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSGetSingleFileInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSGetSingleFileInfoResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUFSGetSingleFileInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSGetSingleFileInfoResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSGetSingleFileInfoResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUFSGetSingleFileInfoResponse::MergeFrom(const CMsgClientUFSGetSingleFileInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSGetSingleFileInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_file_name(from._internal_file_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_sha_file(from._internal_sha_file());
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      raw_file_size_ = from.raw_file_size_;
    }
    if (cached_has_bits & 0x00000010u) {
      time_stamp_ = from.time_stamp_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_explicit_delete_ = from.is_explicit_delete_;
    }
    if (cached_has_bits & 0x00000040u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUFSGetSingleFileInfoResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSGetSingleFileInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSGetSingleFileInfoResponse::CopyFrom(const CMsgClientUFSGetSingleFileInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSGetSingleFileInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSGetSingleFileInfoResponse::IsInitialized() const {
  return true;
}

void CMsgClientUFSGetSingleFileInfoResponse::InternalSwap(CMsgClientUFSGetSingleFileInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  file_name_.Swap(&other->file_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sha_file_.Swap(&other->sha_file_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientUFSGetSingleFileInfoResponse, is_explicit_delete_)
      + sizeof(CMsgClientUFSGetSingleFileInfoResponse::is_explicit_delete_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientUFSGetSingleFileInfoResponse, app_id_)>(
          reinterpret_cast<char*>(&app_id_),
          reinterpret_cast<char*>(&other->app_id_));
  swap(eresult_, other->eresult_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUFSGetSingleFileInfoResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUFSShareFile::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUFSShareFile>()._has_bits_);
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_file_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientUFSShareFile::CMsgClientUFSShareFile(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUFSShareFile)
}
CMsgClientUFSShareFile::CMsgClientUFSShareFile(const CMsgClientUFSShareFile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_file_name()) {
    file_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_file_name(), 
      GetArena());
  }
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSShareFile)
}

void CMsgClientUFSShareFile::SharedCtor() {
file_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
app_id_ = 0u;
}

CMsgClientUFSShareFile::~CMsgClientUFSShareFile() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSShareFile)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUFSShareFile::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  file_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUFSShareFile::ArenaDtor(void* object) {
  CMsgClientUFSShareFile* _this = reinterpret_cast< CMsgClientUFSShareFile* >(object);
  (void)_this;
}
void CMsgClientUFSShareFile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUFSShareFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUFSShareFile::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSShareFile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    file_name_.ClearNonDefaultToEmpty();
  }
  app_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUFSShareFile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 app_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_app_id(&has_bits);
          app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string file_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_file_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientUFSShareFile.file_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUFSShareFile::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSShareFile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_app_id(), target);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_file_name().data(), static_cast<int>(this->_internal_file_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientUFSShareFile.file_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_file_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSShareFile)
  return target;
}

size_t CMsgClientUFSShareFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSShareFile)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string file_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_file_name());
    }

    // optional uint32 app_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_app_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSShareFile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSShareFile)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSShareFile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUFSShareFile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSShareFile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSShareFile)
    MergeFrom(*source);
  }
}

void CMsgClientUFSShareFile::MergeFrom(const CMsgClientUFSShareFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSShareFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_file_name(from._internal_file_name());
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUFSShareFile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSShareFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSShareFile::CopyFrom(const CMsgClientUFSShareFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSShareFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSShareFile::IsInitialized() const {
  return true;
}

void CMsgClientUFSShareFile::InternalSwap(CMsgClientUFSShareFile* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  file_name_.Swap(&other->file_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(app_id_, other->app_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUFSShareFile::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientUFSShareFileResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientUFSShareFileResponse>()._has_bits_);
  static void set_has_eresult(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hcontent(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientUFSShareFileResponse::CMsgClientUFSShareFileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientUFSShareFileResponse)
}
CMsgClientUFSShareFileResponse::CMsgClientUFSShareFileResponse(const CMsgClientUFSShareFileResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&eresult_, &from.eresult_,
    static_cast<size_t>(reinterpret_cast<char*>(&hcontent_) -
    reinterpret_cast<char*>(&eresult_)) + sizeof(hcontent_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientUFSShareFileResponse)
}

void CMsgClientUFSShareFileResponse::SharedCtor() {
eresult_ = 2;
hcontent_ = PROTOBUF_ULONGLONG(18446744073709551615);
}

CMsgClientUFSShareFileResponse::~CMsgClientUFSShareFileResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientUFSShareFileResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientUFSShareFileResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientUFSShareFileResponse::ArenaDtor(void* object) {
  CMsgClientUFSShareFileResponse* _this = reinterpret_cast< CMsgClientUFSShareFileResponse* >(object);
  (void)_this;
}
void CMsgClientUFSShareFileResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientUFSShareFileResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientUFSShareFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientUFSShareFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    eresult_ = 2;
    hcontent_ = PROTOBUF_ULONGLONG(18446744073709551615);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientUFSShareFileResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 eresult = 1 [default = 2];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_eresult(&has_bits);
          eresult_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed64 hcontent = 2 [default = 18446744073709551615];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_hcontent(&has_bits);
          hcontent_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientUFSShareFileResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientUFSShareFileResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_eresult(), target);
  }

  // optional fixed64 hcontent = 2 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(2, this->_internal_hcontent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientUFSShareFileResponse)
  return target;
}

size_t CMsgClientUFSShareFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientUFSShareFileResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional int32 eresult = 1 [default = 2];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_eresult());
    }

    // optional fixed64 hcontent = 2 [default = 18446744073709551615];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientUFSShareFileResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientUFSShareFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUFSShareFileResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientUFSShareFileResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientUFSShareFileResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientUFSShareFileResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUFSShareFileResponse::MergeFrom(const CMsgClientUFSShareFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientUFSShareFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000002u) {
      hcontent_ = from.hcontent_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUFSShareFileResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientUFSShareFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUFSShareFileResponse::CopyFrom(const CMsgClientUFSShareFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientUFSShareFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUFSShareFileResponse::IsInitialized() const {
  return true;
}

void CMsgClientUFSShareFileResponse::InternalSwap(CMsgClientUFSShareFileResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(eresult_, other->eresult_);
  swap(hcontent_, other->hcontent_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientUFSShareFileResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CMsgClientUFSGetUGCDetails* Arena::CreateMaybeMessage< ::CMsgClientUFSGetUGCDetails >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUFSGetUGCDetails >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUFSGetUGCDetailsResponse* Arena::CreateMaybeMessage< ::CMsgClientUFSGetUGCDetailsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUFSGetUGCDetailsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUFSGetSingleFileInfo* Arena::CreateMaybeMessage< ::CMsgClientUFSGetSingleFileInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUFSGetSingleFileInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUFSGetSingleFileInfoResponse* Arena::CreateMaybeMessage< ::CMsgClientUFSGetSingleFileInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUFSGetSingleFileInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUFSShareFile* Arena::CreateMaybeMessage< ::CMsgClientUFSShareFile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUFSShareFile >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientUFSShareFileResponse* Arena::CreateMaybeMessage< ::CMsgClientUFSShareFileResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientUFSShareFileResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
