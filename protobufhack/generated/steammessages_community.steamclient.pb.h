// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_community.steamclient.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_steammessages_5fcommunity_2esteamclient_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_steammessages_5fcommunity_2esteamclient_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
#include "steammessages_base.pb.h"
#include "steammessages_unified_base.steamclient.pb.h"
#include "enums.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fcommunity_2esteamclient_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fcommunity_2esteamclient_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[48]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(int index);
class CAppPriority;
struct CAppPriorityDefaultTypeInternal;
extern CAppPriorityDefaultTypeInternal _CAppPriority_default_instance_;
class CCommunity_ClearSinglePartnerEventsAppPriority_Request;
struct CCommunity_ClearSinglePartnerEventsAppPriority_RequestDefaultTypeInternal;
extern CCommunity_ClearSinglePartnerEventsAppPriority_RequestDefaultTypeInternal _CCommunity_ClearSinglePartnerEventsAppPriority_Request_default_instance_;
class CCommunity_ClearSinglePartnerEventsAppPriority_Response;
struct CCommunity_ClearSinglePartnerEventsAppPriority_ResponseDefaultTypeInternal;
extern CCommunity_ClearSinglePartnerEventsAppPriority_ResponseDefaultTypeInternal _CCommunity_ClearSinglePartnerEventsAppPriority_Response_default_instance_;
class CCommunity_ClearUserPartnerEventsAppPriorities_Request;
struct CCommunity_ClearUserPartnerEventsAppPriorities_RequestDefaultTypeInternal;
extern CCommunity_ClearUserPartnerEventsAppPriorities_RequestDefaultTypeInternal _CCommunity_ClearUserPartnerEventsAppPriorities_Request_default_instance_;
class CCommunity_ClearUserPartnerEventsAppPriorities_Response;
struct CCommunity_ClearUserPartnerEventsAppPriorities_ResponseDefaultTypeInternal;
extern CCommunity_ClearUserPartnerEventsAppPriorities_ResponseDefaultTypeInternal _CCommunity_ClearUserPartnerEventsAppPriorities_Response_default_instance_;
class CCommunity_Comment;
struct CCommunity_CommentDefaultTypeInternal;
extern CCommunity_CommentDefaultTypeInternal _CCommunity_Comment_default_instance_;
class CCommunity_Comment_Reaction;
struct CCommunity_Comment_ReactionDefaultTypeInternal;
extern CCommunity_Comment_ReactionDefaultTypeInternal _CCommunity_Comment_Reaction_default_instance_;
class CCommunity_DeleteCommentFromThread_Request;
struct CCommunity_DeleteCommentFromThread_RequestDefaultTypeInternal;
extern CCommunity_DeleteCommentFromThread_RequestDefaultTypeInternal _CCommunity_DeleteCommentFromThread_Request_default_instance_;
class CCommunity_DeleteCommentFromThread_Response;
struct CCommunity_DeleteCommentFromThread_ResponseDefaultTypeInternal;
extern CCommunity_DeleteCommentFromThread_ResponseDefaultTypeInternal _CCommunity_DeleteCommentFromThread_Response_default_instance_;
class CCommunity_GetAppRichPresenceLocalization_Request;
struct CCommunity_GetAppRichPresenceLocalization_RequestDefaultTypeInternal;
extern CCommunity_GetAppRichPresenceLocalization_RequestDefaultTypeInternal _CCommunity_GetAppRichPresenceLocalization_Request_default_instance_;
class CCommunity_GetAppRichPresenceLocalization_Response;
struct CCommunity_GetAppRichPresenceLocalization_ResponseDefaultTypeInternal;
extern CCommunity_GetAppRichPresenceLocalization_ResponseDefaultTypeInternal _CCommunity_GetAppRichPresenceLocalization_Response_default_instance_;
class CCommunity_GetAppRichPresenceLocalization_Response_Token;
struct CCommunity_GetAppRichPresenceLocalization_Response_TokenDefaultTypeInternal;
extern CCommunity_GetAppRichPresenceLocalization_Response_TokenDefaultTypeInternal _CCommunity_GetAppRichPresenceLocalization_Response_Token_default_instance_;
class CCommunity_GetAppRichPresenceLocalization_Response_TokenList;
struct CCommunity_GetAppRichPresenceLocalization_Response_TokenListDefaultTypeInternal;
extern CCommunity_GetAppRichPresenceLocalization_Response_TokenListDefaultTypeInternal _CCommunity_GetAppRichPresenceLocalization_Response_TokenList_default_instance_;
class CCommunity_GetApps_Request;
struct CCommunity_GetApps_RequestDefaultTypeInternal;
extern CCommunity_GetApps_RequestDefaultTypeInternal _CCommunity_GetApps_Request_default_instance_;
class CCommunity_GetApps_Response;
struct CCommunity_GetApps_ResponseDefaultTypeInternal;
extern CCommunity_GetApps_ResponseDefaultTypeInternal _CCommunity_GetApps_Response_default_instance_;
class CCommunity_GetAvatarHistory_Request;
struct CCommunity_GetAvatarHistory_RequestDefaultTypeInternal;
extern CCommunity_GetAvatarHistory_RequestDefaultTypeInternal _CCommunity_GetAvatarHistory_Request_default_instance_;
class CCommunity_GetAvatarHistory_Response;
struct CCommunity_GetAvatarHistory_ResponseDefaultTypeInternal;
extern CCommunity_GetAvatarHistory_ResponseDefaultTypeInternal _CCommunity_GetAvatarHistory_Response_default_instance_;
class CCommunity_GetAvatarHistory_Response_AvatarData;
struct CCommunity_GetAvatarHistory_Response_AvatarDataDefaultTypeInternal;
extern CCommunity_GetAvatarHistory_Response_AvatarDataDefaultTypeInternal _CCommunity_GetAvatarHistory_Response_AvatarData_default_instance_;
class CCommunity_GetBestEventsForUser_Request;
struct CCommunity_GetBestEventsForUser_RequestDefaultTypeInternal;
extern CCommunity_GetBestEventsForUser_RequestDefaultTypeInternal _CCommunity_GetBestEventsForUser_Request_default_instance_;
class CCommunity_GetBestEventsForUser_Response;
struct CCommunity_GetBestEventsForUser_ResponseDefaultTypeInternal;
extern CCommunity_GetBestEventsForUser_ResponseDefaultTypeInternal _CCommunity_GetBestEventsForUser_Response_default_instance_;
class CCommunity_GetClanAnnouncementVoteForUser_Request;
struct CCommunity_GetClanAnnouncementVoteForUser_RequestDefaultTypeInternal;
extern CCommunity_GetClanAnnouncementVoteForUser_RequestDefaultTypeInternal _CCommunity_GetClanAnnouncementVoteForUser_Request_default_instance_;
class CCommunity_GetClanAnnouncementVoteForUser_Response;
struct CCommunity_GetClanAnnouncementVoteForUser_ResponseDefaultTypeInternal;
extern CCommunity_GetClanAnnouncementVoteForUser_ResponseDefaultTypeInternal _CCommunity_GetClanAnnouncementVoteForUser_Response_default_instance_;
class CCommunity_GetCommentThreadRatings_Request;
struct CCommunity_GetCommentThreadRatings_RequestDefaultTypeInternal;
extern CCommunity_GetCommentThreadRatings_RequestDefaultTypeInternal _CCommunity_GetCommentThreadRatings_Request_default_instance_;
class CCommunity_GetCommentThreadRatings_Response;
struct CCommunity_GetCommentThreadRatings_ResponseDefaultTypeInternal;
extern CCommunity_GetCommentThreadRatings_ResponseDefaultTypeInternal _CCommunity_GetCommentThreadRatings_Response_default_instance_;
class CCommunity_GetCommentThread_Request;
struct CCommunity_GetCommentThread_RequestDefaultTypeInternal;
extern CCommunity_GetCommentThread_RequestDefaultTypeInternal _CCommunity_GetCommentThread_Request_default_instance_;
class CCommunity_GetCommentThread_Response;
struct CCommunity_GetCommentThread_ResponseDefaultTypeInternal;
extern CCommunity_GetCommentThread_ResponseDefaultTypeInternal _CCommunity_GetCommentThread_Response_default_instance_;
class CCommunity_GetUserPartnerEventNews_Request;
struct CCommunity_GetUserPartnerEventNews_RequestDefaultTypeInternal;
extern CCommunity_GetUserPartnerEventNews_RequestDefaultTypeInternal _CCommunity_GetUserPartnerEventNews_Request_default_instance_;
class CCommunity_GetUserPartnerEventNews_Response;
struct CCommunity_GetUserPartnerEventNews_ResponseDefaultTypeInternal;
extern CCommunity_GetUserPartnerEventNews_ResponseDefaultTypeInternal _CCommunity_GetUserPartnerEventNews_Response_default_instance_;
class CCommunity_GetUserPartnerEventViewStatus_Request;
struct CCommunity_GetUserPartnerEventViewStatus_RequestDefaultTypeInternal;
extern CCommunity_GetUserPartnerEventViewStatus_RequestDefaultTypeInternal _CCommunity_GetUserPartnerEventViewStatus_Request_default_instance_;
class CCommunity_GetUserPartnerEventViewStatus_Response;
struct CCommunity_GetUserPartnerEventViewStatus_ResponseDefaultTypeInternal;
extern CCommunity_GetUserPartnerEventViewStatus_ResponseDefaultTypeInternal _CCommunity_GetUserPartnerEventViewStatus_Response_default_instance_;
class CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent;
struct CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEventDefaultTypeInternal;
extern CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEventDefaultTypeInternal _CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent_default_instance_;
class CCommunity_GetUserPartnerEventsAppPriorities_Request;
struct CCommunity_GetUserPartnerEventsAppPriorities_RequestDefaultTypeInternal;
extern CCommunity_GetUserPartnerEventsAppPriorities_RequestDefaultTypeInternal _CCommunity_GetUserPartnerEventsAppPriorities_Request_default_instance_;
class CCommunity_GetUserPartnerEventsAppPriorities_Response;
struct CCommunity_GetUserPartnerEventsAppPriorities_ResponseDefaultTypeInternal;
extern CCommunity_GetUserPartnerEventsAppPriorities_ResponseDefaultTypeInternal _CCommunity_GetUserPartnerEventsAppPriorities_Response_default_instance_;
class CCommunity_MarkPartnerEventsForUser_Request;
struct CCommunity_MarkPartnerEventsForUser_RequestDefaultTypeInternal;
extern CCommunity_MarkPartnerEventsForUser_RequestDefaultTypeInternal _CCommunity_MarkPartnerEventsForUser_Request_default_instance_;
class CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking;
struct CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarkingDefaultTypeInternal;
extern CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarkingDefaultTypeInternal _CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking_default_instance_;
class CCommunity_MarkPartnerEventsForUser_Response;
struct CCommunity_MarkPartnerEventsForUser_ResponseDefaultTypeInternal;
extern CCommunity_MarkPartnerEventsForUser_ResponseDefaultTypeInternal _CCommunity_MarkPartnerEventsForUser_Response_default_instance_;
class CCommunity_PartnerEventResult;
struct CCommunity_PartnerEventResultDefaultTypeInternal;
extern CCommunity_PartnerEventResultDefaultTypeInternal _CCommunity_PartnerEventResult_default_instance_;
class CCommunity_PartnerEventsAppPriority;
struct CCommunity_PartnerEventsAppPriorityDefaultTypeInternal;
extern CCommunity_PartnerEventsAppPriorityDefaultTypeInternal _CCommunity_PartnerEventsAppPriority_default_instance_;
class CCommunity_PartnerEventsShowLessForApp_Request;
struct CCommunity_PartnerEventsShowLessForApp_RequestDefaultTypeInternal;
extern CCommunity_PartnerEventsShowLessForApp_RequestDefaultTypeInternal _CCommunity_PartnerEventsShowLessForApp_Request_default_instance_;
class CCommunity_PartnerEventsShowLessForApp_Response;
struct CCommunity_PartnerEventsShowLessForApp_ResponseDefaultTypeInternal;
extern CCommunity_PartnerEventsShowLessForApp_ResponseDefaultTypeInternal _CCommunity_PartnerEventsShowLessForApp_Response_default_instance_;
class CCommunity_PartnerEventsShowMoreForApp_Request;
struct CCommunity_PartnerEventsShowMoreForApp_RequestDefaultTypeInternal;
extern CCommunity_PartnerEventsShowMoreForApp_RequestDefaultTypeInternal _CCommunity_PartnerEventsShowMoreForApp_Request_default_instance_;
class CCommunity_PartnerEventsShowMoreForApp_Response;
struct CCommunity_PartnerEventsShowMoreForApp_ResponseDefaultTypeInternal;
extern CCommunity_PartnerEventsShowMoreForApp_ResponseDefaultTypeInternal _CCommunity_PartnerEventsShowMoreForApp_Response_default_instance_;
class CCommunity_PostCommentToThread_Request;
struct CCommunity_PostCommentToThread_RequestDefaultTypeInternal;
extern CCommunity_PostCommentToThread_RequestDefaultTypeInternal _CCommunity_PostCommentToThread_Request_default_instance_;
class CCommunity_PostCommentToThread_Response;
struct CCommunity_PostCommentToThread_ResponseDefaultTypeInternal;
extern CCommunity_PostCommentToThread_ResponseDefaultTypeInternal _CCommunity_PostCommentToThread_Response_default_instance_;
class CCommunity_RateClanAnnouncement_Request;
struct CCommunity_RateClanAnnouncement_RequestDefaultTypeInternal;
extern CCommunity_RateClanAnnouncement_RequestDefaultTypeInternal _CCommunity_RateClanAnnouncement_Request_default_instance_;
class CCommunity_RateClanAnnouncement_Response;
struct CCommunity_RateClanAnnouncement_ResponseDefaultTypeInternal;
extern CCommunity_RateClanAnnouncement_ResponseDefaultTypeInternal _CCommunity_RateClanAnnouncement_Response_default_instance_;
class CCommunity_RateCommentThread_Request;
struct CCommunity_RateCommentThread_RequestDefaultTypeInternal;
extern CCommunity_RateCommentThread_RequestDefaultTypeInternal _CCommunity_RateCommentThread_Request_default_instance_;
class CCommunity_RateCommentThread_Response;
struct CCommunity_RateCommentThread_ResponseDefaultTypeInternal;
extern CCommunity_RateCommentThread_ResponseDefaultTypeInternal _CCommunity_RateCommentThread_Response_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CAppPriority* Arena::CreateMaybeMessage<::CAppPriority>(Arena*);
template<> ::CCommunity_ClearSinglePartnerEventsAppPriority_Request* Arena::CreateMaybeMessage<::CCommunity_ClearSinglePartnerEventsAppPriority_Request>(Arena*);
template<> ::CCommunity_ClearSinglePartnerEventsAppPriority_Response* Arena::CreateMaybeMessage<::CCommunity_ClearSinglePartnerEventsAppPriority_Response>(Arena*);
template<> ::CCommunity_ClearUserPartnerEventsAppPriorities_Request* Arena::CreateMaybeMessage<::CCommunity_ClearUserPartnerEventsAppPriorities_Request>(Arena*);
template<> ::CCommunity_ClearUserPartnerEventsAppPriorities_Response* Arena::CreateMaybeMessage<::CCommunity_ClearUserPartnerEventsAppPriorities_Response>(Arena*);
template<> ::CCommunity_Comment* Arena::CreateMaybeMessage<::CCommunity_Comment>(Arena*);
template<> ::CCommunity_Comment_Reaction* Arena::CreateMaybeMessage<::CCommunity_Comment_Reaction>(Arena*);
template<> ::CCommunity_DeleteCommentFromThread_Request* Arena::CreateMaybeMessage<::CCommunity_DeleteCommentFromThread_Request>(Arena*);
template<> ::CCommunity_DeleteCommentFromThread_Response* Arena::CreateMaybeMessage<::CCommunity_DeleteCommentFromThread_Response>(Arena*);
template<> ::CCommunity_GetAppRichPresenceLocalization_Request* Arena::CreateMaybeMessage<::CCommunity_GetAppRichPresenceLocalization_Request>(Arena*);
template<> ::CCommunity_GetAppRichPresenceLocalization_Response* Arena::CreateMaybeMessage<::CCommunity_GetAppRichPresenceLocalization_Response>(Arena*);
template<> ::CCommunity_GetAppRichPresenceLocalization_Response_Token* Arena::CreateMaybeMessage<::CCommunity_GetAppRichPresenceLocalization_Response_Token>(Arena*);
template<> ::CCommunity_GetAppRichPresenceLocalization_Response_TokenList* Arena::CreateMaybeMessage<::CCommunity_GetAppRichPresenceLocalization_Response_TokenList>(Arena*);
template<> ::CCommunity_GetApps_Request* Arena::CreateMaybeMessage<::CCommunity_GetApps_Request>(Arena*);
template<> ::CCommunity_GetApps_Response* Arena::CreateMaybeMessage<::CCommunity_GetApps_Response>(Arena*);
template<> ::CCommunity_GetAvatarHistory_Request* Arena::CreateMaybeMessage<::CCommunity_GetAvatarHistory_Request>(Arena*);
template<> ::CCommunity_GetAvatarHistory_Response* Arena::CreateMaybeMessage<::CCommunity_GetAvatarHistory_Response>(Arena*);
template<> ::CCommunity_GetAvatarHistory_Response_AvatarData* Arena::CreateMaybeMessage<::CCommunity_GetAvatarHistory_Response_AvatarData>(Arena*);
template<> ::CCommunity_GetBestEventsForUser_Request* Arena::CreateMaybeMessage<::CCommunity_GetBestEventsForUser_Request>(Arena*);
template<> ::CCommunity_GetBestEventsForUser_Response* Arena::CreateMaybeMessage<::CCommunity_GetBestEventsForUser_Response>(Arena*);
template<> ::CCommunity_GetClanAnnouncementVoteForUser_Request* Arena::CreateMaybeMessage<::CCommunity_GetClanAnnouncementVoteForUser_Request>(Arena*);
template<> ::CCommunity_GetClanAnnouncementVoteForUser_Response* Arena::CreateMaybeMessage<::CCommunity_GetClanAnnouncementVoteForUser_Response>(Arena*);
template<> ::CCommunity_GetCommentThreadRatings_Request* Arena::CreateMaybeMessage<::CCommunity_GetCommentThreadRatings_Request>(Arena*);
template<> ::CCommunity_GetCommentThreadRatings_Response* Arena::CreateMaybeMessage<::CCommunity_GetCommentThreadRatings_Response>(Arena*);
template<> ::CCommunity_GetCommentThread_Request* Arena::CreateMaybeMessage<::CCommunity_GetCommentThread_Request>(Arena*);
template<> ::CCommunity_GetCommentThread_Response* Arena::CreateMaybeMessage<::CCommunity_GetCommentThread_Response>(Arena*);
template<> ::CCommunity_GetUserPartnerEventNews_Request* Arena::CreateMaybeMessage<::CCommunity_GetUserPartnerEventNews_Request>(Arena*);
template<> ::CCommunity_GetUserPartnerEventNews_Response* Arena::CreateMaybeMessage<::CCommunity_GetUserPartnerEventNews_Response>(Arena*);
template<> ::CCommunity_GetUserPartnerEventViewStatus_Request* Arena::CreateMaybeMessage<::CCommunity_GetUserPartnerEventViewStatus_Request>(Arena*);
template<> ::CCommunity_GetUserPartnerEventViewStatus_Response* Arena::CreateMaybeMessage<::CCommunity_GetUserPartnerEventViewStatus_Response>(Arena*);
template<> ::CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent* Arena::CreateMaybeMessage<::CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent>(Arena*);
template<> ::CCommunity_GetUserPartnerEventsAppPriorities_Request* Arena::CreateMaybeMessage<::CCommunity_GetUserPartnerEventsAppPriorities_Request>(Arena*);
template<> ::CCommunity_GetUserPartnerEventsAppPriorities_Response* Arena::CreateMaybeMessage<::CCommunity_GetUserPartnerEventsAppPriorities_Response>(Arena*);
template<> ::CCommunity_MarkPartnerEventsForUser_Request* Arena::CreateMaybeMessage<::CCommunity_MarkPartnerEventsForUser_Request>(Arena*);
template<> ::CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking* Arena::CreateMaybeMessage<::CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking>(Arena*);
template<> ::CCommunity_MarkPartnerEventsForUser_Response* Arena::CreateMaybeMessage<::CCommunity_MarkPartnerEventsForUser_Response>(Arena*);
template<> ::CCommunity_PartnerEventResult* Arena::CreateMaybeMessage<::CCommunity_PartnerEventResult>(Arena*);
template<> ::CCommunity_PartnerEventsAppPriority* Arena::CreateMaybeMessage<::CCommunity_PartnerEventsAppPriority>(Arena*);
template<> ::CCommunity_PartnerEventsShowLessForApp_Request* Arena::CreateMaybeMessage<::CCommunity_PartnerEventsShowLessForApp_Request>(Arena*);
template<> ::CCommunity_PartnerEventsShowLessForApp_Response* Arena::CreateMaybeMessage<::CCommunity_PartnerEventsShowLessForApp_Response>(Arena*);
template<> ::CCommunity_PartnerEventsShowMoreForApp_Request* Arena::CreateMaybeMessage<::CCommunity_PartnerEventsShowMoreForApp_Request>(Arena*);
template<> ::CCommunity_PartnerEventsShowMoreForApp_Response* Arena::CreateMaybeMessage<::CCommunity_PartnerEventsShowMoreForApp_Response>(Arena*);
template<> ::CCommunity_PostCommentToThread_Request* Arena::CreateMaybeMessage<::CCommunity_PostCommentToThread_Request>(Arena*);
template<> ::CCommunity_PostCommentToThread_Response* Arena::CreateMaybeMessage<::CCommunity_PostCommentToThread_Response>(Arena*);
template<> ::CCommunity_RateClanAnnouncement_Request* Arena::CreateMaybeMessage<::CCommunity_RateClanAnnouncement_Request>(Arena*);
template<> ::CCommunity_RateClanAnnouncement_Response* Arena::CreateMaybeMessage<::CCommunity_RateClanAnnouncement_Response>(Arena*);
template<> ::CCommunity_RateCommentThread_Request* Arena::CreateMaybeMessage<::CCommunity_RateCommentThread_Request>(Arena*);
template<> ::CCommunity_RateCommentThread_Response* Arena::CreateMaybeMessage<::CCommunity_RateCommentThread_Response>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum EPartnerEventDisplayLocation : int {
  EPartnerEventDisplayLocation_Invalid = 0,
  EPartnerEventDisplayLocation_AppDetailsSpotlight = 1,
  EPartnerEventDisplayLocation_LibraryOverview = 2,
  EPartnerEventDisplayLocation_StoreAppPage = 3,
  EPartnerEventDisplayLocation_EventScroller = 4,
  EPartnerEventDisplayLocation_AppDetailsActivity = 5,
  EPartnerEventDisplayLocation_CommunityHub = 6,
  EPartnerEventDisplayLocation_StoreFrontPage = 7,
  EPartnerEventDisplayLocation_NewsHub = 8,
  EPartnerEventDisplayLocation_GamepadHome = 9
};
bool EPartnerEventDisplayLocation_IsValid(int value);
constexpr EPartnerEventDisplayLocation EPartnerEventDisplayLocation_MIN = EPartnerEventDisplayLocation_Invalid;
constexpr EPartnerEventDisplayLocation EPartnerEventDisplayLocation_MAX = EPartnerEventDisplayLocation_GamepadHome;
constexpr int EPartnerEventDisplayLocation_ARRAYSIZE = EPartnerEventDisplayLocation_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EPartnerEventDisplayLocation_descriptor();
template<typename T>
inline const std::string& EPartnerEventDisplayLocation_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EPartnerEventDisplayLocation>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EPartnerEventDisplayLocation_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EPartnerEventDisplayLocation_descriptor(), enum_t_value);
}
inline bool EPartnerEventDisplayLocation_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EPartnerEventDisplayLocation* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EPartnerEventDisplayLocation>(
    EPartnerEventDisplayLocation_descriptor(), name, value);
}
// ===================================================================

class CCommunity_GetApps_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetApps_Request) */ {
 public:
  inline CCommunity_GetApps_Request() : CCommunity_GetApps_Request(nullptr) {}
  virtual ~CCommunity_GetApps_Request();
  explicit constexpr CCommunity_GetApps_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetApps_Request(const CCommunity_GetApps_Request& from);
  CCommunity_GetApps_Request(CCommunity_GetApps_Request&& from) noexcept
    : CCommunity_GetApps_Request() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetApps_Request& operator=(const CCommunity_GetApps_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetApps_Request& operator=(CCommunity_GetApps_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetApps_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetApps_Request* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetApps_Request*>(
               &_CCommunity_GetApps_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CCommunity_GetApps_Request& a, CCommunity_GetApps_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetApps_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetApps_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetApps_Request* New() const final {
    return CreateMaybeMessage<CCommunity_GetApps_Request>(nullptr);
  }

  CCommunity_GetApps_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetApps_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetApps_Request& from);
  void MergeFrom(const CCommunity_GetApps_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetApps_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetApps_Request";
  }
  protected:
  explicit CCommunity_GetApps_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppidsFieldNumber = 1,
    kLanguageFieldNumber = 2,
  };
  // repeated int32 appids = 1;
  int appids_size() const;
  private:
  int _internal_appids_size() const;
  public:
  void clear_appids();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_appids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_appids() const;
  void _internal_add_appids(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_appids();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 appids(int index) const;
  void set_appids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_appids(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      appids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_appids();

  // optional uint32 language = 2;
  bool has_language() const;
  private:
  bool _internal_has_language() const;
  public:
  void clear_language();
  ::PROTOBUF_NAMESPACE_ID::uint32 language() const;
  void set_language(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_language() const;
  void _internal_set_language(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_GetApps_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > appids_;
  ::PROTOBUF_NAMESPACE_ID::uint32 language_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetApps_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetApps_Response) */ {
 public:
  inline CCommunity_GetApps_Response() : CCommunity_GetApps_Response(nullptr) {}
  virtual ~CCommunity_GetApps_Response();
  explicit constexpr CCommunity_GetApps_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetApps_Response(const CCommunity_GetApps_Response& from);
  CCommunity_GetApps_Response(CCommunity_GetApps_Response&& from) noexcept
    : CCommunity_GetApps_Response() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetApps_Response& operator=(const CCommunity_GetApps_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetApps_Response& operator=(CCommunity_GetApps_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetApps_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetApps_Response* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetApps_Response*>(
               &_CCommunity_GetApps_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CCommunity_GetApps_Response& a, CCommunity_GetApps_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetApps_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetApps_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetApps_Response* New() const final {
    return CreateMaybeMessage<CCommunity_GetApps_Response>(nullptr);
  }

  CCommunity_GetApps_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetApps_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetApps_Response& from);
  void MergeFrom(const CCommunity_GetApps_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetApps_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetApps_Response";
  }
  protected:
  explicit CCommunity_GetApps_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppsFieldNumber = 1,
  };
  // repeated .CCDDBAppDetailCommon apps = 1;
  int apps_size() const;
  private:
  int _internal_apps_size() const;
  public:
  void clear_apps();
  ::CCDDBAppDetailCommon* mutable_apps(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCDDBAppDetailCommon >*
      mutable_apps();
  private:
  const ::CCDDBAppDetailCommon& _internal_apps(int index) const;
  ::CCDDBAppDetailCommon* _internal_add_apps();
  public:
  const ::CCDDBAppDetailCommon& apps(int index) const;
  ::CCDDBAppDetailCommon* add_apps();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCDDBAppDetailCommon >&
      apps() const;

  // @@protoc_insertion_point(class_scope:CCommunity_GetApps_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCDDBAppDetailCommon > apps_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetAppRichPresenceLocalization_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetAppRichPresenceLocalization_Request) */ {
 public:
  inline CCommunity_GetAppRichPresenceLocalization_Request() : CCommunity_GetAppRichPresenceLocalization_Request(nullptr) {}
  virtual ~CCommunity_GetAppRichPresenceLocalization_Request();
  explicit constexpr CCommunity_GetAppRichPresenceLocalization_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetAppRichPresenceLocalization_Request(const CCommunity_GetAppRichPresenceLocalization_Request& from);
  CCommunity_GetAppRichPresenceLocalization_Request(CCommunity_GetAppRichPresenceLocalization_Request&& from) noexcept
    : CCommunity_GetAppRichPresenceLocalization_Request() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetAppRichPresenceLocalization_Request& operator=(const CCommunity_GetAppRichPresenceLocalization_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetAppRichPresenceLocalization_Request& operator=(CCommunity_GetAppRichPresenceLocalization_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetAppRichPresenceLocalization_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetAppRichPresenceLocalization_Request* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetAppRichPresenceLocalization_Request*>(
               &_CCommunity_GetAppRichPresenceLocalization_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CCommunity_GetAppRichPresenceLocalization_Request& a, CCommunity_GetAppRichPresenceLocalization_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetAppRichPresenceLocalization_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetAppRichPresenceLocalization_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetAppRichPresenceLocalization_Request* New() const final {
    return CreateMaybeMessage<CCommunity_GetAppRichPresenceLocalization_Request>(nullptr);
  }

  CCommunity_GetAppRichPresenceLocalization_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetAppRichPresenceLocalization_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetAppRichPresenceLocalization_Request& from);
  void MergeFrom(const CCommunity_GetAppRichPresenceLocalization_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetAppRichPresenceLocalization_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetAppRichPresenceLocalization_Request";
  }
  protected:
  explicit CCommunity_GetAppRichPresenceLocalization_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLanguageFieldNumber = 2,
    kAppidFieldNumber = 1,
  };
  // optional string language = 2;
  bool has_language() const;
  private:
  bool _internal_has_language() const;
  public:
  void clear_language();
  const std::string& language() const;
  void set_language(const std::string& value);
  void set_language(std::string&& value);
  void set_language(const char* value);
  void set_language(const char* value, size_t size);
  std::string* mutable_language();
  std::string* release_language();
  void set_allocated_language(std::string* language);
  private:
  const std::string& _internal_language() const;
  void _internal_set_language(const std::string& value);
  std::string* _internal_mutable_language();
  public:

  // optional int32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::int32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_GetAppRichPresenceLocalization_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr language_;
  ::PROTOBUF_NAMESPACE_ID::int32 appid_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetAppRichPresenceLocalization_Response_Token PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetAppRichPresenceLocalization_Response.Token) */ {
 public:
  inline CCommunity_GetAppRichPresenceLocalization_Response_Token() : CCommunity_GetAppRichPresenceLocalization_Response_Token(nullptr) {}
  virtual ~CCommunity_GetAppRichPresenceLocalization_Response_Token();
  explicit constexpr CCommunity_GetAppRichPresenceLocalization_Response_Token(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetAppRichPresenceLocalization_Response_Token(const CCommunity_GetAppRichPresenceLocalization_Response_Token& from);
  CCommunity_GetAppRichPresenceLocalization_Response_Token(CCommunity_GetAppRichPresenceLocalization_Response_Token&& from) noexcept
    : CCommunity_GetAppRichPresenceLocalization_Response_Token() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetAppRichPresenceLocalization_Response_Token& operator=(const CCommunity_GetAppRichPresenceLocalization_Response_Token& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetAppRichPresenceLocalization_Response_Token& operator=(CCommunity_GetAppRichPresenceLocalization_Response_Token&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetAppRichPresenceLocalization_Response_Token& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetAppRichPresenceLocalization_Response_Token* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetAppRichPresenceLocalization_Response_Token*>(
               &_CCommunity_GetAppRichPresenceLocalization_Response_Token_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CCommunity_GetAppRichPresenceLocalization_Response_Token& a, CCommunity_GetAppRichPresenceLocalization_Response_Token& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetAppRichPresenceLocalization_Response_Token* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetAppRichPresenceLocalization_Response_Token* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetAppRichPresenceLocalization_Response_Token* New() const final {
    return CreateMaybeMessage<CCommunity_GetAppRichPresenceLocalization_Response_Token>(nullptr);
  }

  CCommunity_GetAppRichPresenceLocalization_Response_Token* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetAppRichPresenceLocalization_Response_Token>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetAppRichPresenceLocalization_Response_Token& from);
  void MergeFrom(const CCommunity_GetAppRichPresenceLocalization_Response_Token& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetAppRichPresenceLocalization_Response_Token* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetAppRichPresenceLocalization_Response.Token";
  }
  protected:
  explicit CCommunity_GetAppRichPresenceLocalization_Response_Token(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);
  private:
  const std::string& _internal_value() const;
  void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_GetAppRichPresenceLocalization_Response.Token)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetAppRichPresenceLocalization_Response_TokenList PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetAppRichPresenceLocalization_Response.TokenList) */ {
 public:
  inline CCommunity_GetAppRichPresenceLocalization_Response_TokenList() : CCommunity_GetAppRichPresenceLocalization_Response_TokenList(nullptr) {}
  virtual ~CCommunity_GetAppRichPresenceLocalization_Response_TokenList();
  explicit constexpr CCommunity_GetAppRichPresenceLocalization_Response_TokenList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetAppRichPresenceLocalization_Response_TokenList(const CCommunity_GetAppRichPresenceLocalization_Response_TokenList& from);
  CCommunity_GetAppRichPresenceLocalization_Response_TokenList(CCommunity_GetAppRichPresenceLocalization_Response_TokenList&& from) noexcept
    : CCommunity_GetAppRichPresenceLocalization_Response_TokenList() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetAppRichPresenceLocalization_Response_TokenList& operator=(const CCommunity_GetAppRichPresenceLocalization_Response_TokenList& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetAppRichPresenceLocalization_Response_TokenList& operator=(CCommunity_GetAppRichPresenceLocalization_Response_TokenList&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetAppRichPresenceLocalization_Response_TokenList& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetAppRichPresenceLocalization_Response_TokenList* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetAppRichPresenceLocalization_Response_TokenList*>(
               &_CCommunity_GetAppRichPresenceLocalization_Response_TokenList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CCommunity_GetAppRichPresenceLocalization_Response_TokenList& a, CCommunity_GetAppRichPresenceLocalization_Response_TokenList& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetAppRichPresenceLocalization_Response_TokenList* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetAppRichPresenceLocalization_Response_TokenList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetAppRichPresenceLocalization_Response_TokenList* New() const final {
    return CreateMaybeMessage<CCommunity_GetAppRichPresenceLocalization_Response_TokenList>(nullptr);
  }

  CCommunity_GetAppRichPresenceLocalization_Response_TokenList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetAppRichPresenceLocalization_Response_TokenList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetAppRichPresenceLocalization_Response_TokenList& from);
  void MergeFrom(const CCommunity_GetAppRichPresenceLocalization_Response_TokenList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetAppRichPresenceLocalization_Response_TokenList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetAppRichPresenceLocalization_Response.TokenList";
  }
  protected:
  explicit CCommunity_GetAppRichPresenceLocalization_Response_TokenList(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTokensFieldNumber = 2,
    kLanguageFieldNumber = 1,
  };
  // repeated .CCommunity_GetAppRichPresenceLocalization_Response.Token tokens = 2;
  int tokens_size() const;
  private:
  int _internal_tokens_size() const;
  public:
  void clear_tokens();
  ::CCommunity_GetAppRichPresenceLocalization_Response_Token* mutable_tokens(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_GetAppRichPresenceLocalization_Response_Token >*
      mutable_tokens();
  private:
  const ::CCommunity_GetAppRichPresenceLocalization_Response_Token& _internal_tokens(int index) const;
  ::CCommunity_GetAppRichPresenceLocalization_Response_Token* _internal_add_tokens();
  public:
  const ::CCommunity_GetAppRichPresenceLocalization_Response_Token& tokens(int index) const;
  ::CCommunity_GetAppRichPresenceLocalization_Response_Token* add_tokens();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_GetAppRichPresenceLocalization_Response_Token >&
      tokens() const;

  // optional string language = 1;
  bool has_language() const;
  private:
  bool _internal_has_language() const;
  public:
  void clear_language();
  const std::string& language() const;
  void set_language(const std::string& value);
  void set_language(std::string&& value);
  void set_language(const char* value);
  void set_language(const char* value, size_t size);
  std::string* mutable_language();
  std::string* release_language();
  void set_allocated_language(std::string* language);
  private:
  const std::string& _internal_language() const;
  void _internal_set_language(const std::string& value);
  std::string* _internal_mutable_language();
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_GetAppRichPresenceLocalization_Response.TokenList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_GetAppRichPresenceLocalization_Response_Token > tokens_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr language_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetAppRichPresenceLocalization_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetAppRichPresenceLocalization_Response) */ {
 public:
  inline CCommunity_GetAppRichPresenceLocalization_Response() : CCommunity_GetAppRichPresenceLocalization_Response(nullptr) {}
  virtual ~CCommunity_GetAppRichPresenceLocalization_Response();
  explicit constexpr CCommunity_GetAppRichPresenceLocalization_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetAppRichPresenceLocalization_Response(const CCommunity_GetAppRichPresenceLocalization_Response& from);
  CCommunity_GetAppRichPresenceLocalization_Response(CCommunity_GetAppRichPresenceLocalization_Response&& from) noexcept
    : CCommunity_GetAppRichPresenceLocalization_Response() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetAppRichPresenceLocalization_Response& operator=(const CCommunity_GetAppRichPresenceLocalization_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetAppRichPresenceLocalization_Response& operator=(CCommunity_GetAppRichPresenceLocalization_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetAppRichPresenceLocalization_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetAppRichPresenceLocalization_Response* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetAppRichPresenceLocalization_Response*>(
               &_CCommunity_GetAppRichPresenceLocalization_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CCommunity_GetAppRichPresenceLocalization_Response& a, CCommunity_GetAppRichPresenceLocalization_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetAppRichPresenceLocalization_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetAppRichPresenceLocalization_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetAppRichPresenceLocalization_Response* New() const final {
    return CreateMaybeMessage<CCommunity_GetAppRichPresenceLocalization_Response>(nullptr);
  }

  CCommunity_GetAppRichPresenceLocalization_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetAppRichPresenceLocalization_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetAppRichPresenceLocalization_Response& from);
  void MergeFrom(const CCommunity_GetAppRichPresenceLocalization_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetAppRichPresenceLocalization_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetAppRichPresenceLocalization_Response";
  }
  protected:
  explicit CCommunity_GetAppRichPresenceLocalization_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CCommunity_GetAppRichPresenceLocalization_Response_Token Token;
  typedef CCommunity_GetAppRichPresenceLocalization_Response_TokenList TokenList;

  // accessors -------------------------------------------------------

  enum : int {
    kTokenListsFieldNumber = 2,
    kAppidFieldNumber = 1,
  };
  // repeated .CCommunity_GetAppRichPresenceLocalization_Response.TokenList token_lists = 2;
  int token_lists_size() const;
  private:
  int _internal_token_lists_size() const;
  public:
  void clear_token_lists();
  ::CCommunity_GetAppRichPresenceLocalization_Response_TokenList* mutable_token_lists(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_GetAppRichPresenceLocalization_Response_TokenList >*
      mutable_token_lists();
  private:
  const ::CCommunity_GetAppRichPresenceLocalization_Response_TokenList& _internal_token_lists(int index) const;
  ::CCommunity_GetAppRichPresenceLocalization_Response_TokenList* _internal_add_token_lists();
  public:
  const ::CCommunity_GetAppRichPresenceLocalization_Response_TokenList& token_lists(int index) const;
  ::CCommunity_GetAppRichPresenceLocalization_Response_TokenList* add_token_lists();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_GetAppRichPresenceLocalization_Response_TokenList >&
      token_lists() const;

  // optional int32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::int32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_GetAppRichPresenceLocalization_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_GetAppRichPresenceLocalization_Response_TokenList > token_lists_;
  ::PROTOBUF_NAMESPACE_ID::int32 appid_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetCommentThread_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetCommentThread_Request) */ {
 public:
  inline CCommunity_GetCommentThread_Request() : CCommunity_GetCommentThread_Request(nullptr) {}
  virtual ~CCommunity_GetCommentThread_Request();
  explicit constexpr CCommunity_GetCommentThread_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetCommentThread_Request(const CCommunity_GetCommentThread_Request& from);
  CCommunity_GetCommentThread_Request(CCommunity_GetCommentThread_Request&& from) noexcept
    : CCommunity_GetCommentThread_Request() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetCommentThread_Request& operator=(const CCommunity_GetCommentThread_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetCommentThread_Request& operator=(CCommunity_GetCommentThread_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetCommentThread_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetCommentThread_Request* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetCommentThread_Request*>(
               &_CCommunity_GetCommentThread_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CCommunity_GetCommentThread_Request& a, CCommunity_GetCommentThread_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetCommentThread_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetCommentThread_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetCommentThread_Request* New() const final {
    return CreateMaybeMessage<CCommunity_GetCommentThread_Request>(nullptr);
  }

  CCommunity_GetCommentThread_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetCommentThread_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetCommentThread_Request& from);
  void MergeFrom(const CCommunity_GetCommentThread_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetCommentThread_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetCommentThread_Request";
  }
  protected:
  explicit CCommunity_GetCommentThread_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamidFieldNumber = 1,
    kGidfeatureFieldNumber = 3,
    kGidfeature2FieldNumber = 4,
    kCommentThreadTypeFieldNumber = 2,
    kStartFieldNumber = 6,
    kCommentthreadidFieldNumber = 5,
    kCountFieldNumber = 7,
    kUpvotersFieldNumber = 8,
    kGidcommentFieldNumber = 10,
    kIncludeDeletedFieldNumber = 9,
    kOldestFirstFieldNumber = 12,
    kTimeOldestFieldNumber = 11,
  };
  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 gidfeature = 3;
  bool has_gidfeature() const;
  private:
  bool _internal_has_gidfeature() const;
  public:
  void clear_gidfeature();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature() const;
  void set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidfeature() const;
  void _internal_set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 gidfeature2 = 4;
  bool has_gidfeature2() const;
  private:
  bool _internal_has_gidfeature2() const;
  public:
  void clear_gidfeature2();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature2() const;
  void set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidfeature2() const;
  void _internal_set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional .ECommentThreadType comment_thread_type = 2 [default = ECommentThreadTypeInvalid];
  bool has_comment_thread_type() const;
  private:
  bool _internal_has_comment_thread_type() const;
  public:
  void clear_comment_thread_type();
  ::ECommentThreadType comment_thread_type() const;
  void set_comment_thread_type(::ECommentThreadType value);
  private:
  ::ECommentThreadType _internal_comment_thread_type() const;
  void _internal_set_comment_thread_type(::ECommentThreadType value);
  public:

  // optional int32 start = 6;
  bool has_start() const;
  private:
  bool _internal_has_start() const;
  public:
  void clear_start();
  ::PROTOBUF_NAMESPACE_ID::int32 start() const;
  void set_start(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_start() const;
  void _internal_set_start(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional fixed64 commentthreadid = 5;
  bool has_commentthreadid() const;
  private:
  bool _internal_has_commentthreadid() const;
  public:
  void clear_commentthreadid();
  ::PROTOBUF_NAMESPACE_ID::uint64 commentthreadid() const;
  void set_commentthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_commentthreadid() const;
  void _internal_set_commentthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional int32 count = 7;
  bool has_count() const;
  private:
  bool _internal_has_count() const;
  public:
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 upvoters = 8;
  bool has_upvoters() const;
  private:
  bool _internal_has_upvoters() const;
  public:
  void clear_upvoters();
  ::PROTOBUF_NAMESPACE_ID::int32 upvoters() const;
  void set_upvoters(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_upvoters() const;
  void _internal_set_upvoters(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional fixed64 gidcomment = 10;
  bool has_gidcomment() const;
  private:
  bool _internal_has_gidcomment() const;
  public:
  void clear_gidcomment();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidcomment() const;
  void set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidcomment() const;
  void _internal_set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool include_deleted = 9;
  bool has_include_deleted() const;
  private:
  bool _internal_has_include_deleted() const;
  public:
  void clear_include_deleted();
  bool include_deleted() const;
  void set_include_deleted(bool value);
  private:
  bool _internal_include_deleted() const;
  void _internal_set_include_deleted(bool value);
  public:

  // optional bool oldest_first = 12;
  bool has_oldest_first() const;
  private:
  bool _internal_has_oldest_first() const;
  public:
  void clear_oldest_first();
  bool oldest_first() const;
  void set_oldest_first(bool value);
  private:
  bool _internal_oldest_first() const;
  void _internal_set_oldest_first(bool value);
  public:

  // optional uint32 time_oldest = 11;
  bool has_time_oldest() const;
  private:
  bool _internal_has_time_oldest() const;
  public:
  void clear_time_oldest();
  ::PROTOBUF_NAMESPACE_ID::uint32 time_oldest() const;
  void set_time_oldest(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_time_oldest() const;
  void _internal_set_time_oldest(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_GetCommentThread_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature2_;
  int comment_thread_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 start_;
  ::PROTOBUF_NAMESPACE_ID::uint64 commentthreadid_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  ::PROTOBUF_NAMESPACE_ID::int32 upvoters_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidcomment_;
  bool include_deleted_;
  bool oldest_first_;
  ::PROTOBUF_NAMESPACE_ID::uint32 time_oldest_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_Comment_Reaction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_Comment.Reaction) */ {
 public:
  inline CCommunity_Comment_Reaction() : CCommunity_Comment_Reaction(nullptr) {}
  virtual ~CCommunity_Comment_Reaction();
  explicit constexpr CCommunity_Comment_Reaction(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_Comment_Reaction(const CCommunity_Comment_Reaction& from);
  CCommunity_Comment_Reaction(CCommunity_Comment_Reaction&& from) noexcept
    : CCommunity_Comment_Reaction() {
    *this = ::std::move(from);
  }

  inline CCommunity_Comment_Reaction& operator=(const CCommunity_Comment_Reaction& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_Comment_Reaction& operator=(CCommunity_Comment_Reaction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_Comment_Reaction& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_Comment_Reaction* internal_default_instance() {
    return reinterpret_cast<const CCommunity_Comment_Reaction*>(
               &_CCommunity_Comment_Reaction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CCommunity_Comment_Reaction& a, CCommunity_Comment_Reaction& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_Comment_Reaction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_Comment_Reaction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_Comment_Reaction* New() const final {
    return CreateMaybeMessage<CCommunity_Comment_Reaction>(nullptr);
  }

  CCommunity_Comment_Reaction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_Comment_Reaction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_Comment_Reaction& from);
  void MergeFrom(const CCommunity_Comment_Reaction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_Comment_Reaction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_Comment.Reaction";
  }
  protected:
  explicit CCommunity_Comment_Reaction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReactionidFieldNumber = 1,
    kCountFieldNumber = 2,
  };
  // optional uint32 reactionid = 1;
  bool has_reactionid() const;
  private:
  bool _internal_has_reactionid() const;
  public:
  void clear_reactionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 reactionid() const;
  void set_reactionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reactionid() const;
  void _internal_set_reactionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 count = 2;
  bool has_count() const;
  private:
  bool _internal_has_count() const;
  public:
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_Comment.Reaction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reactionid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_Comment PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_Comment) */ {
 public:
  inline CCommunity_Comment() : CCommunity_Comment(nullptr) {}
  virtual ~CCommunity_Comment();
  explicit constexpr CCommunity_Comment(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_Comment(const CCommunity_Comment& from);
  CCommunity_Comment(CCommunity_Comment&& from) noexcept
    : CCommunity_Comment() {
    *this = ::std::move(from);
  }

  inline CCommunity_Comment& operator=(const CCommunity_Comment& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_Comment& operator=(CCommunity_Comment&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_Comment& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_Comment* internal_default_instance() {
    return reinterpret_cast<const CCommunity_Comment*>(
               &_CCommunity_Comment_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CCommunity_Comment& a, CCommunity_Comment& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_Comment* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_Comment* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_Comment* New() const final {
    return CreateMaybeMessage<CCommunity_Comment>(nullptr);
  }

  CCommunity_Comment* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_Comment>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_Comment& from);
  void MergeFrom(const CCommunity_Comment& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_Comment* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_Comment";
  }
  protected:
  explicit CCommunity_Comment(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CCommunity_Comment_Reaction Reaction;

  // accessors -------------------------------------------------------

  enum : int {
    kReactionsFieldNumber = 12,
    kTextFieldNumber = 4,
    kIpaddressFieldNumber = 9,
    kGidcommentFieldNumber = 1,
    kSteamidFieldNumber = 2,
    kTimestampFieldNumber = 3,
    kUpvotesFieldNumber = 5,
    kHiddenFieldNumber = 6,
    kHiddenByUserFieldNumber = 7,
    kDeletedFieldNumber = 8,
    kUpvotedByUserFieldNumber = 11,
    kTotalHiddenFieldNumber = 10,
    kGidparentcommentFieldNumber = 13,
  };
  // repeated .CCommunity_Comment.Reaction reactions = 12;
  int reactions_size() const;
  private:
  int _internal_reactions_size() const;
  public:
  void clear_reactions();
  ::CCommunity_Comment_Reaction* mutable_reactions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_Comment_Reaction >*
      mutable_reactions();
  private:
  const ::CCommunity_Comment_Reaction& _internal_reactions(int index) const;
  ::CCommunity_Comment_Reaction* _internal_add_reactions();
  public:
  const ::CCommunity_Comment_Reaction& reactions(int index) const;
  ::CCommunity_Comment_Reaction* add_reactions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_Comment_Reaction >&
      reactions() const;

  // optional string text = 4;
  bool has_text() const;
  private:
  bool _internal_has_text() const;
  public:
  void clear_text();
  const std::string& text() const;
  void set_text(const std::string& value);
  void set_text(std::string&& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  std::string* mutable_text();
  std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // optional .CMsgIPAddress ipaddress = 9;
  bool has_ipaddress() const;
  private:
  bool _internal_has_ipaddress() const;
  public:
  void clear_ipaddress();
  const ::CMsgIPAddress& ipaddress() const;
  ::CMsgIPAddress* release_ipaddress();
  ::CMsgIPAddress* mutable_ipaddress();
  void set_allocated_ipaddress(::CMsgIPAddress* ipaddress);
  private:
  const ::CMsgIPAddress& _internal_ipaddress() const;
  ::CMsgIPAddress* _internal_mutable_ipaddress();
  public:
  void unsafe_arena_set_allocated_ipaddress(
      ::CMsgIPAddress* ipaddress);
  ::CMsgIPAddress* unsafe_arena_release_ipaddress();

  // optional fixed64 gidcomment = 1;
  bool has_gidcomment() const;
  private:
  bool _internal_has_gidcomment() const;
  public:
  void clear_gidcomment();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidcomment() const;
  void set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidcomment() const;
  void _internal_set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 steamid = 2;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 timestamp = 3;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint32 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 upvotes = 5;
  bool has_upvotes() const;
  private:
  bool _internal_has_upvotes() const;
  public:
  void clear_upvotes();
  ::PROTOBUF_NAMESPACE_ID::int32 upvotes() const;
  void set_upvotes(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_upvotes() const;
  void _internal_set_upvotes(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool hidden = 6;
  bool has_hidden() const;
  private:
  bool _internal_has_hidden() const;
  public:
  void clear_hidden();
  bool hidden() const;
  void set_hidden(bool value);
  private:
  bool _internal_hidden() const;
  void _internal_set_hidden(bool value);
  public:

  // optional bool hidden_by_user = 7;
  bool has_hidden_by_user() const;
  private:
  bool _internal_has_hidden_by_user() const;
  public:
  void clear_hidden_by_user();
  bool hidden_by_user() const;
  void set_hidden_by_user(bool value);
  private:
  bool _internal_hidden_by_user() const;
  void _internal_set_hidden_by_user(bool value);
  public:

  // optional bool deleted = 8;
  bool has_deleted() const;
  private:
  bool _internal_has_deleted() const;
  public:
  void clear_deleted();
  bool deleted() const;
  void set_deleted(bool value);
  private:
  bool _internal_deleted() const;
  void _internal_set_deleted(bool value);
  public:

  // optional bool upvoted_by_user = 11;
  bool has_upvoted_by_user() const;
  private:
  bool _internal_has_upvoted_by_user() const;
  public:
  void clear_upvoted_by_user();
  bool upvoted_by_user() const;
  void set_upvoted_by_user(bool value);
  private:
  bool _internal_upvoted_by_user() const;
  void _internal_set_upvoted_by_user(bool value);
  public:

  // optional int32 total_hidden = 10;
  bool has_total_hidden() const;
  private:
  bool _internal_has_total_hidden() const;
  public:
  void clear_total_hidden();
  ::PROTOBUF_NAMESPACE_ID::int32 total_hidden() const;
  void set_total_hidden(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_total_hidden() const;
  void _internal_set_total_hidden(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional fixed64 gidparentcomment = 13;
  bool has_gidparentcomment() const;
  private:
  bool _internal_has_gidparentcomment() const;
  public:
  void clear_gidparentcomment();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidparentcomment() const;
  void set_gidparentcomment(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidparentcomment() const;
  void _internal_set_gidparentcomment(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_Comment)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_Comment_Reaction > reactions_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  ::CMsgIPAddress* ipaddress_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidcomment_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 timestamp_;
  ::PROTOBUF_NAMESPACE_ID::int32 upvotes_;
  bool hidden_;
  bool hidden_by_user_;
  bool deleted_;
  bool upvoted_by_user_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_hidden_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidparentcomment_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetCommentThread_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetCommentThread_Response) */ {
 public:
  inline CCommunity_GetCommentThread_Response() : CCommunity_GetCommentThread_Response(nullptr) {}
  virtual ~CCommunity_GetCommentThread_Response();
  explicit constexpr CCommunity_GetCommentThread_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetCommentThread_Response(const CCommunity_GetCommentThread_Response& from);
  CCommunity_GetCommentThread_Response(CCommunity_GetCommentThread_Response&& from) noexcept
    : CCommunity_GetCommentThread_Response() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetCommentThread_Response& operator=(const CCommunity_GetCommentThread_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetCommentThread_Response& operator=(CCommunity_GetCommentThread_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetCommentThread_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetCommentThread_Response* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetCommentThread_Response*>(
               &_CCommunity_GetCommentThread_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CCommunity_GetCommentThread_Response& a, CCommunity_GetCommentThread_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetCommentThread_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetCommentThread_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetCommentThread_Response* New() const final {
    return CreateMaybeMessage<CCommunity_GetCommentThread_Response>(nullptr);
  }

  CCommunity_GetCommentThread_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetCommentThread_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetCommentThread_Response& from);
  void MergeFrom(const CCommunity_GetCommentThread_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetCommentThread_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetCommentThread_Response";
  }
  protected:
  explicit CCommunity_GetCommentThread_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommentsFieldNumber = 1,
    kDeletedCommentsFieldNumber = 2,
    kUpvotersFieldNumber = 9,
    kSteamidFieldNumber = 3,
    kCommentthreadidFieldNumber = 4,
    kStartFieldNumber = 5,
    kCountFieldNumber = 6,
    kTotalCountFieldNumber = 7,
    kUpvotesFieldNumber = 8,
    kAnswerCommentidFieldNumber = 12,
    kUserSubscribedFieldNumber = 10,
    kUserUpvotedFieldNumber = 11,
    kCanPostFieldNumber = 15,
    kAnswerActorFieldNumber = 13,
    kAnswerActorRankFieldNumber = 14,
    kCommentThreadTypeFieldNumber = 16,
    kGidfeatureFieldNumber = 17,
    kGidfeature2FieldNumber = 18,
  };
  // repeated .CCommunity_Comment comments = 1;
  int comments_size() const;
  private:
  int _internal_comments_size() const;
  public:
  void clear_comments();
  ::CCommunity_Comment* mutable_comments(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_Comment >*
      mutable_comments();
  private:
  const ::CCommunity_Comment& _internal_comments(int index) const;
  ::CCommunity_Comment* _internal_add_comments();
  public:
  const ::CCommunity_Comment& comments(int index) const;
  ::CCommunity_Comment* add_comments();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_Comment >&
      comments() const;

  // repeated .CCommunity_Comment deleted_comments = 2;
  int deleted_comments_size() const;
  private:
  int _internal_deleted_comments_size() const;
  public:
  void clear_deleted_comments();
  ::CCommunity_Comment* mutable_deleted_comments(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_Comment >*
      mutable_deleted_comments();
  private:
  const ::CCommunity_Comment& _internal_deleted_comments(int index) const;
  ::CCommunity_Comment* _internal_add_deleted_comments();
  public:
  const ::CCommunity_Comment& deleted_comments(int index) const;
  ::CCommunity_Comment* add_deleted_comments();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_Comment >&
      deleted_comments() const;

  // repeated uint32 upvoters = 9;
  int upvoters_size() const;
  private:
  int _internal_upvoters_size() const;
  public:
  void clear_upvoters();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_upvoters(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_upvoters() const;
  void _internal_add_upvoters(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_upvoters();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 upvoters(int index) const;
  void set_upvoters(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_upvoters(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      upvoters() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_upvoters();

  // optional fixed64 steamid = 3;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 commentthreadid = 4;
  bool has_commentthreadid() const;
  private:
  bool _internal_has_commentthreadid() const;
  public:
  void clear_commentthreadid();
  ::PROTOBUF_NAMESPACE_ID::uint64 commentthreadid() const;
  void set_commentthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_commentthreadid() const;
  void _internal_set_commentthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional int32 start = 5;
  bool has_start() const;
  private:
  bool _internal_has_start() const;
  public:
  void clear_start();
  ::PROTOBUF_NAMESPACE_ID::int32 start() const;
  void set_start(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_start() const;
  void _internal_set_start(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 count = 6;
  bool has_count() const;
  private:
  bool _internal_has_count() const;
  public:
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 total_count = 7;
  bool has_total_count() const;
  private:
  bool _internal_has_total_count() const;
  public:
  void clear_total_count();
  ::PROTOBUF_NAMESPACE_ID::int32 total_count() const;
  void set_total_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_total_count() const;
  void _internal_set_total_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 upvotes = 8;
  bool has_upvotes() const;
  private:
  bool _internal_has_upvotes() const;
  public:
  void clear_upvotes();
  ::PROTOBUF_NAMESPACE_ID::int32 upvotes() const;
  void set_upvotes(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_upvotes() const;
  void _internal_set_upvotes(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional fixed64 answer_commentid = 12;
  bool has_answer_commentid() const;
  private:
  bool _internal_has_answer_commentid() const;
  public:
  void clear_answer_commentid();
  ::PROTOBUF_NAMESPACE_ID::uint64 answer_commentid() const;
  void set_answer_commentid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_answer_commentid() const;
  void _internal_set_answer_commentid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool user_subscribed = 10;
  bool has_user_subscribed() const;
  private:
  bool _internal_has_user_subscribed() const;
  public:
  void clear_user_subscribed();
  bool user_subscribed() const;
  void set_user_subscribed(bool value);
  private:
  bool _internal_user_subscribed() const;
  void _internal_set_user_subscribed(bool value);
  public:

  // optional bool user_upvoted = 11;
  bool has_user_upvoted() const;
  private:
  bool _internal_has_user_upvoted() const;
  public:
  void clear_user_upvoted();
  bool user_upvoted() const;
  void set_user_upvoted(bool value);
  private:
  bool _internal_user_upvoted() const;
  void _internal_set_user_upvoted(bool value);
  public:

  // optional bool can_post = 15;
  bool has_can_post() const;
  private:
  bool _internal_has_can_post() const;
  public:
  void clear_can_post();
  bool can_post() const;
  void set_can_post(bool value);
  private:
  bool _internal_can_post() const;
  void _internal_set_can_post(bool value);
  public:

  // optional uint32 answer_actor = 13;
  bool has_answer_actor() const;
  private:
  bool _internal_has_answer_actor() const;
  public:
  void clear_answer_actor();
  ::PROTOBUF_NAMESPACE_ID::uint32 answer_actor() const;
  void set_answer_actor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_answer_actor() const;
  void _internal_set_answer_actor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 answer_actor_rank = 14;
  bool has_answer_actor_rank() const;
  private:
  bool _internal_has_answer_actor_rank() const;
  public:
  void clear_answer_actor_rank();
  ::PROTOBUF_NAMESPACE_ID::int32 answer_actor_rank() const;
  void set_answer_actor_rank(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_answer_actor_rank() const;
  void _internal_set_answer_actor_rank(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 comment_thread_type = 16;
  bool has_comment_thread_type() const;
  private:
  bool _internal_has_comment_thread_type() const;
  public:
  void clear_comment_thread_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 comment_thread_type() const;
  void set_comment_thread_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_comment_thread_type() const;
  void _internal_set_comment_thread_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed64 gidfeature = 17;
  bool has_gidfeature() const;
  private:
  bool _internal_has_gidfeature() const;
  public:
  void clear_gidfeature();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature() const;
  void set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidfeature() const;
  void _internal_set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 gidfeature2 = 18;
  bool has_gidfeature2() const;
  private:
  bool _internal_has_gidfeature2() const;
  public:
  void clear_gidfeature2();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature2() const;
  void set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidfeature2() const;
  void _internal_set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_GetCommentThread_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_Comment > comments_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_Comment > deleted_comments_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > upvoters_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 commentthreadid_;
  ::PROTOBUF_NAMESPACE_ID::int32 start_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_count_;
  ::PROTOBUF_NAMESPACE_ID::int32 upvotes_;
  ::PROTOBUF_NAMESPACE_ID::uint64 answer_commentid_;
  bool user_subscribed_;
  bool user_upvoted_;
  bool can_post_;
  ::PROTOBUF_NAMESPACE_ID::uint32 answer_actor_;
  ::PROTOBUF_NAMESPACE_ID::int32 answer_actor_rank_;
  ::PROTOBUF_NAMESPACE_ID::uint32 comment_thread_type_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature2_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_PostCommentToThread_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_PostCommentToThread_Request) */ {
 public:
  inline CCommunity_PostCommentToThread_Request() : CCommunity_PostCommentToThread_Request(nullptr) {}
  virtual ~CCommunity_PostCommentToThread_Request();
  explicit constexpr CCommunity_PostCommentToThread_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_PostCommentToThread_Request(const CCommunity_PostCommentToThread_Request& from);
  CCommunity_PostCommentToThread_Request(CCommunity_PostCommentToThread_Request&& from) noexcept
    : CCommunity_PostCommentToThread_Request() {
    *this = ::std::move(from);
  }

  inline CCommunity_PostCommentToThread_Request& operator=(const CCommunity_PostCommentToThread_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_PostCommentToThread_Request& operator=(CCommunity_PostCommentToThread_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_PostCommentToThread_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_PostCommentToThread_Request* internal_default_instance() {
    return reinterpret_cast<const CCommunity_PostCommentToThread_Request*>(
               &_CCommunity_PostCommentToThread_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CCommunity_PostCommentToThread_Request& a, CCommunity_PostCommentToThread_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_PostCommentToThread_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_PostCommentToThread_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_PostCommentToThread_Request* New() const final {
    return CreateMaybeMessage<CCommunity_PostCommentToThread_Request>(nullptr);
  }

  CCommunity_PostCommentToThread_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_PostCommentToThread_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_PostCommentToThread_Request& from);
  void MergeFrom(const CCommunity_PostCommentToThread_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_PostCommentToThread_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_PostCommentToThread_Request";
  }
  protected:
  explicit CCommunity_PostCommentToThread_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 6,
    kSteamidFieldNumber = 1,
    kGidfeatureFieldNumber = 3,
    kGidfeature2FieldNumber = 4,
    kGidparentcommentFieldNumber = 7,
    kCommentThreadTypeFieldNumber = 2,
    kSuppressNotificationsFieldNumber = 8,
    kIsReportFieldNumber = 9,
    kStartHiddenFieldNumber = 10,
  };
  // optional string text = 6;
  bool has_text() const;
  private:
  bool _internal_has_text() const;
  public:
  void clear_text();
  const std::string& text() const;
  void set_text(const std::string& value);
  void set_text(std::string&& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  std::string* mutable_text();
  std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 gidfeature = 3;
  bool has_gidfeature() const;
  private:
  bool _internal_has_gidfeature() const;
  public:
  void clear_gidfeature();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature() const;
  void set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidfeature() const;
  void _internal_set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 gidfeature2 = 4;
  bool has_gidfeature2() const;
  private:
  bool _internal_has_gidfeature2() const;
  public:
  void clear_gidfeature2();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature2() const;
  void set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidfeature2() const;
  void _internal_set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 gidparentcomment = 7;
  bool has_gidparentcomment() const;
  private:
  bool _internal_has_gidparentcomment() const;
  public:
  void clear_gidparentcomment();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidparentcomment() const;
  void set_gidparentcomment(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidparentcomment() const;
  void _internal_set_gidparentcomment(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional .ECommentThreadType comment_thread_type = 2 [default = ECommentThreadTypeInvalid];
  bool has_comment_thread_type() const;
  private:
  bool _internal_has_comment_thread_type() const;
  public:
  void clear_comment_thread_type();
  ::ECommentThreadType comment_thread_type() const;
  void set_comment_thread_type(::ECommentThreadType value);
  private:
  ::ECommentThreadType _internal_comment_thread_type() const;
  void _internal_set_comment_thread_type(::ECommentThreadType value);
  public:

  // optional bool suppress_notifications = 8;
  bool has_suppress_notifications() const;
  private:
  bool _internal_has_suppress_notifications() const;
  public:
  void clear_suppress_notifications();
  bool suppress_notifications() const;
  void set_suppress_notifications(bool value);
  private:
  bool _internal_suppress_notifications() const;
  void _internal_set_suppress_notifications(bool value);
  public:

  // optional bool is_report = 9;
  bool has_is_report() const;
  private:
  bool _internal_has_is_report() const;
  public:
  void clear_is_report();
  bool is_report() const;
  void set_is_report(bool value);
  private:
  bool _internal_is_report() const;
  void _internal_set_is_report(bool value);
  public:

  // optional bool start_hidden = 10;
  bool has_start_hidden() const;
  private:
  bool _internal_has_start_hidden() const;
  public:
  void clear_start_hidden();
  bool start_hidden() const;
  void set_start_hidden(bool value);
  private:
  bool _internal_start_hidden() const;
  void _internal_set_start_hidden(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_PostCommentToThread_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature2_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidparentcomment_;
  int comment_thread_type_;
  bool suppress_notifications_;
  bool is_report_;
  bool start_hidden_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_PostCommentToThread_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_PostCommentToThread_Response) */ {
 public:
  inline CCommunity_PostCommentToThread_Response() : CCommunity_PostCommentToThread_Response(nullptr) {}
  virtual ~CCommunity_PostCommentToThread_Response();
  explicit constexpr CCommunity_PostCommentToThread_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_PostCommentToThread_Response(const CCommunity_PostCommentToThread_Response& from);
  CCommunity_PostCommentToThread_Response(CCommunity_PostCommentToThread_Response&& from) noexcept
    : CCommunity_PostCommentToThread_Response() {
    *this = ::std::move(from);
  }

  inline CCommunity_PostCommentToThread_Response& operator=(const CCommunity_PostCommentToThread_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_PostCommentToThread_Response& operator=(CCommunity_PostCommentToThread_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_PostCommentToThread_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_PostCommentToThread_Response* internal_default_instance() {
    return reinterpret_cast<const CCommunity_PostCommentToThread_Response*>(
               &_CCommunity_PostCommentToThread_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CCommunity_PostCommentToThread_Response& a, CCommunity_PostCommentToThread_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_PostCommentToThread_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_PostCommentToThread_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_PostCommentToThread_Response* New() const final {
    return CreateMaybeMessage<CCommunity_PostCommentToThread_Response>(nullptr);
  }

  CCommunity_PostCommentToThread_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_PostCommentToThread_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_PostCommentToThread_Response& from);
  void MergeFrom(const CCommunity_PostCommentToThread_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_PostCommentToThread_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_PostCommentToThread_Response";
  }
  protected:
  explicit CCommunity_PostCommentToThread_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGidcommentFieldNumber = 1,
    kCommentthreadidFieldNumber = 2,
    kCountFieldNumber = 3,
    kUpvotesFieldNumber = 4,
  };
  // optional fixed64 gidcomment = 1;
  bool has_gidcomment() const;
  private:
  bool _internal_has_gidcomment() const;
  public:
  void clear_gidcomment();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidcomment() const;
  void set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidcomment() const;
  void _internal_set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 commentthreadid = 2;
  bool has_commentthreadid() const;
  private:
  bool _internal_has_commentthreadid() const;
  public:
  void clear_commentthreadid();
  ::PROTOBUF_NAMESPACE_ID::uint64 commentthreadid() const;
  void set_commentthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_commentthreadid() const;
  void _internal_set_commentthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional int32 count = 3;
  bool has_count() const;
  private:
  bool _internal_has_count() const;
  public:
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 upvotes = 4;
  bool has_upvotes() const;
  private:
  bool _internal_has_upvotes() const;
  public:
  void clear_upvotes();
  ::PROTOBUF_NAMESPACE_ID::int32 upvotes() const;
  void set_upvotes(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_upvotes() const;
  void _internal_set_upvotes(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_PostCommentToThread_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidcomment_;
  ::PROTOBUF_NAMESPACE_ID::uint64 commentthreadid_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  ::PROTOBUF_NAMESPACE_ID::int32 upvotes_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_DeleteCommentFromThread_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_DeleteCommentFromThread_Request) */ {
 public:
  inline CCommunity_DeleteCommentFromThread_Request() : CCommunity_DeleteCommentFromThread_Request(nullptr) {}
  virtual ~CCommunity_DeleteCommentFromThread_Request();
  explicit constexpr CCommunity_DeleteCommentFromThread_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_DeleteCommentFromThread_Request(const CCommunity_DeleteCommentFromThread_Request& from);
  CCommunity_DeleteCommentFromThread_Request(CCommunity_DeleteCommentFromThread_Request&& from) noexcept
    : CCommunity_DeleteCommentFromThread_Request() {
    *this = ::std::move(from);
  }

  inline CCommunity_DeleteCommentFromThread_Request& operator=(const CCommunity_DeleteCommentFromThread_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_DeleteCommentFromThread_Request& operator=(CCommunity_DeleteCommentFromThread_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_DeleteCommentFromThread_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_DeleteCommentFromThread_Request* internal_default_instance() {
    return reinterpret_cast<const CCommunity_DeleteCommentFromThread_Request*>(
               &_CCommunity_DeleteCommentFromThread_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CCommunity_DeleteCommentFromThread_Request& a, CCommunity_DeleteCommentFromThread_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_DeleteCommentFromThread_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_DeleteCommentFromThread_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_DeleteCommentFromThread_Request* New() const final {
    return CreateMaybeMessage<CCommunity_DeleteCommentFromThread_Request>(nullptr);
  }

  CCommunity_DeleteCommentFromThread_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_DeleteCommentFromThread_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_DeleteCommentFromThread_Request& from);
  void MergeFrom(const CCommunity_DeleteCommentFromThread_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_DeleteCommentFromThread_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_DeleteCommentFromThread_Request";
  }
  protected:
  explicit CCommunity_DeleteCommentFromThread_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamidFieldNumber = 1,
    kGidfeatureFieldNumber = 3,
    kGidfeature2FieldNumber = 4,
    kCommentThreadTypeFieldNumber = 2,
    kUndeleteFieldNumber = 6,
    kGidcommentFieldNumber = 5,
  };
  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 gidfeature = 3;
  bool has_gidfeature() const;
  private:
  bool _internal_has_gidfeature() const;
  public:
  void clear_gidfeature();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature() const;
  void set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidfeature() const;
  void _internal_set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 gidfeature2 = 4;
  bool has_gidfeature2() const;
  private:
  bool _internal_has_gidfeature2() const;
  public:
  void clear_gidfeature2();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature2() const;
  void set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidfeature2() const;
  void _internal_set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional .ECommentThreadType comment_thread_type = 2 [default = ECommentThreadTypeInvalid];
  bool has_comment_thread_type() const;
  private:
  bool _internal_has_comment_thread_type() const;
  public:
  void clear_comment_thread_type();
  ::ECommentThreadType comment_thread_type() const;
  void set_comment_thread_type(::ECommentThreadType value);
  private:
  ::ECommentThreadType _internal_comment_thread_type() const;
  void _internal_set_comment_thread_type(::ECommentThreadType value);
  public:

  // optional bool undelete = 6;
  bool has_undelete() const;
  private:
  bool _internal_has_undelete() const;
  public:
  void clear_undelete();
  bool undelete() const;
  void set_undelete(bool value);
  private:
  bool _internal_undelete() const;
  void _internal_set_undelete(bool value);
  public:

  // optional fixed64 gidcomment = 5;
  bool has_gidcomment() const;
  private:
  bool _internal_has_gidcomment() const;
  public:
  void clear_gidcomment();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidcomment() const;
  void set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidcomment() const;
  void _internal_set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_DeleteCommentFromThread_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature2_;
  int comment_thread_type_;
  bool undelete_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidcomment_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_DeleteCommentFromThread_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_DeleteCommentFromThread_Response) */ {
 public:
  inline CCommunity_DeleteCommentFromThread_Response() : CCommunity_DeleteCommentFromThread_Response(nullptr) {}
  virtual ~CCommunity_DeleteCommentFromThread_Response();
  explicit constexpr CCommunity_DeleteCommentFromThread_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_DeleteCommentFromThread_Response(const CCommunity_DeleteCommentFromThread_Response& from);
  CCommunity_DeleteCommentFromThread_Response(CCommunity_DeleteCommentFromThread_Response&& from) noexcept
    : CCommunity_DeleteCommentFromThread_Response() {
    *this = ::std::move(from);
  }

  inline CCommunity_DeleteCommentFromThread_Response& operator=(const CCommunity_DeleteCommentFromThread_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_DeleteCommentFromThread_Response& operator=(CCommunity_DeleteCommentFromThread_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_DeleteCommentFromThread_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_DeleteCommentFromThread_Response* internal_default_instance() {
    return reinterpret_cast<const CCommunity_DeleteCommentFromThread_Response*>(
               &_CCommunity_DeleteCommentFromThread_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CCommunity_DeleteCommentFromThread_Response& a, CCommunity_DeleteCommentFromThread_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_DeleteCommentFromThread_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_DeleteCommentFromThread_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_DeleteCommentFromThread_Response* New() const final {
    return CreateMaybeMessage<CCommunity_DeleteCommentFromThread_Response>(nullptr);
  }

  CCommunity_DeleteCommentFromThread_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_DeleteCommentFromThread_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_DeleteCommentFromThread_Response& from);
  void MergeFrom(const CCommunity_DeleteCommentFromThread_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_DeleteCommentFromThread_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_DeleteCommentFromThread_Response";
  }
  protected:
  explicit CCommunity_DeleteCommentFromThread_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CCommunity_DeleteCommentFromThread_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_RateCommentThread_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_RateCommentThread_Request) */ {
 public:
  inline CCommunity_RateCommentThread_Request() : CCommunity_RateCommentThread_Request(nullptr) {}
  virtual ~CCommunity_RateCommentThread_Request();
  explicit constexpr CCommunity_RateCommentThread_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_RateCommentThread_Request(const CCommunity_RateCommentThread_Request& from);
  CCommunity_RateCommentThread_Request(CCommunity_RateCommentThread_Request&& from) noexcept
    : CCommunity_RateCommentThread_Request() {
    *this = ::std::move(from);
  }

  inline CCommunity_RateCommentThread_Request& operator=(const CCommunity_RateCommentThread_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_RateCommentThread_Request& operator=(CCommunity_RateCommentThread_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_RateCommentThread_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_RateCommentThread_Request* internal_default_instance() {
    return reinterpret_cast<const CCommunity_RateCommentThread_Request*>(
               &_CCommunity_RateCommentThread_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CCommunity_RateCommentThread_Request& a, CCommunity_RateCommentThread_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_RateCommentThread_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_RateCommentThread_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_RateCommentThread_Request* New() const final {
    return CreateMaybeMessage<CCommunity_RateCommentThread_Request>(nullptr);
  }

  CCommunity_RateCommentThread_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_RateCommentThread_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_RateCommentThread_Request& from);
  void MergeFrom(const CCommunity_RateCommentThread_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_RateCommentThread_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_RateCommentThread_Request";
  }
  protected:
  explicit CCommunity_RateCommentThread_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommentthreadtypeFieldNumber = 1,
    kSteamidFieldNumber = 2,
    kGidfeatureFieldNumber = 3,
    kGidfeature2FieldNumber = 4,
    kGidcommentFieldNumber = 5,
    kRateUpFieldNumber = 6,
    kSuppressNotificationsFieldNumber = 7,
  };
  // optional string commentthreadtype = 1;
  bool has_commentthreadtype() const;
  private:
  bool _internal_has_commentthreadtype() const;
  public:
  void clear_commentthreadtype();
  const std::string& commentthreadtype() const;
  void set_commentthreadtype(const std::string& value);
  void set_commentthreadtype(std::string&& value);
  void set_commentthreadtype(const char* value);
  void set_commentthreadtype(const char* value, size_t size);
  std::string* mutable_commentthreadtype();
  std::string* release_commentthreadtype();
  void set_allocated_commentthreadtype(std::string* commentthreadtype);
  private:
  const std::string& _internal_commentthreadtype() const;
  void _internal_set_commentthreadtype(const std::string& value);
  std::string* _internal_mutable_commentthreadtype();
  public:

  // optional uint64 steamid = 2;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 gidfeature = 3;
  bool has_gidfeature() const;
  private:
  bool _internal_has_gidfeature() const;
  public:
  void clear_gidfeature();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature() const;
  void set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidfeature() const;
  void _internal_set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 gidfeature2 = 4;
  bool has_gidfeature2() const;
  private:
  bool _internal_has_gidfeature2() const;
  public:
  void clear_gidfeature2();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature2() const;
  void set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidfeature2() const;
  void _internal_set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 gidcomment = 5;
  bool has_gidcomment() const;
  private:
  bool _internal_has_gidcomment() const;
  public:
  void clear_gidcomment();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidcomment() const;
  void set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidcomment() const;
  void _internal_set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool rate_up = 6;
  bool has_rate_up() const;
  private:
  bool _internal_has_rate_up() const;
  public:
  void clear_rate_up();
  bool rate_up() const;
  void set_rate_up(bool value);
  private:
  bool _internal_rate_up() const;
  void _internal_set_rate_up(bool value);
  public:

  // optional bool suppress_notifications = 7;
  bool has_suppress_notifications() const;
  private:
  bool _internal_has_suppress_notifications() const;
  public:
  void clear_suppress_notifications();
  bool suppress_notifications() const;
  void set_suppress_notifications(bool value);
  private:
  bool _internal_suppress_notifications() const;
  void _internal_set_suppress_notifications(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_RateCommentThread_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr commentthreadtype_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature2_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidcomment_;
  bool rate_up_;
  bool suppress_notifications_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_RateCommentThread_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_RateCommentThread_Response) */ {
 public:
  inline CCommunity_RateCommentThread_Response() : CCommunity_RateCommentThread_Response(nullptr) {}
  virtual ~CCommunity_RateCommentThread_Response();
  explicit constexpr CCommunity_RateCommentThread_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_RateCommentThread_Response(const CCommunity_RateCommentThread_Response& from);
  CCommunity_RateCommentThread_Response(CCommunity_RateCommentThread_Response&& from) noexcept
    : CCommunity_RateCommentThread_Response() {
    *this = ::std::move(from);
  }

  inline CCommunity_RateCommentThread_Response& operator=(const CCommunity_RateCommentThread_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_RateCommentThread_Response& operator=(CCommunity_RateCommentThread_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_RateCommentThread_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_RateCommentThread_Response* internal_default_instance() {
    return reinterpret_cast<const CCommunity_RateCommentThread_Response*>(
               &_CCommunity_RateCommentThread_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CCommunity_RateCommentThread_Response& a, CCommunity_RateCommentThread_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_RateCommentThread_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_RateCommentThread_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_RateCommentThread_Response* New() const final {
    return CreateMaybeMessage<CCommunity_RateCommentThread_Response>(nullptr);
  }

  CCommunity_RateCommentThread_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_RateCommentThread_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_RateCommentThread_Response& from);
  void MergeFrom(const CCommunity_RateCommentThread_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_RateCommentThread_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_RateCommentThread_Response";
  }
  protected:
  explicit CCommunity_RateCommentThread_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGidcommentFieldNumber = 1,
    kCommentthreadidFieldNumber = 2,
    kCountFieldNumber = 3,
    kUpvotesFieldNumber = 4,
    kHasUpvotedFieldNumber = 5,
  };
  // optional uint64 gidcomment = 1;
  bool has_gidcomment() const;
  private:
  bool _internal_has_gidcomment() const;
  public:
  void clear_gidcomment();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidcomment() const;
  void set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidcomment() const;
  void _internal_set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 commentthreadid = 2;
  bool has_commentthreadid() const;
  private:
  bool _internal_has_commentthreadid() const;
  public:
  void clear_commentthreadid();
  ::PROTOBUF_NAMESPACE_ID::uint64 commentthreadid() const;
  void set_commentthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_commentthreadid() const;
  void _internal_set_commentthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 count = 3;
  bool has_count() const;
  private:
  bool _internal_has_count() const;
  public:
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 upvotes = 4;
  bool has_upvotes() const;
  private:
  bool _internal_has_upvotes() const;
  public:
  void clear_upvotes();
  ::PROTOBUF_NAMESPACE_ID::uint32 upvotes() const;
  void set_upvotes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_upvotes() const;
  void _internal_set_upvotes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool has_upvoted = 5;
  bool has_has_upvoted() const;
  private:
  bool _internal_has_has_upvoted() const;
  public:
  void clear_has_upvoted();
  bool has_upvoted() const;
  void set_has_upvoted(bool value);
  private:
  bool _internal_has_upvoted() const;
  void _internal_set_has_upvoted(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_RateCommentThread_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidcomment_;
  ::PROTOBUF_NAMESPACE_ID::uint64 commentthreadid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 upvotes_;
  bool has_upvoted_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetCommentThreadRatings_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetCommentThreadRatings_Request) */ {
 public:
  inline CCommunity_GetCommentThreadRatings_Request() : CCommunity_GetCommentThreadRatings_Request(nullptr) {}
  virtual ~CCommunity_GetCommentThreadRatings_Request();
  explicit constexpr CCommunity_GetCommentThreadRatings_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetCommentThreadRatings_Request(const CCommunity_GetCommentThreadRatings_Request& from);
  CCommunity_GetCommentThreadRatings_Request(CCommunity_GetCommentThreadRatings_Request&& from) noexcept
    : CCommunity_GetCommentThreadRatings_Request() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetCommentThreadRatings_Request& operator=(const CCommunity_GetCommentThreadRatings_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetCommentThreadRatings_Request& operator=(CCommunity_GetCommentThreadRatings_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetCommentThreadRatings_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetCommentThreadRatings_Request* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetCommentThreadRatings_Request*>(
               &_CCommunity_GetCommentThreadRatings_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CCommunity_GetCommentThreadRatings_Request& a, CCommunity_GetCommentThreadRatings_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetCommentThreadRatings_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetCommentThreadRatings_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetCommentThreadRatings_Request* New() const final {
    return CreateMaybeMessage<CCommunity_GetCommentThreadRatings_Request>(nullptr);
  }

  CCommunity_GetCommentThreadRatings_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetCommentThreadRatings_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetCommentThreadRatings_Request& from);
  void MergeFrom(const CCommunity_GetCommentThreadRatings_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetCommentThreadRatings_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetCommentThreadRatings_Request";
  }
  protected:
  explicit CCommunity_GetCommentThreadRatings_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommentthreadtypeFieldNumber = 1,
    kSteamidFieldNumber = 2,
    kGidfeatureFieldNumber = 3,
    kGidfeature2FieldNumber = 4,
    kGidcommentFieldNumber = 5,
    kMaxResultsFieldNumber = 6,
  };
  // optional string commentthreadtype = 1;
  bool has_commentthreadtype() const;
  private:
  bool _internal_has_commentthreadtype() const;
  public:
  void clear_commentthreadtype();
  const std::string& commentthreadtype() const;
  void set_commentthreadtype(const std::string& value);
  void set_commentthreadtype(std::string&& value);
  void set_commentthreadtype(const char* value);
  void set_commentthreadtype(const char* value, size_t size);
  std::string* mutable_commentthreadtype();
  std::string* release_commentthreadtype();
  void set_allocated_commentthreadtype(std::string* commentthreadtype);
  private:
  const std::string& _internal_commentthreadtype() const;
  void _internal_set_commentthreadtype(const std::string& value);
  std::string* _internal_mutable_commentthreadtype();
  public:

  // optional uint64 steamid = 2;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 gidfeature = 3;
  bool has_gidfeature() const;
  private:
  bool _internal_has_gidfeature() const;
  public:
  void clear_gidfeature();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature() const;
  void set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidfeature() const;
  void _internal_set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 gidfeature2 = 4;
  bool has_gidfeature2() const;
  private:
  bool _internal_has_gidfeature2() const;
  public:
  void clear_gidfeature2();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature2() const;
  void set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidfeature2() const;
  void _internal_set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 gidcomment = 5;
  bool has_gidcomment() const;
  private:
  bool _internal_has_gidcomment() const;
  public:
  void clear_gidcomment();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidcomment() const;
  void set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidcomment() const;
  void _internal_set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 max_results = 6;
  bool has_max_results() const;
  private:
  bool _internal_has_max_results() const;
  public:
  void clear_max_results();
  ::PROTOBUF_NAMESPACE_ID::uint32 max_results() const;
  void set_max_results(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_max_results() const;
  void _internal_set_max_results(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_GetCommentThreadRatings_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr commentthreadtype_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidfeature2_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidcomment_;
  ::PROTOBUF_NAMESPACE_ID::uint32 max_results_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetCommentThreadRatings_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetCommentThreadRatings_Response) */ {
 public:
  inline CCommunity_GetCommentThreadRatings_Response() : CCommunity_GetCommentThreadRatings_Response(nullptr) {}
  virtual ~CCommunity_GetCommentThreadRatings_Response();
  explicit constexpr CCommunity_GetCommentThreadRatings_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetCommentThreadRatings_Response(const CCommunity_GetCommentThreadRatings_Response& from);
  CCommunity_GetCommentThreadRatings_Response(CCommunity_GetCommentThreadRatings_Response&& from) noexcept
    : CCommunity_GetCommentThreadRatings_Response() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetCommentThreadRatings_Response& operator=(const CCommunity_GetCommentThreadRatings_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetCommentThreadRatings_Response& operator=(CCommunity_GetCommentThreadRatings_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetCommentThreadRatings_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetCommentThreadRatings_Response* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetCommentThreadRatings_Response*>(
               &_CCommunity_GetCommentThreadRatings_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CCommunity_GetCommentThreadRatings_Response& a, CCommunity_GetCommentThreadRatings_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetCommentThreadRatings_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetCommentThreadRatings_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetCommentThreadRatings_Response* New() const final {
    return CreateMaybeMessage<CCommunity_GetCommentThreadRatings_Response>(nullptr);
  }

  CCommunity_GetCommentThreadRatings_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetCommentThreadRatings_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetCommentThreadRatings_Response& from);
  void MergeFrom(const CCommunity_GetCommentThreadRatings_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetCommentThreadRatings_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetCommentThreadRatings_Response";
  }
  protected:
  explicit CCommunity_GetCommentThreadRatings_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUpvoterAccountidsFieldNumber = 5,
    kCommentthreadidFieldNumber = 1,
    kGidcommentFieldNumber = 2,
    kUpvotesFieldNumber = 3,
    kHasUpvotedFieldNumber = 4,
  };
  // repeated uint32 upvoter_accountids = 5;
  int upvoter_accountids_size() const;
  private:
  int _internal_upvoter_accountids_size() const;
  public:
  void clear_upvoter_accountids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_upvoter_accountids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_upvoter_accountids() const;
  void _internal_add_upvoter_accountids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_upvoter_accountids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 upvoter_accountids(int index) const;
  void set_upvoter_accountids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_upvoter_accountids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      upvoter_accountids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_upvoter_accountids();

  // optional uint64 commentthreadid = 1;
  bool has_commentthreadid() const;
  private:
  bool _internal_has_commentthreadid() const;
  public:
  void clear_commentthreadid();
  ::PROTOBUF_NAMESPACE_ID::uint64 commentthreadid() const;
  void set_commentthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_commentthreadid() const;
  void _internal_set_commentthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 gidcomment = 2;
  bool has_gidcomment() const;
  private:
  bool _internal_has_gidcomment() const;
  public:
  void clear_gidcomment();
  ::PROTOBUF_NAMESPACE_ID::uint64 gidcomment() const;
  void set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gidcomment() const;
  void _internal_set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 upvotes = 3;
  bool has_upvotes() const;
  private:
  bool _internal_has_upvotes() const;
  public:
  void clear_upvotes();
  ::PROTOBUF_NAMESPACE_ID::uint32 upvotes() const;
  void set_upvotes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_upvotes() const;
  void _internal_set_upvotes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool has_upvoted = 4;
  bool has_has_upvoted() const;
  private:
  bool _internal_has_has_upvoted() const;
  public:
  void clear_has_upvoted();
  bool has_upvoted() const;
  void set_has_upvoted(bool value);
  private:
  bool _internal_has_upvoted() const;
  void _internal_set_has_upvoted(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_GetCommentThreadRatings_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > upvoter_accountids_;
  ::PROTOBUF_NAMESPACE_ID::uint64 commentthreadid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 gidcomment_;
  ::PROTOBUF_NAMESPACE_ID::uint32 upvotes_;
  bool has_upvoted_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_RateClanAnnouncement_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_RateClanAnnouncement_Request) */ {
 public:
  inline CCommunity_RateClanAnnouncement_Request() : CCommunity_RateClanAnnouncement_Request(nullptr) {}
  virtual ~CCommunity_RateClanAnnouncement_Request();
  explicit constexpr CCommunity_RateClanAnnouncement_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_RateClanAnnouncement_Request(const CCommunity_RateClanAnnouncement_Request& from);
  CCommunity_RateClanAnnouncement_Request(CCommunity_RateClanAnnouncement_Request&& from) noexcept
    : CCommunity_RateClanAnnouncement_Request() {
    *this = ::std::move(from);
  }

  inline CCommunity_RateClanAnnouncement_Request& operator=(const CCommunity_RateClanAnnouncement_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_RateClanAnnouncement_Request& operator=(CCommunity_RateClanAnnouncement_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_RateClanAnnouncement_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_RateClanAnnouncement_Request* internal_default_instance() {
    return reinterpret_cast<const CCommunity_RateClanAnnouncement_Request*>(
               &_CCommunity_RateClanAnnouncement_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CCommunity_RateClanAnnouncement_Request& a, CCommunity_RateClanAnnouncement_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_RateClanAnnouncement_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_RateClanAnnouncement_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_RateClanAnnouncement_Request* New() const final {
    return CreateMaybeMessage<CCommunity_RateClanAnnouncement_Request>(nullptr);
  }

  CCommunity_RateClanAnnouncement_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_RateClanAnnouncement_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_RateClanAnnouncement_Request& from);
  void MergeFrom(const CCommunity_RateClanAnnouncement_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_RateClanAnnouncement_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_RateClanAnnouncement_Request";
  }
  protected:
  explicit CCommunity_RateClanAnnouncement_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAnnouncementidFieldNumber = 1,
    kVoteUpFieldNumber = 2,
    kClanAccountidFieldNumber = 3,
  };
  // optional uint64 announcementid = 1;
  bool has_announcementid() const;
  private:
  bool _internal_has_announcementid() const;
  public:
  void clear_announcementid();
  ::PROTOBUF_NAMESPACE_ID::uint64 announcementid() const;
  void set_announcementid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_announcementid() const;
  void _internal_set_announcementid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool vote_up = 2;
  bool has_vote_up() const;
  private:
  bool _internal_has_vote_up() const;
  public:
  void clear_vote_up();
  bool vote_up() const;
  void set_vote_up(bool value);
  private:
  bool _internal_vote_up() const;
  void _internal_set_vote_up(bool value);
  public:

  // optional uint32 clan_accountid = 3;
  bool has_clan_accountid() const;
  private:
  bool _internal_has_clan_accountid() const;
  public:
  void clear_clan_accountid();
  ::PROTOBUF_NAMESPACE_ID::uint32 clan_accountid() const;
  void set_clan_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_clan_accountid() const;
  void _internal_set_clan_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_RateClanAnnouncement_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 announcementid_;
  bool vote_up_;
  ::PROTOBUF_NAMESPACE_ID::uint32 clan_accountid_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_RateClanAnnouncement_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_RateClanAnnouncement_Response) */ {
 public:
  inline CCommunity_RateClanAnnouncement_Response() : CCommunity_RateClanAnnouncement_Response(nullptr) {}
  virtual ~CCommunity_RateClanAnnouncement_Response();
  explicit constexpr CCommunity_RateClanAnnouncement_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_RateClanAnnouncement_Response(const CCommunity_RateClanAnnouncement_Response& from);
  CCommunity_RateClanAnnouncement_Response(CCommunity_RateClanAnnouncement_Response&& from) noexcept
    : CCommunity_RateClanAnnouncement_Response() {
    *this = ::std::move(from);
  }

  inline CCommunity_RateClanAnnouncement_Response& operator=(const CCommunity_RateClanAnnouncement_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_RateClanAnnouncement_Response& operator=(CCommunity_RateClanAnnouncement_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_RateClanAnnouncement_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_RateClanAnnouncement_Response* internal_default_instance() {
    return reinterpret_cast<const CCommunity_RateClanAnnouncement_Response*>(
               &_CCommunity_RateClanAnnouncement_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CCommunity_RateClanAnnouncement_Response& a, CCommunity_RateClanAnnouncement_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_RateClanAnnouncement_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_RateClanAnnouncement_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_RateClanAnnouncement_Response* New() const final {
    return CreateMaybeMessage<CCommunity_RateClanAnnouncement_Response>(nullptr);
  }

  CCommunity_RateClanAnnouncement_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_RateClanAnnouncement_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_RateClanAnnouncement_Response& from);
  void MergeFrom(const CCommunity_RateClanAnnouncement_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_RateClanAnnouncement_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_RateClanAnnouncement_Response";
  }
  protected:
  explicit CCommunity_RateClanAnnouncement_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CCommunity_RateClanAnnouncement_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetClanAnnouncementVoteForUser_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetClanAnnouncementVoteForUser_Request) */ {
 public:
  inline CCommunity_GetClanAnnouncementVoteForUser_Request() : CCommunity_GetClanAnnouncementVoteForUser_Request(nullptr) {}
  virtual ~CCommunity_GetClanAnnouncementVoteForUser_Request();
  explicit constexpr CCommunity_GetClanAnnouncementVoteForUser_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetClanAnnouncementVoteForUser_Request(const CCommunity_GetClanAnnouncementVoteForUser_Request& from);
  CCommunity_GetClanAnnouncementVoteForUser_Request(CCommunity_GetClanAnnouncementVoteForUser_Request&& from) noexcept
    : CCommunity_GetClanAnnouncementVoteForUser_Request() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetClanAnnouncementVoteForUser_Request& operator=(const CCommunity_GetClanAnnouncementVoteForUser_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetClanAnnouncementVoteForUser_Request& operator=(CCommunity_GetClanAnnouncementVoteForUser_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetClanAnnouncementVoteForUser_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetClanAnnouncementVoteForUser_Request* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetClanAnnouncementVoteForUser_Request*>(
               &_CCommunity_GetClanAnnouncementVoteForUser_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CCommunity_GetClanAnnouncementVoteForUser_Request& a, CCommunity_GetClanAnnouncementVoteForUser_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetClanAnnouncementVoteForUser_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetClanAnnouncementVoteForUser_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetClanAnnouncementVoteForUser_Request* New() const final {
    return CreateMaybeMessage<CCommunity_GetClanAnnouncementVoteForUser_Request>(nullptr);
  }

  CCommunity_GetClanAnnouncementVoteForUser_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetClanAnnouncementVoteForUser_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetClanAnnouncementVoteForUser_Request& from);
  void MergeFrom(const CCommunity_GetClanAnnouncementVoteForUser_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetClanAnnouncementVoteForUser_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetClanAnnouncementVoteForUser_Request";
  }
  protected:
  explicit CCommunity_GetClanAnnouncementVoteForUser_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAnnouncementidFieldNumber = 1,
  };
  // optional uint64 announcementid = 1;
  bool has_announcementid() const;
  private:
  bool _internal_has_announcementid() const;
  public:
  void clear_announcementid();
  ::PROTOBUF_NAMESPACE_ID::uint64 announcementid() const;
  void set_announcementid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_announcementid() const;
  void _internal_set_announcementid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_GetClanAnnouncementVoteForUser_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 announcementid_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetClanAnnouncementVoteForUser_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetClanAnnouncementVoteForUser_Response) */ {
 public:
  inline CCommunity_GetClanAnnouncementVoteForUser_Response() : CCommunity_GetClanAnnouncementVoteForUser_Response(nullptr) {}
  virtual ~CCommunity_GetClanAnnouncementVoteForUser_Response();
  explicit constexpr CCommunity_GetClanAnnouncementVoteForUser_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetClanAnnouncementVoteForUser_Response(const CCommunity_GetClanAnnouncementVoteForUser_Response& from);
  CCommunity_GetClanAnnouncementVoteForUser_Response(CCommunity_GetClanAnnouncementVoteForUser_Response&& from) noexcept
    : CCommunity_GetClanAnnouncementVoteForUser_Response() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetClanAnnouncementVoteForUser_Response& operator=(const CCommunity_GetClanAnnouncementVoteForUser_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetClanAnnouncementVoteForUser_Response& operator=(CCommunity_GetClanAnnouncementVoteForUser_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetClanAnnouncementVoteForUser_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetClanAnnouncementVoteForUser_Response* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetClanAnnouncementVoteForUser_Response*>(
               &_CCommunity_GetClanAnnouncementVoteForUser_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CCommunity_GetClanAnnouncementVoteForUser_Response& a, CCommunity_GetClanAnnouncementVoteForUser_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetClanAnnouncementVoteForUser_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetClanAnnouncementVoteForUser_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetClanAnnouncementVoteForUser_Response* New() const final {
    return CreateMaybeMessage<CCommunity_GetClanAnnouncementVoteForUser_Response>(nullptr);
  }

  CCommunity_GetClanAnnouncementVoteForUser_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetClanAnnouncementVoteForUser_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetClanAnnouncementVoteForUser_Response& from);
  void MergeFrom(const CCommunity_GetClanAnnouncementVoteForUser_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetClanAnnouncementVoteForUser_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetClanAnnouncementVoteForUser_Response";
  }
  protected:
  explicit CCommunity_GetClanAnnouncementVoteForUser_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVotedUpFieldNumber = 1,
    kVotedDownFieldNumber = 2,
  };
  // optional bool voted_up = 1;
  bool has_voted_up() const;
  private:
  bool _internal_has_voted_up() const;
  public:
  void clear_voted_up();
  bool voted_up() const;
  void set_voted_up(bool value);
  private:
  bool _internal_voted_up() const;
  void _internal_set_voted_up(bool value);
  public:

  // optional bool voted_down = 2;
  bool has_voted_down() const;
  private:
  bool _internal_has_voted_down() const;
  public:
  void clear_voted_down();
  bool voted_down() const;
  void set_voted_down(bool value);
  private:
  bool _internal_voted_down() const;
  void _internal_set_voted_down(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_GetClanAnnouncementVoteForUser_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool voted_up_;
  bool voted_down_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetAvatarHistory_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetAvatarHistory_Request) */ {
 public:
  inline CCommunity_GetAvatarHistory_Request() : CCommunity_GetAvatarHistory_Request(nullptr) {}
  virtual ~CCommunity_GetAvatarHistory_Request();
  explicit constexpr CCommunity_GetAvatarHistory_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetAvatarHistory_Request(const CCommunity_GetAvatarHistory_Request& from);
  CCommunity_GetAvatarHistory_Request(CCommunity_GetAvatarHistory_Request&& from) noexcept
    : CCommunity_GetAvatarHistory_Request() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetAvatarHistory_Request& operator=(const CCommunity_GetAvatarHistory_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetAvatarHistory_Request& operator=(CCommunity_GetAvatarHistory_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetAvatarHistory_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetAvatarHistory_Request* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetAvatarHistory_Request*>(
               &_CCommunity_GetAvatarHistory_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CCommunity_GetAvatarHistory_Request& a, CCommunity_GetAvatarHistory_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetAvatarHistory_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetAvatarHistory_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetAvatarHistory_Request* New() const final {
    return CreateMaybeMessage<CCommunity_GetAvatarHistory_Request>(nullptr);
  }

  CCommunity_GetAvatarHistory_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetAvatarHistory_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetAvatarHistory_Request& from);
  void MergeFrom(const CCommunity_GetAvatarHistory_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetAvatarHistory_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetAvatarHistory_Request";
  }
  protected:
  explicit CCommunity_GetAvatarHistory_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamidFieldNumber = 1,
    kFilterUserUploadedOnlyFieldNumber = 2,
  };
  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool filter_user_uploaded_only = 2;
  bool has_filter_user_uploaded_only() const;
  private:
  bool _internal_has_filter_user_uploaded_only() const;
  public:
  void clear_filter_user_uploaded_only();
  bool filter_user_uploaded_only() const;
  void set_filter_user_uploaded_only(bool value);
  private:
  bool _internal_filter_user_uploaded_only() const;
  void _internal_set_filter_user_uploaded_only(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_GetAvatarHistory_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  bool filter_user_uploaded_only_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetAvatarHistory_Response_AvatarData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetAvatarHistory_Response.AvatarData) */ {
 public:
  inline CCommunity_GetAvatarHistory_Response_AvatarData() : CCommunity_GetAvatarHistory_Response_AvatarData(nullptr) {}
  virtual ~CCommunity_GetAvatarHistory_Response_AvatarData();
  explicit constexpr CCommunity_GetAvatarHistory_Response_AvatarData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetAvatarHistory_Response_AvatarData(const CCommunity_GetAvatarHistory_Response_AvatarData& from);
  CCommunity_GetAvatarHistory_Response_AvatarData(CCommunity_GetAvatarHistory_Response_AvatarData&& from) noexcept
    : CCommunity_GetAvatarHistory_Response_AvatarData() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetAvatarHistory_Response_AvatarData& operator=(const CCommunity_GetAvatarHistory_Response_AvatarData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetAvatarHistory_Response_AvatarData& operator=(CCommunity_GetAvatarHistory_Response_AvatarData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetAvatarHistory_Response_AvatarData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetAvatarHistory_Response_AvatarData* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetAvatarHistory_Response_AvatarData*>(
               &_CCommunity_GetAvatarHistory_Response_AvatarData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CCommunity_GetAvatarHistory_Response_AvatarData& a, CCommunity_GetAvatarHistory_Response_AvatarData& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetAvatarHistory_Response_AvatarData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetAvatarHistory_Response_AvatarData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetAvatarHistory_Response_AvatarData* New() const final {
    return CreateMaybeMessage<CCommunity_GetAvatarHistory_Response_AvatarData>(nullptr);
  }

  CCommunity_GetAvatarHistory_Response_AvatarData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetAvatarHistory_Response_AvatarData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetAvatarHistory_Response_AvatarData& from);
  void MergeFrom(const CCommunity_GetAvatarHistory_Response_AvatarData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetAvatarHistory_Response_AvatarData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetAvatarHistory_Response.AvatarData";
  }
  protected:
  explicit CCommunity_GetAvatarHistory_Response_AvatarData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAvatarSha1FieldNumber = 1,
    kUserUploadedFieldNumber = 2,
    kTimestampFieldNumber = 3,
  };
  // optional string avatar_sha1 = 1;
  bool has_avatar_sha1() const;
  private:
  bool _internal_has_avatar_sha1() const;
  public:
  void clear_avatar_sha1();
  const std::string& avatar_sha1() const;
  void set_avatar_sha1(const std::string& value);
  void set_avatar_sha1(std::string&& value);
  void set_avatar_sha1(const char* value);
  void set_avatar_sha1(const char* value, size_t size);
  std::string* mutable_avatar_sha1();
  std::string* release_avatar_sha1();
  void set_allocated_avatar_sha1(std::string* avatar_sha1);
  private:
  const std::string& _internal_avatar_sha1() const;
  void _internal_set_avatar_sha1(const std::string& value);
  std::string* _internal_mutable_avatar_sha1();
  public:

  // optional bool user_uploaded = 2;
  bool has_user_uploaded() const;
  private:
  bool _internal_has_user_uploaded() const;
  public:
  void clear_user_uploaded();
  bool user_uploaded() const;
  void set_user_uploaded(bool value);
  private:
  bool _internal_user_uploaded() const;
  void _internal_set_user_uploaded(bool value);
  public:

  // optional uint32 timestamp = 3;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint32 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_GetAvatarHistory_Response.AvatarData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr avatar_sha1_;
  bool user_uploaded_;
  ::PROTOBUF_NAMESPACE_ID::uint32 timestamp_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetAvatarHistory_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetAvatarHistory_Response) */ {
 public:
  inline CCommunity_GetAvatarHistory_Response() : CCommunity_GetAvatarHistory_Response(nullptr) {}
  virtual ~CCommunity_GetAvatarHistory_Response();
  explicit constexpr CCommunity_GetAvatarHistory_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetAvatarHistory_Response(const CCommunity_GetAvatarHistory_Response& from);
  CCommunity_GetAvatarHistory_Response(CCommunity_GetAvatarHistory_Response&& from) noexcept
    : CCommunity_GetAvatarHistory_Response() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetAvatarHistory_Response& operator=(const CCommunity_GetAvatarHistory_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetAvatarHistory_Response& operator=(CCommunity_GetAvatarHistory_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetAvatarHistory_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetAvatarHistory_Response* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetAvatarHistory_Response*>(
               &_CCommunity_GetAvatarHistory_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CCommunity_GetAvatarHistory_Response& a, CCommunity_GetAvatarHistory_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetAvatarHistory_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetAvatarHistory_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetAvatarHistory_Response* New() const final {
    return CreateMaybeMessage<CCommunity_GetAvatarHistory_Response>(nullptr);
  }

  CCommunity_GetAvatarHistory_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetAvatarHistory_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetAvatarHistory_Response& from);
  void MergeFrom(const CCommunity_GetAvatarHistory_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetAvatarHistory_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetAvatarHistory_Response";
  }
  protected:
  explicit CCommunity_GetAvatarHistory_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CCommunity_GetAvatarHistory_Response_AvatarData AvatarData;

  // accessors -------------------------------------------------------

  enum : int {
    kAvatarsFieldNumber = 1,
  };
  // repeated .CCommunity_GetAvatarHistory_Response.AvatarData avatars = 1;
  int avatars_size() const;
  private:
  int _internal_avatars_size() const;
  public:
  void clear_avatars();
  ::CCommunity_GetAvatarHistory_Response_AvatarData* mutable_avatars(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_GetAvatarHistory_Response_AvatarData >*
      mutable_avatars();
  private:
  const ::CCommunity_GetAvatarHistory_Response_AvatarData& _internal_avatars(int index) const;
  ::CCommunity_GetAvatarHistory_Response_AvatarData* _internal_add_avatars();
  public:
  const ::CCommunity_GetAvatarHistory_Response_AvatarData& avatars(int index) const;
  ::CCommunity_GetAvatarHistory_Response_AvatarData* add_avatars();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_GetAvatarHistory_Response_AvatarData >&
      avatars() const;

  // @@protoc_insertion_point(class_scope:CCommunity_GetAvatarHistory_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_GetAvatarHistory_Response_AvatarData > avatars_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CAppPriority PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CAppPriority) */ {
 public:
  inline CAppPriority() : CAppPriority(nullptr) {}
  virtual ~CAppPriority();
  explicit constexpr CAppPriority(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CAppPriority(const CAppPriority& from);
  CAppPriority(CAppPriority&& from) noexcept
    : CAppPriority() {
    *this = ::std::move(from);
  }

  inline CAppPriority& operator=(const CAppPriority& from) {
    CopyFrom(from);
    return *this;
  }
  inline CAppPriority& operator=(CAppPriority&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CAppPriority& default_instance() {
    return *internal_default_instance();
  }
  static inline const CAppPriority* internal_default_instance() {
    return reinterpret_cast<const CAppPriority*>(
               &_CAppPriority_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CAppPriority& a, CAppPriority& b) {
    a.Swap(&b);
  }
  inline void Swap(CAppPriority* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CAppPriority* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CAppPriority* New() const final {
    return CreateMaybeMessage<CAppPriority>(nullptr);
  }

  CAppPriority* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CAppPriority>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CAppPriority& from);
  void MergeFrom(const CAppPriority& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CAppPriority* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CAppPriority";
  }
  protected:
  explicit CAppPriority(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppidFieldNumber = 2,
    kPriorityFieldNumber = 1,
  };
  // repeated uint32 appid = 2;
  int appid_size() const;
  private:
  int _internal_appid_size() const;
  public:
  void clear_appid();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_appid() const;
  void _internal_add_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_appid();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 appid(int index) const;
  void set_appid(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      appid() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_appid();

  // optional uint32 priority = 1;
  bool has_priority() const;
  private:
  bool _internal_has_priority() const;
  public:
  void clear_priority();
  ::PROTOBUF_NAMESPACE_ID::uint32 priority() const;
  void set_priority(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_priority() const;
  void _internal_set_priority(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CAppPriority)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > appid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 priority_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetUserPartnerEventNews_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetUserPartnerEventNews_Request) */ {
 public:
  inline CCommunity_GetUserPartnerEventNews_Request() : CCommunity_GetUserPartnerEventNews_Request(nullptr) {}
  virtual ~CCommunity_GetUserPartnerEventNews_Request();
  explicit constexpr CCommunity_GetUserPartnerEventNews_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetUserPartnerEventNews_Request(const CCommunity_GetUserPartnerEventNews_Request& from);
  CCommunity_GetUserPartnerEventNews_Request(CCommunity_GetUserPartnerEventNews_Request&& from) noexcept
    : CCommunity_GetUserPartnerEventNews_Request() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetUserPartnerEventNews_Request& operator=(const CCommunity_GetUserPartnerEventNews_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetUserPartnerEventNews_Request& operator=(CCommunity_GetUserPartnerEventNews_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetUserPartnerEventNews_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetUserPartnerEventNews_Request* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetUserPartnerEventNews_Request*>(
               &_CCommunity_GetUserPartnerEventNews_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(CCommunity_GetUserPartnerEventNews_Request& a, CCommunity_GetUserPartnerEventNews_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetUserPartnerEventNews_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetUserPartnerEventNews_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetUserPartnerEventNews_Request* New() const final {
    return CreateMaybeMessage<CCommunity_GetUserPartnerEventNews_Request>(nullptr);
  }

  CCommunity_GetUserPartnerEventNews_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetUserPartnerEventNews_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetUserPartnerEventNews_Request& from);
  void MergeFrom(const CCommunity_GetUserPartnerEventNews_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetUserPartnerEventNews_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetUserPartnerEventNews_Request";
  }
  protected:
  explicit CCommunity_GetUserPartnerEventNews_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLanguagePreferenceFieldNumber = 5,
    kFilterEventTypeFieldNumber = 6,
    kAppListFieldNumber = 8,
    kCountFieldNumber = 1,
    kOffsetFieldNumber = 2,
    kRtime32StartTimeFieldNumber = 3,
    kRtime32EndTimeFieldNumber = 4,
    kFilterToAppidFieldNumber = 7,
    kCountAfterFieldNumber = 9,
    kCountBeforeFieldNumber = 10,
  };
  // repeated uint32 language_preference = 5;
  int language_preference_size() const;
  private:
  int _internal_language_preference_size() const;
  public:
  void clear_language_preference();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_language_preference(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_language_preference() const;
  void _internal_add_language_preference(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_language_preference();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 language_preference(int index) const;
  void set_language_preference(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_language_preference(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      language_preference() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_language_preference();

  // repeated .EProtoClanEventType filter_event_type = 6;
  int filter_event_type_size() const;
  private:
  int _internal_filter_event_type_size() const;
  public:
  void clear_filter_event_type();
  private:
  ::EProtoClanEventType _internal_filter_event_type(int index) const;
  void _internal_add_filter_event_type(::EProtoClanEventType value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_filter_event_type();
  public:
  ::EProtoClanEventType filter_event_type(int index) const;
  void set_filter_event_type(int index, ::EProtoClanEventType value);
  void add_filter_event_type(::EProtoClanEventType value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& filter_event_type() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_filter_event_type();

  // repeated .CAppPriority app_list = 8;
  int app_list_size() const;
  private:
  int _internal_app_list_size() const;
  public:
  void clear_app_list();
  ::CAppPriority* mutable_app_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CAppPriority >*
      mutable_app_list();
  private:
  const ::CAppPriority& _internal_app_list(int index) const;
  ::CAppPriority* _internal_add_app_list();
  public:
  const ::CAppPriority& app_list(int index) const;
  ::CAppPriority* add_app_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CAppPriority >&
      app_list() const;

  // optional uint32 count = 1;
  bool has_count() const;
  private:
  bool _internal_has_count() const;
  public:
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 offset = 2;
  bool has_offset() const;
  private:
  bool _internal_has_offset() const;
  public:
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_offset() const;
  void _internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 rtime32_start_time = 3;
  bool has_rtime32_start_time() const;
  private:
  bool _internal_has_rtime32_start_time() const;
  public:
  void clear_rtime32_start_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime32_start_time() const;
  void set_rtime32_start_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rtime32_start_time() const;
  void _internal_set_rtime32_start_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 rtime32_end_time = 4;
  bool has_rtime32_end_time() const;
  private:
  bool _internal_has_rtime32_end_time() const;
  public:
  void clear_rtime32_end_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime32_end_time() const;
  void set_rtime32_end_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rtime32_end_time() const;
  void _internal_set_rtime32_end_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool filter_to_appid = 7;
  bool has_filter_to_appid() const;
  private:
  bool _internal_has_filter_to_appid() const;
  public:
  void clear_filter_to_appid();
  bool filter_to_appid() const;
  void set_filter_to_appid(bool value);
  private:
  bool _internal_filter_to_appid() const;
  void _internal_set_filter_to_appid(bool value);
  public:

  // optional uint32 count_after = 9 [default = 0];
  bool has_count_after() const;
  private:
  bool _internal_has_count_after() const;
  public:
  void clear_count_after();
  ::PROTOBUF_NAMESPACE_ID::uint32 count_after() const;
  void set_count_after(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count_after() const;
  void _internal_set_count_after(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 count_before = 10 [default = 0];
  bool has_count_before() const;
  private:
  bool _internal_has_count_before() const;
  public:
  void clear_count_before();
  ::PROTOBUF_NAMESPACE_ID::uint32 count_before() const;
  void set_count_before(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count_before() const;
  void _internal_set_count_before(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_GetUserPartnerEventNews_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > language_preference_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> filter_event_type_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CAppPriority > app_list_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime32_start_time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime32_end_time_;
  bool filter_to_appid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_after_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_before_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetUserPartnerEventNews_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetUserPartnerEventNews_Response) */ {
 public:
  inline CCommunity_GetUserPartnerEventNews_Response() : CCommunity_GetUserPartnerEventNews_Response(nullptr) {}
  virtual ~CCommunity_GetUserPartnerEventNews_Response();
  explicit constexpr CCommunity_GetUserPartnerEventNews_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetUserPartnerEventNews_Response(const CCommunity_GetUserPartnerEventNews_Response& from);
  CCommunity_GetUserPartnerEventNews_Response(CCommunity_GetUserPartnerEventNews_Response&& from) noexcept
    : CCommunity_GetUserPartnerEventNews_Response() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetUserPartnerEventNews_Response& operator=(const CCommunity_GetUserPartnerEventNews_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetUserPartnerEventNews_Response& operator=(CCommunity_GetUserPartnerEventNews_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetUserPartnerEventNews_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetUserPartnerEventNews_Response* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetUserPartnerEventNews_Response*>(
               &_CCommunity_GetUserPartnerEventNews_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(CCommunity_GetUserPartnerEventNews_Response& a, CCommunity_GetUserPartnerEventNews_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetUserPartnerEventNews_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetUserPartnerEventNews_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetUserPartnerEventNews_Response* New() const final {
    return CreateMaybeMessage<CCommunity_GetUserPartnerEventNews_Response>(nullptr);
  }

  CCommunity_GetUserPartnerEventNews_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetUserPartnerEventNews_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetUserPartnerEventNews_Response& from);
  void MergeFrom(const CCommunity_GetUserPartnerEventNews_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetUserPartnerEventNews_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetUserPartnerEventNews_Response";
  }
  protected:
  explicit CCommunity_GetUserPartnerEventNews_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultsFieldNumber = 1,
  };
  // repeated .CClanMatchEventByRange results = 1;
  int results_size() const;
  private:
  int _internal_results_size() const;
  public:
  void clear_results();
  ::CClanMatchEventByRange* mutable_results(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CClanMatchEventByRange >*
      mutable_results();
  private:
  const ::CClanMatchEventByRange& _internal_results(int index) const;
  ::CClanMatchEventByRange* _internal_add_results();
  public:
  const ::CClanMatchEventByRange& results(int index) const;
  ::CClanMatchEventByRange* add_results();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CClanMatchEventByRange >&
      results() const;

  // @@protoc_insertion_point(class_scope:CCommunity_GetUserPartnerEventNews_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CClanMatchEventByRange > results_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetBestEventsForUser_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetBestEventsForUser_Request) */ {
 public:
  inline CCommunity_GetBestEventsForUser_Request() : CCommunity_GetBestEventsForUser_Request(nullptr) {}
  virtual ~CCommunity_GetBestEventsForUser_Request();
  explicit constexpr CCommunity_GetBestEventsForUser_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetBestEventsForUser_Request(const CCommunity_GetBestEventsForUser_Request& from);
  CCommunity_GetBestEventsForUser_Request(CCommunity_GetBestEventsForUser_Request&& from) noexcept
    : CCommunity_GetBestEventsForUser_Request() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetBestEventsForUser_Request& operator=(const CCommunity_GetBestEventsForUser_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetBestEventsForUser_Request& operator=(CCommunity_GetBestEventsForUser_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetBestEventsForUser_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetBestEventsForUser_Request* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetBestEventsForUser_Request*>(
               &_CCommunity_GetBestEventsForUser_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(CCommunity_GetBestEventsForUser_Request& a, CCommunity_GetBestEventsForUser_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetBestEventsForUser_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetBestEventsForUser_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetBestEventsForUser_Request* New() const final {
    return CreateMaybeMessage<CCommunity_GetBestEventsForUser_Request>(nullptr);
  }

  CCommunity_GetBestEventsForUser_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetBestEventsForUser_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetBestEventsForUser_Request& from);
  void MergeFrom(const CCommunity_GetBestEventsForUser_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetBestEventsForUser_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetBestEventsForUser_Request";
  }
  protected:
  explicit CCommunity_GetBestEventsForUser_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFilterToPlayedWithinDaysFieldNumber = 2,
    kIncludeSteamBlogFieldNumber = 1,
    kIncludeOnlyGameUpdatesFieldNumber = 3,
  };
  // optional uint32 filter_to_played_within_days = 2;
  bool has_filter_to_played_within_days() const;
  private:
  bool _internal_has_filter_to_played_within_days() const;
  public:
  void clear_filter_to_played_within_days();
  ::PROTOBUF_NAMESPACE_ID::uint32 filter_to_played_within_days() const;
  void set_filter_to_played_within_days(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_filter_to_played_within_days() const;
  void _internal_set_filter_to_played_within_days(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool include_steam_blog = 1;
  bool has_include_steam_blog() const;
  private:
  bool _internal_has_include_steam_blog() const;
  public:
  void clear_include_steam_blog();
  bool include_steam_blog() const;
  void set_include_steam_blog(bool value);
  private:
  bool _internal_include_steam_blog() const;
  void _internal_set_include_steam_blog(bool value);
  public:

  // optional bool include_only_game_updates = 3;
  bool has_include_only_game_updates() const;
  private:
  bool _internal_has_include_only_game_updates() const;
  public:
  void clear_include_only_game_updates();
  bool include_only_game_updates() const;
  void set_include_only_game_updates(bool value);
  private:
  bool _internal_include_only_game_updates() const;
  void _internal_set_include_only_game_updates(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_GetBestEventsForUser_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 filter_to_played_within_days_;
  bool include_steam_blog_;
  bool include_only_game_updates_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_PartnerEventResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_PartnerEventResult) */ {
 public:
  inline CCommunity_PartnerEventResult() : CCommunity_PartnerEventResult(nullptr) {}
  virtual ~CCommunity_PartnerEventResult();
  explicit constexpr CCommunity_PartnerEventResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_PartnerEventResult(const CCommunity_PartnerEventResult& from);
  CCommunity_PartnerEventResult(CCommunity_PartnerEventResult&& from) noexcept
    : CCommunity_PartnerEventResult() {
    *this = ::std::move(from);
  }

  inline CCommunity_PartnerEventResult& operator=(const CCommunity_PartnerEventResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_PartnerEventResult& operator=(CCommunity_PartnerEventResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_PartnerEventResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_PartnerEventResult* internal_default_instance() {
    return reinterpret_cast<const CCommunity_PartnerEventResult*>(
               &_CCommunity_PartnerEventResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(CCommunity_PartnerEventResult& a, CCommunity_PartnerEventResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_PartnerEventResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_PartnerEventResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_PartnerEventResult* New() const final {
    return CreateMaybeMessage<CCommunity_PartnerEventResult>(nullptr);
  }

  CCommunity_PartnerEventResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_PartnerEventResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_PartnerEventResult& from);
  void MergeFrom(const CCommunity_PartnerEventResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_PartnerEventResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_PartnerEventResult";
  }
  protected:
  explicit CCommunity_PartnerEventResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventGidFieldNumber = 2,
    kClanidFieldNumber = 1,
    kAppidFieldNumber = 4,
    kAnnouncementGidFieldNumber = 3,
    kPossibleTakeoverFieldNumber = 5,
    kRtime32LastModifiedFieldNumber = 6,
    kUserAppPriorityFieldNumber = 7,
  };
  // optional fixed64 event_gid = 2;
  bool has_event_gid() const;
  private:
  bool _internal_has_event_gid() const;
  public:
  void clear_event_gid();
  ::PROTOBUF_NAMESPACE_ID::uint64 event_gid() const;
  void set_event_gid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_event_gid() const;
  void _internal_set_event_gid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 clanid = 1;
  bool has_clanid() const;
  private:
  bool _internal_has_clanid() const;
  public:
  void clear_clanid();
  ::PROTOBUF_NAMESPACE_ID::uint32 clanid() const;
  void set_clanid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_clanid() const;
  void _internal_set_clanid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 appid = 4;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed64 announcement_gid = 3;
  bool has_announcement_gid() const;
  private:
  bool _internal_has_announcement_gid() const;
  public:
  void clear_announcement_gid();
  ::PROTOBUF_NAMESPACE_ID::uint64 announcement_gid() const;
  void set_announcement_gid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_announcement_gid() const;
  void _internal_set_announcement_gid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool possible_takeover = 5;
  bool has_possible_takeover() const;
  private:
  bool _internal_has_possible_takeover() const;
  public:
  void clear_possible_takeover();
  bool possible_takeover() const;
  void set_possible_takeover(bool value);
  private:
  bool _internal_possible_takeover() const;
  void _internal_set_possible_takeover(bool value);
  public:

  // optional uint32 rtime32_last_modified = 6 [default = 0];
  bool has_rtime32_last_modified() const;
  private:
  bool _internal_has_rtime32_last_modified() const;
  public:
  void clear_rtime32_last_modified();
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime32_last_modified() const;
  void set_rtime32_last_modified(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rtime32_last_modified() const;
  void _internal_set_rtime32_last_modified(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 user_app_priority = 7;
  bool has_user_app_priority() const;
  private:
  bool _internal_has_user_app_priority() const;
  public:
  void clear_user_app_priority();
  ::PROTOBUF_NAMESPACE_ID::int32 user_app_priority() const;
  void set_user_app_priority(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_app_priority() const;
  void _internal_set_user_app_priority(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_PartnerEventResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 event_gid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 clanid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 announcement_gid_;
  bool possible_takeover_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime32_last_modified_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_app_priority_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetBestEventsForUser_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetBestEventsForUser_Response) */ {
 public:
  inline CCommunity_GetBestEventsForUser_Response() : CCommunity_GetBestEventsForUser_Response(nullptr) {}
  virtual ~CCommunity_GetBestEventsForUser_Response();
  explicit constexpr CCommunity_GetBestEventsForUser_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetBestEventsForUser_Response(const CCommunity_GetBestEventsForUser_Response& from);
  CCommunity_GetBestEventsForUser_Response(CCommunity_GetBestEventsForUser_Response&& from) noexcept
    : CCommunity_GetBestEventsForUser_Response() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetBestEventsForUser_Response& operator=(const CCommunity_GetBestEventsForUser_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetBestEventsForUser_Response& operator=(CCommunity_GetBestEventsForUser_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetBestEventsForUser_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetBestEventsForUser_Response* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetBestEventsForUser_Response*>(
               &_CCommunity_GetBestEventsForUser_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(CCommunity_GetBestEventsForUser_Response& a, CCommunity_GetBestEventsForUser_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetBestEventsForUser_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetBestEventsForUser_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetBestEventsForUser_Response* New() const final {
    return CreateMaybeMessage<CCommunity_GetBestEventsForUser_Response>(nullptr);
  }

  CCommunity_GetBestEventsForUser_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetBestEventsForUser_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetBestEventsForUser_Response& from);
  void MergeFrom(const CCommunity_GetBestEventsForUser_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetBestEventsForUser_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetBestEventsForUser_Response";
  }
  protected:
  explicit CCommunity_GetBestEventsForUser_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultsFieldNumber = 1,
  };
  // repeated .CCommunity_PartnerEventResult results = 1;
  int results_size() const;
  private:
  int _internal_results_size() const;
  public:
  void clear_results();
  ::CCommunity_PartnerEventResult* mutable_results(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_PartnerEventResult >*
      mutable_results();
  private:
  const ::CCommunity_PartnerEventResult& _internal_results(int index) const;
  ::CCommunity_PartnerEventResult* _internal_add_results();
  public:
  const ::CCommunity_PartnerEventResult& results(int index) const;
  ::CCommunity_PartnerEventResult* add_results();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_PartnerEventResult >&
      results() const;

  // @@protoc_insertion_point(class_scope:CCommunity_GetBestEventsForUser_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_PartnerEventResult > results_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_MarkPartnerEventsForUser_Request.PartnerEventMarking) */ {
 public:
  inline CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking() : CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking(nullptr) {}
  virtual ~CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking();
  explicit constexpr CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking(const CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking& from);
  CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking(CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking&& from) noexcept
    : CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking() {
    *this = ::std::move(from);
  }

  inline CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking& operator=(const CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking& operator=(CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking* internal_default_instance() {
    return reinterpret_cast<const CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking*>(
               &_CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking& a, CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking* New() const final {
    return CreateMaybeMessage<CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking>(nullptr);
  }

  CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking& from);
  void MergeFrom(const CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_MarkPartnerEventsForUser_Request.PartnerEventMarking";
  }
  protected:
  explicit CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventGidFieldNumber = 2,
    kClanidFieldNumber = 1,
    kDisplayLocationFieldNumber = 3,
    kMarshownFieldNumber = 4,
    kMarreadFieldNumber = 5,
  };
  // optional fixed64 event_gid = 2;
  bool has_event_gid() const;
  private:
  bool _internal_has_event_gid() const;
  public:
  void clear_event_gid();
  ::PROTOBUF_NAMESPACE_ID::uint64 event_gid() const;
  void set_event_gid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_event_gid() const;
  void _internal_set_event_gid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 clanid = 1;
  bool has_clanid() const;
  private:
  bool _internal_has_clanid() const;
  public:
  void clear_clanid();
  ::PROTOBUF_NAMESPACE_ID::uint32 clanid() const;
  void set_clanid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_clanid() const;
  void _internal_set_clanid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .EPartnerEventDisplayLocation display_location = 3 [default = EPartnerEventDisplayLocation_Invalid];
  bool has_display_location() const;
  private:
  bool _internal_has_display_location() const;
  public:
  void clear_display_location();
  ::EPartnerEventDisplayLocation display_location() const;
  void set_display_location(::EPartnerEventDisplayLocation value);
  private:
  ::EPartnerEventDisplayLocation _internal_display_location() const;
  void _internal_set_display_location(::EPartnerEventDisplayLocation value);
  public:

  // optional bool marshown = 4;
  bool has_marshown() const;
  private:
  bool _internal_has_marshown() const;
  public:
  void clear_marshown();
  bool marshown() const;
  void set_marshown(bool value);
  private:
  bool _internal_marshown() const;
  void _internal_set_marshown(bool value);
  public:

  // optional bool marread = 5;
  bool has_marread() const;
  private:
  bool _internal_has_marread() const;
  public:
  void clear_marread();
  bool marread() const;
  void set_marread(bool value);
  private:
  bool _internal_marread() const;
  void _internal_set_marread(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_MarkPartnerEventsForUser_Request.PartnerEventMarking)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 event_gid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 clanid_;
  int display_location_;
  bool marshown_;
  bool marread_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_MarkPartnerEventsForUser_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_MarkPartnerEventsForUser_Request) */ {
 public:
  inline CCommunity_MarkPartnerEventsForUser_Request() : CCommunity_MarkPartnerEventsForUser_Request(nullptr) {}
  virtual ~CCommunity_MarkPartnerEventsForUser_Request();
  explicit constexpr CCommunity_MarkPartnerEventsForUser_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_MarkPartnerEventsForUser_Request(const CCommunity_MarkPartnerEventsForUser_Request& from);
  CCommunity_MarkPartnerEventsForUser_Request(CCommunity_MarkPartnerEventsForUser_Request&& from) noexcept
    : CCommunity_MarkPartnerEventsForUser_Request() {
    *this = ::std::move(from);
  }

  inline CCommunity_MarkPartnerEventsForUser_Request& operator=(const CCommunity_MarkPartnerEventsForUser_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_MarkPartnerEventsForUser_Request& operator=(CCommunity_MarkPartnerEventsForUser_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_MarkPartnerEventsForUser_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_MarkPartnerEventsForUser_Request* internal_default_instance() {
    return reinterpret_cast<const CCommunity_MarkPartnerEventsForUser_Request*>(
               &_CCommunity_MarkPartnerEventsForUser_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(CCommunity_MarkPartnerEventsForUser_Request& a, CCommunity_MarkPartnerEventsForUser_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_MarkPartnerEventsForUser_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_MarkPartnerEventsForUser_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_MarkPartnerEventsForUser_Request* New() const final {
    return CreateMaybeMessage<CCommunity_MarkPartnerEventsForUser_Request>(nullptr);
  }

  CCommunity_MarkPartnerEventsForUser_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_MarkPartnerEventsForUser_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_MarkPartnerEventsForUser_Request& from);
  void MergeFrom(const CCommunity_MarkPartnerEventsForUser_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_MarkPartnerEventsForUser_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_MarkPartnerEventsForUser_Request";
  }
  protected:
  explicit CCommunity_MarkPartnerEventsForUser_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking PartnerEventMarking;

  // accessors -------------------------------------------------------

  enum : int {
    kMarkingsFieldNumber = 1,
  };
  // repeated .CCommunity_MarkPartnerEventsForUser_Request.PartnerEventMarking markings = 1;
  int markings_size() const;
  private:
  int _internal_markings_size() const;
  public:
  void clear_markings();
  ::CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking* mutable_markings(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking >*
      mutable_markings();
  private:
  const ::CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking& _internal_markings(int index) const;
  ::CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking* _internal_add_markings();
  public:
  const ::CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking& markings(int index) const;
  ::CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking* add_markings();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking >&
      markings() const;

  // @@protoc_insertion_point(class_scope:CCommunity_MarkPartnerEventsForUser_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking > markings_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_MarkPartnerEventsForUser_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_MarkPartnerEventsForUser_Response) */ {
 public:
  inline CCommunity_MarkPartnerEventsForUser_Response() : CCommunity_MarkPartnerEventsForUser_Response(nullptr) {}
  virtual ~CCommunity_MarkPartnerEventsForUser_Response();
  explicit constexpr CCommunity_MarkPartnerEventsForUser_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_MarkPartnerEventsForUser_Response(const CCommunity_MarkPartnerEventsForUser_Response& from);
  CCommunity_MarkPartnerEventsForUser_Response(CCommunity_MarkPartnerEventsForUser_Response&& from) noexcept
    : CCommunity_MarkPartnerEventsForUser_Response() {
    *this = ::std::move(from);
  }

  inline CCommunity_MarkPartnerEventsForUser_Response& operator=(const CCommunity_MarkPartnerEventsForUser_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_MarkPartnerEventsForUser_Response& operator=(CCommunity_MarkPartnerEventsForUser_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_MarkPartnerEventsForUser_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_MarkPartnerEventsForUser_Response* internal_default_instance() {
    return reinterpret_cast<const CCommunity_MarkPartnerEventsForUser_Response*>(
               &_CCommunity_MarkPartnerEventsForUser_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(CCommunity_MarkPartnerEventsForUser_Response& a, CCommunity_MarkPartnerEventsForUser_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_MarkPartnerEventsForUser_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_MarkPartnerEventsForUser_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_MarkPartnerEventsForUser_Response* New() const final {
    return CreateMaybeMessage<CCommunity_MarkPartnerEventsForUser_Response>(nullptr);
  }

  CCommunity_MarkPartnerEventsForUser_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_MarkPartnerEventsForUser_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_MarkPartnerEventsForUser_Response& from);
  void MergeFrom(const CCommunity_MarkPartnerEventsForUser_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_MarkPartnerEventsForUser_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_MarkPartnerEventsForUser_Response";
  }
  protected:
  explicit CCommunity_MarkPartnerEventsForUser_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CCommunity_MarkPartnerEventsForUser_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetUserPartnerEventViewStatus_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetUserPartnerEventViewStatus_Request) */ {
 public:
  inline CCommunity_GetUserPartnerEventViewStatus_Request() : CCommunity_GetUserPartnerEventViewStatus_Request(nullptr) {}
  virtual ~CCommunity_GetUserPartnerEventViewStatus_Request();
  explicit constexpr CCommunity_GetUserPartnerEventViewStatus_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetUserPartnerEventViewStatus_Request(const CCommunity_GetUserPartnerEventViewStatus_Request& from);
  CCommunity_GetUserPartnerEventViewStatus_Request(CCommunity_GetUserPartnerEventViewStatus_Request&& from) noexcept
    : CCommunity_GetUserPartnerEventViewStatus_Request() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetUserPartnerEventViewStatus_Request& operator=(const CCommunity_GetUserPartnerEventViewStatus_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetUserPartnerEventViewStatus_Request& operator=(CCommunity_GetUserPartnerEventViewStatus_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetUserPartnerEventViewStatus_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetUserPartnerEventViewStatus_Request* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetUserPartnerEventViewStatus_Request*>(
               &_CCommunity_GetUserPartnerEventViewStatus_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(CCommunity_GetUserPartnerEventViewStatus_Request& a, CCommunity_GetUserPartnerEventViewStatus_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetUserPartnerEventViewStatus_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetUserPartnerEventViewStatus_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetUserPartnerEventViewStatus_Request* New() const final {
    return CreateMaybeMessage<CCommunity_GetUserPartnerEventViewStatus_Request>(nullptr);
  }

  CCommunity_GetUserPartnerEventViewStatus_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetUserPartnerEventViewStatus_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetUserPartnerEventViewStatus_Request& from);
  void MergeFrom(const CCommunity_GetUserPartnerEventViewStatus_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetUserPartnerEventViewStatus_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetUserPartnerEventViewStatus_Request";
  }
  protected:
  explicit CCommunity_GetUserPartnerEventViewStatus_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventGidsFieldNumber = 1,
    kIncludeReadEventsOnlyFieldNumber = 2,
  };
  // repeated fixed64 event_gids = 1;
  int event_gids_size() const;
  private:
  int _internal_event_gids_size() const;
  public:
  void clear_event_gids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_event_gids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_event_gids() const;
  void _internal_add_event_gids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_event_gids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 event_gids(int index) const;
  void set_event_gids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_event_gids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      event_gids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_event_gids();

  // optional bool include_read_events_only = 2;
  bool has_include_read_events_only() const;
  private:
  bool _internal_has_include_read_events_only() const;
  public:
  void clear_include_read_events_only();
  bool include_read_events_only() const;
  void set_include_read_events_only(bool value);
  private:
  bool _internal_include_read_events_only() const;
  void _internal_set_include_read_events_only(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_GetUserPartnerEventViewStatus_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > event_gids_;
  bool include_read_events_only_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetUserPartnerEventViewStatus_Response.PartnerEvent) */ {
 public:
  inline CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent() : CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent(nullptr) {}
  virtual ~CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent();
  explicit constexpr CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent(const CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent& from);
  CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent(CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent&& from) noexcept
    : CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent& operator=(const CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent& operator=(CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent*>(
               &_CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent& a, CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent* New() const final {
    return CreateMaybeMessage<CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent>(nullptr);
  }

  CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent& from);
  void MergeFrom(const CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetUserPartnerEventViewStatus_Response.PartnerEvent";
  }
  protected:
  explicit CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventGidFieldNumber = 1,
    kLastShownTimeFieldNumber = 2,
    kLastReadTimeFieldNumber = 3,
    kClanAccountIdFieldNumber = 4,
  };
  // optional fixed64 event_gid = 1;
  bool has_event_gid() const;
  private:
  bool _internal_has_event_gid() const;
  public:
  void clear_event_gid();
  ::PROTOBUF_NAMESPACE_ID::uint64 event_gid() const;
  void set_event_gid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_event_gid() const;
  void _internal_set_event_gid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 last_shown_time = 2;
  bool has_last_shown_time() const;
  private:
  bool _internal_has_last_shown_time() const;
  public:
  void clear_last_shown_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_shown_time() const;
  void set_last_shown_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_shown_time() const;
  void _internal_set_last_shown_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 last_read_time = 3;
  bool has_last_read_time() const;
  private:
  bool _internal_has_last_read_time() const;
  public:
  void clear_last_read_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_read_time() const;
  void set_last_read_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_read_time() const;
  void _internal_set_last_read_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 clan_account_id = 4;
  bool has_clan_account_id() const;
  private:
  bool _internal_has_clan_account_id() const;
  public:
  void clear_clan_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 clan_account_id() const;
  void set_clan_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_clan_account_id() const;
  void _internal_set_clan_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_GetUserPartnerEventViewStatus_Response.PartnerEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 event_gid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_shown_time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_read_time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 clan_account_id_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetUserPartnerEventViewStatus_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetUserPartnerEventViewStatus_Response) */ {
 public:
  inline CCommunity_GetUserPartnerEventViewStatus_Response() : CCommunity_GetUserPartnerEventViewStatus_Response(nullptr) {}
  virtual ~CCommunity_GetUserPartnerEventViewStatus_Response();
  explicit constexpr CCommunity_GetUserPartnerEventViewStatus_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetUserPartnerEventViewStatus_Response(const CCommunity_GetUserPartnerEventViewStatus_Response& from);
  CCommunity_GetUserPartnerEventViewStatus_Response(CCommunity_GetUserPartnerEventViewStatus_Response&& from) noexcept
    : CCommunity_GetUserPartnerEventViewStatus_Response() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetUserPartnerEventViewStatus_Response& operator=(const CCommunity_GetUserPartnerEventViewStatus_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetUserPartnerEventViewStatus_Response& operator=(CCommunity_GetUserPartnerEventViewStatus_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetUserPartnerEventViewStatus_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetUserPartnerEventViewStatus_Response* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetUserPartnerEventViewStatus_Response*>(
               &_CCommunity_GetUserPartnerEventViewStatus_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(CCommunity_GetUserPartnerEventViewStatus_Response& a, CCommunity_GetUserPartnerEventViewStatus_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetUserPartnerEventViewStatus_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetUserPartnerEventViewStatus_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetUserPartnerEventViewStatus_Response* New() const final {
    return CreateMaybeMessage<CCommunity_GetUserPartnerEventViewStatus_Response>(nullptr);
  }

  CCommunity_GetUserPartnerEventViewStatus_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetUserPartnerEventViewStatus_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetUserPartnerEventViewStatus_Response& from);
  void MergeFrom(const CCommunity_GetUserPartnerEventViewStatus_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetUserPartnerEventViewStatus_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetUserPartnerEventViewStatus_Response";
  }
  protected:
  explicit CCommunity_GetUserPartnerEventViewStatus_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent PartnerEvent;

  // accessors -------------------------------------------------------

  enum : int {
    kEventsFieldNumber = 1,
  };
  // repeated .CCommunity_GetUserPartnerEventViewStatus_Response.PartnerEvent events = 1;
  int events_size() const;
  private:
  int _internal_events_size() const;
  public:
  void clear_events();
  ::CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent* mutable_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent >*
      mutable_events();
  private:
  const ::CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent& _internal_events(int index) const;
  ::CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent* _internal_add_events();
  public:
  const ::CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent& events(int index) const;
  ::CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent* add_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent >&
      events() const;

  // @@protoc_insertion_point(class_scope:CCommunity_GetUserPartnerEventViewStatus_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent > events_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_PartnerEventsShowMoreForApp_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_PartnerEventsShowMoreForApp_Request) */ {
 public:
  inline CCommunity_PartnerEventsShowMoreForApp_Request() : CCommunity_PartnerEventsShowMoreForApp_Request(nullptr) {}
  virtual ~CCommunity_PartnerEventsShowMoreForApp_Request();
  explicit constexpr CCommunity_PartnerEventsShowMoreForApp_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_PartnerEventsShowMoreForApp_Request(const CCommunity_PartnerEventsShowMoreForApp_Request& from);
  CCommunity_PartnerEventsShowMoreForApp_Request(CCommunity_PartnerEventsShowMoreForApp_Request&& from) noexcept
    : CCommunity_PartnerEventsShowMoreForApp_Request() {
    *this = ::std::move(from);
  }

  inline CCommunity_PartnerEventsShowMoreForApp_Request& operator=(const CCommunity_PartnerEventsShowMoreForApp_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_PartnerEventsShowMoreForApp_Request& operator=(CCommunity_PartnerEventsShowMoreForApp_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_PartnerEventsShowMoreForApp_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_PartnerEventsShowMoreForApp_Request* internal_default_instance() {
    return reinterpret_cast<const CCommunity_PartnerEventsShowMoreForApp_Request*>(
               &_CCommunity_PartnerEventsShowMoreForApp_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(CCommunity_PartnerEventsShowMoreForApp_Request& a, CCommunity_PartnerEventsShowMoreForApp_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_PartnerEventsShowMoreForApp_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_PartnerEventsShowMoreForApp_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_PartnerEventsShowMoreForApp_Request* New() const final {
    return CreateMaybeMessage<CCommunity_PartnerEventsShowMoreForApp_Request>(nullptr);
  }

  CCommunity_PartnerEventsShowMoreForApp_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_PartnerEventsShowMoreForApp_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_PartnerEventsShowMoreForApp_Request& from);
  void MergeFrom(const CCommunity_PartnerEventsShowMoreForApp_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_PartnerEventsShowMoreForApp_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_PartnerEventsShowMoreForApp_Request";
  }
  protected:
  explicit CCommunity_PartnerEventsShowMoreForApp_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppidFieldNumber = 1,
  };
  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_PartnerEventsShowMoreForApp_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_PartnerEventsShowMoreForApp_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_PartnerEventsShowMoreForApp_Response) */ {
 public:
  inline CCommunity_PartnerEventsShowMoreForApp_Response() : CCommunity_PartnerEventsShowMoreForApp_Response(nullptr) {}
  virtual ~CCommunity_PartnerEventsShowMoreForApp_Response();
  explicit constexpr CCommunity_PartnerEventsShowMoreForApp_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_PartnerEventsShowMoreForApp_Response(const CCommunity_PartnerEventsShowMoreForApp_Response& from);
  CCommunity_PartnerEventsShowMoreForApp_Response(CCommunity_PartnerEventsShowMoreForApp_Response&& from) noexcept
    : CCommunity_PartnerEventsShowMoreForApp_Response() {
    *this = ::std::move(from);
  }

  inline CCommunity_PartnerEventsShowMoreForApp_Response& operator=(const CCommunity_PartnerEventsShowMoreForApp_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_PartnerEventsShowMoreForApp_Response& operator=(CCommunity_PartnerEventsShowMoreForApp_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_PartnerEventsShowMoreForApp_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_PartnerEventsShowMoreForApp_Response* internal_default_instance() {
    return reinterpret_cast<const CCommunity_PartnerEventsShowMoreForApp_Response*>(
               &_CCommunity_PartnerEventsShowMoreForApp_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(CCommunity_PartnerEventsShowMoreForApp_Response& a, CCommunity_PartnerEventsShowMoreForApp_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_PartnerEventsShowMoreForApp_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_PartnerEventsShowMoreForApp_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_PartnerEventsShowMoreForApp_Response* New() const final {
    return CreateMaybeMessage<CCommunity_PartnerEventsShowMoreForApp_Response>(nullptr);
  }

  CCommunity_PartnerEventsShowMoreForApp_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_PartnerEventsShowMoreForApp_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_PartnerEventsShowMoreForApp_Response& from);
  void MergeFrom(const CCommunity_PartnerEventsShowMoreForApp_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_PartnerEventsShowMoreForApp_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_PartnerEventsShowMoreForApp_Response";
  }
  protected:
  explicit CCommunity_PartnerEventsShowMoreForApp_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CCommunity_PartnerEventsShowMoreForApp_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_PartnerEventsShowLessForApp_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_PartnerEventsShowLessForApp_Request) */ {
 public:
  inline CCommunity_PartnerEventsShowLessForApp_Request() : CCommunity_PartnerEventsShowLessForApp_Request(nullptr) {}
  virtual ~CCommunity_PartnerEventsShowLessForApp_Request();
  explicit constexpr CCommunity_PartnerEventsShowLessForApp_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_PartnerEventsShowLessForApp_Request(const CCommunity_PartnerEventsShowLessForApp_Request& from);
  CCommunity_PartnerEventsShowLessForApp_Request(CCommunity_PartnerEventsShowLessForApp_Request&& from) noexcept
    : CCommunity_PartnerEventsShowLessForApp_Request() {
    *this = ::std::move(from);
  }

  inline CCommunity_PartnerEventsShowLessForApp_Request& operator=(const CCommunity_PartnerEventsShowLessForApp_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_PartnerEventsShowLessForApp_Request& operator=(CCommunity_PartnerEventsShowLessForApp_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_PartnerEventsShowLessForApp_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_PartnerEventsShowLessForApp_Request* internal_default_instance() {
    return reinterpret_cast<const CCommunity_PartnerEventsShowLessForApp_Request*>(
               &_CCommunity_PartnerEventsShowLessForApp_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(CCommunity_PartnerEventsShowLessForApp_Request& a, CCommunity_PartnerEventsShowLessForApp_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_PartnerEventsShowLessForApp_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_PartnerEventsShowLessForApp_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_PartnerEventsShowLessForApp_Request* New() const final {
    return CreateMaybeMessage<CCommunity_PartnerEventsShowLessForApp_Request>(nullptr);
  }

  CCommunity_PartnerEventsShowLessForApp_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_PartnerEventsShowLessForApp_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_PartnerEventsShowLessForApp_Request& from);
  void MergeFrom(const CCommunity_PartnerEventsShowLessForApp_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_PartnerEventsShowLessForApp_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_PartnerEventsShowLessForApp_Request";
  }
  protected:
  explicit CCommunity_PartnerEventsShowLessForApp_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppidFieldNumber = 1,
  };
  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_PartnerEventsShowLessForApp_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_PartnerEventsShowLessForApp_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_PartnerEventsShowLessForApp_Response) */ {
 public:
  inline CCommunity_PartnerEventsShowLessForApp_Response() : CCommunity_PartnerEventsShowLessForApp_Response(nullptr) {}
  virtual ~CCommunity_PartnerEventsShowLessForApp_Response();
  explicit constexpr CCommunity_PartnerEventsShowLessForApp_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_PartnerEventsShowLessForApp_Response(const CCommunity_PartnerEventsShowLessForApp_Response& from);
  CCommunity_PartnerEventsShowLessForApp_Response(CCommunity_PartnerEventsShowLessForApp_Response&& from) noexcept
    : CCommunity_PartnerEventsShowLessForApp_Response() {
    *this = ::std::move(from);
  }

  inline CCommunity_PartnerEventsShowLessForApp_Response& operator=(const CCommunity_PartnerEventsShowLessForApp_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_PartnerEventsShowLessForApp_Response& operator=(CCommunity_PartnerEventsShowLessForApp_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_PartnerEventsShowLessForApp_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_PartnerEventsShowLessForApp_Response* internal_default_instance() {
    return reinterpret_cast<const CCommunity_PartnerEventsShowLessForApp_Response*>(
               &_CCommunity_PartnerEventsShowLessForApp_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(CCommunity_PartnerEventsShowLessForApp_Response& a, CCommunity_PartnerEventsShowLessForApp_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_PartnerEventsShowLessForApp_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_PartnerEventsShowLessForApp_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_PartnerEventsShowLessForApp_Response* New() const final {
    return CreateMaybeMessage<CCommunity_PartnerEventsShowLessForApp_Response>(nullptr);
  }

  CCommunity_PartnerEventsShowLessForApp_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_PartnerEventsShowLessForApp_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_PartnerEventsShowLessForApp_Response& from);
  void MergeFrom(const CCommunity_PartnerEventsShowLessForApp_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_PartnerEventsShowLessForApp_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_PartnerEventsShowLessForApp_Response";
  }
  protected:
  explicit CCommunity_PartnerEventsShowLessForApp_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CCommunity_PartnerEventsShowLessForApp_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_ClearUserPartnerEventsAppPriorities_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_ClearUserPartnerEventsAppPriorities_Request) */ {
 public:
  inline CCommunity_ClearUserPartnerEventsAppPriorities_Request() : CCommunity_ClearUserPartnerEventsAppPriorities_Request(nullptr) {}
  virtual ~CCommunity_ClearUserPartnerEventsAppPriorities_Request();
  explicit constexpr CCommunity_ClearUserPartnerEventsAppPriorities_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_ClearUserPartnerEventsAppPriorities_Request(const CCommunity_ClearUserPartnerEventsAppPriorities_Request& from);
  CCommunity_ClearUserPartnerEventsAppPriorities_Request(CCommunity_ClearUserPartnerEventsAppPriorities_Request&& from) noexcept
    : CCommunity_ClearUserPartnerEventsAppPriorities_Request() {
    *this = ::std::move(from);
  }

  inline CCommunity_ClearUserPartnerEventsAppPriorities_Request& operator=(const CCommunity_ClearUserPartnerEventsAppPriorities_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_ClearUserPartnerEventsAppPriorities_Request& operator=(CCommunity_ClearUserPartnerEventsAppPriorities_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_ClearUserPartnerEventsAppPriorities_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_ClearUserPartnerEventsAppPriorities_Request* internal_default_instance() {
    return reinterpret_cast<const CCommunity_ClearUserPartnerEventsAppPriorities_Request*>(
               &_CCommunity_ClearUserPartnerEventsAppPriorities_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(CCommunity_ClearUserPartnerEventsAppPriorities_Request& a, CCommunity_ClearUserPartnerEventsAppPriorities_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_ClearUserPartnerEventsAppPriorities_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_ClearUserPartnerEventsAppPriorities_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_ClearUserPartnerEventsAppPriorities_Request* New() const final {
    return CreateMaybeMessage<CCommunity_ClearUserPartnerEventsAppPriorities_Request>(nullptr);
  }

  CCommunity_ClearUserPartnerEventsAppPriorities_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_ClearUserPartnerEventsAppPriorities_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_ClearUserPartnerEventsAppPriorities_Request& from);
  void MergeFrom(const CCommunity_ClearUserPartnerEventsAppPriorities_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_ClearUserPartnerEventsAppPriorities_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_ClearUserPartnerEventsAppPriorities_Request";
  }
  protected:
  explicit CCommunity_ClearUserPartnerEventsAppPriorities_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CCommunity_ClearUserPartnerEventsAppPriorities_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_ClearUserPartnerEventsAppPriorities_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_ClearUserPartnerEventsAppPriorities_Response) */ {
 public:
  inline CCommunity_ClearUserPartnerEventsAppPriorities_Response() : CCommunity_ClearUserPartnerEventsAppPriorities_Response(nullptr) {}
  virtual ~CCommunity_ClearUserPartnerEventsAppPriorities_Response();
  explicit constexpr CCommunity_ClearUserPartnerEventsAppPriorities_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_ClearUserPartnerEventsAppPriorities_Response(const CCommunity_ClearUserPartnerEventsAppPriorities_Response& from);
  CCommunity_ClearUserPartnerEventsAppPriorities_Response(CCommunity_ClearUserPartnerEventsAppPriorities_Response&& from) noexcept
    : CCommunity_ClearUserPartnerEventsAppPriorities_Response() {
    *this = ::std::move(from);
  }

  inline CCommunity_ClearUserPartnerEventsAppPriorities_Response& operator=(const CCommunity_ClearUserPartnerEventsAppPriorities_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_ClearUserPartnerEventsAppPriorities_Response& operator=(CCommunity_ClearUserPartnerEventsAppPriorities_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_ClearUserPartnerEventsAppPriorities_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_ClearUserPartnerEventsAppPriorities_Response* internal_default_instance() {
    return reinterpret_cast<const CCommunity_ClearUserPartnerEventsAppPriorities_Response*>(
               &_CCommunity_ClearUserPartnerEventsAppPriorities_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(CCommunity_ClearUserPartnerEventsAppPriorities_Response& a, CCommunity_ClearUserPartnerEventsAppPriorities_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_ClearUserPartnerEventsAppPriorities_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_ClearUserPartnerEventsAppPriorities_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_ClearUserPartnerEventsAppPriorities_Response* New() const final {
    return CreateMaybeMessage<CCommunity_ClearUserPartnerEventsAppPriorities_Response>(nullptr);
  }

  CCommunity_ClearUserPartnerEventsAppPriorities_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_ClearUserPartnerEventsAppPriorities_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_ClearUserPartnerEventsAppPriorities_Response& from);
  void MergeFrom(const CCommunity_ClearUserPartnerEventsAppPriorities_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_ClearUserPartnerEventsAppPriorities_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_ClearUserPartnerEventsAppPriorities_Response";
  }
  protected:
  explicit CCommunity_ClearUserPartnerEventsAppPriorities_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CCommunity_ClearUserPartnerEventsAppPriorities_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetUserPartnerEventsAppPriorities_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetUserPartnerEventsAppPriorities_Request) */ {
 public:
  inline CCommunity_GetUserPartnerEventsAppPriorities_Request() : CCommunity_GetUserPartnerEventsAppPriorities_Request(nullptr) {}
  virtual ~CCommunity_GetUserPartnerEventsAppPriorities_Request();
  explicit constexpr CCommunity_GetUserPartnerEventsAppPriorities_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetUserPartnerEventsAppPriorities_Request(const CCommunity_GetUserPartnerEventsAppPriorities_Request& from);
  CCommunity_GetUserPartnerEventsAppPriorities_Request(CCommunity_GetUserPartnerEventsAppPriorities_Request&& from) noexcept
    : CCommunity_GetUserPartnerEventsAppPriorities_Request() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetUserPartnerEventsAppPriorities_Request& operator=(const CCommunity_GetUserPartnerEventsAppPriorities_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetUserPartnerEventsAppPriorities_Request& operator=(CCommunity_GetUserPartnerEventsAppPriorities_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetUserPartnerEventsAppPriorities_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetUserPartnerEventsAppPriorities_Request* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetUserPartnerEventsAppPriorities_Request*>(
               &_CCommunity_GetUserPartnerEventsAppPriorities_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(CCommunity_GetUserPartnerEventsAppPriorities_Request& a, CCommunity_GetUserPartnerEventsAppPriorities_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetUserPartnerEventsAppPriorities_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetUserPartnerEventsAppPriorities_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetUserPartnerEventsAppPriorities_Request* New() const final {
    return CreateMaybeMessage<CCommunity_GetUserPartnerEventsAppPriorities_Request>(nullptr);
  }

  CCommunity_GetUserPartnerEventsAppPriorities_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetUserPartnerEventsAppPriorities_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetUserPartnerEventsAppPriorities_Request& from);
  void MergeFrom(const CCommunity_GetUserPartnerEventsAppPriorities_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetUserPartnerEventsAppPriorities_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetUserPartnerEventsAppPriorities_Request";
  }
  protected:
  explicit CCommunity_GetUserPartnerEventsAppPriorities_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CCommunity_GetUserPartnerEventsAppPriorities_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_PartnerEventsAppPriority PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_PartnerEventsAppPriority) */ {
 public:
  inline CCommunity_PartnerEventsAppPriority() : CCommunity_PartnerEventsAppPriority(nullptr) {}
  virtual ~CCommunity_PartnerEventsAppPriority();
  explicit constexpr CCommunity_PartnerEventsAppPriority(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_PartnerEventsAppPriority(const CCommunity_PartnerEventsAppPriority& from);
  CCommunity_PartnerEventsAppPriority(CCommunity_PartnerEventsAppPriority&& from) noexcept
    : CCommunity_PartnerEventsAppPriority() {
    *this = ::std::move(from);
  }

  inline CCommunity_PartnerEventsAppPriority& operator=(const CCommunity_PartnerEventsAppPriority& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_PartnerEventsAppPriority& operator=(CCommunity_PartnerEventsAppPriority&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_PartnerEventsAppPriority& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_PartnerEventsAppPriority* internal_default_instance() {
    return reinterpret_cast<const CCommunity_PartnerEventsAppPriority*>(
               &_CCommunity_PartnerEventsAppPriority_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(CCommunity_PartnerEventsAppPriority& a, CCommunity_PartnerEventsAppPriority& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_PartnerEventsAppPriority* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_PartnerEventsAppPriority* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_PartnerEventsAppPriority* New() const final {
    return CreateMaybeMessage<CCommunity_PartnerEventsAppPriority>(nullptr);
  }

  CCommunity_PartnerEventsAppPriority* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_PartnerEventsAppPriority>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_PartnerEventsAppPriority& from);
  void MergeFrom(const CCommunity_PartnerEventsAppPriority& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_PartnerEventsAppPriority* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_PartnerEventsAppPriority";
  }
  protected:
  explicit CCommunity_PartnerEventsAppPriority(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppidFieldNumber = 1,
    kUserAppPriorityFieldNumber = 2,
  };
  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 user_app_priority = 2;
  bool has_user_app_priority() const;
  private:
  bool _internal_has_user_app_priority() const;
  public:
  void clear_user_app_priority();
  ::PROTOBUF_NAMESPACE_ID::int32 user_app_priority() const;
  void set_user_app_priority(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_user_app_priority() const;
  void _internal_set_user_app_priority(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_PartnerEventsAppPriority)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  ::PROTOBUF_NAMESPACE_ID::int32 user_app_priority_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetUserPartnerEventsAppPriorities_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetUserPartnerEventsAppPriorities_Response) */ {
 public:
  inline CCommunity_GetUserPartnerEventsAppPriorities_Response() : CCommunity_GetUserPartnerEventsAppPriorities_Response(nullptr) {}
  virtual ~CCommunity_GetUserPartnerEventsAppPriorities_Response();
  explicit constexpr CCommunity_GetUserPartnerEventsAppPriorities_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetUserPartnerEventsAppPriorities_Response(const CCommunity_GetUserPartnerEventsAppPriorities_Response& from);
  CCommunity_GetUserPartnerEventsAppPriorities_Response(CCommunity_GetUserPartnerEventsAppPriorities_Response&& from) noexcept
    : CCommunity_GetUserPartnerEventsAppPriorities_Response() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetUserPartnerEventsAppPriorities_Response& operator=(const CCommunity_GetUserPartnerEventsAppPriorities_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetUserPartnerEventsAppPriorities_Response& operator=(CCommunity_GetUserPartnerEventsAppPriorities_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetUserPartnerEventsAppPriorities_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetUserPartnerEventsAppPriorities_Response* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetUserPartnerEventsAppPriorities_Response*>(
               &_CCommunity_GetUserPartnerEventsAppPriorities_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(CCommunity_GetUserPartnerEventsAppPriorities_Response& a, CCommunity_GetUserPartnerEventsAppPriorities_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetUserPartnerEventsAppPriorities_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetUserPartnerEventsAppPriorities_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetUserPartnerEventsAppPriorities_Response* New() const final {
    return CreateMaybeMessage<CCommunity_GetUserPartnerEventsAppPriorities_Response>(nullptr);
  }

  CCommunity_GetUserPartnerEventsAppPriorities_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetUserPartnerEventsAppPriorities_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetUserPartnerEventsAppPriorities_Response& from);
  void MergeFrom(const CCommunity_GetUserPartnerEventsAppPriorities_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetUserPartnerEventsAppPriorities_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetUserPartnerEventsAppPriorities_Response";
  }
  protected:
  explicit CCommunity_GetUserPartnerEventsAppPriorities_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPrioritiesFieldNumber = 1,
  };
  // repeated .CCommunity_PartnerEventsAppPriority priorities = 1;
  int priorities_size() const;
  private:
  int _internal_priorities_size() const;
  public:
  void clear_priorities();
  ::CCommunity_PartnerEventsAppPriority* mutable_priorities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_PartnerEventsAppPriority >*
      mutable_priorities();
  private:
  const ::CCommunity_PartnerEventsAppPriority& _internal_priorities(int index) const;
  ::CCommunity_PartnerEventsAppPriority* _internal_add_priorities();
  public:
  const ::CCommunity_PartnerEventsAppPriority& priorities(int index) const;
  ::CCommunity_PartnerEventsAppPriority* add_priorities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_PartnerEventsAppPriority >&
      priorities() const;

  // @@protoc_insertion_point(class_scope:CCommunity_GetUserPartnerEventsAppPriorities_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_PartnerEventsAppPriority > priorities_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_ClearSinglePartnerEventsAppPriority_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_ClearSinglePartnerEventsAppPriority_Request) */ {
 public:
  inline CCommunity_ClearSinglePartnerEventsAppPriority_Request() : CCommunity_ClearSinglePartnerEventsAppPriority_Request(nullptr) {}
  virtual ~CCommunity_ClearSinglePartnerEventsAppPriority_Request();
  explicit constexpr CCommunity_ClearSinglePartnerEventsAppPriority_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_ClearSinglePartnerEventsAppPriority_Request(const CCommunity_ClearSinglePartnerEventsAppPriority_Request& from);
  CCommunity_ClearSinglePartnerEventsAppPriority_Request(CCommunity_ClearSinglePartnerEventsAppPriority_Request&& from) noexcept
    : CCommunity_ClearSinglePartnerEventsAppPriority_Request() {
    *this = ::std::move(from);
  }

  inline CCommunity_ClearSinglePartnerEventsAppPriority_Request& operator=(const CCommunity_ClearSinglePartnerEventsAppPriority_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_ClearSinglePartnerEventsAppPriority_Request& operator=(CCommunity_ClearSinglePartnerEventsAppPriority_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_ClearSinglePartnerEventsAppPriority_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_ClearSinglePartnerEventsAppPriority_Request* internal_default_instance() {
    return reinterpret_cast<const CCommunity_ClearSinglePartnerEventsAppPriority_Request*>(
               &_CCommunity_ClearSinglePartnerEventsAppPriority_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(CCommunity_ClearSinglePartnerEventsAppPriority_Request& a, CCommunity_ClearSinglePartnerEventsAppPriority_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_ClearSinglePartnerEventsAppPriority_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_ClearSinglePartnerEventsAppPriority_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_ClearSinglePartnerEventsAppPriority_Request* New() const final {
    return CreateMaybeMessage<CCommunity_ClearSinglePartnerEventsAppPriority_Request>(nullptr);
  }

  CCommunity_ClearSinglePartnerEventsAppPriority_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_ClearSinglePartnerEventsAppPriority_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_ClearSinglePartnerEventsAppPriority_Request& from);
  void MergeFrom(const CCommunity_ClearSinglePartnerEventsAppPriority_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_ClearSinglePartnerEventsAppPriority_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_ClearSinglePartnerEventsAppPriority_Request";
  }
  protected:
  explicit CCommunity_ClearSinglePartnerEventsAppPriority_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppidFieldNumber = 1,
  };
  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_ClearSinglePartnerEventsAppPriority_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_ClearSinglePartnerEventsAppPriority_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_ClearSinglePartnerEventsAppPriority_Response) */ {
 public:
  inline CCommunity_ClearSinglePartnerEventsAppPriority_Response() : CCommunity_ClearSinglePartnerEventsAppPriority_Response(nullptr) {}
  virtual ~CCommunity_ClearSinglePartnerEventsAppPriority_Response();
  explicit constexpr CCommunity_ClearSinglePartnerEventsAppPriority_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_ClearSinglePartnerEventsAppPriority_Response(const CCommunity_ClearSinglePartnerEventsAppPriority_Response& from);
  CCommunity_ClearSinglePartnerEventsAppPriority_Response(CCommunity_ClearSinglePartnerEventsAppPriority_Response&& from) noexcept
    : CCommunity_ClearSinglePartnerEventsAppPriority_Response() {
    *this = ::std::move(from);
  }

  inline CCommunity_ClearSinglePartnerEventsAppPriority_Response& operator=(const CCommunity_ClearSinglePartnerEventsAppPriority_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_ClearSinglePartnerEventsAppPriority_Response& operator=(CCommunity_ClearSinglePartnerEventsAppPriority_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_ClearSinglePartnerEventsAppPriority_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_ClearSinglePartnerEventsAppPriority_Response* internal_default_instance() {
    return reinterpret_cast<const CCommunity_ClearSinglePartnerEventsAppPriority_Response*>(
               &_CCommunity_ClearSinglePartnerEventsAppPriority_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(CCommunity_ClearSinglePartnerEventsAppPriority_Response& a, CCommunity_ClearSinglePartnerEventsAppPriority_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_ClearSinglePartnerEventsAppPriority_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_ClearSinglePartnerEventsAppPriority_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_ClearSinglePartnerEventsAppPriority_Response* New() const final {
    return CreateMaybeMessage<CCommunity_ClearSinglePartnerEventsAppPriority_Response>(nullptr);
  }

  CCommunity_ClearSinglePartnerEventsAppPriority_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_ClearSinglePartnerEventsAppPriority_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_ClearSinglePartnerEventsAppPriority_Response& from);
  void MergeFrom(const CCommunity_ClearSinglePartnerEventsAppPriority_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_ClearSinglePartnerEventsAppPriority_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_ClearSinglePartnerEventsAppPriority_Response";
  }
  protected:
  explicit CCommunity_ClearSinglePartnerEventsAppPriority_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fcommunity_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CCommunity_ClearSinglePartnerEventsAppPriority_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fcommunity_2esteamclient_2eproto;
};
// ===================================================================

class Community_Stub;

class Community : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Community() {};
 public:
  virtual ~Community();

  typedef Community_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void GetApps(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_GetApps_Request* request,
                       ::CCommunity_GetApps_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetAppRichPresenceLocalization(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_GetAppRichPresenceLocalization_Request* request,
                       ::CCommunity_GetAppRichPresenceLocalization_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetCommentThread(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_GetCommentThread_Request* request,
                       ::CCommunity_GetCommentThread_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void PostCommentToThread(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_PostCommentToThread_Request* request,
                       ::CCommunity_PostCommentToThread_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void DeleteCommentFromThread(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_DeleteCommentFromThread_Request* request,
                       ::CCommunity_DeleteCommentFromThread_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void RateCommentThread(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_RateCommentThread_Request* request,
                       ::CCommunity_RateCommentThread_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetCommentThreadRatings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_GetCommentThreadRatings_Request* request,
                       ::CCommunity_GetCommentThreadRatings_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void RateClanAnnouncement(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_RateClanAnnouncement_Request* request,
                       ::CCommunity_RateClanAnnouncement_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetClanAnnouncementVoteForUser(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_GetClanAnnouncementVoteForUser_Request* request,
                       ::CCommunity_GetClanAnnouncementVoteForUser_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetAvatarHistory(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_GetAvatarHistory_Request* request,
                       ::CCommunity_GetAvatarHistory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetUserPartnerEventNews(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_GetUserPartnerEventNews_Request* request,
                       ::CCommunity_GetUserPartnerEventNews_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetBestEventsForUser(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_GetBestEventsForUser_Request* request,
                       ::CCommunity_GetBestEventsForUser_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void MarkPartnerEventsForUser(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_MarkPartnerEventsForUser_Request* request,
                       ::CCommunity_MarkPartnerEventsForUser_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetUserPartnerEventViewStatus(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_GetUserPartnerEventViewStatus_Request* request,
                       ::CCommunity_GetUserPartnerEventViewStatus_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void PartnerEventsShowMoreForApp(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_PartnerEventsShowMoreForApp_Request* request,
                       ::CCommunity_PartnerEventsShowMoreForApp_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void PartnerEventsShowLessForApp(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_PartnerEventsShowLessForApp_Request* request,
                       ::CCommunity_PartnerEventsShowLessForApp_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ClearUserPartnerEventsAppPriorities(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_ClearUserPartnerEventsAppPriorities_Request* request,
                       ::CCommunity_ClearUserPartnerEventsAppPriorities_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetUserPartnerEventsAppPriorities(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_GetUserPartnerEventsAppPriorities_Request* request,
                       ::CCommunity_GetUserPartnerEventsAppPriorities_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ClearSinglePartnerEventsAppPriority(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_ClearSinglePartnerEventsAppPriority_Request* request,
                       ::CCommunity_ClearSinglePartnerEventsAppPriority_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Community);
};

class Community_Stub : public Community {
 public:
  Community_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  Community_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~Community_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements Community ------------------------------------------

  void GetApps(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_GetApps_Request* request,
                       ::CCommunity_GetApps_Response* response,
                       ::google::protobuf::Closure* done);
  void GetAppRichPresenceLocalization(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_GetAppRichPresenceLocalization_Request* request,
                       ::CCommunity_GetAppRichPresenceLocalization_Response* response,
                       ::google::protobuf::Closure* done);
  void GetCommentThread(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_GetCommentThread_Request* request,
                       ::CCommunity_GetCommentThread_Response* response,
                       ::google::protobuf::Closure* done);
  void PostCommentToThread(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_PostCommentToThread_Request* request,
                       ::CCommunity_PostCommentToThread_Response* response,
                       ::google::protobuf::Closure* done);
  void DeleteCommentFromThread(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_DeleteCommentFromThread_Request* request,
                       ::CCommunity_DeleteCommentFromThread_Response* response,
                       ::google::protobuf::Closure* done);
  void RateCommentThread(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_RateCommentThread_Request* request,
                       ::CCommunity_RateCommentThread_Response* response,
                       ::google::protobuf::Closure* done);
  void GetCommentThreadRatings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_GetCommentThreadRatings_Request* request,
                       ::CCommunity_GetCommentThreadRatings_Response* response,
                       ::google::protobuf::Closure* done);
  void RateClanAnnouncement(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_RateClanAnnouncement_Request* request,
                       ::CCommunity_RateClanAnnouncement_Response* response,
                       ::google::protobuf::Closure* done);
  void GetClanAnnouncementVoteForUser(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_GetClanAnnouncementVoteForUser_Request* request,
                       ::CCommunity_GetClanAnnouncementVoteForUser_Response* response,
                       ::google::protobuf::Closure* done);
  void GetAvatarHistory(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_GetAvatarHistory_Request* request,
                       ::CCommunity_GetAvatarHistory_Response* response,
                       ::google::protobuf::Closure* done);
  void GetUserPartnerEventNews(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_GetUserPartnerEventNews_Request* request,
                       ::CCommunity_GetUserPartnerEventNews_Response* response,
                       ::google::protobuf::Closure* done);
  void GetBestEventsForUser(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_GetBestEventsForUser_Request* request,
                       ::CCommunity_GetBestEventsForUser_Response* response,
                       ::google::protobuf::Closure* done);
  void MarkPartnerEventsForUser(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_MarkPartnerEventsForUser_Request* request,
                       ::CCommunity_MarkPartnerEventsForUser_Response* response,
                       ::google::protobuf::Closure* done);
  void GetUserPartnerEventViewStatus(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_GetUserPartnerEventViewStatus_Request* request,
                       ::CCommunity_GetUserPartnerEventViewStatus_Response* response,
                       ::google::protobuf::Closure* done);
  void PartnerEventsShowMoreForApp(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_PartnerEventsShowMoreForApp_Request* request,
                       ::CCommunity_PartnerEventsShowMoreForApp_Response* response,
                       ::google::protobuf::Closure* done);
  void PartnerEventsShowLessForApp(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_PartnerEventsShowLessForApp_Request* request,
                       ::CCommunity_PartnerEventsShowLessForApp_Response* response,
                       ::google::protobuf::Closure* done);
  void ClearUserPartnerEventsAppPriorities(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_ClearUserPartnerEventsAppPriorities_Request* request,
                       ::CCommunity_ClearUserPartnerEventsAppPriorities_Response* response,
                       ::google::protobuf::Closure* done);
  void GetUserPartnerEventsAppPriorities(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_GetUserPartnerEventsAppPriorities_Request* request,
                       ::CCommunity_GetUserPartnerEventsAppPriorities_Response* response,
                       ::google::protobuf::Closure* done);
  void ClearSinglePartnerEventsAppPriority(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CCommunity_ClearSinglePartnerEventsAppPriority_Request* request,
                       ::CCommunity_ClearSinglePartnerEventsAppPriority_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Community_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CCommunity_GetApps_Request

// repeated int32 appids = 1;
inline int CCommunity_GetApps_Request::_internal_appids_size() const {
  return appids_.size();
}
inline int CCommunity_GetApps_Request::appids_size() const {
  return _internal_appids_size();
}
inline void CCommunity_GetApps_Request::clear_appids() {
  appids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetApps_Request::_internal_appids(int index) const {
  return appids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetApps_Request::appids(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_GetApps_Request.appids)
  return _internal_appids(index);
}
inline void CCommunity_GetApps_Request::set_appids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  appids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CCommunity_GetApps_Request.appids)
}
inline void CCommunity_GetApps_Request::_internal_add_appids(::PROTOBUF_NAMESPACE_ID::int32 value) {
  appids_.Add(value);
}
inline void CCommunity_GetApps_Request::add_appids(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_appids(value);
  // @@protoc_insertion_point(field_add:CCommunity_GetApps_Request.appids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CCommunity_GetApps_Request::_internal_appids() const {
  return appids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CCommunity_GetApps_Request::appids() const {
  // @@protoc_insertion_point(field_list:CCommunity_GetApps_Request.appids)
  return _internal_appids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CCommunity_GetApps_Request::_internal_mutable_appids() {
  return &appids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CCommunity_GetApps_Request::mutable_appids() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_GetApps_Request.appids)
  return _internal_mutable_appids();
}

// optional uint32 language = 2;
inline bool CCommunity_GetApps_Request::_internal_has_language() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_GetApps_Request::has_language() const {
  return _internal_has_language();
}
inline void CCommunity_GetApps_Request::clear_language() {
  language_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetApps_Request::_internal_language() const {
  return language_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetApps_Request::language() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetApps_Request.language)
  return _internal_language();
}
inline void CCommunity_GetApps_Request::_internal_set_language(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  language_ = value;
}
inline void CCommunity_GetApps_Request::set_language(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_language(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetApps_Request.language)
}

// -------------------------------------------------------------------

// CCommunity_GetApps_Response

// repeated .CCDDBAppDetailCommon apps = 1;
inline int CCommunity_GetApps_Response::_internal_apps_size() const {
  return apps_.size();
}
inline int CCommunity_GetApps_Response::apps_size() const {
  return _internal_apps_size();
}
inline ::CCDDBAppDetailCommon* CCommunity_GetApps_Response::mutable_apps(int index) {
  // @@protoc_insertion_point(field_mutable:CCommunity_GetApps_Response.apps)
  return apps_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCDDBAppDetailCommon >*
CCommunity_GetApps_Response::mutable_apps() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_GetApps_Response.apps)
  return &apps_;
}
inline const ::CCDDBAppDetailCommon& CCommunity_GetApps_Response::_internal_apps(int index) const {
  return apps_.Get(index);
}
inline const ::CCDDBAppDetailCommon& CCommunity_GetApps_Response::apps(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_GetApps_Response.apps)
  return _internal_apps(index);
}
inline ::CCDDBAppDetailCommon* CCommunity_GetApps_Response::_internal_add_apps() {
  return apps_.Add();
}
inline ::CCDDBAppDetailCommon* CCommunity_GetApps_Response::add_apps() {
  // @@protoc_insertion_point(field_add:CCommunity_GetApps_Response.apps)
  return _internal_add_apps();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCDDBAppDetailCommon >&
CCommunity_GetApps_Response::apps() const {
  // @@protoc_insertion_point(field_list:CCommunity_GetApps_Response.apps)
  return apps_;
}

// -------------------------------------------------------------------

// CCommunity_GetAppRichPresenceLocalization_Request

// optional int32 appid = 1;
inline bool CCommunity_GetAppRichPresenceLocalization_Request::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_GetAppRichPresenceLocalization_Request::has_appid() const {
  return _internal_has_appid();
}
inline void CCommunity_GetAppRichPresenceLocalization_Request::clear_appid() {
  appid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetAppRichPresenceLocalization_Request::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetAppRichPresenceLocalization_Request::appid() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetAppRichPresenceLocalization_Request.appid)
  return _internal_appid();
}
inline void CCommunity_GetAppRichPresenceLocalization_Request::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
}
inline void CCommunity_GetAppRichPresenceLocalization_Request::set_appid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetAppRichPresenceLocalization_Request.appid)
}

// optional string language = 2;
inline bool CCommunity_GetAppRichPresenceLocalization_Request::_internal_has_language() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_GetAppRichPresenceLocalization_Request::has_language() const {
  return _internal_has_language();
}
inline void CCommunity_GetAppRichPresenceLocalization_Request::clear_language() {
  language_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCommunity_GetAppRichPresenceLocalization_Request::language() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetAppRichPresenceLocalization_Request.language)
  return _internal_language();
}
inline void CCommunity_GetAppRichPresenceLocalization_Request::set_language(const std::string& value) {
  _internal_set_language(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetAppRichPresenceLocalization_Request.language)
}
inline std::string* CCommunity_GetAppRichPresenceLocalization_Request::mutable_language() {
  // @@protoc_insertion_point(field_mutable:CCommunity_GetAppRichPresenceLocalization_Request.language)
  return _internal_mutable_language();
}
inline const std::string& CCommunity_GetAppRichPresenceLocalization_Request::_internal_language() const {
  return language_.Get();
}
inline void CCommunity_GetAppRichPresenceLocalization_Request::_internal_set_language(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  language_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CCommunity_GetAppRichPresenceLocalization_Request::set_language(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  language_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CCommunity_GetAppRichPresenceLocalization_Request.language)
}
inline void CCommunity_GetAppRichPresenceLocalization_Request::set_language(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  language_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CCommunity_GetAppRichPresenceLocalization_Request.language)
}
inline void CCommunity_GetAppRichPresenceLocalization_Request::set_language(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  language_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CCommunity_GetAppRichPresenceLocalization_Request.language)
}
inline std::string* CCommunity_GetAppRichPresenceLocalization_Request::_internal_mutable_language() {
  _has_bits_[0] |= 0x00000001u;
  return language_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CCommunity_GetAppRichPresenceLocalization_Request::release_language() {
  // @@protoc_insertion_point(field_release:CCommunity_GetAppRichPresenceLocalization_Request.language)
  if (!_internal_has_language()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return language_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CCommunity_GetAppRichPresenceLocalization_Request::set_allocated_language(std::string* language) {
  if (language != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  language_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), language,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CCommunity_GetAppRichPresenceLocalization_Request.language)
}

// -------------------------------------------------------------------

// CCommunity_GetAppRichPresenceLocalization_Response_Token

// optional string name = 1;
inline bool CCommunity_GetAppRichPresenceLocalization_Response_Token::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_GetAppRichPresenceLocalization_Response_Token::has_name() const {
  return _internal_has_name();
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_Token::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCommunity_GetAppRichPresenceLocalization_Response_Token::name() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetAppRichPresenceLocalization_Response.Token.name)
  return _internal_name();
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_Token::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetAppRichPresenceLocalization_Response.Token.name)
}
inline std::string* CCommunity_GetAppRichPresenceLocalization_Response_Token::mutable_name() {
  // @@protoc_insertion_point(field_mutable:CCommunity_GetAppRichPresenceLocalization_Response.Token.name)
  return _internal_mutable_name();
}
inline const std::string& CCommunity_GetAppRichPresenceLocalization_Response_Token::_internal_name() const {
  return name_.Get();
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_Token::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_Token::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CCommunity_GetAppRichPresenceLocalization_Response.Token.name)
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_Token::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CCommunity_GetAppRichPresenceLocalization_Response.Token.name)
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_Token::set_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CCommunity_GetAppRichPresenceLocalization_Response.Token.name)
}
inline std::string* CCommunity_GetAppRichPresenceLocalization_Response_Token::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CCommunity_GetAppRichPresenceLocalization_Response_Token::release_name() {
  // @@protoc_insertion_point(field_release:CCommunity_GetAppRichPresenceLocalization_Response.Token.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_Token::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CCommunity_GetAppRichPresenceLocalization_Response.Token.name)
}

// optional string value = 2;
inline bool CCommunity_GetAppRichPresenceLocalization_Response_Token::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_GetAppRichPresenceLocalization_Response_Token::has_value() const {
  return _internal_has_value();
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_Token::clear_value() {
  value_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CCommunity_GetAppRichPresenceLocalization_Response_Token::value() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetAppRichPresenceLocalization_Response.Token.value)
  return _internal_value();
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_Token::set_value(const std::string& value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetAppRichPresenceLocalization_Response.Token.value)
}
inline std::string* CCommunity_GetAppRichPresenceLocalization_Response_Token::mutable_value() {
  // @@protoc_insertion_point(field_mutable:CCommunity_GetAppRichPresenceLocalization_Response.Token.value)
  return _internal_mutable_value();
}
inline const std::string& CCommunity_GetAppRichPresenceLocalization_Response_Token::_internal_value() const {
  return value_.Get();
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_Token::_internal_set_value(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_Token::set_value(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CCommunity_GetAppRichPresenceLocalization_Response.Token.value)
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_Token::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CCommunity_GetAppRichPresenceLocalization_Response.Token.value)
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_Token::set_value(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CCommunity_GetAppRichPresenceLocalization_Response.Token.value)
}
inline std::string* CCommunity_GetAppRichPresenceLocalization_Response_Token::_internal_mutable_value() {
  _has_bits_[0] |= 0x00000002u;
  return value_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CCommunity_GetAppRichPresenceLocalization_Response_Token::release_value() {
  // @@protoc_insertion_point(field_release:CCommunity_GetAppRichPresenceLocalization_Response.Token.value)
  if (!_internal_has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return value_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_Token::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  value_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CCommunity_GetAppRichPresenceLocalization_Response.Token.value)
}

// -------------------------------------------------------------------

// CCommunity_GetAppRichPresenceLocalization_Response_TokenList

// optional string language = 1;
inline bool CCommunity_GetAppRichPresenceLocalization_Response_TokenList::_internal_has_language() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_GetAppRichPresenceLocalization_Response_TokenList::has_language() const {
  return _internal_has_language();
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_TokenList::clear_language() {
  language_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCommunity_GetAppRichPresenceLocalization_Response_TokenList::language() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetAppRichPresenceLocalization_Response.TokenList.language)
  return _internal_language();
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_TokenList::set_language(const std::string& value) {
  _internal_set_language(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetAppRichPresenceLocalization_Response.TokenList.language)
}
inline std::string* CCommunity_GetAppRichPresenceLocalization_Response_TokenList::mutable_language() {
  // @@protoc_insertion_point(field_mutable:CCommunity_GetAppRichPresenceLocalization_Response.TokenList.language)
  return _internal_mutable_language();
}
inline const std::string& CCommunity_GetAppRichPresenceLocalization_Response_TokenList::_internal_language() const {
  return language_.Get();
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_TokenList::_internal_set_language(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  language_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_TokenList::set_language(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  language_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CCommunity_GetAppRichPresenceLocalization_Response.TokenList.language)
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_TokenList::set_language(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  language_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CCommunity_GetAppRichPresenceLocalization_Response.TokenList.language)
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_TokenList::set_language(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  language_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CCommunity_GetAppRichPresenceLocalization_Response.TokenList.language)
}
inline std::string* CCommunity_GetAppRichPresenceLocalization_Response_TokenList::_internal_mutable_language() {
  _has_bits_[0] |= 0x00000001u;
  return language_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CCommunity_GetAppRichPresenceLocalization_Response_TokenList::release_language() {
  // @@protoc_insertion_point(field_release:CCommunity_GetAppRichPresenceLocalization_Response.TokenList.language)
  if (!_internal_has_language()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return language_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_TokenList::set_allocated_language(std::string* language) {
  if (language != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  language_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), language,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CCommunity_GetAppRichPresenceLocalization_Response.TokenList.language)
}

// repeated .CCommunity_GetAppRichPresenceLocalization_Response.Token tokens = 2;
inline int CCommunity_GetAppRichPresenceLocalization_Response_TokenList::_internal_tokens_size() const {
  return tokens_.size();
}
inline int CCommunity_GetAppRichPresenceLocalization_Response_TokenList::tokens_size() const {
  return _internal_tokens_size();
}
inline void CCommunity_GetAppRichPresenceLocalization_Response_TokenList::clear_tokens() {
  tokens_.Clear();
}
inline ::CCommunity_GetAppRichPresenceLocalization_Response_Token* CCommunity_GetAppRichPresenceLocalization_Response_TokenList::mutable_tokens(int index) {
  // @@protoc_insertion_point(field_mutable:CCommunity_GetAppRichPresenceLocalization_Response.TokenList.tokens)
  return tokens_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_GetAppRichPresenceLocalization_Response_Token >*
CCommunity_GetAppRichPresenceLocalization_Response_TokenList::mutable_tokens() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_GetAppRichPresenceLocalization_Response.TokenList.tokens)
  return &tokens_;
}
inline const ::CCommunity_GetAppRichPresenceLocalization_Response_Token& CCommunity_GetAppRichPresenceLocalization_Response_TokenList::_internal_tokens(int index) const {
  return tokens_.Get(index);
}
inline const ::CCommunity_GetAppRichPresenceLocalization_Response_Token& CCommunity_GetAppRichPresenceLocalization_Response_TokenList::tokens(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_GetAppRichPresenceLocalization_Response.TokenList.tokens)
  return _internal_tokens(index);
}
inline ::CCommunity_GetAppRichPresenceLocalization_Response_Token* CCommunity_GetAppRichPresenceLocalization_Response_TokenList::_internal_add_tokens() {
  return tokens_.Add();
}
inline ::CCommunity_GetAppRichPresenceLocalization_Response_Token* CCommunity_GetAppRichPresenceLocalization_Response_TokenList::add_tokens() {
  // @@protoc_insertion_point(field_add:CCommunity_GetAppRichPresenceLocalization_Response.TokenList.tokens)
  return _internal_add_tokens();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_GetAppRichPresenceLocalization_Response_Token >&
CCommunity_GetAppRichPresenceLocalization_Response_TokenList::tokens() const {
  // @@protoc_insertion_point(field_list:CCommunity_GetAppRichPresenceLocalization_Response.TokenList.tokens)
  return tokens_;
}

// -------------------------------------------------------------------

// CCommunity_GetAppRichPresenceLocalization_Response

// optional int32 appid = 1;
inline bool CCommunity_GetAppRichPresenceLocalization_Response::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_GetAppRichPresenceLocalization_Response::has_appid() const {
  return _internal_has_appid();
}
inline void CCommunity_GetAppRichPresenceLocalization_Response::clear_appid() {
  appid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetAppRichPresenceLocalization_Response::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetAppRichPresenceLocalization_Response::appid() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetAppRichPresenceLocalization_Response.appid)
  return _internal_appid();
}
inline void CCommunity_GetAppRichPresenceLocalization_Response::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
}
inline void CCommunity_GetAppRichPresenceLocalization_Response::set_appid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetAppRichPresenceLocalization_Response.appid)
}

// repeated .CCommunity_GetAppRichPresenceLocalization_Response.TokenList token_lists = 2;
inline int CCommunity_GetAppRichPresenceLocalization_Response::_internal_token_lists_size() const {
  return token_lists_.size();
}
inline int CCommunity_GetAppRichPresenceLocalization_Response::token_lists_size() const {
  return _internal_token_lists_size();
}
inline void CCommunity_GetAppRichPresenceLocalization_Response::clear_token_lists() {
  token_lists_.Clear();
}
inline ::CCommunity_GetAppRichPresenceLocalization_Response_TokenList* CCommunity_GetAppRichPresenceLocalization_Response::mutable_token_lists(int index) {
  // @@protoc_insertion_point(field_mutable:CCommunity_GetAppRichPresenceLocalization_Response.token_lists)
  return token_lists_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_GetAppRichPresenceLocalization_Response_TokenList >*
CCommunity_GetAppRichPresenceLocalization_Response::mutable_token_lists() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_GetAppRichPresenceLocalization_Response.token_lists)
  return &token_lists_;
}
inline const ::CCommunity_GetAppRichPresenceLocalization_Response_TokenList& CCommunity_GetAppRichPresenceLocalization_Response::_internal_token_lists(int index) const {
  return token_lists_.Get(index);
}
inline const ::CCommunity_GetAppRichPresenceLocalization_Response_TokenList& CCommunity_GetAppRichPresenceLocalization_Response::token_lists(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_GetAppRichPresenceLocalization_Response.token_lists)
  return _internal_token_lists(index);
}
inline ::CCommunity_GetAppRichPresenceLocalization_Response_TokenList* CCommunity_GetAppRichPresenceLocalization_Response::_internal_add_token_lists() {
  return token_lists_.Add();
}
inline ::CCommunity_GetAppRichPresenceLocalization_Response_TokenList* CCommunity_GetAppRichPresenceLocalization_Response::add_token_lists() {
  // @@protoc_insertion_point(field_add:CCommunity_GetAppRichPresenceLocalization_Response.token_lists)
  return _internal_add_token_lists();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_GetAppRichPresenceLocalization_Response_TokenList >&
CCommunity_GetAppRichPresenceLocalization_Response::token_lists() const {
  // @@protoc_insertion_point(field_list:CCommunity_GetAppRichPresenceLocalization_Response.token_lists)
  return token_lists_;
}

// -------------------------------------------------------------------

// CCommunity_GetCommentThread_Request

// optional fixed64 steamid = 1;
inline bool CCommunity_GetCommentThread_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CCommunity_GetCommentThread_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThread_Request::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThread_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Request.steamid)
  return _internal_steamid();
}
inline void CCommunity_GetCommentThread_Request::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
}
inline void CCommunity_GetCommentThread_Request::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Request.steamid)
}

// optional .ECommentThreadType comment_thread_type = 2 [default = ECommentThreadTypeInvalid];
inline bool CCommunity_GetCommentThread_Request::_internal_has_comment_thread_type() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Request::has_comment_thread_type() const {
  return _internal_has_comment_thread_type();
}
inline void CCommunity_GetCommentThread_Request::clear_comment_thread_type() {
  comment_thread_type_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::ECommentThreadType CCommunity_GetCommentThread_Request::_internal_comment_thread_type() const {
  return static_cast< ::ECommentThreadType >(comment_thread_type_);
}
inline ::ECommentThreadType CCommunity_GetCommentThread_Request::comment_thread_type() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Request.comment_thread_type)
  return _internal_comment_thread_type();
}
inline void CCommunity_GetCommentThread_Request::_internal_set_comment_thread_type(::ECommentThreadType value) {
  assert(::ECommentThreadType_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  comment_thread_type_ = value;
}
inline void CCommunity_GetCommentThread_Request::set_comment_thread_type(::ECommentThreadType value) {
  _internal_set_comment_thread_type(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Request.comment_thread_type)
}

// optional fixed64 gidfeature = 3;
inline bool CCommunity_GetCommentThread_Request::_internal_has_gidfeature() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Request::has_gidfeature() const {
  return _internal_has_gidfeature();
}
inline void CCommunity_GetCommentThread_Request::clear_gidfeature() {
  gidfeature_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThread_Request::_internal_gidfeature() const {
  return gidfeature_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThread_Request::gidfeature() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Request.gidfeature)
  return _internal_gidfeature();
}
inline void CCommunity_GetCommentThread_Request::_internal_set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  gidfeature_ = value;
}
inline void CCommunity_GetCommentThread_Request::set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidfeature(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Request.gidfeature)
}

// optional fixed64 gidfeature2 = 4;
inline bool CCommunity_GetCommentThread_Request::_internal_has_gidfeature2() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Request::has_gidfeature2() const {
  return _internal_has_gidfeature2();
}
inline void CCommunity_GetCommentThread_Request::clear_gidfeature2() {
  gidfeature2_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThread_Request::_internal_gidfeature2() const {
  return gidfeature2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThread_Request::gidfeature2() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Request.gidfeature2)
  return _internal_gidfeature2();
}
inline void CCommunity_GetCommentThread_Request::_internal_set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  gidfeature2_ = value;
}
inline void CCommunity_GetCommentThread_Request::set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidfeature2(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Request.gidfeature2)
}

// optional fixed64 commentthreadid = 5;
inline bool CCommunity_GetCommentThread_Request::_internal_has_commentthreadid() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Request::has_commentthreadid() const {
  return _internal_has_commentthreadid();
}
inline void CCommunity_GetCommentThread_Request::clear_commentthreadid() {
  commentthreadid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThread_Request::_internal_commentthreadid() const {
  return commentthreadid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThread_Request::commentthreadid() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Request.commentthreadid)
  return _internal_commentthreadid();
}
inline void CCommunity_GetCommentThread_Request::_internal_set_commentthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000020u;
  commentthreadid_ = value;
}
inline void CCommunity_GetCommentThread_Request::set_commentthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_commentthreadid(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Request.commentthreadid)
}

// optional int32 start = 6;
inline bool CCommunity_GetCommentThread_Request::_internal_has_start() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Request::has_start() const {
  return _internal_has_start();
}
inline void CCommunity_GetCommentThread_Request::clear_start() {
  start_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetCommentThread_Request::_internal_start() const {
  return start_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetCommentThread_Request::start() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Request.start)
  return _internal_start();
}
inline void CCommunity_GetCommentThread_Request::_internal_set_start(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  start_ = value;
}
inline void CCommunity_GetCommentThread_Request::set_start(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_start(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Request.start)
}

// optional int32 count = 7;
inline bool CCommunity_GetCommentThread_Request::_internal_has_count() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Request::has_count() const {
  return _internal_has_count();
}
inline void CCommunity_GetCommentThread_Request::clear_count() {
  count_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetCommentThread_Request::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetCommentThread_Request::count() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Request.count)
  return _internal_count();
}
inline void CCommunity_GetCommentThread_Request::_internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  count_ = value;
}
inline void CCommunity_GetCommentThread_Request::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Request.count)
}

// optional int32 upvoters = 8;
inline bool CCommunity_GetCommentThread_Request::_internal_has_upvoters() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Request::has_upvoters() const {
  return _internal_has_upvoters();
}
inline void CCommunity_GetCommentThread_Request::clear_upvoters() {
  upvoters_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetCommentThread_Request::_internal_upvoters() const {
  return upvoters_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetCommentThread_Request::upvoters() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Request.upvoters)
  return _internal_upvoters();
}
inline void CCommunity_GetCommentThread_Request::_internal_set_upvoters(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  upvoters_ = value;
}
inline void CCommunity_GetCommentThread_Request::set_upvoters(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_upvoters(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Request.upvoters)
}

// optional bool include_deleted = 9;
inline bool CCommunity_GetCommentThread_Request::_internal_has_include_deleted() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Request::has_include_deleted() const {
  return _internal_has_include_deleted();
}
inline void CCommunity_GetCommentThread_Request::clear_include_deleted() {
  include_deleted_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool CCommunity_GetCommentThread_Request::_internal_include_deleted() const {
  return include_deleted_;
}
inline bool CCommunity_GetCommentThread_Request::include_deleted() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Request.include_deleted)
  return _internal_include_deleted();
}
inline void CCommunity_GetCommentThread_Request::_internal_set_include_deleted(bool value) {
  _has_bits_[0] |= 0x00000200u;
  include_deleted_ = value;
}
inline void CCommunity_GetCommentThread_Request::set_include_deleted(bool value) {
  _internal_set_include_deleted(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Request.include_deleted)
}

// optional fixed64 gidcomment = 10;
inline bool CCommunity_GetCommentThread_Request::_internal_has_gidcomment() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Request::has_gidcomment() const {
  return _internal_has_gidcomment();
}
inline void CCommunity_GetCommentThread_Request::clear_gidcomment() {
  gidcomment_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThread_Request::_internal_gidcomment() const {
  return gidcomment_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThread_Request::gidcomment() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Request.gidcomment)
  return _internal_gidcomment();
}
inline void CCommunity_GetCommentThread_Request::_internal_set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000100u;
  gidcomment_ = value;
}
inline void CCommunity_GetCommentThread_Request::set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidcomment(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Request.gidcomment)
}

// optional uint32 time_oldest = 11;
inline bool CCommunity_GetCommentThread_Request::_internal_has_time_oldest() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Request::has_time_oldest() const {
  return _internal_has_time_oldest();
}
inline void CCommunity_GetCommentThread_Request::clear_time_oldest() {
  time_oldest_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetCommentThread_Request::_internal_time_oldest() const {
  return time_oldest_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetCommentThread_Request::time_oldest() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Request.time_oldest)
  return _internal_time_oldest();
}
inline void CCommunity_GetCommentThread_Request::_internal_set_time_oldest(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  time_oldest_ = value;
}
inline void CCommunity_GetCommentThread_Request::set_time_oldest(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_time_oldest(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Request.time_oldest)
}

// optional bool oldest_first = 12;
inline bool CCommunity_GetCommentThread_Request::_internal_has_oldest_first() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Request::has_oldest_first() const {
  return _internal_has_oldest_first();
}
inline void CCommunity_GetCommentThread_Request::clear_oldest_first() {
  oldest_first_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool CCommunity_GetCommentThread_Request::_internal_oldest_first() const {
  return oldest_first_;
}
inline bool CCommunity_GetCommentThread_Request::oldest_first() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Request.oldest_first)
  return _internal_oldest_first();
}
inline void CCommunity_GetCommentThread_Request::_internal_set_oldest_first(bool value) {
  _has_bits_[0] |= 0x00000400u;
  oldest_first_ = value;
}
inline void CCommunity_GetCommentThread_Request::set_oldest_first(bool value) {
  _internal_set_oldest_first(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Request.oldest_first)
}

// -------------------------------------------------------------------

// CCommunity_Comment_Reaction

// optional uint32 reactionid = 1;
inline bool CCommunity_Comment_Reaction::_internal_has_reactionid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_Comment_Reaction::has_reactionid() const {
  return _internal_has_reactionid();
}
inline void CCommunity_Comment_Reaction::clear_reactionid() {
  reactionid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_Comment_Reaction::_internal_reactionid() const {
  return reactionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_Comment_Reaction::reactionid() const {
  // @@protoc_insertion_point(field_get:CCommunity_Comment.Reaction.reactionid)
  return _internal_reactionid();
}
inline void CCommunity_Comment_Reaction::_internal_set_reactionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  reactionid_ = value;
}
inline void CCommunity_Comment_Reaction::set_reactionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reactionid(value);
  // @@protoc_insertion_point(field_set:CCommunity_Comment.Reaction.reactionid)
}

// optional uint32 count = 2;
inline bool CCommunity_Comment_Reaction::_internal_has_count() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_Comment_Reaction::has_count() const {
  return _internal_has_count();
}
inline void CCommunity_Comment_Reaction::clear_count() {
  count_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_Comment_Reaction::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_Comment_Reaction::count() const {
  // @@protoc_insertion_point(field_get:CCommunity_Comment.Reaction.count)
  return _internal_count();
}
inline void CCommunity_Comment_Reaction::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  count_ = value;
}
inline void CCommunity_Comment_Reaction::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:CCommunity_Comment.Reaction.count)
}

// -------------------------------------------------------------------

// CCommunity_Comment

// optional fixed64 gidcomment = 1;
inline bool CCommunity_Comment::_internal_has_gidcomment() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCommunity_Comment::has_gidcomment() const {
  return _internal_has_gidcomment();
}
inline void CCommunity_Comment::clear_gidcomment() {
  gidcomment_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_Comment::_internal_gidcomment() const {
  return gidcomment_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_Comment::gidcomment() const {
  // @@protoc_insertion_point(field_get:CCommunity_Comment.gidcomment)
  return _internal_gidcomment();
}
inline void CCommunity_Comment::_internal_set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  gidcomment_ = value;
}
inline void CCommunity_Comment::set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidcomment(value);
  // @@protoc_insertion_point(field_set:CCommunity_Comment.gidcomment)
}

// optional fixed64 steamid = 2;
inline bool CCommunity_Comment::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCommunity_Comment::has_steamid() const {
  return _internal_has_steamid();
}
inline void CCommunity_Comment::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_Comment::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_Comment::steamid() const {
  // @@protoc_insertion_point(field_get:CCommunity_Comment.steamid)
  return _internal_steamid();
}
inline void CCommunity_Comment::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  steamid_ = value;
}
inline void CCommunity_Comment::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CCommunity_Comment.steamid)
}

// optional uint32 timestamp = 3;
inline bool CCommunity_Comment::_internal_has_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCommunity_Comment::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void CCommunity_Comment::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_Comment::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_Comment::timestamp() const {
  // @@protoc_insertion_point(field_get:CCommunity_Comment.timestamp)
  return _internal_timestamp();
}
inline void CCommunity_Comment::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  timestamp_ = value;
}
inline void CCommunity_Comment::set_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:CCommunity_Comment.timestamp)
}

// optional string text = 4;
inline bool CCommunity_Comment::_internal_has_text() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_Comment::has_text() const {
  return _internal_has_text();
}
inline void CCommunity_Comment::clear_text() {
  text_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCommunity_Comment::text() const {
  // @@protoc_insertion_point(field_get:CCommunity_Comment.text)
  return _internal_text();
}
inline void CCommunity_Comment::set_text(const std::string& value) {
  _internal_set_text(value);
  // @@protoc_insertion_point(field_set:CCommunity_Comment.text)
}
inline std::string* CCommunity_Comment::mutable_text() {
  // @@protoc_insertion_point(field_mutable:CCommunity_Comment.text)
  return _internal_mutable_text();
}
inline const std::string& CCommunity_Comment::_internal_text() const {
  return text_.Get();
}
inline void CCommunity_Comment::_internal_set_text(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CCommunity_Comment::set_text(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CCommunity_Comment.text)
}
inline void CCommunity_Comment::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CCommunity_Comment.text)
}
inline void CCommunity_Comment::set_text(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CCommunity_Comment.text)
}
inline std::string* CCommunity_Comment::_internal_mutable_text() {
  _has_bits_[0] |= 0x00000001u;
  return text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CCommunity_Comment::release_text() {
  // @@protoc_insertion_point(field_release:CCommunity_Comment.text)
  if (!_internal_has_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return text_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CCommunity_Comment::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CCommunity_Comment.text)
}

// optional int32 upvotes = 5;
inline bool CCommunity_Comment::_internal_has_upvotes() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCommunity_Comment::has_upvotes() const {
  return _internal_has_upvotes();
}
inline void CCommunity_Comment::clear_upvotes() {
  upvotes_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_Comment::_internal_upvotes() const {
  return upvotes_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_Comment::upvotes() const {
  // @@protoc_insertion_point(field_get:CCommunity_Comment.upvotes)
  return _internal_upvotes();
}
inline void CCommunity_Comment::_internal_set_upvotes(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  upvotes_ = value;
}
inline void CCommunity_Comment::set_upvotes(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_upvotes(value);
  // @@protoc_insertion_point(field_set:CCommunity_Comment.upvotes)
}

// optional bool hidden = 6;
inline bool CCommunity_Comment::_internal_has_hidden() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCommunity_Comment::has_hidden() const {
  return _internal_has_hidden();
}
inline void CCommunity_Comment::clear_hidden() {
  hidden_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CCommunity_Comment::_internal_hidden() const {
  return hidden_;
}
inline bool CCommunity_Comment::hidden() const {
  // @@protoc_insertion_point(field_get:CCommunity_Comment.hidden)
  return _internal_hidden();
}
inline void CCommunity_Comment::_internal_set_hidden(bool value) {
  _has_bits_[0] |= 0x00000040u;
  hidden_ = value;
}
inline void CCommunity_Comment::set_hidden(bool value) {
  _internal_set_hidden(value);
  // @@protoc_insertion_point(field_set:CCommunity_Comment.hidden)
}

// optional bool hidden_by_user = 7;
inline bool CCommunity_Comment::_internal_has_hidden_by_user() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CCommunity_Comment::has_hidden_by_user() const {
  return _internal_has_hidden_by_user();
}
inline void CCommunity_Comment::clear_hidden_by_user() {
  hidden_by_user_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CCommunity_Comment::_internal_hidden_by_user() const {
  return hidden_by_user_;
}
inline bool CCommunity_Comment::hidden_by_user() const {
  // @@protoc_insertion_point(field_get:CCommunity_Comment.hidden_by_user)
  return _internal_hidden_by_user();
}
inline void CCommunity_Comment::_internal_set_hidden_by_user(bool value) {
  _has_bits_[0] |= 0x00000080u;
  hidden_by_user_ = value;
}
inline void CCommunity_Comment::set_hidden_by_user(bool value) {
  _internal_set_hidden_by_user(value);
  // @@protoc_insertion_point(field_set:CCommunity_Comment.hidden_by_user)
}

// optional bool deleted = 8;
inline bool CCommunity_Comment::_internal_has_deleted() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CCommunity_Comment::has_deleted() const {
  return _internal_has_deleted();
}
inline void CCommunity_Comment::clear_deleted() {
  deleted_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CCommunity_Comment::_internal_deleted() const {
  return deleted_;
}
inline bool CCommunity_Comment::deleted() const {
  // @@protoc_insertion_point(field_get:CCommunity_Comment.deleted)
  return _internal_deleted();
}
inline void CCommunity_Comment::_internal_set_deleted(bool value) {
  _has_bits_[0] |= 0x00000100u;
  deleted_ = value;
}
inline void CCommunity_Comment::set_deleted(bool value) {
  _internal_set_deleted(value);
  // @@protoc_insertion_point(field_set:CCommunity_Comment.deleted)
}

// optional .CMsgIPAddress ipaddress = 9;
inline bool CCommunity_Comment::_internal_has_ipaddress() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || ipaddress_ != nullptr);
  return value;
}
inline bool CCommunity_Comment::has_ipaddress() const {
  return _internal_has_ipaddress();
}
inline const ::CMsgIPAddress& CCommunity_Comment::_internal_ipaddress() const {
  const ::CMsgIPAddress* p = ipaddress_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgIPAddress&>(
      ::_CMsgIPAddress_default_instance_);
}
inline const ::CMsgIPAddress& CCommunity_Comment::ipaddress() const {
  // @@protoc_insertion_point(field_get:CCommunity_Comment.ipaddress)
  return _internal_ipaddress();
}
inline void CCommunity_Comment::unsafe_arena_set_allocated_ipaddress(
    ::CMsgIPAddress* ipaddress) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ipaddress_);
  }
  ipaddress_ = ipaddress;
  if (ipaddress) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CCommunity_Comment.ipaddress)
}
inline ::CMsgIPAddress* CCommunity_Comment::release_ipaddress() {
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgIPAddress* temp = ipaddress_;
  ipaddress_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgIPAddress* CCommunity_Comment::unsafe_arena_release_ipaddress() {
  // @@protoc_insertion_point(field_release:CCommunity_Comment.ipaddress)
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgIPAddress* temp = ipaddress_;
  ipaddress_ = nullptr;
  return temp;
}
inline ::CMsgIPAddress* CCommunity_Comment::_internal_mutable_ipaddress() {
  _has_bits_[0] |= 0x00000002u;
  if (ipaddress_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgIPAddress>(GetArena());
    ipaddress_ = p;
  }
  return ipaddress_;
}
inline ::CMsgIPAddress* CCommunity_Comment::mutable_ipaddress() {
  // @@protoc_insertion_point(field_mutable:CCommunity_Comment.ipaddress)
  return _internal_mutable_ipaddress();
}
inline void CCommunity_Comment::set_allocated_ipaddress(::CMsgIPAddress* ipaddress) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(ipaddress_);
  }
  if (ipaddress) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(ipaddress)->GetArena();
    if (message_arena != submessage_arena) {
      ipaddress = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ipaddress, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  ipaddress_ = ipaddress;
  // @@protoc_insertion_point(field_set_allocated:CCommunity_Comment.ipaddress)
}

// optional int32 total_hidden = 10;
inline bool CCommunity_Comment::_internal_has_total_hidden() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CCommunity_Comment::has_total_hidden() const {
  return _internal_has_total_hidden();
}
inline void CCommunity_Comment::clear_total_hidden() {
  total_hidden_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_Comment::_internal_total_hidden() const {
  return total_hidden_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_Comment::total_hidden() const {
  // @@protoc_insertion_point(field_get:CCommunity_Comment.total_hidden)
  return _internal_total_hidden();
}
inline void CCommunity_Comment::_internal_set_total_hidden(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  total_hidden_ = value;
}
inline void CCommunity_Comment::set_total_hidden(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_total_hidden(value);
  // @@protoc_insertion_point(field_set:CCommunity_Comment.total_hidden)
}

// optional bool upvoted_by_user = 11;
inline bool CCommunity_Comment::_internal_has_upvoted_by_user() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CCommunity_Comment::has_upvoted_by_user() const {
  return _internal_has_upvoted_by_user();
}
inline void CCommunity_Comment::clear_upvoted_by_user() {
  upvoted_by_user_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool CCommunity_Comment::_internal_upvoted_by_user() const {
  return upvoted_by_user_;
}
inline bool CCommunity_Comment::upvoted_by_user() const {
  // @@protoc_insertion_point(field_get:CCommunity_Comment.upvoted_by_user)
  return _internal_upvoted_by_user();
}
inline void CCommunity_Comment::_internal_set_upvoted_by_user(bool value) {
  _has_bits_[0] |= 0x00000200u;
  upvoted_by_user_ = value;
}
inline void CCommunity_Comment::set_upvoted_by_user(bool value) {
  _internal_set_upvoted_by_user(value);
  // @@protoc_insertion_point(field_set:CCommunity_Comment.upvoted_by_user)
}

// repeated .CCommunity_Comment.Reaction reactions = 12;
inline int CCommunity_Comment::_internal_reactions_size() const {
  return reactions_.size();
}
inline int CCommunity_Comment::reactions_size() const {
  return _internal_reactions_size();
}
inline void CCommunity_Comment::clear_reactions() {
  reactions_.Clear();
}
inline ::CCommunity_Comment_Reaction* CCommunity_Comment::mutable_reactions(int index) {
  // @@protoc_insertion_point(field_mutable:CCommunity_Comment.reactions)
  return reactions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_Comment_Reaction >*
CCommunity_Comment::mutable_reactions() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_Comment.reactions)
  return &reactions_;
}
inline const ::CCommunity_Comment_Reaction& CCommunity_Comment::_internal_reactions(int index) const {
  return reactions_.Get(index);
}
inline const ::CCommunity_Comment_Reaction& CCommunity_Comment::reactions(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_Comment.reactions)
  return _internal_reactions(index);
}
inline ::CCommunity_Comment_Reaction* CCommunity_Comment::_internal_add_reactions() {
  return reactions_.Add();
}
inline ::CCommunity_Comment_Reaction* CCommunity_Comment::add_reactions() {
  // @@protoc_insertion_point(field_add:CCommunity_Comment.reactions)
  return _internal_add_reactions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_Comment_Reaction >&
CCommunity_Comment::reactions() const {
  // @@protoc_insertion_point(field_list:CCommunity_Comment.reactions)
  return reactions_;
}

// optional fixed64 gidparentcomment = 13;
inline bool CCommunity_Comment::_internal_has_gidparentcomment() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CCommunity_Comment::has_gidparentcomment() const {
  return _internal_has_gidparentcomment();
}
inline void CCommunity_Comment::clear_gidparentcomment() {
  gidparentcomment_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_Comment::_internal_gidparentcomment() const {
  return gidparentcomment_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_Comment::gidparentcomment() const {
  // @@protoc_insertion_point(field_get:CCommunity_Comment.gidparentcomment)
  return _internal_gidparentcomment();
}
inline void CCommunity_Comment::_internal_set_gidparentcomment(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000800u;
  gidparentcomment_ = value;
}
inline void CCommunity_Comment::set_gidparentcomment(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidparentcomment(value);
  // @@protoc_insertion_point(field_set:CCommunity_Comment.gidparentcomment)
}

// -------------------------------------------------------------------

// CCommunity_GetCommentThread_Response

// repeated .CCommunity_Comment comments = 1;
inline int CCommunity_GetCommentThread_Response::_internal_comments_size() const {
  return comments_.size();
}
inline int CCommunity_GetCommentThread_Response::comments_size() const {
  return _internal_comments_size();
}
inline void CCommunity_GetCommentThread_Response::clear_comments() {
  comments_.Clear();
}
inline ::CCommunity_Comment* CCommunity_GetCommentThread_Response::mutable_comments(int index) {
  // @@protoc_insertion_point(field_mutable:CCommunity_GetCommentThread_Response.comments)
  return comments_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_Comment >*
CCommunity_GetCommentThread_Response::mutable_comments() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_GetCommentThread_Response.comments)
  return &comments_;
}
inline const ::CCommunity_Comment& CCommunity_GetCommentThread_Response::_internal_comments(int index) const {
  return comments_.Get(index);
}
inline const ::CCommunity_Comment& CCommunity_GetCommentThread_Response::comments(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Response.comments)
  return _internal_comments(index);
}
inline ::CCommunity_Comment* CCommunity_GetCommentThread_Response::_internal_add_comments() {
  return comments_.Add();
}
inline ::CCommunity_Comment* CCommunity_GetCommentThread_Response::add_comments() {
  // @@protoc_insertion_point(field_add:CCommunity_GetCommentThread_Response.comments)
  return _internal_add_comments();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_Comment >&
CCommunity_GetCommentThread_Response::comments() const {
  // @@protoc_insertion_point(field_list:CCommunity_GetCommentThread_Response.comments)
  return comments_;
}

// repeated .CCommunity_Comment deleted_comments = 2;
inline int CCommunity_GetCommentThread_Response::_internal_deleted_comments_size() const {
  return deleted_comments_.size();
}
inline int CCommunity_GetCommentThread_Response::deleted_comments_size() const {
  return _internal_deleted_comments_size();
}
inline void CCommunity_GetCommentThread_Response::clear_deleted_comments() {
  deleted_comments_.Clear();
}
inline ::CCommunity_Comment* CCommunity_GetCommentThread_Response::mutable_deleted_comments(int index) {
  // @@protoc_insertion_point(field_mutable:CCommunity_GetCommentThread_Response.deleted_comments)
  return deleted_comments_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_Comment >*
CCommunity_GetCommentThread_Response::mutable_deleted_comments() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_GetCommentThread_Response.deleted_comments)
  return &deleted_comments_;
}
inline const ::CCommunity_Comment& CCommunity_GetCommentThread_Response::_internal_deleted_comments(int index) const {
  return deleted_comments_.Get(index);
}
inline const ::CCommunity_Comment& CCommunity_GetCommentThread_Response::deleted_comments(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Response.deleted_comments)
  return _internal_deleted_comments(index);
}
inline ::CCommunity_Comment* CCommunity_GetCommentThread_Response::_internal_add_deleted_comments() {
  return deleted_comments_.Add();
}
inline ::CCommunity_Comment* CCommunity_GetCommentThread_Response::add_deleted_comments() {
  // @@protoc_insertion_point(field_add:CCommunity_GetCommentThread_Response.deleted_comments)
  return _internal_add_deleted_comments();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_Comment >&
CCommunity_GetCommentThread_Response::deleted_comments() const {
  // @@protoc_insertion_point(field_list:CCommunity_GetCommentThread_Response.deleted_comments)
  return deleted_comments_;
}

// optional fixed64 steamid = 3;
inline bool CCommunity_GetCommentThread_Response::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Response::has_steamid() const {
  return _internal_has_steamid();
}
inline void CCommunity_GetCommentThread_Response::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThread_Response::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThread_Response::steamid() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Response.steamid)
  return _internal_steamid();
}
inline void CCommunity_GetCommentThread_Response::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
}
inline void CCommunity_GetCommentThread_Response::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Response.steamid)
}

// optional fixed64 commentthreadid = 4;
inline bool CCommunity_GetCommentThread_Response::_internal_has_commentthreadid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Response::has_commentthreadid() const {
  return _internal_has_commentthreadid();
}
inline void CCommunity_GetCommentThread_Response::clear_commentthreadid() {
  commentthreadid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThread_Response::_internal_commentthreadid() const {
  return commentthreadid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThread_Response::commentthreadid() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Response.commentthreadid)
  return _internal_commentthreadid();
}
inline void CCommunity_GetCommentThread_Response::_internal_set_commentthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  commentthreadid_ = value;
}
inline void CCommunity_GetCommentThread_Response::set_commentthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_commentthreadid(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Response.commentthreadid)
}

// optional int32 start = 5;
inline bool CCommunity_GetCommentThread_Response::_internal_has_start() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Response::has_start() const {
  return _internal_has_start();
}
inline void CCommunity_GetCommentThread_Response::clear_start() {
  start_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetCommentThread_Response::_internal_start() const {
  return start_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetCommentThread_Response::start() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Response.start)
  return _internal_start();
}
inline void CCommunity_GetCommentThread_Response::_internal_set_start(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  start_ = value;
}
inline void CCommunity_GetCommentThread_Response::set_start(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_start(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Response.start)
}

// optional int32 count = 6;
inline bool CCommunity_GetCommentThread_Response::_internal_has_count() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Response::has_count() const {
  return _internal_has_count();
}
inline void CCommunity_GetCommentThread_Response::clear_count() {
  count_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetCommentThread_Response::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetCommentThread_Response::count() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Response.count)
  return _internal_count();
}
inline void CCommunity_GetCommentThread_Response::_internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  count_ = value;
}
inline void CCommunity_GetCommentThread_Response::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Response.count)
}

// optional int32 total_count = 7;
inline bool CCommunity_GetCommentThread_Response::_internal_has_total_count() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Response::has_total_count() const {
  return _internal_has_total_count();
}
inline void CCommunity_GetCommentThread_Response::clear_total_count() {
  total_count_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetCommentThread_Response::_internal_total_count() const {
  return total_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetCommentThread_Response::total_count() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Response.total_count)
  return _internal_total_count();
}
inline void CCommunity_GetCommentThread_Response::_internal_set_total_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  total_count_ = value;
}
inline void CCommunity_GetCommentThread_Response::set_total_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_total_count(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Response.total_count)
}

// optional int32 upvotes = 8;
inline bool CCommunity_GetCommentThread_Response::_internal_has_upvotes() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Response::has_upvotes() const {
  return _internal_has_upvotes();
}
inline void CCommunity_GetCommentThread_Response::clear_upvotes() {
  upvotes_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetCommentThread_Response::_internal_upvotes() const {
  return upvotes_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetCommentThread_Response::upvotes() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Response.upvotes)
  return _internal_upvotes();
}
inline void CCommunity_GetCommentThread_Response::_internal_set_upvotes(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  upvotes_ = value;
}
inline void CCommunity_GetCommentThread_Response::set_upvotes(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_upvotes(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Response.upvotes)
}

// repeated uint32 upvoters = 9;
inline int CCommunity_GetCommentThread_Response::_internal_upvoters_size() const {
  return upvoters_.size();
}
inline int CCommunity_GetCommentThread_Response::upvoters_size() const {
  return _internal_upvoters_size();
}
inline void CCommunity_GetCommentThread_Response::clear_upvoters() {
  upvoters_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetCommentThread_Response::_internal_upvoters(int index) const {
  return upvoters_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetCommentThread_Response::upvoters(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Response.upvoters)
  return _internal_upvoters(index);
}
inline void CCommunity_GetCommentThread_Response::set_upvoters(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  upvoters_.Set(index, value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Response.upvoters)
}
inline void CCommunity_GetCommentThread_Response::_internal_add_upvoters(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  upvoters_.Add(value);
}
inline void CCommunity_GetCommentThread_Response::add_upvoters(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_upvoters(value);
  // @@protoc_insertion_point(field_add:CCommunity_GetCommentThread_Response.upvoters)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CCommunity_GetCommentThread_Response::_internal_upvoters() const {
  return upvoters_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CCommunity_GetCommentThread_Response::upvoters() const {
  // @@protoc_insertion_point(field_list:CCommunity_GetCommentThread_Response.upvoters)
  return _internal_upvoters();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CCommunity_GetCommentThread_Response::_internal_mutable_upvoters() {
  return &upvoters_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CCommunity_GetCommentThread_Response::mutable_upvoters() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_GetCommentThread_Response.upvoters)
  return _internal_mutable_upvoters();
}

// optional bool user_subscribed = 10;
inline bool CCommunity_GetCommentThread_Response::_internal_has_user_subscribed() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Response::has_user_subscribed() const {
  return _internal_has_user_subscribed();
}
inline void CCommunity_GetCommentThread_Response::clear_user_subscribed() {
  user_subscribed_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CCommunity_GetCommentThread_Response::_internal_user_subscribed() const {
  return user_subscribed_;
}
inline bool CCommunity_GetCommentThread_Response::user_subscribed() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Response.user_subscribed)
  return _internal_user_subscribed();
}
inline void CCommunity_GetCommentThread_Response::_internal_set_user_subscribed(bool value) {
  _has_bits_[0] |= 0x00000080u;
  user_subscribed_ = value;
}
inline void CCommunity_GetCommentThread_Response::set_user_subscribed(bool value) {
  _internal_set_user_subscribed(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Response.user_subscribed)
}

// optional bool user_upvoted = 11;
inline bool CCommunity_GetCommentThread_Response::_internal_has_user_upvoted() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Response::has_user_upvoted() const {
  return _internal_has_user_upvoted();
}
inline void CCommunity_GetCommentThread_Response::clear_user_upvoted() {
  user_upvoted_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CCommunity_GetCommentThread_Response::_internal_user_upvoted() const {
  return user_upvoted_;
}
inline bool CCommunity_GetCommentThread_Response::user_upvoted() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Response.user_upvoted)
  return _internal_user_upvoted();
}
inline void CCommunity_GetCommentThread_Response::_internal_set_user_upvoted(bool value) {
  _has_bits_[0] |= 0x00000100u;
  user_upvoted_ = value;
}
inline void CCommunity_GetCommentThread_Response::set_user_upvoted(bool value) {
  _internal_set_user_upvoted(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Response.user_upvoted)
}

// optional fixed64 answer_commentid = 12;
inline bool CCommunity_GetCommentThread_Response::_internal_has_answer_commentid() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Response::has_answer_commentid() const {
  return _internal_has_answer_commentid();
}
inline void CCommunity_GetCommentThread_Response::clear_answer_commentid() {
  answer_commentid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThread_Response::_internal_answer_commentid() const {
  return answer_commentid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThread_Response::answer_commentid() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Response.answer_commentid)
  return _internal_answer_commentid();
}
inline void CCommunity_GetCommentThread_Response::_internal_set_answer_commentid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  answer_commentid_ = value;
}
inline void CCommunity_GetCommentThread_Response::set_answer_commentid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_answer_commentid(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Response.answer_commentid)
}

// optional uint32 answer_actor = 13;
inline bool CCommunity_GetCommentThread_Response::_internal_has_answer_actor() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Response::has_answer_actor() const {
  return _internal_has_answer_actor();
}
inline void CCommunity_GetCommentThread_Response::clear_answer_actor() {
  answer_actor_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetCommentThread_Response::_internal_answer_actor() const {
  return answer_actor_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetCommentThread_Response::answer_actor() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Response.answer_actor)
  return _internal_answer_actor();
}
inline void CCommunity_GetCommentThread_Response::_internal_set_answer_actor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  answer_actor_ = value;
}
inline void CCommunity_GetCommentThread_Response::set_answer_actor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_answer_actor(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Response.answer_actor)
}

// optional int32 answer_actor_rank = 14;
inline bool CCommunity_GetCommentThread_Response::_internal_has_answer_actor_rank() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Response::has_answer_actor_rank() const {
  return _internal_has_answer_actor_rank();
}
inline void CCommunity_GetCommentThread_Response::clear_answer_actor_rank() {
  answer_actor_rank_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetCommentThread_Response::_internal_answer_actor_rank() const {
  return answer_actor_rank_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_GetCommentThread_Response::answer_actor_rank() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Response.answer_actor_rank)
  return _internal_answer_actor_rank();
}
inline void CCommunity_GetCommentThread_Response::_internal_set_answer_actor_rank(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000800u;
  answer_actor_rank_ = value;
}
inline void CCommunity_GetCommentThread_Response::set_answer_actor_rank(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_answer_actor_rank(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Response.answer_actor_rank)
}

// optional bool can_post = 15;
inline bool CCommunity_GetCommentThread_Response::_internal_has_can_post() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Response::has_can_post() const {
  return _internal_has_can_post();
}
inline void CCommunity_GetCommentThread_Response::clear_can_post() {
  can_post_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool CCommunity_GetCommentThread_Response::_internal_can_post() const {
  return can_post_;
}
inline bool CCommunity_GetCommentThread_Response::can_post() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Response.can_post)
  return _internal_can_post();
}
inline void CCommunity_GetCommentThread_Response::_internal_set_can_post(bool value) {
  _has_bits_[0] |= 0x00000200u;
  can_post_ = value;
}
inline void CCommunity_GetCommentThread_Response::set_can_post(bool value) {
  _internal_set_can_post(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Response.can_post)
}

// optional uint32 comment_thread_type = 16;
inline bool CCommunity_GetCommentThread_Response::_internal_has_comment_thread_type() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Response::has_comment_thread_type() const {
  return _internal_has_comment_thread_type();
}
inline void CCommunity_GetCommentThread_Response::clear_comment_thread_type() {
  comment_thread_type_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetCommentThread_Response::_internal_comment_thread_type() const {
  return comment_thread_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetCommentThread_Response::comment_thread_type() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Response.comment_thread_type)
  return _internal_comment_thread_type();
}
inline void CCommunity_GetCommentThread_Response::_internal_set_comment_thread_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  comment_thread_type_ = value;
}
inline void CCommunity_GetCommentThread_Response::set_comment_thread_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_comment_thread_type(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Response.comment_thread_type)
}

// optional fixed64 gidfeature = 17;
inline bool CCommunity_GetCommentThread_Response::_internal_has_gidfeature() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Response::has_gidfeature() const {
  return _internal_has_gidfeature();
}
inline void CCommunity_GetCommentThread_Response::clear_gidfeature() {
  gidfeature_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThread_Response::_internal_gidfeature() const {
  return gidfeature_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThread_Response::gidfeature() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Response.gidfeature)
  return _internal_gidfeature();
}
inline void CCommunity_GetCommentThread_Response::_internal_set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00002000u;
  gidfeature_ = value;
}
inline void CCommunity_GetCommentThread_Response::set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidfeature(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Response.gidfeature)
}

// optional fixed64 gidfeature2 = 18;
inline bool CCommunity_GetCommentThread_Response::_internal_has_gidfeature2() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThread_Response::has_gidfeature2() const {
  return _internal_has_gidfeature2();
}
inline void CCommunity_GetCommentThread_Response::clear_gidfeature2() {
  gidfeature2_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThread_Response::_internal_gidfeature2() const {
  return gidfeature2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThread_Response::gidfeature2() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThread_Response.gidfeature2)
  return _internal_gidfeature2();
}
inline void CCommunity_GetCommentThread_Response::_internal_set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00004000u;
  gidfeature2_ = value;
}
inline void CCommunity_GetCommentThread_Response::set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidfeature2(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThread_Response.gidfeature2)
}

// -------------------------------------------------------------------

// CCommunity_PostCommentToThread_Request

// optional fixed64 steamid = 1;
inline bool CCommunity_PostCommentToThread_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_PostCommentToThread_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CCommunity_PostCommentToThread_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_PostCommentToThread_Request::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_PostCommentToThread_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CCommunity_PostCommentToThread_Request.steamid)
  return _internal_steamid();
}
inline void CCommunity_PostCommentToThread_Request::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
}
inline void CCommunity_PostCommentToThread_Request::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CCommunity_PostCommentToThread_Request.steamid)
}

// optional .ECommentThreadType comment_thread_type = 2 [default = ECommentThreadTypeInvalid];
inline bool CCommunity_PostCommentToThread_Request::_internal_has_comment_thread_type() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCommunity_PostCommentToThread_Request::has_comment_thread_type() const {
  return _internal_has_comment_thread_type();
}
inline void CCommunity_PostCommentToThread_Request::clear_comment_thread_type() {
  comment_thread_type_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::ECommentThreadType CCommunity_PostCommentToThread_Request::_internal_comment_thread_type() const {
  return static_cast< ::ECommentThreadType >(comment_thread_type_);
}
inline ::ECommentThreadType CCommunity_PostCommentToThread_Request::comment_thread_type() const {
  // @@protoc_insertion_point(field_get:CCommunity_PostCommentToThread_Request.comment_thread_type)
  return _internal_comment_thread_type();
}
inline void CCommunity_PostCommentToThread_Request::_internal_set_comment_thread_type(::ECommentThreadType value) {
  assert(::ECommentThreadType_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  comment_thread_type_ = value;
}
inline void CCommunity_PostCommentToThread_Request::set_comment_thread_type(::ECommentThreadType value) {
  _internal_set_comment_thread_type(value);
  // @@protoc_insertion_point(field_set:CCommunity_PostCommentToThread_Request.comment_thread_type)
}

// optional fixed64 gidfeature = 3;
inline bool CCommunity_PostCommentToThread_Request::_internal_has_gidfeature() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCommunity_PostCommentToThread_Request::has_gidfeature() const {
  return _internal_has_gidfeature();
}
inline void CCommunity_PostCommentToThread_Request::clear_gidfeature() {
  gidfeature_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_PostCommentToThread_Request::_internal_gidfeature() const {
  return gidfeature_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_PostCommentToThread_Request::gidfeature() const {
  // @@protoc_insertion_point(field_get:CCommunity_PostCommentToThread_Request.gidfeature)
  return _internal_gidfeature();
}
inline void CCommunity_PostCommentToThread_Request::_internal_set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  gidfeature_ = value;
}
inline void CCommunity_PostCommentToThread_Request::set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidfeature(value);
  // @@protoc_insertion_point(field_set:CCommunity_PostCommentToThread_Request.gidfeature)
}

// optional fixed64 gidfeature2 = 4;
inline bool CCommunity_PostCommentToThread_Request::_internal_has_gidfeature2() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCommunity_PostCommentToThread_Request::has_gidfeature2() const {
  return _internal_has_gidfeature2();
}
inline void CCommunity_PostCommentToThread_Request::clear_gidfeature2() {
  gidfeature2_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_PostCommentToThread_Request::_internal_gidfeature2() const {
  return gidfeature2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_PostCommentToThread_Request::gidfeature2() const {
  // @@protoc_insertion_point(field_get:CCommunity_PostCommentToThread_Request.gidfeature2)
  return _internal_gidfeature2();
}
inline void CCommunity_PostCommentToThread_Request::_internal_set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  gidfeature2_ = value;
}
inline void CCommunity_PostCommentToThread_Request::set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidfeature2(value);
  // @@protoc_insertion_point(field_set:CCommunity_PostCommentToThread_Request.gidfeature2)
}

// optional string text = 6;
inline bool CCommunity_PostCommentToThread_Request::_internal_has_text() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_PostCommentToThread_Request::has_text() const {
  return _internal_has_text();
}
inline void CCommunity_PostCommentToThread_Request::clear_text() {
  text_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCommunity_PostCommentToThread_Request::text() const {
  // @@protoc_insertion_point(field_get:CCommunity_PostCommentToThread_Request.text)
  return _internal_text();
}
inline void CCommunity_PostCommentToThread_Request::set_text(const std::string& value) {
  _internal_set_text(value);
  // @@protoc_insertion_point(field_set:CCommunity_PostCommentToThread_Request.text)
}
inline std::string* CCommunity_PostCommentToThread_Request::mutable_text() {
  // @@protoc_insertion_point(field_mutable:CCommunity_PostCommentToThread_Request.text)
  return _internal_mutable_text();
}
inline const std::string& CCommunity_PostCommentToThread_Request::_internal_text() const {
  return text_.Get();
}
inline void CCommunity_PostCommentToThread_Request::_internal_set_text(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CCommunity_PostCommentToThread_Request::set_text(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CCommunity_PostCommentToThread_Request.text)
}
inline void CCommunity_PostCommentToThread_Request::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CCommunity_PostCommentToThread_Request.text)
}
inline void CCommunity_PostCommentToThread_Request::set_text(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CCommunity_PostCommentToThread_Request.text)
}
inline std::string* CCommunity_PostCommentToThread_Request::_internal_mutable_text() {
  _has_bits_[0] |= 0x00000001u;
  return text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CCommunity_PostCommentToThread_Request::release_text() {
  // @@protoc_insertion_point(field_release:CCommunity_PostCommentToThread_Request.text)
  if (!_internal_has_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return text_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CCommunity_PostCommentToThread_Request::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CCommunity_PostCommentToThread_Request.text)
}

// optional fixed64 gidparentcomment = 7;
inline bool CCommunity_PostCommentToThread_Request::_internal_has_gidparentcomment() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCommunity_PostCommentToThread_Request::has_gidparentcomment() const {
  return _internal_has_gidparentcomment();
}
inline void CCommunity_PostCommentToThread_Request::clear_gidparentcomment() {
  gidparentcomment_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_PostCommentToThread_Request::_internal_gidparentcomment() const {
  return gidparentcomment_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_PostCommentToThread_Request::gidparentcomment() const {
  // @@protoc_insertion_point(field_get:CCommunity_PostCommentToThread_Request.gidparentcomment)
  return _internal_gidparentcomment();
}
inline void CCommunity_PostCommentToThread_Request::_internal_set_gidparentcomment(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  gidparentcomment_ = value;
}
inline void CCommunity_PostCommentToThread_Request::set_gidparentcomment(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidparentcomment(value);
  // @@protoc_insertion_point(field_set:CCommunity_PostCommentToThread_Request.gidparentcomment)
}

// optional bool suppress_notifications = 8;
inline bool CCommunity_PostCommentToThread_Request::_internal_has_suppress_notifications() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCommunity_PostCommentToThread_Request::has_suppress_notifications() const {
  return _internal_has_suppress_notifications();
}
inline void CCommunity_PostCommentToThread_Request::clear_suppress_notifications() {
  suppress_notifications_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CCommunity_PostCommentToThread_Request::_internal_suppress_notifications() const {
  return suppress_notifications_;
}
inline bool CCommunity_PostCommentToThread_Request::suppress_notifications() const {
  // @@protoc_insertion_point(field_get:CCommunity_PostCommentToThread_Request.suppress_notifications)
  return _internal_suppress_notifications();
}
inline void CCommunity_PostCommentToThread_Request::_internal_set_suppress_notifications(bool value) {
  _has_bits_[0] |= 0x00000040u;
  suppress_notifications_ = value;
}
inline void CCommunity_PostCommentToThread_Request::set_suppress_notifications(bool value) {
  _internal_set_suppress_notifications(value);
  // @@protoc_insertion_point(field_set:CCommunity_PostCommentToThread_Request.suppress_notifications)
}

// optional bool is_report = 9;
inline bool CCommunity_PostCommentToThread_Request::_internal_has_is_report() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CCommunity_PostCommentToThread_Request::has_is_report() const {
  return _internal_has_is_report();
}
inline void CCommunity_PostCommentToThread_Request::clear_is_report() {
  is_report_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CCommunity_PostCommentToThread_Request::_internal_is_report() const {
  return is_report_;
}
inline bool CCommunity_PostCommentToThread_Request::is_report() const {
  // @@protoc_insertion_point(field_get:CCommunity_PostCommentToThread_Request.is_report)
  return _internal_is_report();
}
inline void CCommunity_PostCommentToThread_Request::_internal_set_is_report(bool value) {
  _has_bits_[0] |= 0x00000080u;
  is_report_ = value;
}
inline void CCommunity_PostCommentToThread_Request::set_is_report(bool value) {
  _internal_set_is_report(value);
  // @@protoc_insertion_point(field_set:CCommunity_PostCommentToThread_Request.is_report)
}

// optional bool start_hidden = 10;
inline bool CCommunity_PostCommentToThread_Request::_internal_has_start_hidden() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CCommunity_PostCommentToThread_Request::has_start_hidden() const {
  return _internal_has_start_hidden();
}
inline void CCommunity_PostCommentToThread_Request::clear_start_hidden() {
  start_hidden_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CCommunity_PostCommentToThread_Request::_internal_start_hidden() const {
  return start_hidden_;
}
inline bool CCommunity_PostCommentToThread_Request::start_hidden() const {
  // @@protoc_insertion_point(field_get:CCommunity_PostCommentToThread_Request.start_hidden)
  return _internal_start_hidden();
}
inline void CCommunity_PostCommentToThread_Request::_internal_set_start_hidden(bool value) {
  _has_bits_[0] |= 0x00000100u;
  start_hidden_ = value;
}
inline void CCommunity_PostCommentToThread_Request::set_start_hidden(bool value) {
  _internal_set_start_hidden(value);
  // @@protoc_insertion_point(field_set:CCommunity_PostCommentToThread_Request.start_hidden)
}

// -------------------------------------------------------------------

// CCommunity_PostCommentToThread_Response

// optional fixed64 gidcomment = 1;
inline bool CCommunity_PostCommentToThread_Response::_internal_has_gidcomment() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_PostCommentToThread_Response::has_gidcomment() const {
  return _internal_has_gidcomment();
}
inline void CCommunity_PostCommentToThread_Response::clear_gidcomment() {
  gidcomment_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_PostCommentToThread_Response::_internal_gidcomment() const {
  return gidcomment_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_PostCommentToThread_Response::gidcomment() const {
  // @@protoc_insertion_point(field_get:CCommunity_PostCommentToThread_Response.gidcomment)
  return _internal_gidcomment();
}
inline void CCommunity_PostCommentToThread_Response::_internal_set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  gidcomment_ = value;
}
inline void CCommunity_PostCommentToThread_Response::set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidcomment(value);
  // @@protoc_insertion_point(field_set:CCommunity_PostCommentToThread_Response.gidcomment)
}

// optional fixed64 commentthreadid = 2;
inline bool CCommunity_PostCommentToThread_Response::_internal_has_commentthreadid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_PostCommentToThread_Response::has_commentthreadid() const {
  return _internal_has_commentthreadid();
}
inline void CCommunity_PostCommentToThread_Response::clear_commentthreadid() {
  commentthreadid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_PostCommentToThread_Response::_internal_commentthreadid() const {
  return commentthreadid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_PostCommentToThread_Response::commentthreadid() const {
  // @@protoc_insertion_point(field_get:CCommunity_PostCommentToThread_Response.commentthreadid)
  return _internal_commentthreadid();
}
inline void CCommunity_PostCommentToThread_Response::_internal_set_commentthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  commentthreadid_ = value;
}
inline void CCommunity_PostCommentToThread_Response::set_commentthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_commentthreadid(value);
  // @@protoc_insertion_point(field_set:CCommunity_PostCommentToThread_Response.commentthreadid)
}

// optional int32 count = 3;
inline bool CCommunity_PostCommentToThread_Response::_internal_has_count() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCommunity_PostCommentToThread_Response::has_count() const {
  return _internal_has_count();
}
inline void CCommunity_PostCommentToThread_Response::clear_count() {
  count_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_PostCommentToThread_Response::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_PostCommentToThread_Response::count() const {
  // @@protoc_insertion_point(field_get:CCommunity_PostCommentToThread_Response.count)
  return _internal_count();
}
inline void CCommunity_PostCommentToThread_Response::_internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  count_ = value;
}
inline void CCommunity_PostCommentToThread_Response::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:CCommunity_PostCommentToThread_Response.count)
}

// optional int32 upvotes = 4;
inline bool CCommunity_PostCommentToThread_Response::_internal_has_upvotes() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCommunity_PostCommentToThread_Response::has_upvotes() const {
  return _internal_has_upvotes();
}
inline void CCommunity_PostCommentToThread_Response::clear_upvotes() {
  upvotes_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_PostCommentToThread_Response::_internal_upvotes() const {
  return upvotes_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_PostCommentToThread_Response::upvotes() const {
  // @@protoc_insertion_point(field_get:CCommunity_PostCommentToThread_Response.upvotes)
  return _internal_upvotes();
}
inline void CCommunity_PostCommentToThread_Response::_internal_set_upvotes(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  upvotes_ = value;
}
inline void CCommunity_PostCommentToThread_Response::set_upvotes(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_upvotes(value);
  // @@protoc_insertion_point(field_set:CCommunity_PostCommentToThread_Response.upvotes)
}

// -------------------------------------------------------------------

// CCommunity_DeleteCommentFromThread_Request

// optional fixed64 steamid = 1;
inline bool CCommunity_DeleteCommentFromThread_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_DeleteCommentFromThread_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CCommunity_DeleteCommentFromThread_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_DeleteCommentFromThread_Request::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_DeleteCommentFromThread_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CCommunity_DeleteCommentFromThread_Request.steamid)
  return _internal_steamid();
}
inline void CCommunity_DeleteCommentFromThread_Request::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
}
inline void CCommunity_DeleteCommentFromThread_Request::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CCommunity_DeleteCommentFromThread_Request.steamid)
}

// optional .ECommentThreadType comment_thread_type = 2 [default = ECommentThreadTypeInvalid];
inline bool CCommunity_DeleteCommentFromThread_Request::_internal_has_comment_thread_type() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCommunity_DeleteCommentFromThread_Request::has_comment_thread_type() const {
  return _internal_has_comment_thread_type();
}
inline void CCommunity_DeleteCommentFromThread_Request::clear_comment_thread_type() {
  comment_thread_type_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::ECommentThreadType CCommunity_DeleteCommentFromThread_Request::_internal_comment_thread_type() const {
  return static_cast< ::ECommentThreadType >(comment_thread_type_);
}
inline ::ECommentThreadType CCommunity_DeleteCommentFromThread_Request::comment_thread_type() const {
  // @@protoc_insertion_point(field_get:CCommunity_DeleteCommentFromThread_Request.comment_thread_type)
  return _internal_comment_thread_type();
}
inline void CCommunity_DeleteCommentFromThread_Request::_internal_set_comment_thread_type(::ECommentThreadType value) {
  assert(::ECommentThreadType_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  comment_thread_type_ = value;
}
inline void CCommunity_DeleteCommentFromThread_Request::set_comment_thread_type(::ECommentThreadType value) {
  _internal_set_comment_thread_type(value);
  // @@protoc_insertion_point(field_set:CCommunity_DeleteCommentFromThread_Request.comment_thread_type)
}

// optional fixed64 gidfeature = 3;
inline bool CCommunity_DeleteCommentFromThread_Request::_internal_has_gidfeature() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_DeleteCommentFromThread_Request::has_gidfeature() const {
  return _internal_has_gidfeature();
}
inline void CCommunity_DeleteCommentFromThread_Request::clear_gidfeature() {
  gidfeature_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_DeleteCommentFromThread_Request::_internal_gidfeature() const {
  return gidfeature_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_DeleteCommentFromThread_Request::gidfeature() const {
  // @@protoc_insertion_point(field_get:CCommunity_DeleteCommentFromThread_Request.gidfeature)
  return _internal_gidfeature();
}
inline void CCommunity_DeleteCommentFromThread_Request::_internal_set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  gidfeature_ = value;
}
inline void CCommunity_DeleteCommentFromThread_Request::set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidfeature(value);
  // @@protoc_insertion_point(field_set:CCommunity_DeleteCommentFromThread_Request.gidfeature)
}

// optional fixed64 gidfeature2 = 4;
inline bool CCommunity_DeleteCommentFromThread_Request::_internal_has_gidfeature2() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCommunity_DeleteCommentFromThread_Request::has_gidfeature2() const {
  return _internal_has_gidfeature2();
}
inline void CCommunity_DeleteCommentFromThread_Request::clear_gidfeature2() {
  gidfeature2_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_DeleteCommentFromThread_Request::_internal_gidfeature2() const {
  return gidfeature2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_DeleteCommentFromThread_Request::gidfeature2() const {
  // @@protoc_insertion_point(field_get:CCommunity_DeleteCommentFromThread_Request.gidfeature2)
  return _internal_gidfeature2();
}
inline void CCommunity_DeleteCommentFromThread_Request::_internal_set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  gidfeature2_ = value;
}
inline void CCommunity_DeleteCommentFromThread_Request::set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidfeature2(value);
  // @@protoc_insertion_point(field_set:CCommunity_DeleteCommentFromThread_Request.gidfeature2)
}

// optional fixed64 gidcomment = 5;
inline bool CCommunity_DeleteCommentFromThread_Request::_internal_has_gidcomment() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCommunity_DeleteCommentFromThread_Request::has_gidcomment() const {
  return _internal_has_gidcomment();
}
inline void CCommunity_DeleteCommentFromThread_Request::clear_gidcomment() {
  gidcomment_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_DeleteCommentFromThread_Request::_internal_gidcomment() const {
  return gidcomment_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_DeleteCommentFromThread_Request::gidcomment() const {
  // @@protoc_insertion_point(field_get:CCommunity_DeleteCommentFromThread_Request.gidcomment)
  return _internal_gidcomment();
}
inline void CCommunity_DeleteCommentFromThread_Request::_internal_set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000020u;
  gidcomment_ = value;
}
inline void CCommunity_DeleteCommentFromThread_Request::set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidcomment(value);
  // @@protoc_insertion_point(field_set:CCommunity_DeleteCommentFromThread_Request.gidcomment)
}

// optional bool undelete = 6;
inline bool CCommunity_DeleteCommentFromThread_Request::_internal_has_undelete() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCommunity_DeleteCommentFromThread_Request::has_undelete() const {
  return _internal_has_undelete();
}
inline void CCommunity_DeleteCommentFromThread_Request::clear_undelete() {
  undelete_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CCommunity_DeleteCommentFromThread_Request::_internal_undelete() const {
  return undelete_;
}
inline bool CCommunity_DeleteCommentFromThread_Request::undelete() const {
  // @@protoc_insertion_point(field_get:CCommunity_DeleteCommentFromThread_Request.undelete)
  return _internal_undelete();
}
inline void CCommunity_DeleteCommentFromThread_Request::_internal_set_undelete(bool value) {
  _has_bits_[0] |= 0x00000010u;
  undelete_ = value;
}
inline void CCommunity_DeleteCommentFromThread_Request::set_undelete(bool value) {
  _internal_set_undelete(value);
  // @@protoc_insertion_point(field_set:CCommunity_DeleteCommentFromThread_Request.undelete)
}

// -------------------------------------------------------------------

// CCommunity_DeleteCommentFromThread_Response

// -------------------------------------------------------------------

// CCommunity_RateCommentThread_Request

// optional string commentthreadtype = 1;
inline bool CCommunity_RateCommentThread_Request::_internal_has_commentthreadtype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_RateCommentThread_Request::has_commentthreadtype() const {
  return _internal_has_commentthreadtype();
}
inline void CCommunity_RateCommentThread_Request::clear_commentthreadtype() {
  commentthreadtype_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCommunity_RateCommentThread_Request::commentthreadtype() const {
  // @@protoc_insertion_point(field_get:CCommunity_RateCommentThread_Request.commentthreadtype)
  return _internal_commentthreadtype();
}
inline void CCommunity_RateCommentThread_Request::set_commentthreadtype(const std::string& value) {
  _internal_set_commentthreadtype(value);
  // @@protoc_insertion_point(field_set:CCommunity_RateCommentThread_Request.commentthreadtype)
}
inline std::string* CCommunity_RateCommentThread_Request::mutable_commentthreadtype() {
  // @@protoc_insertion_point(field_mutable:CCommunity_RateCommentThread_Request.commentthreadtype)
  return _internal_mutable_commentthreadtype();
}
inline const std::string& CCommunity_RateCommentThread_Request::_internal_commentthreadtype() const {
  return commentthreadtype_.Get();
}
inline void CCommunity_RateCommentThread_Request::_internal_set_commentthreadtype(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  commentthreadtype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CCommunity_RateCommentThread_Request::set_commentthreadtype(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  commentthreadtype_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CCommunity_RateCommentThread_Request.commentthreadtype)
}
inline void CCommunity_RateCommentThread_Request::set_commentthreadtype(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  commentthreadtype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CCommunity_RateCommentThread_Request.commentthreadtype)
}
inline void CCommunity_RateCommentThread_Request::set_commentthreadtype(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  commentthreadtype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CCommunity_RateCommentThread_Request.commentthreadtype)
}
inline std::string* CCommunity_RateCommentThread_Request::_internal_mutable_commentthreadtype() {
  _has_bits_[0] |= 0x00000001u;
  return commentthreadtype_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CCommunity_RateCommentThread_Request::release_commentthreadtype() {
  // @@protoc_insertion_point(field_release:CCommunity_RateCommentThread_Request.commentthreadtype)
  if (!_internal_has_commentthreadtype()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return commentthreadtype_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CCommunity_RateCommentThread_Request::set_allocated_commentthreadtype(std::string* commentthreadtype) {
  if (commentthreadtype != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  commentthreadtype_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), commentthreadtype,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CCommunity_RateCommentThread_Request.commentthreadtype)
}

// optional uint64 steamid = 2;
inline bool CCommunity_RateCommentThread_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_RateCommentThread_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CCommunity_RateCommentThread_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_RateCommentThread_Request::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_RateCommentThread_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CCommunity_RateCommentThread_Request.steamid)
  return _internal_steamid();
}
inline void CCommunity_RateCommentThread_Request::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
}
inline void CCommunity_RateCommentThread_Request::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CCommunity_RateCommentThread_Request.steamid)
}

// optional uint64 gidfeature = 3;
inline bool CCommunity_RateCommentThread_Request::_internal_has_gidfeature() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCommunity_RateCommentThread_Request::has_gidfeature() const {
  return _internal_has_gidfeature();
}
inline void CCommunity_RateCommentThread_Request::clear_gidfeature() {
  gidfeature_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_RateCommentThread_Request::_internal_gidfeature() const {
  return gidfeature_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_RateCommentThread_Request::gidfeature() const {
  // @@protoc_insertion_point(field_get:CCommunity_RateCommentThread_Request.gidfeature)
  return _internal_gidfeature();
}
inline void CCommunity_RateCommentThread_Request::_internal_set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  gidfeature_ = value;
}
inline void CCommunity_RateCommentThread_Request::set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidfeature(value);
  // @@protoc_insertion_point(field_set:CCommunity_RateCommentThread_Request.gidfeature)
}

// optional uint64 gidfeature2 = 4;
inline bool CCommunity_RateCommentThread_Request::_internal_has_gidfeature2() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCommunity_RateCommentThread_Request::has_gidfeature2() const {
  return _internal_has_gidfeature2();
}
inline void CCommunity_RateCommentThread_Request::clear_gidfeature2() {
  gidfeature2_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_RateCommentThread_Request::_internal_gidfeature2() const {
  return gidfeature2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_RateCommentThread_Request::gidfeature2() const {
  // @@protoc_insertion_point(field_get:CCommunity_RateCommentThread_Request.gidfeature2)
  return _internal_gidfeature2();
}
inline void CCommunity_RateCommentThread_Request::_internal_set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  gidfeature2_ = value;
}
inline void CCommunity_RateCommentThread_Request::set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidfeature2(value);
  // @@protoc_insertion_point(field_set:CCommunity_RateCommentThread_Request.gidfeature2)
}

// optional uint64 gidcomment = 5;
inline bool CCommunity_RateCommentThread_Request::_internal_has_gidcomment() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCommunity_RateCommentThread_Request::has_gidcomment() const {
  return _internal_has_gidcomment();
}
inline void CCommunity_RateCommentThread_Request::clear_gidcomment() {
  gidcomment_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_RateCommentThread_Request::_internal_gidcomment() const {
  return gidcomment_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_RateCommentThread_Request::gidcomment() const {
  // @@protoc_insertion_point(field_get:CCommunity_RateCommentThread_Request.gidcomment)
  return _internal_gidcomment();
}
inline void CCommunity_RateCommentThread_Request::_internal_set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  gidcomment_ = value;
}
inline void CCommunity_RateCommentThread_Request::set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidcomment(value);
  // @@protoc_insertion_point(field_set:CCommunity_RateCommentThread_Request.gidcomment)
}

// optional bool rate_up = 6;
inline bool CCommunity_RateCommentThread_Request::_internal_has_rate_up() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCommunity_RateCommentThread_Request::has_rate_up() const {
  return _internal_has_rate_up();
}
inline void CCommunity_RateCommentThread_Request::clear_rate_up() {
  rate_up_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CCommunity_RateCommentThread_Request::_internal_rate_up() const {
  return rate_up_;
}
inline bool CCommunity_RateCommentThread_Request::rate_up() const {
  // @@protoc_insertion_point(field_get:CCommunity_RateCommentThread_Request.rate_up)
  return _internal_rate_up();
}
inline void CCommunity_RateCommentThread_Request::_internal_set_rate_up(bool value) {
  _has_bits_[0] |= 0x00000020u;
  rate_up_ = value;
}
inline void CCommunity_RateCommentThread_Request::set_rate_up(bool value) {
  _internal_set_rate_up(value);
  // @@protoc_insertion_point(field_set:CCommunity_RateCommentThread_Request.rate_up)
}

// optional bool suppress_notifications = 7;
inline bool CCommunity_RateCommentThread_Request::_internal_has_suppress_notifications() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCommunity_RateCommentThread_Request::has_suppress_notifications() const {
  return _internal_has_suppress_notifications();
}
inline void CCommunity_RateCommentThread_Request::clear_suppress_notifications() {
  suppress_notifications_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CCommunity_RateCommentThread_Request::_internal_suppress_notifications() const {
  return suppress_notifications_;
}
inline bool CCommunity_RateCommentThread_Request::suppress_notifications() const {
  // @@protoc_insertion_point(field_get:CCommunity_RateCommentThread_Request.suppress_notifications)
  return _internal_suppress_notifications();
}
inline void CCommunity_RateCommentThread_Request::_internal_set_suppress_notifications(bool value) {
  _has_bits_[0] |= 0x00000040u;
  suppress_notifications_ = value;
}
inline void CCommunity_RateCommentThread_Request::set_suppress_notifications(bool value) {
  _internal_set_suppress_notifications(value);
  // @@protoc_insertion_point(field_set:CCommunity_RateCommentThread_Request.suppress_notifications)
}

// -------------------------------------------------------------------

// CCommunity_RateCommentThread_Response

// optional uint64 gidcomment = 1;
inline bool CCommunity_RateCommentThread_Response::_internal_has_gidcomment() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_RateCommentThread_Response::has_gidcomment() const {
  return _internal_has_gidcomment();
}
inline void CCommunity_RateCommentThread_Response::clear_gidcomment() {
  gidcomment_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_RateCommentThread_Response::_internal_gidcomment() const {
  return gidcomment_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_RateCommentThread_Response::gidcomment() const {
  // @@protoc_insertion_point(field_get:CCommunity_RateCommentThread_Response.gidcomment)
  return _internal_gidcomment();
}
inline void CCommunity_RateCommentThread_Response::_internal_set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  gidcomment_ = value;
}
inline void CCommunity_RateCommentThread_Response::set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidcomment(value);
  // @@protoc_insertion_point(field_set:CCommunity_RateCommentThread_Response.gidcomment)
}

// optional uint64 commentthreadid = 2;
inline bool CCommunity_RateCommentThread_Response::_internal_has_commentthreadid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_RateCommentThread_Response::has_commentthreadid() const {
  return _internal_has_commentthreadid();
}
inline void CCommunity_RateCommentThread_Response::clear_commentthreadid() {
  commentthreadid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_RateCommentThread_Response::_internal_commentthreadid() const {
  return commentthreadid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_RateCommentThread_Response::commentthreadid() const {
  // @@protoc_insertion_point(field_get:CCommunity_RateCommentThread_Response.commentthreadid)
  return _internal_commentthreadid();
}
inline void CCommunity_RateCommentThread_Response::_internal_set_commentthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  commentthreadid_ = value;
}
inline void CCommunity_RateCommentThread_Response::set_commentthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_commentthreadid(value);
  // @@protoc_insertion_point(field_set:CCommunity_RateCommentThread_Response.commentthreadid)
}

// optional uint32 count = 3;
inline bool CCommunity_RateCommentThread_Response::_internal_has_count() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCommunity_RateCommentThread_Response::has_count() const {
  return _internal_has_count();
}
inline void CCommunity_RateCommentThread_Response::clear_count() {
  count_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_RateCommentThread_Response::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_RateCommentThread_Response::count() const {
  // @@protoc_insertion_point(field_get:CCommunity_RateCommentThread_Response.count)
  return _internal_count();
}
inline void CCommunity_RateCommentThread_Response::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  count_ = value;
}
inline void CCommunity_RateCommentThread_Response::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:CCommunity_RateCommentThread_Response.count)
}

// optional uint32 upvotes = 4;
inline bool CCommunity_RateCommentThread_Response::_internal_has_upvotes() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCommunity_RateCommentThread_Response::has_upvotes() const {
  return _internal_has_upvotes();
}
inline void CCommunity_RateCommentThread_Response::clear_upvotes() {
  upvotes_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_RateCommentThread_Response::_internal_upvotes() const {
  return upvotes_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_RateCommentThread_Response::upvotes() const {
  // @@protoc_insertion_point(field_get:CCommunity_RateCommentThread_Response.upvotes)
  return _internal_upvotes();
}
inline void CCommunity_RateCommentThread_Response::_internal_set_upvotes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  upvotes_ = value;
}
inline void CCommunity_RateCommentThread_Response::set_upvotes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_upvotes(value);
  // @@protoc_insertion_point(field_set:CCommunity_RateCommentThread_Response.upvotes)
}

// optional bool has_upvoted = 5;
inline bool CCommunity_RateCommentThread_Response::_internal_has_has_upvoted() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCommunity_RateCommentThread_Response::has_has_upvoted() const {
  return _internal_has_has_upvoted();
}
inline void CCommunity_RateCommentThread_Response::clear_has_upvoted() {
  has_upvoted_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CCommunity_RateCommentThread_Response::_internal_has_upvoted() const {
  return has_upvoted_;
}
inline bool CCommunity_RateCommentThread_Response::has_upvoted() const {
  // @@protoc_insertion_point(field_get:CCommunity_RateCommentThread_Response.has_upvoted)
  return _internal_has_upvoted();
}
inline void CCommunity_RateCommentThread_Response::_internal_set_has_upvoted(bool value) {
  _has_bits_[0] |= 0x00000010u;
  has_upvoted_ = value;
}
inline void CCommunity_RateCommentThread_Response::set_has_upvoted(bool value) {
  _internal_set_has_upvoted(value);
  // @@protoc_insertion_point(field_set:CCommunity_RateCommentThread_Response.has_upvoted)
}

// -------------------------------------------------------------------

// CCommunity_GetCommentThreadRatings_Request

// optional string commentthreadtype = 1;
inline bool CCommunity_GetCommentThreadRatings_Request::_internal_has_commentthreadtype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThreadRatings_Request::has_commentthreadtype() const {
  return _internal_has_commentthreadtype();
}
inline void CCommunity_GetCommentThreadRatings_Request::clear_commentthreadtype() {
  commentthreadtype_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCommunity_GetCommentThreadRatings_Request::commentthreadtype() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThreadRatings_Request.commentthreadtype)
  return _internal_commentthreadtype();
}
inline void CCommunity_GetCommentThreadRatings_Request::set_commentthreadtype(const std::string& value) {
  _internal_set_commentthreadtype(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThreadRatings_Request.commentthreadtype)
}
inline std::string* CCommunity_GetCommentThreadRatings_Request::mutable_commentthreadtype() {
  // @@protoc_insertion_point(field_mutable:CCommunity_GetCommentThreadRatings_Request.commentthreadtype)
  return _internal_mutable_commentthreadtype();
}
inline const std::string& CCommunity_GetCommentThreadRatings_Request::_internal_commentthreadtype() const {
  return commentthreadtype_.Get();
}
inline void CCommunity_GetCommentThreadRatings_Request::_internal_set_commentthreadtype(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  commentthreadtype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CCommunity_GetCommentThreadRatings_Request::set_commentthreadtype(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  commentthreadtype_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CCommunity_GetCommentThreadRatings_Request.commentthreadtype)
}
inline void CCommunity_GetCommentThreadRatings_Request::set_commentthreadtype(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  commentthreadtype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CCommunity_GetCommentThreadRatings_Request.commentthreadtype)
}
inline void CCommunity_GetCommentThreadRatings_Request::set_commentthreadtype(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  commentthreadtype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CCommunity_GetCommentThreadRatings_Request.commentthreadtype)
}
inline std::string* CCommunity_GetCommentThreadRatings_Request::_internal_mutable_commentthreadtype() {
  _has_bits_[0] |= 0x00000001u;
  return commentthreadtype_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CCommunity_GetCommentThreadRatings_Request::release_commentthreadtype() {
  // @@protoc_insertion_point(field_release:CCommunity_GetCommentThreadRatings_Request.commentthreadtype)
  if (!_internal_has_commentthreadtype()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return commentthreadtype_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CCommunity_GetCommentThreadRatings_Request::set_allocated_commentthreadtype(std::string* commentthreadtype) {
  if (commentthreadtype != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  commentthreadtype_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), commentthreadtype,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CCommunity_GetCommentThreadRatings_Request.commentthreadtype)
}

// optional uint64 steamid = 2;
inline bool CCommunity_GetCommentThreadRatings_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThreadRatings_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CCommunity_GetCommentThreadRatings_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThreadRatings_Request::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThreadRatings_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThreadRatings_Request.steamid)
  return _internal_steamid();
}
inline void CCommunity_GetCommentThreadRatings_Request::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
}
inline void CCommunity_GetCommentThreadRatings_Request::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThreadRatings_Request.steamid)
}

// optional uint64 gidfeature = 3;
inline bool CCommunity_GetCommentThreadRatings_Request::_internal_has_gidfeature() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThreadRatings_Request::has_gidfeature() const {
  return _internal_has_gidfeature();
}
inline void CCommunity_GetCommentThreadRatings_Request::clear_gidfeature() {
  gidfeature_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThreadRatings_Request::_internal_gidfeature() const {
  return gidfeature_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThreadRatings_Request::gidfeature() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThreadRatings_Request.gidfeature)
  return _internal_gidfeature();
}
inline void CCommunity_GetCommentThreadRatings_Request::_internal_set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  gidfeature_ = value;
}
inline void CCommunity_GetCommentThreadRatings_Request::set_gidfeature(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidfeature(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThreadRatings_Request.gidfeature)
}

// optional uint64 gidfeature2 = 4;
inline bool CCommunity_GetCommentThreadRatings_Request::_internal_has_gidfeature2() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThreadRatings_Request::has_gidfeature2() const {
  return _internal_has_gidfeature2();
}
inline void CCommunity_GetCommentThreadRatings_Request::clear_gidfeature2() {
  gidfeature2_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThreadRatings_Request::_internal_gidfeature2() const {
  return gidfeature2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThreadRatings_Request::gidfeature2() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThreadRatings_Request.gidfeature2)
  return _internal_gidfeature2();
}
inline void CCommunity_GetCommentThreadRatings_Request::_internal_set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  gidfeature2_ = value;
}
inline void CCommunity_GetCommentThreadRatings_Request::set_gidfeature2(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidfeature2(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThreadRatings_Request.gidfeature2)
}

// optional uint64 gidcomment = 5;
inline bool CCommunity_GetCommentThreadRatings_Request::_internal_has_gidcomment() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThreadRatings_Request::has_gidcomment() const {
  return _internal_has_gidcomment();
}
inline void CCommunity_GetCommentThreadRatings_Request::clear_gidcomment() {
  gidcomment_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThreadRatings_Request::_internal_gidcomment() const {
  return gidcomment_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThreadRatings_Request::gidcomment() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThreadRatings_Request.gidcomment)
  return _internal_gidcomment();
}
inline void CCommunity_GetCommentThreadRatings_Request::_internal_set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  gidcomment_ = value;
}
inline void CCommunity_GetCommentThreadRatings_Request::set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidcomment(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThreadRatings_Request.gidcomment)
}

// optional uint32 max_results = 6;
inline bool CCommunity_GetCommentThreadRatings_Request::_internal_has_max_results() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThreadRatings_Request::has_max_results() const {
  return _internal_has_max_results();
}
inline void CCommunity_GetCommentThreadRatings_Request::clear_max_results() {
  max_results_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetCommentThreadRatings_Request::_internal_max_results() const {
  return max_results_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetCommentThreadRatings_Request::max_results() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThreadRatings_Request.max_results)
  return _internal_max_results();
}
inline void CCommunity_GetCommentThreadRatings_Request::_internal_set_max_results(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  max_results_ = value;
}
inline void CCommunity_GetCommentThreadRatings_Request::set_max_results(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_max_results(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThreadRatings_Request.max_results)
}

// -------------------------------------------------------------------

// CCommunity_GetCommentThreadRatings_Response

// optional uint64 commentthreadid = 1;
inline bool CCommunity_GetCommentThreadRatings_Response::_internal_has_commentthreadid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThreadRatings_Response::has_commentthreadid() const {
  return _internal_has_commentthreadid();
}
inline void CCommunity_GetCommentThreadRatings_Response::clear_commentthreadid() {
  commentthreadid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThreadRatings_Response::_internal_commentthreadid() const {
  return commentthreadid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThreadRatings_Response::commentthreadid() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThreadRatings_Response.commentthreadid)
  return _internal_commentthreadid();
}
inline void CCommunity_GetCommentThreadRatings_Response::_internal_set_commentthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  commentthreadid_ = value;
}
inline void CCommunity_GetCommentThreadRatings_Response::set_commentthreadid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_commentthreadid(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThreadRatings_Response.commentthreadid)
}

// optional uint64 gidcomment = 2;
inline bool CCommunity_GetCommentThreadRatings_Response::_internal_has_gidcomment() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThreadRatings_Response::has_gidcomment() const {
  return _internal_has_gidcomment();
}
inline void CCommunity_GetCommentThreadRatings_Response::clear_gidcomment() {
  gidcomment_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThreadRatings_Response::_internal_gidcomment() const {
  return gidcomment_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetCommentThreadRatings_Response::gidcomment() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThreadRatings_Response.gidcomment)
  return _internal_gidcomment();
}
inline void CCommunity_GetCommentThreadRatings_Response::_internal_set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  gidcomment_ = value;
}
inline void CCommunity_GetCommentThreadRatings_Response::set_gidcomment(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_gidcomment(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThreadRatings_Response.gidcomment)
}

// optional uint32 upvotes = 3;
inline bool CCommunity_GetCommentThreadRatings_Response::_internal_has_upvotes() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThreadRatings_Response::has_upvotes() const {
  return _internal_has_upvotes();
}
inline void CCommunity_GetCommentThreadRatings_Response::clear_upvotes() {
  upvotes_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetCommentThreadRatings_Response::_internal_upvotes() const {
  return upvotes_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetCommentThreadRatings_Response::upvotes() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThreadRatings_Response.upvotes)
  return _internal_upvotes();
}
inline void CCommunity_GetCommentThreadRatings_Response::_internal_set_upvotes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  upvotes_ = value;
}
inline void CCommunity_GetCommentThreadRatings_Response::set_upvotes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_upvotes(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThreadRatings_Response.upvotes)
}

// optional bool has_upvoted = 4;
inline bool CCommunity_GetCommentThreadRatings_Response::_internal_has_has_upvoted() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCommunity_GetCommentThreadRatings_Response::has_has_upvoted() const {
  return _internal_has_has_upvoted();
}
inline void CCommunity_GetCommentThreadRatings_Response::clear_has_upvoted() {
  has_upvoted_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CCommunity_GetCommentThreadRatings_Response::_internal_has_upvoted() const {
  return has_upvoted_;
}
inline bool CCommunity_GetCommentThreadRatings_Response::has_upvoted() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThreadRatings_Response.has_upvoted)
  return _internal_has_upvoted();
}
inline void CCommunity_GetCommentThreadRatings_Response::_internal_set_has_upvoted(bool value) {
  _has_bits_[0] |= 0x00000008u;
  has_upvoted_ = value;
}
inline void CCommunity_GetCommentThreadRatings_Response::set_has_upvoted(bool value) {
  _internal_set_has_upvoted(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThreadRatings_Response.has_upvoted)
}

// repeated uint32 upvoter_accountids = 5;
inline int CCommunity_GetCommentThreadRatings_Response::_internal_upvoter_accountids_size() const {
  return upvoter_accountids_.size();
}
inline int CCommunity_GetCommentThreadRatings_Response::upvoter_accountids_size() const {
  return _internal_upvoter_accountids_size();
}
inline void CCommunity_GetCommentThreadRatings_Response::clear_upvoter_accountids() {
  upvoter_accountids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetCommentThreadRatings_Response::_internal_upvoter_accountids(int index) const {
  return upvoter_accountids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetCommentThreadRatings_Response::upvoter_accountids(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_GetCommentThreadRatings_Response.upvoter_accountids)
  return _internal_upvoter_accountids(index);
}
inline void CCommunity_GetCommentThreadRatings_Response::set_upvoter_accountids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  upvoter_accountids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CCommunity_GetCommentThreadRatings_Response.upvoter_accountids)
}
inline void CCommunity_GetCommentThreadRatings_Response::_internal_add_upvoter_accountids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  upvoter_accountids_.Add(value);
}
inline void CCommunity_GetCommentThreadRatings_Response::add_upvoter_accountids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_upvoter_accountids(value);
  // @@protoc_insertion_point(field_add:CCommunity_GetCommentThreadRatings_Response.upvoter_accountids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CCommunity_GetCommentThreadRatings_Response::_internal_upvoter_accountids() const {
  return upvoter_accountids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CCommunity_GetCommentThreadRatings_Response::upvoter_accountids() const {
  // @@protoc_insertion_point(field_list:CCommunity_GetCommentThreadRatings_Response.upvoter_accountids)
  return _internal_upvoter_accountids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CCommunity_GetCommentThreadRatings_Response::_internal_mutable_upvoter_accountids() {
  return &upvoter_accountids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CCommunity_GetCommentThreadRatings_Response::mutable_upvoter_accountids() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_GetCommentThreadRatings_Response.upvoter_accountids)
  return _internal_mutable_upvoter_accountids();
}

// -------------------------------------------------------------------

// CCommunity_RateClanAnnouncement_Request

// optional uint64 announcementid = 1;
inline bool CCommunity_RateClanAnnouncement_Request::_internal_has_announcementid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_RateClanAnnouncement_Request::has_announcementid() const {
  return _internal_has_announcementid();
}
inline void CCommunity_RateClanAnnouncement_Request::clear_announcementid() {
  announcementid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_RateClanAnnouncement_Request::_internal_announcementid() const {
  return announcementid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_RateClanAnnouncement_Request::announcementid() const {
  // @@protoc_insertion_point(field_get:CCommunity_RateClanAnnouncement_Request.announcementid)
  return _internal_announcementid();
}
inline void CCommunity_RateClanAnnouncement_Request::_internal_set_announcementid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  announcementid_ = value;
}
inline void CCommunity_RateClanAnnouncement_Request::set_announcementid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_announcementid(value);
  // @@protoc_insertion_point(field_set:CCommunity_RateClanAnnouncement_Request.announcementid)
}

// optional bool vote_up = 2;
inline bool CCommunity_RateClanAnnouncement_Request::_internal_has_vote_up() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_RateClanAnnouncement_Request::has_vote_up() const {
  return _internal_has_vote_up();
}
inline void CCommunity_RateClanAnnouncement_Request::clear_vote_up() {
  vote_up_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CCommunity_RateClanAnnouncement_Request::_internal_vote_up() const {
  return vote_up_;
}
inline bool CCommunity_RateClanAnnouncement_Request::vote_up() const {
  // @@protoc_insertion_point(field_get:CCommunity_RateClanAnnouncement_Request.vote_up)
  return _internal_vote_up();
}
inline void CCommunity_RateClanAnnouncement_Request::_internal_set_vote_up(bool value) {
  _has_bits_[0] |= 0x00000002u;
  vote_up_ = value;
}
inline void CCommunity_RateClanAnnouncement_Request::set_vote_up(bool value) {
  _internal_set_vote_up(value);
  // @@protoc_insertion_point(field_set:CCommunity_RateClanAnnouncement_Request.vote_up)
}

// optional uint32 clan_accountid = 3;
inline bool CCommunity_RateClanAnnouncement_Request::_internal_has_clan_accountid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCommunity_RateClanAnnouncement_Request::has_clan_accountid() const {
  return _internal_has_clan_accountid();
}
inline void CCommunity_RateClanAnnouncement_Request::clear_clan_accountid() {
  clan_accountid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_RateClanAnnouncement_Request::_internal_clan_accountid() const {
  return clan_accountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_RateClanAnnouncement_Request::clan_accountid() const {
  // @@protoc_insertion_point(field_get:CCommunity_RateClanAnnouncement_Request.clan_accountid)
  return _internal_clan_accountid();
}
inline void CCommunity_RateClanAnnouncement_Request::_internal_set_clan_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  clan_accountid_ = value;
}
inline void CCommunity_RateClanAnnouncement_Request::set_clan_accountid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_clan_accountid(value);
  // @@protoc_insertion_point(field_set:CCommunity_RateClanAnnouncement_Request.clan_accountid)
}

// -------------------------------------------------------------------

// CCommunity_RateClanAnnouncement_Response

// -------------------------------------------------------------------

// CCommunity_GetClanAnnouncementVoteForUser_Request

// optional uint64 announcementid = 1;
inline bool CCommunity_GetClanAnnouncementVoteForUser_Request::_internal_has_announcementid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_GetClanAnnouncementVoteForUser_Request::has_announcementid() const {
  return _internal_has_announcementid();
}
inline void CCommunity_GetClanAnnouncementVoteForUser_Request::clear_announcementid() {
  announcementid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetClanAnnouncementVoteForUser_Request::_internal_announcementid() const {
  return announcementid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetClanAnnouncementVoteForUser_Request::announcementid() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetClanAnnouncementVoteForUser_Request.announcementid)
  return _internal_announcementid();
}
inline void CCommunity_GetClanAnnouncementVoteForUser_Request::_internal_set_announcementid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  announcementid_ = value;
}
inline void CCommunity_GetClanAnnouncementVoteForUser_Request::set_announcementid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_announcementid(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetClanAnnouncementVoteForUser_Request.announcementid)
}

// -------------------------------------------------------------------

// CCommunity_GetClanAnnouncementVoteForUser_Response

// optional bool voted_up = 1;
inline bool CCommunity_GetClanAnnouncementVoteForUser_Response::_internal_has_voted_up() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_GetClanAnnouncementVoteForUser_Response::has_voted_up() const {
  return _internal_has_voted_up();
}
inline void CCommunity_GetClanAnnouncementVoteForUser_Response::clear_voted_up() {
  voted_up_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CCommunity_GetClanAnnouncementVoteForUser_Response::_internal_voted_up() const {
  return voted_up_;
}
inline bool CCommunity_GetClanAnnouncementVoteForUser_Response::voted_up() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetClanAnnouncementVoteForUser_Response.voted_up)
  return _internal_voted_up();
}
inline void CCommunity_GetClanAnnouncementVoteForUser_Response::_internal_set_voted_up(bool value) {
  _has_bits_[0] |= 0x00000001u;
  voted_up_ = value;
}
inline void CCommunity_GetClanAnnouncementVoteForUser_Response::set_voted_up(bool value) {
  _internal_set_voted_up(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetClanAnnouncementVoteForUser_Response.voted_up)
}

// optional bool voted_down = 2;
inline bool CCommunity_GetClanAnnouncementVoteForUser_Response::_internal_has_voted_down() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_GetClanAnnouncementVoteForUser_Response::has_voted_down() const {
  return _internal_has_voted_down();
}
inline void CCommunity_GetClanAnnouncementVoteForUser_Response::clear_voted_down() {
  voted_down_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CCommunity_GetClanAnnouncementVoteForUser_Response::_internal_voted_down() const {
  return voted_down_;
}
inline bool CCommunity_GetClanAnnouncementVoteForUser_Response::voted_down() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetClanAnnouncementVoteForUser_Response.voted_down)
  return _internal_voted_down();
}
inline void CCommunity_GetClanAnnouncementVoteForUser_Response::_internal_set_voted_down(bool value) {
  _has_bits_[0] |= 0x00000002u;
  voted_down_ = value;
}
inline void CCommunity_GetClanAnnouncementVoteForUser_Response::set_voted_down(bool value) {
  _internal_set_voted_down(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetClanAnnouncementVoteForUser_Response.voted_down)
}

// -------------------------------------------------------------------

// CCommunity_GetAvatarHistory_Request

// optional fixed64 steamid = 1;
inline bool CCommunity_GetAvatarHistory_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_GetAvatarHistory_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CCommunity_GetAvatarHistory_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetAvatarHistory_Request::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetAvatarHistory_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetAvatarHistory_Request.steamid)
  return _internal_steamid();
}
inline void CCommunity_GetAvatarHistory_Request::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
}
inline void CCommunity_GetAvatarHistory_Request::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetAvatarHistory_Request.steamid)
}

// optional bool filter_user_uploaded_only = 2;
inline bool CCommunity_GetAvatarHistory_Request::_internal_has_filter_user_uploaded_only() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_GetAvatarHistory_Request::has_filter_user_uploaded_only() const {
  return _internal_has_filter_user_uploaded_only();
}
inline void CCommunity_GetAvatarHistory_Request::clear_filter_user_uploaded_only() {
  filter_user_uploaded_only_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CCommunity_GetAvatarHistory_Request::_internal_filter_user_uploaded_only() const {
  return filter_user_uploaded_only_;
}
inline bool CCommunity_GetAvatarHistory_Request::filter_user_uploaded_only() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetAvatarHistory_Request.filter_user_uploaded_only)
  return _internal_filter_user_uploaded_only();
}
inline void CCommunity_GetAvatarHistory_Request::_internal_set_filter_user_uploaded_only(bool value) {
  _has_bits_[0] |= 0x00000002u;
  filter_user_uploaded_only_ = value;
}
inline void CCommunity_GetAvatarHistory_Request::set_filter_user_uploaded_only(bool value) {
  _internal_set_filter_user_uploaded_only(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetAvatarHistory_Request.filter_user_uploaded_only)
}

// -------------------------------------------------------------------

// CCommunity_GetAvatarHistory_Response_AvatarData

// optional string avatar_sha1 = 1;
inline bool CCommunity_GetAvatarHistory_Response_AvatarData::_internal_has_avatar_sha1() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_GetAvatarHistory_Response_AvatarData::has_avatar_sha1() const {
  return _internal_has_avatar_sha1();
}
inline void CCommunity_GetAvatarHistory_Response_AvatarData::clear_avatar_sha1() {
  avatar_sha1_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CCommunity_GetAvatarHistory_Response_AvatarData::avatar_sha1() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetAvatarHistory_Response.AvatarData.avatar_sha1)
  return _internal_avatar_sha1();
}
inline void CCommunity_GetAvatarHistory_Response_AvatarData::set_avatar_sha1(const std::string& value) {
  _internal_set_avatar_sha1(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetAvatarHistory_Response.AvatarData.avatar_sha1)
}
inline std::string* CCommunity_GetAvatarHistory_Response_AvatarData::mutable_avatar_sha1() {
  // @@protoc_insertion_point(field_mutable:CCommunity_GetAvatarHistory_Response.AvatarData.avatar_sha1)
  return _internal_mutable_avatar_sha1();
}
inline const std::string& CCommunity_GetAvatarHistory_Response_AvatarData::_internal_avatar_sha1() const {
  return avatar_sha1_.Get();
}
inline void CCommunity_GetAvatarHistory_Response_AvatarData::_internal_set_avatar_sha1(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  avatar_sha1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CCommunity_GetAvatarHistory_Response_AvatarData::set_avatar_sha1(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  avatar_sha1_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CCommunity_GetAvatarHistory_Response.AvatarData.avatar_sha1)
}
inline void CCommunity_GetAvatarHistory_Response_AvatarData::set_avatar_sha1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  avatar_sha1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CCommunity_GetAvatarHistory_Response.AvatarData.avatar_sha1)
}
inline void CCommunity_GetAvatarHistory_Response_AvatarData::set_avatar_sha1(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  avatar_sha1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CCommunity_GetAvatarHistory_Response.AvatarData.avatar_sha1)
}
inline std::string* CCommunity_GetAvatarHistory_Response_AvatarData::_internal_mutable_avatar_sha1() {
  _has_bits_[0] |= 0x00000001u;
  return avatar_sha1_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CCommunity_GetAvatarHistory_Response_AvatarData::release_avatar_sha1() {
  // @@protoc_insertion_point(field_release:CCommunity_GetAvatarHistory_Response.AvatarData.avatar_sha1)
  if (!_internal_has_avatar_sha1()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return avatar_sha1_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CCommunity_GetAvatarHistory_Response_AvatarData::set_allocated_avatar_sha1(std::string* avatar_sha1) {
  if (avatar_sha1 != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  avatar_sha1_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), avatar_sha1,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CCommunity_GetAvatarHistory_Response.AvatarData.avatar_sha1)
}

// optional bool user_uploaded = 2;
inline bool CCommunity_GetAvatarHistory_Response_AvatarData::_internal_has_user_uploaded() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_GetAvatarHistory_Response_AvatarData::has_user_uploaded() const {
  return _internal_has_user_uploaded();
}
inline void CCommunity_GetAvatarHistory_Response_AvatarData::clear_user_uploaded() {
  user_uploaded_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CCommunity_GetAvatarHistory_Response_AvatarData::_internal_user_uploaded() const {
  return user_uploaded_;
}
inline bool CCommunity_GetAvatarHistory_Response_AvatarData::user_uploaded() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetAvatarHistory_Response.AvatarData.user_uploaded)
  return _internal_user_uploaded();
}
inline void CCommunity_GetAvatarHistory_Response_AvatarData::_internal_set_user_uploaded(bool value) {
  _has_bits_[0] |= 0x00000002u;
  user_uploaded_ = value;
}
inline void CCommunity_GetAvatarHistory_Response_AvatarData::set_user_uploaded(bool value) {
  _internal_set_user_uploaded(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetAvatarHistory_Response.AvatarData.user_uploaded)
}

// optional uint32 timestamp = 3;
inline bool CCommunity_GetAvatarHistory_Response_AvatarData::_internal_has_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCommunity_GetAvatarHistory_Response_AvatarData::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void CCommunity_GetAvatarHistory_Response_AvatarData::clear_timestamp() {
  timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetAvatarHistory_Response_AvatarData::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetAvatarHistory_Response_AvatarData::timestamp() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetAvatarHistory_Response.AvatarData.timestamp)
  return _internal_timestamp();
}
inline void CCommunity_GetAvatarHistory_Response_AvatarData::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  timestamp_ = value;
}
inline void CCommunity_GetAvatarHistory_Response_AvatarData::set_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetAvatarHistory_Response.AvatarData.timestamp)
}

// -------------------------------------------------------------------

// CCommunity_GetAvatarHistory_Response

// repeated .CCommunity_GetAvatarHistory_Response.AvatarData avatars = 1;
inline int CCommunity_GetAvatarHistory_Response::_internal_avatars_size() const {
  return avatars_.size();
}
inline int CCommunity_GetAvatarHistory_Response::avatars_size() const {
  return _internal_avatars_size();
}
inline void CCommunity_GetAvatarHistory_Response::clear_avatars() {
  avatars_.Clear();
}
inline ::CCommunity_GetAvatarHistory_Response_AvatarData* CCommunity_GetAvatarHistory_Response::mutable_avatars(int index) {
  // @@protoc_insertion_point(field_mutable:CCommunity_GetAvatarHistory_Response.avatars)
  return avatars_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_GetAvatarHistory_Response_AvatarData >*
CCommunity_GetAvatarHistory_Response::mutable_avatars() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_GetAvatarHistory_Response.avatars)
  return &avatars_;
}
inline const ::CCommunity_GetAvatarHistory_Response_AvatarData& CCommunity_GetAvatarHistory_Response::_internal_avatars(int index) const {
  return avatars_.Get(index);
}
inline const ::CCommunity_GetAvatarHistory_Response_AvatarData& CCommunity_GetAvatarHistory_Response::avatars(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_GetAvatarHistory_Response.avatars)
  return _internal_avatars(index);
}
inline ::CCommunity_GetAvatarHistory_Response_AvatarData* CCommunity_GetAvatarHistory_Response::_internal_add_avatars() {
  return avatars_.Add();
}
inline ::CCommunity_GetAvatarHistory_Response_AvatarData* CCommunity_GetAvatarHistory_Response::add_avatars() {
  // @@protoc_insertion_point(field_add:CCommunity_GetAvatarHistory_Response.avatars)
  return _internal_add_avatars();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_GetAvatarHistory_Response_AvatarData >&
CCommunity_GetAvatarHistory_Response::avatars() const {
  // @@protoc_insertion_point(field_list:CCommunity_GetAvatarHistory_Response.avatars)
  return avatars_;
}

// -------------------------------------------------------------------

// CAppPriority

// optional uint32 priority = 1;
inline bool CAppPriority::_internal_has_priority() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CAppPriority::has_priority() const {
  return _internal_has_priority();
}
inline void CAppPriority::clear_priority() {
  priority_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CAppPriority::_internal_priority() const {
  return priority_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CAppPriority::priority() const {
  // @@protoc_insertion_point(field_get:CAppPriority.priority)
  return _internal_priority();
}
inline void CAppPriority::_internal_set_priority(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  priority_ = value;
}
inline void CAppPriority::set_priority(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:CAppPriority.priority)
}

// repeated uint32 appid = 2;
inline int CAppPriority::_internal_appid_size() const {
  return appid_.size();
}
inline int CAppPriority::appid_size() const {
  return _internal_appid_size();
}
inline void CAppPriority::clear_appid() {
  appid_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CAppPriority::_internal_appid(int index) const {
  return appid_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CAppPriority::appid(int index) const {
  // @@protoc_insertion_point(field_get:CAppPriority.appid)
  return _internal_appid(index);
}
inline void CAppPriority::set_appid(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  appid_.Set(index, value);
  // @@protoc_insertion_point(field_set:CAppPriority.appid)
}
inline void CAppPriority::_internal_add_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  appid_.Add(value);
}
inline void CAppPriority::add_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_appid(value);
  // @@protoc_insertion_point(field_add:CAppPriority.appid)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CAppPriority::_internal_appid() const {
  return appid_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CAppPriority::appid() const {
  // @@protoc_insertion_point(field_list:CAppPriority.appid)
  return _internal_appid();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CAppPriority::_internal_mutable_appid() {
  return &appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CAppPriority::mutable_appid() {
  // @@protoc_insertion_point(field_mutable_list:CAppPriority.appid)
  return _internal_mutable_appid();
}

// -------------------------------------------------------------------

// CCommunity_GetUserPartnerEventNews_Request

// optional uint32 count = 1;
inline bool CCommunity_GetUserPartnerEventNews_Request::_internal_has_count() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_GetUserPartnerEventNews_Request::has_count() const {
  return _internal_has_count();
}
inline void CCommunity_GetUserPartnerEventNews_Request::clear_count() {
  count_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetUserPartnerEventNews_Request::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetUserPartnerEventNews_Request::count() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetUserPartnerEventNews_Request.count)
  return _internal_count();
}
inline void CCommunity_GetUserPartnerEventNews_Request::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  count_ = value;
}
inline void CCommunity_GetUserPartnerEventNews_Request::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetUserPartnerEventNews_Request.count)
}

// optional uint32 offset = 2;
inline bool CCommunity_GetUserPartnerEventNews_Request::_internal_has_offset() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_GetUserPartnerEventNews_Request::has_offset() const {
  return _internal_has_offset();
}
inline void CCommunity_GetUserPartnerEventNews_Request::clear_offset() {
  offset_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetUserPartnerEventNews_Request::_internal_offset() const {
  return offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetUserPartnerEventNews_Request::offset() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetUserPartnerEventNews_Request.offset)
  return _internal_offset();
}
inline void CCommunity_GetUserPartnerEventNews_Request::_internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  offset_ = value;
}
inline void CCommunity_GetUserPartnerEventNews_Request::set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetUserPartnerEventNews_Request.offset)
}

// optional uint32 rtime32_start_time = 3;
inline bool CCommunity_GetUserPartnerEventNews_Request::_internal_has_rtime32_start_time() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCommunity_GetUserPartnerEventNews_Request::has_rtime32_start_time() const {
  return _internal_has_rtime32_start_time();
}
inline void CCommunity_GetUserPartnerEventNews_Request::clear_rtime32_start_time() {
  rtime32_start_time_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetUserPartnerEventNews_Request::_internal_rtime32_start_time() const {
  return rtime32_start_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetUserPartnerEventNews_Request::rtime32_start_time() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetUserPartnerEventNews_Request.rtime32_start_time)
  return _internal_rtime32_start_time();
}
inline void CCommunity_GetUserPartnerEventNews_Request::_internal_set_rtime32_start_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  rtime32_start_time_ = value;
}
inline void CCommunity_GetUserPartnerEventNews_Request::set_rtime32_start_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rtime32_start_time(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetUserPartnerEventNews_Request.rtime32_start_time)
}

// optional uint32 rtime32_end_time = 4;
inline bool CCommunity_GetUserPartnerEventNews_Request::_internal_has_rtime32_end_time() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCommunity_GetUserPartnerEventNews_Request::has_rtime32_end_time() const {
  return _internal_has_rtime32_end_time();
}
inline void CCommunity_GetUserPartnerEventNews_Request::clear_rtime32_end_time() {
  rtime32_end_time_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetUserPartnerEventNews_Request::_internal_rtime32_end_time() const {
  return rtime32_end_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetUserPartnerEventNews_Request::rtime32_end_time() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetUserPartnerEventNews_Request.rtime32_end_time)
  return _internal_rtime32_end_time();
}
inline void CCommunity_GetUserPartnerEventNews_Request::_internal_set_rtime32_end_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  rtime32_end_time_ = value;
}
inline void CCommunity_GetUserPartnerEventNews_Request::set_rtime32_end_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rtime32_end_time(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetUserPartnerEventNews_Request.rtime32_end_time)
}

// repeated uint32 language_preference = 5;
inline int CCommunity_GetUserPartnerEventNews_Request::_internal_language_preference_size() const {
  return language_preference_.size();
}
inline int CCommunity_GetUserPartnerEventNews_Request::language_preference_size() const {
  return _internal_language_preference_size();
}
inline void CCommunity_GetUserPartnerEventNews_Request::clear_language_preference() {
  language_preference_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetUserPartnerEventNews_Request::_internal_language_preference(int index) const {
  return language_preference_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetUserPartnerEventNews_Request::language_preference(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_GetUserPartnerEventNews_Request.language_preference)
  return _internal_language_preference(index);
}
inline void CCommunity_GetUserPartnerEventNews_Request::set_language_preference(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  language_preference_.Set(index, value);
  // @@protoc_insertion_point(field_set:CCommunity_GetUserPartnerEventNews_Request.language_preference)
}
inline void CCommunity_GetUserPartnerEventNews_Request::_internal_add_language_preference(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  language_preference_.Add(value);
}
inline void CCommunity_GetUserPartnerEventNews_Request::add_language_preference(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_language_preference(value);
  // @@protoc_insertion_point(field_add:CCommunity_GetUserPartnerEventNews_Request.language_preference)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CCommunity_GetUserPartnerEventNews_Request::_internal_language_preference() const {
  return language_preference_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CCommunity_GetUserPartnerEventNews_Request::language_preference() const {
  // @@protoc_insertion_point(field_list:CCommunity_GetUserPartnerEventNews_Request.language_preference)
  return _internal_language_preference();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CCommunity_GetUserPartnerEventNews_Request::_internal_mutable_language_preference() {
  return &language_preference_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CCommunity_GetUserPartnerEventNews_Request::mutable_language_preference() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_GetUserPartnerEventNews_Request.language_preference)
  return _internal_mutable_language_preference();
}

// repeated .EProtoClanEventType filter_event_type = 6;
inline int CCommunity_GetUserPartnerEventNews_Request::_internal_filter_event_type_size() const {
  return filter_event_type_.size();
}
inline int CCommunity_GetUserPartnerEventNews_Request::filter_event_type_size() const {
  return _internal_filter_event_type_size();
}
inline void CCommunity_GetUserPartnerEventNews_Request::clear_filter_event_type() {
  filter_event_type_.Clear();
}
inline ::EProtoClanEventType CCommunity_GetUserPartnerEventNews_Request::_internal_filter_event_type(int index) const {
  return static_cast< ::EProtoClanEventType >(filter_event_type_.Get(index));
}
inline ::EProtoClanEventType CCommunity_GetUserPartnerEventNews_Request::filter_event_type(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_GetUserPartnerEventNews_Request.filter_event_type)
  return _internal_filter_event_type(index);
}
inline void CCommunity_GetUserPartnerEventNews_Request::set_filter_event_type(int index, ::EProtoClanEventType value) {
  assert(::EProtoClanEventType_IsValid(value));
  filter_event_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:CCommunity_GetUserPartnerEventNews_Request.filter_event_type)
}
inline void CCommunity_GetUserPartnerEventNews_Request::_internal_add_filter_event_type(::EProtoClanEventType value) {
  assert(::EProtoClanEventType_IsValid(value));
  filter_event_type_.Add(value);
}
inline void CCommunity_GetUserPartnerEventNews_Request::add_filter_event_type(::EProtoClanEventType value) {
  // @@protoc_insertion_point(field_add:CCommunity_GetUserPartnerEventNews_Request.filter_event_type)
  _internal_add_filter_event_type(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
CCommunity_GetUserPartnerEventNews_Request::filter_event_type() const {
  // @@protoc_insertion_point(field_list:CCommunity_GetUserPartnerEventNews_Request.filter_event_type)
  return filter_event_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
CCommunity_GetUserPartnerEventNews_Request::_internal_mutable_filter_event_type() {
  return &filter_event_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
CCommunity_GetUserPartnerEventNews_Request::mutable_filter_event_type() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_GetUserPartnerEventNews_Request.filter_event_type)
  return _internal_mutable_filter_event_type();
}

// optional bool filter_to_appid = 7;
inline bool CCommunity_GetUserPartnerEventNews_Request::_internal_has_filter_to_appid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCommunity_GetUserPartnerEventNews_Request::has_filter_to_appid() const {
  return _internal_has_filter_to_appid();
}
inline void CCommunity_GetUserPartnerEventNews_Request::clear_filter_to_appid() {
  filter_to_appid_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CCommunity_GetUserPartnerEventNews_Request::_internal_filter_to_appid() const {
  return filter_to_appid_;
}
inline bool CCommunity_GetUserPartnerEventNews_Request::filter_to_appid() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetUserPartnerEventNews_Request.filter_to_appid)
  return _internal_filter_to_appid();
}
inline void CCommunity_GetUserPartnerEventNews_Request::_internal_set_filter_to_appid(bool value) {
  _has_bits_[0] |= 0x00000010u;
  filter_to_appid_ = value;
}
inline void CCommunity_GetUserPartnerEventNews_Request::set_filter_to_appid(bool value) {
  _internal_set_filter_to_appid(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetUserPartnerEventNews_Request.filter_to_appid)
}

// repeated .CAppPriority app_list = 8;
inline int CCommunity_GetUserPartnerEventNews_Request::_internal_app_list_size() const {
  return app_list_.size();
}
inline int CCommunity_GetUserPartnerEventNews_Request::app_list_size() const {
  return _internal_app_list_size();
}
inline void CCommunity_GetUserPartnerEventNews_Request::clear_app_list() {
  app_list_.Clear();
}
inline ::CAppPriority* CCommunity_GetUserPartnerEventNews_Request::mutable_app_list(int index) {
  // @@protoc_insertion_point(field_mutable:CCommunity_GetUserPartnerEventNews_Request.app_list)
  return app_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CAppPriority >*
CCommunity_GetUserPartnerEventNews_Request::mutable_app_list() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_GetUserPartnerEventNews_Request.app_list)
  return &app_list_;
}
inline const ::CAppPriority& CCommunity_GetUserPartnerEventNews_Request::_internal_app_list(int index) const {
  return app_list_.Get(index);
}
inline const ::CAppPriority& CCommunity_GetUserPartnerEventNews_Request::app_list(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_GetUserPartnerEventNews_Request.app_list)
  return _internal_app_list(index);
}
inline ::CAppPriority* CCommunity_GetUserPartnerEventNews_Request::_internal_add_app_list() {
  return app_list_.Add();
}
inline ::CAppPriority* CCommunity_GetUserPartnerEventNews_Request::add_app_list() {
  // @@protoc_insertion_point(field_add:CCommunity_GetUserPartnerEventNews_Request.app_list)
  return _internal_add_app_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CAppPriority >&
CCommunity_GetUserPartnerEventNews_Request::app_list() const {
  // @@protoc_insertion_point(field_list:CCommunity_GetUserPartnerEventNews_Request.app_list)
  return app_list_;
}

// optional uint32 count_after = 9 [default = 0];
inline bool CCommunity_GetUserPartnerEventNews_Request::_internal_has_count_after() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCommunity_GetUserPartnerEventNews_Request::has_count_after() const {
  return _internal_has_count_after();
}
inline void CCommunity_GetUserPartnerEventNews_Request::clear_count_after() {
  count_after_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetUserPartnerEventNews_Request::_internal_count_after() const {
  return count_after_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetUserPartnerEventNews_Request::count_after() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetUserPartnerEventNews_Request.count_after)
  return _internal_count_after();
}
inline void CCommunity_GetUserPartnerEventNews_Request::_internal_set_count_after(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  count_after_ = value;
}
inline void CCommunity_GetUserPartnerEventNews_Request::set_count_after(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count_after(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetUserPartnerEventNews_Request.count_after)
}

// optional uint32 count_before = 10 [default = 0];
inline bool CCommunity_GetUserPartnerEventNews_Request::_internal_has_count_before() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCommunity_GetUserPartnerEventNews_Request::has_count_before() const {
  return _internal_has_count_before();
}
inline void CCommunity_GetUserPartnerEventNews_Request::clear_count_before() {
  count_before_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetUserPartnerEventNews_Request::_internal_count_before() const {
  return count_before_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetUserPartnerEventNews_Request::count_before() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetUserPartnerEventNews_Request.count_before)
  return _internal_count_before();
}
inline void CCommunity_GetUserPartnerEventNews_Request::_internal_set_count_before(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  count_before_ = value;
}
inline void CCommunity_GetUserPartnerEventNews_Request::set_count_before(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count_before(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetUserPartnerEventNews_Request.count_before)
}

// -------------------------------------------------------------------

// CCommunity_GetUserPartnerEventNews_Response

// repeated .CClanMatchEventByRange results = 1;
inline int CCommunity_GetUserPartnerEventNews_Response::_internal_results_size() const {
  return results_.size();
}
inline int CCommunity_GetUserPartnerEventNews_Response::results_size() const {
  return _internal_results_size();
}
inline ::CClanMatchEventByRange* CCommunity_GetUserPartnerEventNews_Response::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:CCommunity_GetUserPartnerEventNews_Response.results)
  return results_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CClanMatchEventByRange >*
CCommunity_GetUserPartnerEventNews_Response::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_GetUserPartnerEventNews_Response.results)
  return &results_;
}
inline const ::CClanMatchEventByRange& CCommunity_GetUserPartnerEventNews_Response::_internal_results(int index) const {
  return results_.Get(index);
}
inline const ::CClanMatchEventByRange& CCommunity_GetUserPartnerEventNews_Response::results(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_GetUserPartnerEventNews_Response.results)
  return _internal_results(index);
}
inline ::CClanMatchEventByRange* CCommunity_GetUserPartnerEventNews_Response::_internal_add_results() {
  return results_.Add();
}
inline ::CClanMatchEventByRange* CCommunity_GetUserPartnerEventNews_Response::add_results() {
  // @@protoc_insertion_point(field_add:CCommunity_GetUserPartnerEventNews_Response.results)
  return _internal_add_results();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CClanMatchEventByRange >&
CCommunity_GetUserPartnerEventNews_Response::results() const {
  // @@protoc_insertion_point(field_list:CCommunity_GetUserPartnerEventNews_Response.results)
  return results_;
}

// -------------------------------------------------------------------

// CCommunity_GetBestEventsForUser_Request

// optional bool include_steam_blog = 1;
inline bool CCommunity_GetBestEventsForUser_Request::_internal_has_include_steam_blog() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_GetBestEventsForUser_Request::has_include_steam_blog() const {
  return _internal_has_include_steam_blog();
}
inline void CCommunity_GetBestEventsForUser_Request::clear_include_steam_blog() {
  include_steam_blog_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CCommunity_GetBestEventsForUser_Request::_internal_include_steam_blog() const {
  return include_steam_blog_;
}
inline bool CCommunity_GetBestEventsForUser_Request::include_steam_blog() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetBestEventsForUser_Request.include_steam_blog)
  return _internal_include_steam_blog();
}
inline void CCommunity_GetBestEventsForUser_Request::_internal_set_include_steam_blog(bool value) {
  _has_bits_[0] |= 0x00000002u;
  include_steam_blog_ = value;
}
inline void CCommunity_GetBestEventsForUser_Request::set_include_steam_blog(bool value) {
  _internal_set_include_steam_blog(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetBestEventsForUser_Request.include_steam_blog)
}

// optional uint32 filter_to_played_within_days = 2;
inline bool CCommunity_GetBestEventsForUser_Request::_internal_has_filter_to_played_within_days() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_GetBestEventsForUser_Request::has_filter_to_played_within_days() const {
  return _internal_has_filter_to_played_within_days();
}
inline void CCommunity_GetBestEventsForUser_Request::clear_filter_to_played_within_days() {
  filter_to_played_within_days_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetBestEventsForUser_Request::_internal_filter_to_played_within_days() const {
  return filter_to_played_within_days_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetBestEventsForUser_Request::filter_to_played_within_days() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetBestEventsForUser_Request.filter_to_played_within_days)
  return _internal_filter_to_played_within_days();
}
inline void CCommunity_GetBestEventsForUser_Request::_internal_set_filter_to_played_within_days(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  filter_to_played_within_days_ = value;
}
inline void CCommunity_GetBestEventsForUser_Request::set_filter_to_played_within_days(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_filter_to_played_within_days(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetBestEventsForUser_Request.filter_to_played_within_days)
}

// optional bool include_only_game_updates = 3;
inline bool CCommunity_GetBestEventsForUser_Request::_internal_has_include_only_game_updates() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCommunity_GetBestEventsForUser_Request::has_include_only_game_updates() const {
  return _internal_has_include_only_game_updates();
}
inline void CCommunity_GetBestEventsForUser_Request::clear_include_only_game_updates() {
  include_only_game_updates_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CCommunity_GetBestEventsForUser_Request::_internal_include_only_game_updates() const {
  return include_only_game_updates_;
}
inline bool CCommunity_GetBestEventsForUser_Request::include_only_game_updates() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetBestEventsForUser_Request.include_only_game_updates)
  return _internal_include_only_game_updates();
}
inline void CCommunity_GetBestEventsForUser_Request::_internal_set_include_only_game_updates(bool value) {
  _has_bits_[0] |= 0x00000004u;
  include_only_game_updates_ = value;
}
inline void CCommunity_GetBestEventsForUser_Request::set_include_only_game_updates(bool value) {
  _internal_set_include_only_game_updates(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetBestEventsForUser_Request.include_only_game_updates)
}

// -------------------------------------------------------------------

// CCommunity_PartnerEventResult

// optional uint32 clanid = 1;
inline bool CCommunity_PartnerEventResult::_internal_has_clanid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_PartnerEventResult::has_clanid() const {
  return _internal_has_clanid();
}
inline void CCommunity_PartnerEventResult::clear_clanid() {
  clanid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_PartnerEventResult::_internal_clanid() const {
  return clanid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_PartnerEventResult::clanid() const {
  // @@protoc_insertion_point(field_get:CCommunity_PartnerEventResult.clanid)
  return _internal_clanid();
}
inline void CCommunity_PartnerEventResult::_internal_set_clanid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  clanid_ = value;
}
inline void CCommunity_PartnerEventResult::set_clanid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_clanid(value);
  // @@protoc_insertion_point(field_set:CCommunity_PartnerEventResult.clanid)
}

// optional fixed64 event_gid = 2;
inline bool CCommunity_PartnerEventResult::_internal_has_event_gid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_PartnerEventResult::has_event_gid() const {
  return _internal_has_event_gid();
}
inline void CCommunity_PartnerEventResult::clear_event_gid() {
  event_gid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_PartnerEventResult::_internal_event_gid() const {
  return event_gid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_PartnerEventResult::event_gid() const {
  // @@protoc_insertion_point(field_get:CCommunity_PartnerEventResult.event_gid)
  return _internal_event_gid();
}
inline void CCommunity_PartnerEventResult::_internal_set_event_gid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  event_gid_ = value;
}
inline void CCommunity_PartnerEventResult::set_event_gid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_event_gid(value);
  // @@protoc_insertion_point(field_set:CCommunity_PartnerEventResult.event_gid)
}

// optional fixed64 announcement_gid = 3;
inline bool CCommunity_PartnerEventResult::_internal_has_announcement_gid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCommunity_PartnerEventResult::has_announcement_gid() const {
  return _internal_has_announcement_gid();
}
inline void CCommunity_PartnerEventResult::clear_announcement_gid() {
  announcement_gid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_PartnerEventResult::_internal_announcement_gid() const {
  return announcement_gid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_PartnerEventResult::announcement_gid() const {
  // @@protoc_insertion_point(field_get:CCommunity_PartnerEventResult.announcement_gid)
  return _internal_announcement_gid();
}
inline void CCommunity_PartnerEventResult::_internal_set_announcement_gid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  announcement_gid_ = value;
}
inline void CCommunity_PartnerEventResult::set_announcement_gid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_announcement_gid(value);
  // @@protoc_insertion_point(field_set:CCommunity_PartnerEventResult.announcement_gid)
}

// optional uint32 appid = 4;
inline bool CCommunity_PartnerEventResult::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCommunity_PartnerEventResult::has_appid() const {
  return _internal_has_appid();
}
inline void CCommunity_PartnerEventResult::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_PartnerEventResult::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_PartnerEventResult::appid() const {
  // @@protoc_insertion_point(field_get:CCommunity_PartnerEventResult.appid)
  return _internal_appid();
}
inline void CCommunity_PartnerEventResult::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  appid_ = value;
}
inline void CCommunity_PartnerEventResult::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CCommunity_PartnerEventResult.appid)
}

// optional bool possible_takeover = 5;
inline bool CCommunity_PartnerEventResult::_internal_has_possible_takeover() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCommunity_PartnerEventResult::has_possible_takeover() const {
  return _internal_has_possible_takeover();
}
inline void CCommunity_PartnerEventResult::clear_possible_takeover() {
  possible_takeover_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CCommunity_PartnerEventResult::_internal_possible_takeover() const {
  return possible_takeover_;
}
inline bool CCommunity_PartnerEventResult::possible_takeover() const {
  // @@protoc_insertion_point(field_get:CCommunity_PartnerEventResult.possible_takeover)
  return _internal_possible_takeover();
}
inline void CCommunity_PartnerEventResult::_internal_set_possible_takeover(bool value) {
  _has_bits_[0] |= 0x00000010u;
  possible_takeover_ = value;
}
inline void CCommunity_PartnerEventResult::set_possible_takeover(bool value) {
  _internal_set_possible_takeover(value);
  // @@protoc_insertion_point(field_set:CCommunity_PartnerEventResult.possible_takeover)
}

// optional uint32 rtime32_last_modified = 6 [default = 0];
inline bool CCommunity_PartnerEventResult::_internal_has_rtime32_last_modified() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCommunity_PartnerEventResult::has_rtime32_last_modified() const {
  return _internal_has_rtime32_last_modified();
}
inline void CCommunity_PartnerEventResult::clear_rtime32_last_modified() {
  rtime32_last_modified_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_PartnerEventResult::_internal_rtime32_last_modified() const {
  return rtime32_last_modified_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_PartnerEventResult::rtime32_last_modified() const {
  // @@protoc_insertion_point(field_get:CCommunity_PartnerEventResult.rtime32_last_modified)
  return _internal_rtime32_last_modified();
}
inline void CCommunity_PartnerEventResult::_internal_set_rtime32_last_modified(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  rtime32_last_modified_ = value;
}
inline void CCommunity_PartnerEventResult::set_rtime32_last_modified(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rtime32_last_modified(value);
  // @@protoc_insertion_point(field_set:CCommunity_PartnerEventResult.rtime32_last_modified)
}

// optional int32 user_app_priority = 7;
inline bool CCommunity_PartnerEventResult::_internal_has_user_app_priority() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCommunity_PartnerEventResult::has_user_app_priority() const {
  return _internal_has_user_app_priority();
}
inline void CCommunity_PartnerEventResult::clear_user_app_priority() {
  user_app_priority_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_PartnerEventResult::_internal_user_app_priority() const {
  return user_app_priority_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_PartnerEventResult::user_app_priority() const {
  // @@protoc_insertion_point(field_get:CCommunity_PartnerEventResult.user_app_priority)
  return _internal_user_app_priority();
}
inline void CCommunity_PartnerEventResult::_internal_set_user_app_priority(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  user_app_priority_ = value;
}
inline void CCommunity_PartnerEventResult::set_user_app_priority(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_app_priority(value);
  // @@protoc_insertion_point(field_set:CCommunity_PartnerEventResult.user_app_priority)
}

// -------------------------------------------------------------------

// CCommunity_GetBestEventsForUser_Response

// repeated .CCommunity_PartnerEventResult results = 1;
inline int CCommunity_GetBestEventsForUser_Response::_internal_results_size() const {
  return results_.size();
}
inline int CCommunity_GetBestEventsForUser_Response::results_size() const {
  return _internal_results_size();
}
inline void CCommunity_GetBestEventsForUser_Response::clear_results() {
  results_.Clear();
}
inline ::CCommunity_PartnerEventResult* CCommunity_GetBestEventsForUser_Response::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:CCommunity_GetBestEventsForUser_Response.results)
  return results_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_PartnerEventResult >*
CCommunity_GetBestEventsForUser_Response::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_GetBestEventsForUser_Response.results)
  return &results_;
}
inline const ::CCommunity_PartnerEventResult& CCommunity_GetBestEventsForUser_Response::_internal_results(int index) const {
  return results_.Get(index);
}
inline const ::CCommunity_PartnerEventResult& CCommunity_GetBestEventsForUser_Response::results(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_GetBestEventsForUser_Response.results)
  return _internal_results(index);
}
inline ::CCommunity_PartnerEventResult* CCommunity_GetBestEventsForUser_Response::_internal_add_results() {
  return results_.Add();
}
inline ::CCommunity_PartnerEventResult* CCommunity_GetBestEventsForUser_Response::add_results() {
  // @@protoc_insertion_point(field_add:CCommunity_GetBestEventsForUser_Response.results)
  return _internal_add_results();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_PartnerEventResult >&
CCommunity_GetBestEventsForUser_Response::results() const {
  // @@protoc_insertion_point(field_list:CCommunity_GetBestEventsForUser_Response.results)
  return results_;
}

// -------------------------------------------------------------------

// CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking

// optional uint32 clanid = 1;
inline bool CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::_internal_has_clanid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::has_clanid() const {
  return _internal_has_clanid();
}
inline void CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::clear_clanid() {
  clanid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::_internal_clanid() const {
  return clanid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::clanid() const {
  // @@protoc_insertion_point(field_get:CCommunity_MarkPartnerEventsForUser_Request.PartnerEventMarking.clanid)
  return _internal_clanid();
}
inline void CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::_internal_set_clanid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  clanid_ = value;
}
inline void CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::set_clanid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_clanid(value);
  // @@protoc_insertion_point(field_set:CCommunity_MarkPartnerEventsForUser_Request.PartnerEventMarking.clanid)
}

// optional fixed64 event_gid = 2;
inline bool CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::_internal_has_event_gid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::has_event_gid() const {
  return _internal_has_event_gid();
}
inline void CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::clear_event_gid() {
  event_gid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::_internal_event_gid() const {
  return event_gid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::event_gid() const {
  // @@protoc_insertion_point(field_get:CCommunity_MarkPartnerEventsForUser_Request.PartnerEventMarking.event_gid)
  return _internal_event_gid();
}
inline void CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::_internal_set_event_gid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  event_gid_ = value;
}
inline void CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::set_event_gid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_event_gid(value);
  // @@protoc_insertion_point(field_set:CCommunity_MarkPartnerEventsForUser_Request.PartnerEventMarking.event_gid)
}

// optional .EPartnerEventDisplayLocation display_location = 3 [default = EPartnerEventDisplayLocation_Invalid];
inline bool CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::_internal_has_display_location() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::has_display_location() const {
  return _internal_has_display_location();
}
inline void CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::clear_display_location() {
  display_location_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::EPartnerEventDisplayLocation CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::_internal_display_location() const {
  return static_cast< ::EPartnerEventDisplayLocation >(display_location_);
}
inline ::EPartnerEventDisplayLocation CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::display_location() const {
  // @@protoc_insertion_point(field_get:CCommunity_MarkPartnerEventsForUser_Request.PartnerEventMarking.display_location)
  return _internal_display_location();
}
inline void CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::_internal_set_display_location(::EPartnerEventDisplayLocation value) {
  assert(::EPartnerEventDisplayLocation_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  display_location_ = value;
}
inline void CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::set_display_location(::EPartnerEventDisplayLocation value) {
  _internal_set_display_location(value);
  // @@protoc_insertion_point(field_set:CCommunity_MarkPartnerEventsForUser_Request.PartnerEventMarking.display_location)
}

// optional bool marshown = 4;
inline bool CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::_internal_has_marshown() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::has_marshown() const {
  return _internal_has_marshown();
}
inline void CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::clear_marshown() {
  marshown_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::_internal_marshown() const {
  return marshown_;
}
inline bool CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::marshown() const {
  // @@protoc_insertion_point(field_get:CCommunity_MarkPartnerEventsForUser_Request.PartnerEventMarking.marshown)
  return _internal_marshown();
}
inline void CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::_internal_set_marshown(bool value) {
  _has_bits_[0] |= 0x00000008u;
  marshown_ = value;
}
inline void CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::set_marshown(bool value) {
  _internal_set_marshown(value);
  // @@protoc_insertion_point(field_set:CCommunity_MarkPartnerEventsForUser_Request.PartnerEventMarking.marshown)
}

// optional bool marread = 5;
inline bool CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::_internal_has_marread() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::has_marread() const {
  return _internal_has_marread();
}
inline void CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::clear_marread() {
  marread_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::_internal_marread() const {
  return marread_;
}
inline bool CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::marread() const {
  // @@protoc_insertion_point(field_get:CCommunity_MarkPartnerEventsForUser_Request.PartnerEventMarking.marread)
  return _internal_marread();
}
inline void CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::_internal_set_marread(bool value) {
  _has_bits_[0] |= 0x00000010u;
  marread_ = value;
}
inline void CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking::set_marread(bool value) {
  _internal_set_marread(value);
  // @@protoc_insertion_point(field_set:CCommunity_MarkPartnerEventsForUser_Request.PartnerEventMarking.marread)
}

// -------------------------------------------------------------------

// CCommunity_MarkPartnerEventsForUser_Request

// repeated .CCommunity_MarkPartnerEventsForUser_Request.PartnerEventMarking markings = 1;
inline int CCommunity_MarkPartnerEventsForUser_Request::_internal_markings_size() const {
  return markings_.size();
}
inline int CCommunity_MarkPartnerEventsForUser_Request::markings_size() const {
  return _internal_markings_size();
}
inline void CCommunity_MarkPartnerEventsForUser_Request::clear_markings() {
  markings_.Clear();
}
inline ::CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking* CCommunity_MarkPartnerEventsForUser_Request::mutable_markings(int index) {
  // @@protoc_insertion_point(field_mutable:CCommunity_MarkPartnerEventsForUser_Request.markings)
  return markings_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking >*
CCommunity_MarkPartnerEventsForUser_Request::mutable_markings() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_MarkPartnerEventsForUser_Request.markings)
  return &markings_;
}
inline const ::CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking& CCommunity_MarkPartnerEventsForUser_Request::_internal_markings(int index) const {
  return markings_.Get(index);
}
inline const ::CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking& CCommunity_MarkPartnerEventsForUser_Request::markings(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_MarkPartnerEventsForUser_Request.markings)
  return _internal_markings(index);
}
inline ::CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking* CCommunity_MarkPartnerEventsForUser_Request::_internal_add_markings() {
  return markings_.Add();
}
inline ::CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking* CCommunity_MarkPartnerEventsForUser_Request::add_markings() {
  // @@protoc_insertion_point(field_add:CCommunity_MarkPartnerEventsForUser_Request.markings)
  return _internal_add_markings();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking >&
CCommunity_MarkPartnerEventsForUser_Request::markings() const {
  // @@protoc_insertion_point(field_list:CCommunity_MarkPartnerEventsForUser_Request.markings)
  return markings_;
}

// -------------------------------------------------------------------

// CCommunity_MarkPartnerEventsForUser_Response

// -------------------------------------------------------------------

// CCommunity_GetUserPartnerEventViewStatus_Request

// repeated fixed64 event_gids = 1;
inline int CCommunity_GetUserPartnerEventViewStatus_Request::_internal_event_gids_size() const {
  return event_gids_.size();
}
inline int CCommunity_GetUserPartnerEventViewStatus_Request::event_gids_size() const {
  return _internal_event_gids_size();
}
inline void CCommunity_GetUserPartnerEventViewStatus_Request::clear_event_gids() {
  event_gids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetUserPartnerEventViewStatus_Request::_internal_event_gids(int index) const {
  return event_gids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetUserPartnerEventViewStatus_Request::event_gids(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_GetUserPartnerEventViewStatus_Request.event_gids)
  return _internal_event_gids(index);
}
inline void CCommunity_GetUserPartnerEventViewStatus_Request::set_event_gids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  event_gids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CCommunity_GetUserPartnerEventViewStatus_Request.event_gids)
}
inline void CCommunity_GetUserPartnerEventViewStatus_Request::_internal_add_event_gids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  event_gids_.Add(value);
}
inline void CCommunity_GetUserPartnerEventViewStatus_Request::add_event_gids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_event_gids(value);
  // @@protoc_insertion_point(field_add:CCommunity_GetUserPartnerEventViewStatus_Request.event_gids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CCommunity_GetUserPartnerEventViewStatus_Request::_internal_event_gids() const {
  return event_gids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CCommunity_GetUserPartnerEventViewStatus_Request::event_gids() const {
  // @@protoc_insertion_point(field_list:CCommunity_GetUserPartnerEventViewStatus_Request.event_gids)
  return _internal_event_gids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CCommunity_GetUserPartnerEventViewStatus_Request::_internal_mutable_event_gids() {
  return &event_gids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CCommunity_GetUserPartnerEventViewStatus_Request::mutable_event_gids() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_GetUserPartnerEventViewStatus_Request.event_gids)
  return _internal_mutable_event_gids();
}

// optional bool include_read_events_only = 2;
inline bool CCommunity_GetUserPartnerEventViewStatus_Request::_internal_has_include_read_events_only() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_GetUserPartnerEventViewStatus_Request::has_include_read_events_only() const {
  return _internal_has_include_read_events_only();
}
inline void CCommunity_GetUserPartnerEventViewStatus_Request::clear_include_read_events_only() {
  include_read_events_only_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CCommunity_GetUserPartnerEventViewStatus_Request::_internal_include_read_events_only() const {
  return include_read_events_only_;
}
inline bool CCommunity_GetUserPartnerEventViewStatus_Request::include_read_events_only() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetUserPartnerEventViewStatus_Request.include_read_events_only)
  return _internal_include_read_events_only();
}
inline void CCommunity_GetUserPartnerEventViewStatus_Request::_internal_set_include_read_events_only(bool value) {
  _has_bits_[0] |= 0x00000001u;
  include_read_events_only_ = value;
}
inline void CCommunity_GetUserPartnerEventViewStatus_Request::set_include_read_events_only(bool value) {
  _internal_set_include_read_events_only(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetUserPartnerEventViewStatus_Request.include_read_events_only)
}

// -------------------------------------------------------------------

// CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent

// optional fixed64 event_gid = 1;
inline bool CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::_internal_has_event_gid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::has_event_gid() const {
  return _internal_has_event_gid();
}
inline void CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::clear_event_gid() {
  event_gid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::_internal_event_gid() const {
  return event_gid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::event_gid() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetUserPartnerEventViewStatus_Response.PartnerEvent.event_gid)
  return _internal_event_gid();
}
inline void CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::_internal_set_event_gid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  event_gid_ = value;
}
inline void CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::set_event_gid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_event_gid(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetUserPartnerEventViewStatus_Response.PartnerEvent.event_gid)
}

// optional uint32 last_shown_time = 2;
inline bool CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::_internal_has_last_shown_time() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::has_last_shown_time() const {
  return _internal_has_last_shown_time();
}
inline void CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::clear_last_shown_time() {
  last_shown_time_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::_internal_last_shown_time() const {
  return last_shown_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::last_shown_time() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetUserPartnerEventViewStatus_Response.PartnerEvent.last_shown_time)
  return _internal_last_shown_time();
}
inline void CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::_internal_set_last_shown_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  last_shown_time_ = value;
}
inline void CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::set_last_shown_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_shown_time(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetUserPartnerEventViewStatus_Response.PartnerEvent.last_shown_time)
}

// optional uint32 last_read_time = 3;
inline bool CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::_internal_has_last_read_time() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::has_last_read_time() const {
  return _internal_has_last_read_time();
}
inline void CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::clear_last_read_time() {
  last_read_time_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::_internal_last_read_time() const {
  return last_read_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::last_read_time() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetUserPartnerEventViewStatus_Response.PartnerEvent.last_read_time)
  return _internal_last_read_time();
}
inline void CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::_internal_set_last_read_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  last_read_time_ = value;
}
inline void CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::set_last_read_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_read_time(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetUserPartnerEventViewStatus_Response.PartnerEvent.last_read_time)
}

// optional uint32 clan_account_id = 4;
inline bool CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::_internal_has_clan_account_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::has_clan_account_id() const {
  return _internal_has_clan_account_id();
}
inline void CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::clear_clan_account_id() {
  clan_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::_internal_clan_account_id() const {
  return clan_account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::clan_account_id() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetUserPartnerEventViewStatus_Response.PartnerEvent.clan_account_id)
  return _internal_clan_account_id();
}
inline void CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::_internal_set_clan_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  clan_account_id_ = value;
}
inline void CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent::set_clan_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_clan_account_id(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetUserPartnerEventViewStatus_Response.PartnerEvent.clan_account_id)
}

// -------------------------------------------------------------------

// CCommunity_GetUserPartnerEventViewStatus_Response

// repeated .CCommunity_GetUserPartnerEventViewStatus_Response.PartnerEvent events = 1;
inline int CCommunity_GetUserPartnerEventViewStatus_Response::_internal_events_size() const {
  return events_.size();
}
inline int CCommunity_GetUserPartnerEventViewStatus_Response::events_size() const {
  return _internal_events_size();
}
inline void CCommunity_GetUserPartnerEventViewStatus_Response::clear_events() {
  events_.Clear();
}
inline ::CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent* CCommunity_GetUserPartnerEventViewStatus_Response::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:CCommunity_GetUserPartnerEventViewStatus_Response.events)
  return events_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent >*
CCommunity_GetUserPartnerEventViewStatus_Response::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_GetUserPartnerEventViewStatus_Response.events)
  return &events_;
}
inline const ::CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent& CCommunity_GetUserPartnerEventViewStatus_Response::_internal_events(int index) const {
  return events_.Get(index);
}
inline const ::CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent& CCommunity_GetUserPartnerEventViewStatus_Response::events(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_GetUserPartnerEventViewStatus_Response.events)
  return _internal_events(index);
}
inline ::CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent* CCommunity_GetUserPartnerEventViewStatus_Response::_internal_add_events() {
  return events_.Add();
}
inline ::CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent* CCommunity_GetUserPartnerEventViewStatus_Response::add_events() {
  // @@protoc_insertion_point(field_add:CCommunity_GetUserPartnerEventViewStatus_Response.events)
  return _internal_add_events();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent >&
CCommunity_GetUserPartnerEventViewStatus_Response::events() const {
  // @@protoc_insertion_point(field_list:CCommunity_GetUserPartnerEventViewStatus_Response.events)
  return events_;
}

// -------------------------------------------------------------------

// CCommunity_PartnerEventsShowMoreForApp_Request

// optional uint32 appid = 1;
inline bool CCommunity_PartnerEventsShowMoreForApp_Request::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_PartnerEventsShowMoreForApp_Request::has_appid() const {
  return _internal_has_appid();
}
inline void CCommunity_PartnerEventsShowMoreForApp_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_PartnerEventsShowMoreForApp_Request::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_PartnerEventsShowMoreForApp_Request::appid() const {
  // @@protoc_insertion_point(field_get:CCommunity_PartnerEventsShowMoreForApp_Request.appid)
  return _internal_appid();
}
inline void CCommunity_PartnerEventsShowMoreForApp_Request::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
}
inline void CCommunity_PartnerEventsShowMoreForApp_Request::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CCommunity_PartnerEventsShowMoreForApp_Request.appid)
}

// -------------------------------------------------------------------

// CCommunity_PartnerEventsShowMoreForApp_Response

// -------------------------------------------------------------------

// CCommunity_PartnerEventsShowLessForApp_Request

// optional uint32 appid = 1;
inline bool CCommunity_PartnerEventsShowLessForApp_Request::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_PartnerEventsShowLessForApp_Request::has_appid() const {
  return _internal_has_appid();
}
inline void CCommunity_PartnerEventsShowLessForApp_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_PartnerEventsShowLessForApp_Request::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_PartnerEventsShowLessForApp_Request::appid() const {
  // @@protoc_insertion_point(field_get:CCommunity_PartnerEventsShowLessForApp_Request.appid)
  return _internal_appid();
}
inline void CCommunity_PartnerEventsShowLessForApp_Request::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
}
inline void CCommunity_PartnerEventsShowLessForApp_Request::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CCommunity_PartnerEventsShowLessForApp_Request.appid)
}

// -------------------------------------------------------------------

// CCommunity_PartnerEventsShowLessForApp_Response

// -------------------------------------------------------------------

// CCommunity_ClearUserPartnerEventsAppPriorities_Request

// -------------------------------------------------------------------

// CCommunity_ClearUserPartnerEventsAppPriorities_Response

// -------------------------------------------------------------------

// CCommunity_GetUserPartnerEventsAppPriorities_Request

// -------------------------------------------------------------------

// CCommunity_PartnerEventsAppPriority

// optional uint32 appid = 1;
inline bool CCommunity_PartnerEventsAppPriority::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_PartnerEventsAppPriority::has_appid() const {
  return _internal_has_appid();
}
inline void CCommunity_PartnerEventsAppPriority::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_PartnerEventsAppPriority::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_PartnerEventsAppPriority::appid() const {
  // @@protoc_insertion_point(field_get:CCommunity_PartnerEventsAppPriority.appid)
  return _internal_appid();
}
inline void CCommunity_PartnerEventsAppPriority::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
}
inline void CCommunity_PartnerEventsAppPriority::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CCommunity_PartnerEventsAppPriority.appid)
}

// optional int32 user_app_priority = 2;
inline bool CCommunity_PartnerEventsAppPriority::_internal_has_user_app_priority() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_PartnerEventsAppPriority::has_user_app_priority() const {
  return _internal_has_user_app_priority();
}
inline void CCommunity_PartnerEventsAppPriority::clear_user_app_priority() {
  user_app_priority_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_PartnerEventsAppPriority::_internal_user_app_priority() const {
  return user_app_priority_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CCommunity_PartnerEventsAppPriority::user_app_priority() const {
  // @@protoc_insertion_point(field_get:CCommunity_PartnerEventsAppPriority.user_app_priority)
  return _internal_user_app_priority();
}
inline void CCommunity_PartnerEventsAppPriority::_internal_set_user_app_priority(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  user_app_priority_ = value;
}
inline void CCommunity_PartnerEventsAppPriority::set_user_app_priority(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_user_app_priority(value);
  // @@protoc_insertion_point(field_set:CCommunity_PartnerEventsAppPriority.user_app_priority)
}

// -------------------------------------------------------------------

// CCommunity_GetUserPartnerEventsAppPriorities_Response

// repeated .CCommunity_PartnerEventsAppPriority priorities = 1;
inline int CCommunity_GetUserPartnerEventsAppPriorities_Response::_internal_priorities_size() const {
  return priorities_.size();
}
inline int CCommunity_GetUserPartnerEventsAppPriorities_Response::priorities_size() const {
  return _internal_priorities_size();
}
inline void CCommunity_GetUserPartnerEventsAppPriorities_Response::clear_priorities() {
  priorities_.Clear();
}
inline ::CCommunity_PartnerEventsAppPriority* CCommunity_GetUserPartnerEventsAppPriorities_Response::mutable_priorities(int index) {
  // @@protoc_insertion_point(field_mutable:CCommunity_GetUserPartnerEventsAppPriorities_Response.priorities)
  return priorities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_PartnerEventsAppPriority >*
CCommunity_GetUserPartnerEventsAppPriorities_Response::mutable_priorities() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_GetUserPartnerEventsAppPriorities_Response.priorities)
  return &priorities_;
}
inline const ::CCommunity_PartnerEventsAppPriority& CCommunity_GetUserPartnerEventsAppPriorities_Response::_internal_priorities(int index) const {
  return priorities_.Get(index);
}
inline const ::CCommunity_PartnerEventsAppPriority& CCommunity_GetUserPartnerEventsAppPriorities_Response::priorities(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_GetUserPartnerEventsAppPriorities_Response.priorities)
  return _internal_priorities(index);
}
inline ::CCommunity_PartnerEventsAppPriority* CCommunity_GetUserPartnerEventsAppPriorities_Response::_internal_add_priorities() {
  return priorities_.Add();
}
inline ::CCommunity_PartnerEventsAppPriority* CCommunity_GetUserPartnerEventsAppPriorities_Response::add_priorities() {
  // @@protoc_insertion_point(field_add:CCommunity_GetUserPartnerEventsAppPriorities_Response.priorities)
  return _internal_add_priorities();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_PartnerEventsAppPriority >&
CCommunity_GetUserPartnerEventsAppPriorities_Response::priorities() const {
  // @@protoc_insertion_point(field_list:CCommunity_GetUserPartnerEventsAppPriorities_Response.priorities)
  return priorities_;
}

// -------------------------------------------------------------------

// CCommunity_ClearSinglePartnerEventsAppPriority_Request

// optional uint32 appid = 1;
inline bool CCommunity_ClearSinglePartnerEventsAppPriority_Request::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_ClearSinglePartnerEventsAppPriority_Request::has_appid() const {
  return _internal_has_appid();
}
inline void CCommunity_ClearSinglePartnerEventsAppPriority_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_ClearSinglePartnerEventsAppPriority_Request::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_ClearSinglePartnerEventsAppPriority_Request::appid() const {
  // @@protoc_insertion_point(field_get:CCommunity_ClearSinglePartnerEventsAppPriority_Request.appid)
  return _internal_appid();
}
inline void CCommunity_ClearSinglePartnerEventsAppPriority_Request::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
}
inline void CCommunity_ClearSinglePartnerEventsAppPriority_Request::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CCommunity_ClearSinglePartnerEventsAppPriority_Request.appid)
}

// -------------------------------------------------------------------

// CCommunity_ClearSinglePartnerEventsAppPriority_Response

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::EPartnerEventDisplayLocation> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EPartnerEventDisplayLocation>() {
  return ::EPartnerEventDisplayLocation_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_steammessages_5fcommunity_2esteamclient_2eproto
