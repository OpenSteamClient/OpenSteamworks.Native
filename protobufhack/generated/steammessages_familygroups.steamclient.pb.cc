// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_familygroups.steamclient.proto

#include "steammessages_familygroups.steamclient.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr CFamilyGroups_CreateFamilyGroup_Request::CFamilyGroups_CreateFamilyGroup_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , steamid_(PROTOBUF_ULONGLONG(0)){}
struct CFamilyGroups_CreateFamilyGroup_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_CreateFamilyGroup_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_CreateFamilyGroup_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_CreateFamilyGroup_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_CreateFamilyGroup_RequestDefaultTypeInternal _CFamilyGroups_CreateFamilyGroup_Request_default_instance_;
constexpr CFamilyGroups_CreateFamilyGroup_Response::CFamilyGroups_CreateFamilyGroup_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : family_groupid_(PROTOBUF_ULONGLONG(0)){}
struct CFamilyGroups_CreateFamilyGroup_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_CreateFamilyGroup_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_CreateFamilyGroup_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_CreateFamilyGroup_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_CreateFamilyGroup_ResponseDefaultTypeInternal _CFamilyGroups_CreateFamilyGroup_Response_default_instance_;
constexpr CFamilyGroups_GetFamilyGroup_Request::CFamilyGroups_GetFamilyGroup_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : family_groupid_(PROTOBUF_ULONGLONG(0))
  , send_running_apps_(false){}
struct CFamilyGroups_GetFamilyGroup_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_GetFamilyGroup_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetFamilyGroup_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetFamilyGroup_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetFamilyGroup_RequestDefaultTypeInternal _CFamilyGroups_GetFamilyGroup_Request_default_instance_;
constexpr FamilyGroupMember::FamilyGroupMember(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : steamid_(PROTOBUF_ULONGLONG(0))
  , role_(0)

  , time_joined_(0u)
  , cooldown_seconds_remaining_(0u){}
struct FamilyGroupMemberDefaultTypeInternal {
  constexpr FamilyGroupMemberDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FamilyGroupMemberDefaultTypeInternal() {}
  union {
    FamilyGroupMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FamilyGroupMemberDefaultTypeInternal _FamilyGroupMember_default_instance_;
constexpr FamilyGroupPendingInvite::FamilyGroupPendingInvite(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : steamid_(PROTOBUF_ULONGLONG(0))
  , role_(0)
{}
struct FamilyGroupPendingInviteDefaultTypeInternal {
  constexpr FamilyGroupPendingInviteDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FamilyGroupPendingInviteDefaultTypeInternal() {}
  union {
    FamilyGroupPendingInvite _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FamilyGroupPendingInviteDefaultTypeInternal _FamilyGroupPendingInvite_default_instance_;
constexpr FamilyGroupFormerMember::FamilyGroupFormerMember(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : steamid_(PROTOBUF_ULONGLONG(0)){}
struct FamilyGroupFormerMemberDefaultTypeInternal {
  constexpr FamilyGroupFormerMemberDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FamilyGroupFormerMemberDefaultTypeInternal() {}
  union {
    FamilyGroupFormerMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FamilyGroupFormerMemberDefaultTypeInternal _FamilyGroupFormerMember_default_instance_;
constexpr CFamilyGroups_GetFamilyGroup_Response::CFamilyGroups_GetFamilyGroup_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : members_()
  , pending_invites_()
  , former_members_()
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , country_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , free_spots_(0u)
  , slot_cooldown_remaining_seconds_(0u)
  , slot_cooldown_overrides_(0u){}
struct CFamilyGroups_GetFamilyGroup_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_GetFamilyGroup_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetFamilyGroup_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetFamilyGroup_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetFamilyGroup_ResponseDefaultTypeInternal _CFamilyGroups_GetFamilyGroup_Response_default_instance_;
constexpr CFamilyGroups_GetFamilyGroupForUser_Request::CFamilyGroups_GetFamilyGroupForUser_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : steamid_(PROTOBUF_ULONGLONG(0))
  , include_family_group_response_(false){}
struct CFamilyGroups_GetFamilyGroupForUser_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_GetFamilyGroupForUser_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetFamilyGroupForUser_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetFamilyGroupForUser_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetFamilyGroupForUser_RequestDefaultTypeInternal _CFamilyGroups_GetFamilyGroupForUser_Request_default_instance_;
constexpr FamilyGroupPendingInviteForUser::FamilyGroupPendingInviteForUser(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : family_groupid_(PROTOBUF_ULONGLONG(0))
  , inviter_steamid_(PROTOBUF_ULONGLONG(0))
  , role_(0)
{}
struct FamilyGroupPendingInviteForUserDefaultTypeInternal {
  constexpr FamilyGroupPendingInviteForUserDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FamilyGroupPendingInviteForUserDefaultTypeInternal() {}
  union {
    FamilyGroupPendingInviteForUser _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FamilyGroupPendingInviteForUserDefaultTypeInternal _FamilyGroupPendingInviteForUser_default_instance_;
constexpr CFamilyGroups_GetFamilyGroupForUser_Response::CFamilyGroups_GetFamilyGroupForUser_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pending_group_invites_()
  , family_group_(nullptr)
  , family_groupid_(PROTOBUF_ULONGLONG(0))
  , is_not_member_of_any_group_(false)
  , latest_time_joined_(0u)
  , latest_joined_family_groupid_(PROTOBUF_ULONGLONG(0))
  , role_(0u)
  , cooldown_seconds_remaining_(0u){}
struct CFamilyGroups_GetFamilyGroupForUser_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_GetFamilyGroupForUser_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetFamilyGroupForUser_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetFamilyGroupForUser_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetFamilyGroupForUser_ResponseDefaultTypeInternal _CFamilyGroups_GetFamilyGroupForUser_Response_default_instance_;
constexpr CFamilyGroups_ModifyFamilyGroupDetails_Request::CFamilyGroups_ModifyFamilyGroupDetails_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , family_groupid_(PROTOBUF_ULONGLONG(0)){}
struct CFamilyGroups_ModifyFamilyGroupDetails_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_ModifyFamilyGroupDetails_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_ModifyFamilyGroupDetails_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_ModifyFamilyGroupDetails_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_ModifyFamilyGroupDetails_RequestDefaultTypeInternal _CFamilyGroups_ModifyFamilyGroupDetails_Request_default_instance_;
constexpr CFamilyGroups_ModifyFamilyGroupDetails_Response::CFamilyGroups_ModifyFamilyGroupDetails_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CFamilyGroups_ModifyFamilyGroupDetails_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_ModifyFamilyGroupDetails_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_ModifyFamilyGroupDetails_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_ModifyFamilyGroupDetails_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_ModifyFamilyGroupDetails_ResponseDefaultTypeInternal _CFamilyGroups_ModifyFamilyGroupDetails_Response_default_instance_;
constexpr CFamilyGroups_InviteToFamilyGroup_Request::CFamilyGroups_InviteToFamilyGroup_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : family_groupid_(PROTOBUF_ULONGLONG(0))
  , receiver_steamid_(PROTOBUF_ULONGLONG(0))
  , receiver_role_(0)
{}
struct CFamilyGroups_InviteToFamilyGroup_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_InviteToFamilyGroup_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_InviteToFamilyGroup_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_InviteToFamilyGroup_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_InviteToFamilyGroup_RequestDefaultTypeInternal _CFamilyGroups_InviteToFamilyGroup_Request_default_instance_;
constexpr CFamilyGroups_InviteToFamilyGroup_Response::CFamilyGroups_InviteToFamilyGroup_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : invite_id_(PROTOBUF_ULONGLONG(0))
  , two_factor_method_(0)
{}
struct CFamilyGroups_InviteToFamilyGroup_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_InviteToFamilyGroup_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_InviteToFamilyGroup_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_InviteToFamilyGroup_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_InviteToFamilyGroup_ResponseDefaultTypeInternal _CFamilyGroups_InviteToFamilyGroup_Response_default_instance_;
constexpr CFamilyGroups_ConfirmInviteToFamilyGroup_Request::CFamilyGroups_ConfirmInviteToFamilyGroup_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : family_groupid_(PROTOBUF_ULONGLONG(0))
  , invite_id_(PROTOBUF_ULONGLONG(0))
  , nonce_(PROTOBUF_ULONGLONG(0)){}
struct CFamilyGroups_ConfirmInviteToFamilyGroup_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_ConfirmInviteToFamilyGroup_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_ConfirmInviteToFamilyGroup_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_ConfirmInviteToFamilyGroup_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_ConfirmInviteToFamilyGroup_RequestDefaultTypeInternal _CFamilyGroups_ConfirmInviteToFamilyGroup_Request_default_instance_;
constexpr CFamilyGroups_ConfirmInviteToFamilyGroup_Response::CFamilyGroups_ConfirmInviteToFamilyGroup_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CFamilyGroups_ConfirmInviteToFamilyGroup_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_ConfirmInviteToFamilyGroup_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_ConfirmInviteToFamilyGroup_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_ConfirmInviteToFamilyGroup_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_ConfirmInviteToFamilyGroup_ResponseDefaultTypeInternal _CFamilyGroups_ConfirmInviteToFamilyGroup_Response_default_instance_;
constexpr CFamilyGroups_ResendInvitationToFamilyGroup_Request::CFamilyGroups_ResendInvitationToFamilyGroup_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : family_groupid_(PROTOBUF_ULONGLONG(0))
  , steamid_(PROTOBUF_ULONGLONG(0)){}
struct CFamilyGroups_ResendInvitationToFamilyGroup_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_ResendInvitationToFamilyGroup_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_ResendInvitationToFamilyGroup_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_ResendInvitationToFamilyGroup_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_ResendInvitationToFamilyGroup_RequestDefaultTypeInternal _CFamilyGroups_ResendInvitationToFamilyGroup_Request_default_instance_;
constexpr CFamilyGroups_ResendInvitationToFamilyGroup_Response::CFamilyGroups_ResendInvitationToFamilyGroup_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CFamilyGroups_ResendInvitationToFamilyGroup_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_ResendInvitationToFamilyGroup_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_ResendInvitationToFamilyGroup_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_ResendInvitationToFamilyGroup_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_ResendInvitationToFamilyGroup_ResponseDefaultTypeInternal _CFamilyGroups_ResendInvitationToFamilyGroup_Response_default_instance_;
constexpr CFamilyGroups_JoinFamilyGroup_Request::CFamilyGroups_JoinFamilyGroup_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : family_groupid_(PROTOBUF_ULONGLONG(0))
  , nonce_(PROTOBUF_ULONGLONG(0)){}
struct CFamilyGroups_JoinFamilyGroup_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_JoinFamilyGroup_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_JoinFamilyGroup_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_JoinFamilyGroup_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_JoinFamilyGroup_RequestDefaultTypeInternal _CFamilyGroups_JoinFamilyGroup_Request_default_instance_;
constexpr CFamilyGroups_JoinFamilyGroup_Response::CFamilyGroups_JoinFamilyGroup_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : two_factor_method_(0)
{}
struct CFamilyGroups_JoinFamilyGroup_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_JoinFamilyGroup_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_JoinFamilyGroup_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_JoinFamilyGroup_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_JoinFamilyGroup_ResponseDefaultTypeInternal _CFamilyGroups_JoinFamilyGroup_Response_default_instance_;
constexpr CFamilyGroups_ConfirmJoinFamilyGroup_Request::CFamilyGroups_ConfirmJoinFamilyGroup_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : family_groupid_(PROTOBUF_ULONGLONG(0))
  , invite_id_(PROTOBUF_ULONGLONG(0))
  , nonce_(PROTOBUF_ULONGLONG(0)){}
struct CFamilyGroups_ConfirmJoinFamilyGroup_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_ConfirmJoinFamilyGroup_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_ConfirmJoinFamilyGroup_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_ConfirmJoinFamilyGroup_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_ConfirmJoinFamilyGroup_RequestDefaultTypeInternal _CFamilyGroups_ConfirmJoinFamilyGroup_Request_default_instance_;
constexpr CFamilyGroups_ConfirmJoinFamilyGroup_Response::CFamilyGroups_ConfirmJoinFamilyGroup_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CFamilyGroups_ConfirmJoinFamilyGroup_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_ConfirmJoinFamilyGroup_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_ConfirmJoinFamilyGroup_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_ConfirmJoinFamilyGroup_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_ConfirmJoinFamilyGroup_ResponseDefaultTypeInternal _CFamilyGroups_ConfirmJoinFamilyGroup_Response_default_instance_;
constexpr CFamilyGroups_RemoveFromFamilyGroup_Request::CFamilyGroups_RemoveFromFamilyGroup_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : family_groupid_(PROTOBUF_ULONGLONG(0))
  , steamid_to_remove_(PROTOBUF_ULONGLONG(0)){}
struct CFamilyGroups_RemoveFromFamilyGroup_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_RemoveFromFamilyGroup_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_RemoveFromFamilyGroup_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_RemoveFromFamilyGroup_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_RemoveFromFamilyGroup_RequestDefaultTypeInternal _CFamilyGroups_RemoveFromFamilyGroup_Request_default_instance_;
constexpr CFamilyGroups_RemoveFromFamilyGroup_Response::CFamilyGroups_RemoveFromFamilyGroup_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CFamilyGroups_RemoveFromFamilyGroup_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_RemoveFromFamilyGroup_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_RemoveFromFamilyGroup_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_RemoveFromFamilyGroup_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_RemoveFromFamilyGroup_ResponseDefaultTypeInternal _CFamilyGroups_RemoveFromFamilyGroup_Response_default_instance_;
constexpr CFamilyGroups_CancelFamilyGroupInvite_Request::CFamilyGroups_CancelFamilyGroupInvite_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : family_groupid_(PROTOBUF_ULONGLONG(0))
  , steamid_to_cancel_(PROTOBUF_ULONGLONG(0)){}
struct CFamilyGroups_CancelFamilyGroupInvite_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_CancelFamilyGroupInvite_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_CancelFamilyGroupInvite_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_CancelFamilyGroupInvite_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_CancelFamilyGroupInvite_RequestDefaultTypeInternal _CFamilyGroups_CancelFamilyGroupInvite_Request_default_instance_;
constexpr CFamilyGroups_CancelFamilyGroupInvite_Response::CFamilyGroups_CancelFamilyGroupInvite_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CFamilyGroups_CancelFamilyGroupInvite_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_CancelFamilyGroupInvite_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_CancelFamilyGroupInvite_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_CancelFamilyGroupInvite_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_CancelFamilyGroupInvite_ResponseDefaultTypeInternal _CFamilyGroups_CancelFamilyGroupInvite_Response_default_instance_;
constexpr CFamilyGroups_GetUsersSharingDevice_Request::CFamilyGroups_GetUsersSharingDevice_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : family_groupid_(PROTOBUF_ULONGLONG(0))
  , client_instance_id_(PROTOBUF_ULONGLONG(0)){}
struct CFamilyGroups_GetUsersSharingDevice_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_GetUsersSharingDevice_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetUsersSharingDevice_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetUsersSharingDevice_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetUsersSharingDevice_RequestDefaultTypeInternal _CFamilyGroups_GetUsersSharingDevice_Request_default_instance_;
constexpr CFamilyGroups_GetUsersSharingDevice_Response::CFamilyGroups_GetUsersSharingDevice_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : users_(){}
struct CFamilyGroups_GetUsersSharingDevice_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_GetUsersSharingDevice_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetUsersSharingDevice_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetUsersSharingDevice_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetUsersSharingDevice_ResponseDefaultTypeInternal _CFamilyGroups_GetUsersSharingDevice_Response_default_instance_;
constexpr CFamilyGroups_DeleteFamilyGroup_Request::CFamilyGroups_DeleteFamilyGroup_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : family_groupid_(PROTOBUF_ULONGLONG(0)){}
struct CFamilyGroups_DeleteFamilyGroup_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_DeleteFamilyGroup_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_DeleteFamilyGroup_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_DeleteFamilyGroup_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_DeleteFamilyGroup_RequestDefaultTypeInternal _CFamilyGroups_DeleteFamilyGroup_Request_default_instance_;
constexpr CFamilyGroups_DeleteFamilyGroup_Response::CFamilyGroups_DeleteFamilyGroup_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CFamilyGroups_DeleteFamilyGroup_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_DeleteFamilyGroup_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_DeleteFamilyGroup_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_DeleteFamilyGroup_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_DeleteFamilyGroup_ResponseDefaultTypeInternal _CFamilyGroups_DeleteFamilyGroup_Response_default_instance_;
constexpr CFamilyGroups_GetPlaytimeSummary_Request::CFamilyGroups_GetPlaytimeSummary_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : family_groupid_(PROTOBUF_ULONGLONG(0)){}
struct CFamilyGroups_GetPlaytimeSummary_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_GetPlaytimeSummary_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetPlaytimeSummary_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetPlaytimeSummary_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetPlaytimeSummary_RequestDefaultTypeInternal _CFamilyGroups_GetPlaytimeSummary_Request_default_instance_;
constexpr CFamilyGroups_PlaytimeEntry::CFamilyGroups_PlaytimeEntry(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : steamid_(PROTOBUF_ULONGLONG(0))
  , appid_(0u)
  , first_played_(0u)
  , latest_played_(0u)
  , seconds_played_(0u){}
struct CFamilyGroups_PlaytimeEntryDefaultTypeInternal {
  constexpr CFamilyGroups_PlaytimeEntryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_PlaytimeEntryDefaultTypeInternal() {}
  union {
    CFamilyGroups_PlaytimeEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_PlaytimeEntryDefaultTypeInternal _CFamilyGroups_PlaytimeEntry_default_instance_;
constexpr CFamilyGroups_GetPlaytimeSummary_Response::CFamilyGroups_GetPlaytimeSummary_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : entries_(){}
struct CFamilyGroups_GetPlaytimeSummary_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_GetPlaytimeSummary_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetPlaytimeSummary_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetPlaytimeSummary_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetPlaytimeSummary_ResponseDefaultTypeInternal _CFamilyGroups_GetPlaytimeSummary_Response_default_instance_;
constexpr CFamilyGroups_RequestPurchase_Request::CFamilyGroups_RequestPurchase_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : store_country_code_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , family_groupid_(PROTOBUF_ULONGLONG(0))
  , gidshoppingcart_(PROTOBUF_ULONGLONG(0))
  , use_account_cart_(false){}
struct CFamilyGroups_RequestPurchase_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_RequestPurchase_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_RequestPurchase_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_RequestPurchase_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_RequestPurchase_RequestDefaultTypeInternal _CFamilyGroups_RequestPurchase_Request_default_instance_;
constexpr CFamilyGroups_RequestPurchase_Response::CFamilyGroups_RequestPurchase_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : gidshoppingcart_(PROTOBUF_ULONGLONG(0))
  , request_id_(PROTOBUF_ULONGLONG(0)){}
struct CFamilyGroups_RequestPurchase_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_RequestPurchase_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_RequestPurchase_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_RequestPurchase_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_RequestPurchase_ResponseDefaultTypeInternal _CFamilyGroups_RequestPurchase_Response_default_instance_;
constexpr CFamilyGroups_GetPurchaseRequests_Request::CFamilyGroups_GetPurchaseRequests_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : request_ids_()
  , family_groupid_(PROTOBUF_ULONGLONG(0))
  , rt_include_completed_since_(0u){}
struct CFamilyGroups_GetPurchaseRequests_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_GetPurchaseRequests_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetPurchaseRequests_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetPurchaseRequests_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetPurchaseRequests_RequestDefaultTypeInternal _CFamilyGroups_GetPurchaseRequests_Request_default_instance_;
constexpr PurchaseRequest::PurchaseRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : requested_packageids_()
  , purchased_packageids_()
  , requested_bundleids_()
  , purchased_bundleids_()
  , requester_steamid_(PROTOBUF_ULONGLONG(0))
  , gidshoppingcart_(PROTOBUF_ULONGLONG(0))
  , time_requested_(0u)
  , time_responded_(0u)
  , responder_steamid_(PROTOBUF_ULONGLONG(0))
  , response_action_(0)

  , is_completed_(false)
  , request_id_(PROTOBUF_ULONGLONG(0)){}
struct PurchaseRequestDefaultTypeInternal {
  constexpr PurchaseRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PurchaseRequestDefaultTypeInternal() {}
  union {
    PurchaseRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PurchaseRequestDefaultTypeInternal _PurchaseRequest_default_instance_;
constexpr CFamilyGroups_GetPurchaseRequests_Response::CFamilyGroups_GetPurchaseRequests_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : requests_(){}
struct CFamilyGroups_GetPurchaseRequests_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_GetPurchaseRequests_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetPurchaseRequests_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetPurchaseRequests_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetPurchaseRequests_ResponseDefaultTypeInternal _CFamilyGroups_GetPurchaseRequests_Response_default_instance_;
constexpr CFamilyGroups_RespondToRequestedPurchase_Request::CFamilyGroups_RespondToRequestedPurchase_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : family_groupid_(PROTOBUF_ULONGLONG(0))
  , request_id_(PROTOBUF_ULONGLONG(0))
  , action_(0)
{}
struct CFamilyGroups_RespondToRequestedPurchase_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_RespondToRequestedPurchase_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_RespondToRequestedPurchase_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_RespondToRequestedPurchase_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_RespondToRequestedPurchase_RequestDefaultTypeInternal _CFamilyGroups_RespondToRequestedPurchase_Request_default_instance_;
constexpr CFamilyGroups_RespondToRequestedPurchase_Response::CFamilyGroups_RespondToRequestedPurchase_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CFamilyGroups_RespondToRequestedPurchase_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_RespondToRequestedPurchase_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_RespondToRequestedPurchase_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_RespondToRequestedPurchase_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_RespondToRequestedPurchase_ResponseDefaultTypeInternal _CFamilyGroups_RespondToRequestedPurchase_Response_default_instance_;
constexpr CFamilyGroups_GetChangeLog_Request::CFamilyGroups_GetChangeLog_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : family_groupid_(PROTOBUF_ULONGLONG(0)){}
struct CFamilyGroups_GetChangeLog_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_GetChangeLog_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetChangeLog_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetChangeLog_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetChangeLog_RequestDefaultTypeInternal _CFamilyGroups_GetChangeLog_Request_default_instance_;
constexpr CFamilyGroups_GetChangeLog_Response_Change::CFamilyGroups_GetChangeLog_Response_Change(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : body_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , timestamp_(PROTOBUF_ULONGLONG(0))
  , actor_steamid_(PROTOBUF_ULONGLONG(0))
  , type_(0)

  , by_support_(false){}
struct CFamilyGroups_GetChangeLog_Response_ChangeDefaultTypeInternal {
  constexpr CFamilyGroups_GetChangeLog_Response_ChangeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetChangeLog_Response_ChangeDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetChangeLog_Response_Change _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetChangeLog_Response_ChangeDefaultTypeInternal _CFamilyGroups_GetChangeLog_Response_Change_default_instance_;
constexpr CFamilyGroups_GetChangeLog_Response::CFamilyGroups_GetChangeLog_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : changes_(){}
struct CFamilyGroups_GetChangeLog_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_GetChangeLog_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetChangeLog_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetChangeLog_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetChangeLog_ResponseDefaultTypeInternal _CFamilyGroups_GetChangeLog_Response_default_instance_;
constexpr CFamilyGroups_SetFamilyCooldownOverrides_Request::CFamilyGroups_SetFamilyCooldownOverrides_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : family_groupid_(PROTOBUF_ULONGLONG(0))
  , cooldown_count_(0u){}
struct CFamilyGroups_SetFamilyCooldownOverrides_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_SetFamilyCooldownOverrides_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_SetFamilyCooldownOverrides_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_SetFamilyCooldownOverrides_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_SetFamilyCooldownOverrides_RequestDefaultTypeInternal _CFamilyGroups_SetFamilyCooldownOverrides_Request_default_instance_;
constexpr CFamilyGroups_SetFamilyCooldownOverrides_Response::CFamilyGroups_SetFamilyCooldownOverrides_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CFamilyGroups_SetFamilyCooldownOverrides_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_SetFamilyCooldownOverrides_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_SetFamilyCooldownOverrides_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_SetFamilyCooldownOverrides_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_SetFamilyCooldownOverrides_ResponseDefaultTypeInternal _CFamilyGroups_SetFamilyCooldownOverrides_Response_default_instance_;
constexpr CFamilyGroups_GetSharedLibraryApps_Request::CFamilyGroups_GetSharedLibraryApps_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : language_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , family_groupid_(PROTOBUF_ULONGLONG(0))
  , include_own_(false)
  , include_excluded_(false)
  , max_apps_(0u){}
struct CFamilyGroups_GetSharedLibraryApps_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_GetSharedLibraryApps_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetSharedLibraryApps_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetSharedLibraryApps_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetSharedLibraryApps_RequestDefaultTypeInternal _CFamilyGroups_GetSharedLibraryApps_Request_default_instance_;
constexpr CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::CFamilyGroups_GetSharedLibraryApps_Response_SharedApp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : owner_steamids_()
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sort_as_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , capsule_filename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , img_icon_hash_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , appid_(0u)
  , exclude_reason_(0)

  , rt_playtime_(0u)
  , rt_time_acquired_(0u)
  , rt_last_played_(0u){}
struct CFamilyGroups_GetSharedLibraryApps_Response_SharedAppDefaultTypeInternal {
  constexpr CFamilyGroups_GetSharedLibraryApps_Response_SharedAppDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetSharedLibraryApps_Response_SharedAppDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetSharedLibraryApps_Response_SharedApp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetSharedLibraryApps_Response_SharedAppDefaultTypeInternal _CFamilyGroups_GetSharedLibraryApps_Response_SharedApp_default_instance_;
constexpr CFamilyGroups_GetSharedLibraryApps_Response::CFamilyGroups_GetSharedLibraryApps_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : apps_(){}
struct CFamilyGroups_GetSharedLibraryApps_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_GetSharedLibraryApps_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetSharedLibraryApps_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetSharedLibraryApps_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetSharedLibraryApps_ResponseDefaultTypeInternal _CFamilyGroups_GetSharedLibraryApps_Response_default_instance_;
constexpr CFamilyGroups_SetPreferredLender_Request::CFamilyGroups_SetPreferredLender_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : family_groupid_(PROTOBUF_ULONGLONG(0))
  , lender_steamid_(PROTOBUF_ULONGLONG(0))
  , appid_(0u){}
struct CFamilyGroups_SetPreferredLender_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_SetPreferredLender_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_SetPreferredLender_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_SetPreferredLender_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_SetPreferredLender_RequestDefaultTypeInternal _CFamilyGroups_SetPreferredLender_Request_default_instance_;
constexpr CFamilyGroups_SetPreferredLender_Response::CFamilyGroups_SetPreferredLender_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CFamilyGroups_SetPreferredLender_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_SetPreferredLender_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_SetPreferredLender_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_SetPreferredLender_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_SetPreferredLender_ResponseDefaultTypeInternal _CFamilyGroups_SetPreferredLender_Response_default_instance_;
constexpr CFamilyGroups_GetPreferredLenders_Request::CFamilyGroups_GetPreferredLenders_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : family_groupid_(PROTOBUF_ULONGLONG(0)){}
struct CFamilyGroups_GetPreferredLenders_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_GetPreferredLenders_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetPreferredLenders_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetPreferredLenders_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetPreferredLenders_RequestDefaultTypeInternal _CFamilyGroups_GetPreferredLenders_Request_default_instance_;
constexpr CFamilyGroups_GetPreferredLenders_Response_FamilyMember::CFamilyGroups_GetPreferredLenders_Response_FamilyMember(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : preferred_appids_()
  , steamid_(PROTOBUF_ULONGLONG(0)){}
struct CFamilyGroups_GetPreferredLenders_Response_FamilyMemberDefaultTypeInternal {
  constexpr CFamilyGroups_GetPreferredLenders_Response_FamilyMemberDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetPreferredLenders_Response_FamilyMemberDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetPreferredLenders_Response_FamilyMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetPreferredLenders_Response_FamilyMemberDefaultTypeInternal _CFamilyGroups_GetPreferredLenders_Response_FamilyMember_default_instance_;
constexpr CFamilyGroups_GetPreferredLenders_Response::CFamilyGroups_GetPreferredLenders_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : members_(){}
struct CFamilyGroups_GetPreferredLenders_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_GetPreferredLenders_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetPreferredLenders_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetPreferredLenders_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetPreferredLenders_ResponseDefaultTypeInternal _CFamilyGroups_GetPreferredLenders_Response_default_instance_;
constexpr CFamilyGroups_GetDispersionForFamily_Request::CFamilyGroups_GetDispersionForFamily_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : family_groupid_(PROTOBUF_ULONGLONG(0)){}
struct CFamilyGroups_GetDispersionForFamily_RequestDefaultTypeInternal {
  constexpr CFamilyGroups_GetDispersionForFamily_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetDispersionForFamily_RequestDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetDispersionForFamily_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetDispersionForFamily_RequestDefaultTypeInternal _CFamilyGroups_GetDispersionForFamily_Request_default_instance_;
constexpr CFamilyGroups_FamilyDispersionGraph_Edge::CFamilyGroups_FamilyDispersionGraph_Edge(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : accountid1_(0u)
  , accountid2_(0u)
  , distance_(0){}
struct CFamilyGroups_FamilyDispersionGraph_EdgeDefaultTypeInternal {
  constexpr CFamilyGroups_FamilyDispersionGraph_EdgeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_FamilyDispersionGraph_EdgeDefaultTypeInternal() {}
  union {
    CFamilyGroups_FamilyDispersionGraph_Edge _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_FamilyDispersionGraph_EdgeDefaultTypeInternal _CFamilyGroups_FamilyDispersionGraph_Edge_default_instance_;
constexpr CFamilyGroups_FamilyDispersionGraph::CFamilyGroups_FamilyDispersionGraph(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edges_(){}
struct CFamilyGroups_FamilyDispersionGraphDefaultTypeInternal {
  constexpr CFamilyGroups_FamilyDispersionGraphDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_FamilyDispersionGraphDefaultTypeInternal() {}
  union {
    CFamilyGroups_FamilyDispersionGraph _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_FamilyDispersionGraphDefaultTypeInternal _CFamilyGroups_FamilyDispersionGraph_default_instance_;
constexpr CFamilyGroups_GetDispersionForFamily_Response::CFamilyGroups_GetDispersionForFamily_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : graph_(nullptr)
  , total_dispersion_(0){}
struct CFamilyGroups_GetDispersionForFamily_ResponseDefaultTypeInternal {
  constexpr CFamilyGroups_GetDispersionForFamily_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroups_GetDispersionForFamily_ResponseDefaultTypeInternal() {}
  union {
    CFamilyGroups_GetDispersionForFamily_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroups_GetDispersionForFamily_ResponseDefaultTypeInternal _CFamilyGroups_GetDispersionForFamily_Response_default_instance_;
constexpr CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : member_steamid_(PROTOBUF_ULONGLONG(0))
  , owner_steamid_(PROTOBUF_ULONGLONG(0)){}
struct CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMemberDefaultTypeInternal {
  constexpr CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMemberDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMemberDefaultTypeInternal() {}
  union {
    CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMemberDefaultTypeInternal _CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember_default_instance_;
constexpr CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : playing_members_()
  , appid_(0u){}
struct CFamilyGroupsClient_NotifyRunningApps_Notification_RunningAppDefaultTypeInternal {
  constexpr CFamilyGroupsClient_NotifyRunningApps_Notification_RunningAppDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroupsClient_NotifyRunningApps_Notification_RunningAppDefaultTypeInternal() {}
  union {
    CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroupsClient_NotifyRunningApps_Notification_RunningAppDefaultTypeInternal _CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp_default_instance_;
constexpr CFamilyGroupsClient_NotifyRunningApps_Notification::CFamilyGroupsClient_NotifyRunningApps_Notification(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : running_apps_()
  , family_groupid_(PROTOBUF_ULONGLONG(0)){}
struct CFamilyGroupsClient_NotifyRunningApps_NotificationDefaultTypeInternal {
  constexpr CFamilyGroupsClient_NotifyRunningApps_NotificationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroupsClient_NotifyRunningApps_NotificationDefaultTypeInternal() {}
  union {
    CFamilyGroupsClient_NotifyRunningApps_Notification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroupsClient_NotifyRunningApps_NotificationDefaultTypeInternal _CFamilyGroupsClient_NotifyRunningApps_Notification_default_instance_;
constexpr CFamilyGroupsClient_InviteStatus_Notification::CFamilyGroupsClient_InviteStatus_Notification(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CFamilyGroupsClient_InviteStatus_NotificationDefaultTypeInternal {
  constexpr CFamilyGroupsClient_InviteStatus_NotificationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroupsClient_InviteStatus_NotificationDefaultTypeInternal() {}
  union {
    CFamilyGroupsClient_InviteStatus_Notification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroupsClient_InviteStatus_NotificationDefaultTypeInternal _CFamilyGroupsClient_InviteStatus_Notification_default_instance_;
constexpr CFamilyGroupsClient_GroupChanged_Notification::CFamilyGroupsClient_GroupChanged_Notification(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : family_groupid_(PROTOBUF_ULONGLONG(0)){}
struct CFamilyGroupsClient_GroupChanged_NotificationDefaultTypeInternal {
  constexpr CFamilyGroupsClient_GroupChanged_NotificationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CFamilyGroupsClient_GroupChanged_NotificationDefaultTypeInternal() {}
  union {
    CFamilyGroupsClient_GroupChanged_Notification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CFamilyGroupsClient_GroupChanged_NotificationDefaultTypeInternal _CFamilyGroupsClient_GroupChanged_Notification_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_steammessages_5ffamilygroups_2esteamclient_2eproto[62];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_steammessages_5ffamilygroups_2esteamclient_2eproto[5];
static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* file_level_service_descriptors_steammessages_5ffamilygroups_2esteamclient_2eproto[2];

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_steammessages_5ffamilygroups_2esteamclient_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_CreateFamilyGroup_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_CreateFamilyGroup_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_CreateFamilyGroup_Request, name_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_CreateFamilyGroup_Request, steamid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_CreateFamilyGroup_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_CreateFamilyGroup_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_CreateFamilyGroup_Response, family_groupid_),
  0,
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroup_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroup_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroup_Request, family_groupid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroup_Request, send_running_apps_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::FamilyGroupMember, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::FamilyGroupMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::FamilyGroupMember, steamid_),
  PROTOBUF_FIELD_OFFSET(::FamilyGroupMember, role_),
  PROTOBUF_FIELD_OFFSET(::FamilyGroupMember, time_joined_),
  PROTOBUF_FIELD_OFFSET(::FamilyGroupMember, cooldown_seconds_remaining_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::FamilyGroupPendingInvite, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::FamilyGroupPendingInvite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::FamilyGroupPendingInvite, steamid_),
  PROTOBUF_FIELD_OFFSET(::FamilyGroupPendingInvite, role_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::FamilyGroupFormerMember, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::FamilyGroupFormerMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::FamilyGroupFormerMember, steamid_),
  0,
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroup_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroup_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroup_Response, name_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroup_Response, members_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroup_Response, pending_invites_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroup_Response, free_spots_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroup_Response, country_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroup_Response, slot_cooldown_remaining_seconds_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroup_Response, former_members_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroup_Response, slot_cooldown_overrides_),
  0,
  ~0u,
  ~0u,
  2,
  1,
  3,
  ~0u,
  4,
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroupForUser_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroupForUser_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroupForUser_Request, steamid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroupForUser_Request, include_family_group_response_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::FamilyGroupPendingInviteForUser, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::FamilyGroupPendingInviteForUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::FamilyGroupPendingInviteForUser, family_groupid_),
  PROTOBUF_FIELD_OFFSET(::FamilyGroupPendingInviteForUser, role_),
  PROTOBUF_FIELD_OFFSET(::FamilyGroupPendingInviteForUser, inviter_steamid_),
  0,
  2,
  1,
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroupForUser_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroupForUser_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroupForUser_Response, family_groupid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroupForUser_Response, is_not_member_of_any_group_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroupForUser_Response, latest_time_joined_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroupForUser_Response, latest_joined_family_groupid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroupForUser_Response, pending_group_invites_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroupForUser_Response, role_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroupForUser_Response, cooldown_seconds_remaining_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetFamilyGroupForUser_Response, family_group_),
  1,
  2,
  3,
  4,
  ~0u,
  5,
  6,
  0,
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ModifyFamilyGroupDetails_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ModifyFamilyGroupDetails_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ModifyFamilyGroupDetails_Request, family_groupid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ModifyFamilyGroupDetails_Request, name_),
  1,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ModifyFamilyGroupDetails_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_InviteToFamilyGroup_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_InviteToFamilyGroup_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_InviteToFamilyGroup_Request, family_groupid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_InviteToFamilyGroup_Request, receiver_steamid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_InviteToFamilyGroup_Request, receiver_role_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_InviteToFamilyGroup_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_InviteToFamilyGroup_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_InviteToFamilyGroup_Response, invite_id_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_InviteToFamilyGroup_Response, two_factor_method_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ConfirmInviteToFamilyGroup_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ConfirmInviteToFamilyGroup_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ConfirmInviteToFamilyGroup_Request, family_groupid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ConfirmInviteToFamilyGroup_Request, invite_id_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ConfirmInviteToFamilyGroup_Request, nonce_),
  0,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ConfirmInviteToFamilyGroup_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ResendInvitationToFamilyGroup_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ResendInvitationToFamilyGroup_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ResendInvitationToFamilyGroup_Request, family_groupid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ResendInvitationToFamilyGroup_Request, steamid_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ResendInvitationToFamilyGroup_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_JoinFamilyGroup_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_JoinFamilyGroup_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_JoinFamilyGroup_Request, family_groupid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_JoinFamilyGroup_Request, nonce_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_JoinFamilyGroup_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_JoinFamilyGroup_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_JoinFamilyGroup_Response, two_factor_method_),
  0,
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ConfirmJoinFamilyGroup_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ConfirmJoinFamilyGroup_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ConfirmJoinFamilyGroup_Request, family_groupid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ConfirmJoinFamilyGroup_Request, invite_id_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ConfirmJoinFamilyGroup_Request, nonce_),
  0,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_ConfirmJoinFamilyGroup_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RemoveFromFamilyGroup_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RemoveFromFamilyGroup_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RemoveFromFamilyGroup_Request, family_groupid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RemoveFromFamilyGroup_Request, steamid_to_remove_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RemoveFromFamilyGroup_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_CancelFamilyGroupInvite_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_CancelFamilyGroupInvite_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_CancelFamilyGroupInvite_Request, family_groupid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_CancelFamilyGroupInvite_Request, steamid_to_cancel_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_CancelFamilyGroupInvite_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetUsersSharingDevice_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetUsersSharingDevice_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetUsersSharingDevice_Request, family_groupid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetUsersSharingDevice_Request, client_instance_id_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetUsersSharingDevice_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetUsersSharingDevice_Response, users_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_DeleteFamilyGroup_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_DeleteFamilyGroup_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_DeleteFamilyGroup_Request, family_groupid_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_DeleteFamilyGroup_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPlaytimeSummary_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPlaytimeSummary_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPlaytimeSummary_Request, family_groupid_),
  0,
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_PlaytimeEntry, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_PlaytimeEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_PlaytimeEntry, steamid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_PlaytimeEntry, appid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_PlaytimeEntry, first_played_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_PlaytimeEntry, latest_played_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_PlaytimeEntry, seconds_played_),
  0,
  1,
  2,
  3,
  4,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPlaytimeSummary_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPlaytimeSummary_Response, entries_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RequestPurchase_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RequestPurchase_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RequestPurchase_Request, family_groupid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RequestPurchase_Request, gidshoppingcart_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RequestPurchase_Request, store_country_code_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RequestPurchase_Request, use_account_cart_),
  1,
  2,
  0,
  3,
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RequestPurchase_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RequestPurchase_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RequestPurchase_Response, gidshoppingcart_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RequestPurchase_Response, request_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPurchaseRequests_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPurchaseRequests_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPurchaseRequests_Request, family_groupid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPurchaseRequests_Request, request_ids_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPurchaseRequests_Request, rt_include_completed_since_),
  0,
  ~0u,
  1,
  PROTOBUF_FIELD_OFFSET(::PurchaseRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::PurchaseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PurchaseRequest, requester_steamid_),
  PROTOBUF_FIELD_OFFSET(::PurchaseRequest, gidshoppingcart_),
  PROTOBUF_FIELD_OFFSET(::PurchaseRequest, time_requested_),
  PROTOBUF_FIELD_OFFSET(::PurchaseRequest, time_responded_),
  PROTOBUF_FIELD_OFFSET(::PurchaseRequest, responder_steamid_),
  PROTOBUF_FIELD_OFFSET(::PurchaseRequest, response_action_),
  PROTOBUF_FIELD_OFFSET(::PurchaseRequest, is_completed_),
  PROTOBUF_FIELD_OFFSET(::PurchaseRequest, request_id_),
  PROTOBUF_FIELD_OFFSET(::PurchaseRequest, requested_packageids_),
  PROTOBUF_FIELD_OFFSET(::PurchaseRequest, purchased_packageids_),
  PROTOBUF_FIELD_OFFSET(::PurchaseRequest, requested_bundleids_),
  PROTOBUF_FIELD_OFFSET(::PurchaseRequest, purchased_bundleids_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPurchaseRequests_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPurchaseRequests_Response, requests_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RespondToRequestedPurchase_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RespondToRequestedPurchase_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RespondToRequestedPurchase_Request, family_groupid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RespondToRequestedPurchase_Request, action_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RespondToRequestedPurchase_Request, request_id_),
  0,
  2,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_RespondToRequestedPurchase_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetChangeLog_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetChangeLog_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetChangeLog_Request, family_groupid_),
  0,
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetChangeLog_Response_Change, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetChangeLog_Response_Change, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetChangeLog_Response_Change, timestamp_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetChangeLog_Response_Change, actor_steamid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetChangeLog_Response_Change, type_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetChangeLog_Response_Change, body_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetChangeLog_Response_Change, by_support_),
  1,
  2,
  3,
  0,
  4,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetChangeLog_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetChangeLog_Response, changes_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_SetFamilyCooldownOverrides_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_SetFamilyCooldownOverrides_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_SetFamilyCooldownOverrides_Request, family_groupid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_SetFamilyCooldownOverrides_Request, cooldown_count_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_SetFamilyCooldownOverrides_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Request, family_groupid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Request, include_own_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Request, include_excluded_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Request, language_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Request, max_apps_),
  1,
  2,
  3,
  0,
  4,
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Response_SharedApp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Response_SharedApp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Response_SharedApp, appid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Response_SharedApp, owner_steamids_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Response_SharedApp, name_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Response_SharedApp, sort_as_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Response_SharedApp, capsule_filename_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Response_SharedApp, img_icon_hash_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Response_SharedApp, exclude_reason_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Response_SharedApp, rt_time_acquired_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Response_SharedApp, rt_last_played_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Response_SharedApp, rt_playtime_),
  4,
  ~0u,
  0,
  1,
  2,
  3,
  5,
  7,
  8,
  6,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetSharedLibraryApps_Response, apps_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_SetPreferredLender_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_SetPreferredLender_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_SetPreferredLender_Request, family_groupid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_SetPreferredLender_Request, appid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_SetPreferredLender_Request, lender_steamid_),
  0,
  2,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_SetPreferredLender_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPreferredLenders_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPreferredLenders_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPreferredLenders_Request, family_groupid_),
  0,
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPreferredLenders_Response_FamilyMember, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPreferredLenders_Response_FamilyMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPreferredLenders_Response_FamilyMember, steamid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPreferredLenders_Response_FamilyMember, preferred_appids_),
  0,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPreferredLenders_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetPreferredLenders_Response, members_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetDispersionForFamily_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetDispersionForFamily_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetDispersionForFamily_Request, family_groupid_),
  0,
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_FamilyDispersionGraph_Edge, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_FamilyDispersionGraph_Edge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_FamilyDispersionGraph_Edge, accountid1_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_FamilyDispersionGraph_Edge, accountid2_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_FamilyDispersionGraph_Edge, distance_),
  0,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_FamilyDispersionGraph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_FamilyDispersionGraph, edges_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetDispersionForFamily_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetDispersionForFamily_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetDispersionForFamily_Response, total_dispersion_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroups_GetDispersionForFamily_Response, graph_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember, member_steamid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember, owner_steamid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp, appid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp, playing_members_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CFamilyGroupsClient_NotifyRunningApps_Notification, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroupsClient_NotifyRunningApps_Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroupsClient_NotifyRunningApps_Notification, family_groupid_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroupsClient_NotifyRunningApps_Notification, running_apps_),
  0,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroupsClient_InviteStatus_Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroupsClient_GroupChanged_Notification, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CFamilyGroupsClient_GroupChanged_Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CFamilyGroupsClient_GroupChanged_Notification, family_groupid_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::CFamilyGroups_CreateFamilyGroup_Request)},
  { 9, 15, sizeof(::CFamilyGroups_CreateFamilyGroup_Response)},
  { 16, 23, sizeof(::CFamilyGroups_GetFamilyGroup_Request)},
  { 25, 34, sizeof(::FamilyGroupMember)},
  { 38, 45, sizeof(::FamilyGroupPendingInvite)},
  { 47, 53, sizeof(::FamilyGroupFormerMember)},
  { 54, 67, sizeof(::CFamilyGroups_GetFamilyGroup_Response)},
  { 75, 82, sizeof(::CFamilyGroups_GetFamilyGroupForUser_Request)},
  { 84, 92, sizeof(::FamilyGroupPendingInviteForUser)},
  { 95, 108, sizeof(::CFamilyGroups_GetFamilyGroupForUser_Response)},
  { 116, 123, sizeof(::CFamilyGroups_ModifyFamilyGroupDetails_Request)},
  { 125, -1, sizeof(::CFamilyGroups_ModifyFamilyGroupDetails_Response)},
  { 130, 138, sizeof(::CFamilyGroups_InviteToFamilyGroup_Request)},
  { 141, 148, sizeof(::CFamilyGroups_InviteToFamilyGroup_Response)},
  { 150, 158, sizeof(::CFamilyGroups_ConfirmInviteToFamilyGroup_Request)},
  { 161, -1, sizeof(::CFamilyGroups_ConfirmInviteToFamilyGroup_Response)},
  { 166, 173, sizeof(::CFamilyGroups_ResendInvitationToFamilyGroup_Request)},
  { 175, -1, sizeof(::CFamilyGroups_ResendInvitationToFamilyGroup_Response)},
  { 180, 187, sizeof(::CFamilyGroups_JoinFamilyGroup_Request)},
  { 189, 195, sizeof(::CFamilyGroups_JoinFamilyGroup_Response)},
  { 196, 204, sizeof(::CFamilyGroups_ConfirmJoinFamilyGroup_Request)},
  { 207, -1, sizeof(::CFamilyGroups_ConfirmJoinFamilyGroup_Response)},
  { 212, 219, sizeof(::CFamilyGroups_RemoveFromFamilyGroup_Request)},
  { 221, -1, sizeof(::CFamilyGroups_RemoveFromFamilyGroup_Response)},
  { 226, 233, sizeof(::CFamilyGroups_CancelFamilyGroupInvite_Request)},
  { 235, -1, sizeof(::CFamilyGroups_CancelFamilyGroupInvite_Response)},
  { 240, 247, sizeof(::CFamilyGroups_GetUsersSharingDevice_Request)},
  { 249, -1, sizeof(::CFamilyGroups_GetUsersSharingDevice_Response)},
  { 255, 261, sizeof(::CFamilyGroups_DeleteFamilyGroup_Request)},
  { 262, -1, sizeof(::CFamilyGroups_DeleteFamilyGroup_Response)},
  { 267, 273, sizeof(::CFamilyGroups_GetPlaytimeSummary_Request)},
  { 274, 284, sizeof(::CFamilyGroups_PlaytimeEntry)},
  { 289, -1, sizeof(::CFamilyGroups_GetPlaytimeSummary_Response)},
  { 295, 304, sizeof(::CFamilyGroups_RequestPurchase_Request)},
  { 308, 315, sizeof(::CFamilyGroups_RequestPurchase_Response)},
  { 317, 325, sizeof(::CFamilyGroups_GetPurchaseRequests_Request)},
  { 328, 345, sizeof(::PurchaseRequest)},
  { 357, -1, sizeof(::CFamilyGroups_GetPurchaseRequests_Response)},
  { 363, 371, sizeof(::CFamilyGroups_RespondToRequestedPurchase_Request)},
  { 374, -1, sizeof(::CFamilyGroups_RespondToRequestedPurchase_Response)},
  { 379, 385, sizeof(::CFamilyGroups_GetChangeLog_Request)},
  { 386, 396, sizeof(::CFamilyGroups_GetChangeLog_Response_Change)},
  { 401, -1, sizeof(::CFamilyGroups_GetChangeLog_Response)},
  { 407, 414, sizeof(::CFamilyGroups_SetFamilyCooldownOverrides_Request)},
  { 416, -1, sizeof(::CFamilyGroups_SetFamilyCooldownOverrides_Response)},
  { 421, 431, sizeof(::CFamilyGroups_GetSharedLibraryApps_Request)},
  { 436, 451, sizeof(::CFamilyGroups_GetSharedLibraryApps_Response_SharedApp)},
  { 461, -1, sizeof(::CFamilyGroups_GetSharedLibraryApps_Response)},
  { 467, 475, sizeof(::CFamilyGroups_SetPreferredLender_Request)},
  { 478, -1, sizeof(::CFamilyGroups_SetPreferredLender_Response)},
  { 483, 489, sizeof(::CFamilyGroups_GetPreferredLenders_Request)},
  { 490, 497, sizeof(::CFamilyGroups_GetPreferredLenders_Response_FamilyMember)},
  { 499, -1, sizeof(::CFamilyGroups_GetPreferredLenders_Response)},
  { 505, 511, sizeof(::CFamilyGroups_GetDispersionForFamily_Request)},
  { 512, 520, sizeof(::CFamilyGroups_FamilyDispersionGraph_Edge)},
  { 523, -1, sizeof(::CFamilyGroups_FamilyDispersionGraph)},
  { 529, 536, sizeof(::CFamilyGroups_GetDispersionForFamily_Response)},
  { 538, 545, sizeof(::CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember)},
  { 547, 554, sizeof(::CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp)},
  { 556, 563, sizeof(::CFamilyGroupsClient_NotifyRunningApps_Notification)},
  { 565, -1, sizeof(::CFamilyGroupsClient_InviteStatus_Notification)},
  { 570, 576, sizeof(::CFamilyGroupsClient_GroupChanged_Notification)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_CreateFamilyGroup_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_CreateFamilyGroup_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetFamilyGroup_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_FamilyGroupMember_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_FamilyGroupPendingInvite_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_FamilyGroupFormerMember_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetFamilyGroup_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetFamilyGroupForUser_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_FamilyGroupPendingInviteForUser_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetFamilyGroupForUser_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_ModifyFamilyGroupDetails_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_ModifyFamilyGroupDetails_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_InviteToFamilyGroup_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_InviteToFamilyGroup_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_ConfirmInviteToFamilyGroup_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_ConfirmInviteToFamilyGroup_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_ResendInvitationToFamilyGroup_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_ResendInvitationToFamilyGroup_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_JoinFamilyGroup_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_JoinFamilyGroup_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_ConfirmJoinFamilyGroup_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_ConfirmJoinFamilyGroup_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_RemoveFromFamilyGroup_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_RemoveFromFamilyGroup_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_CancelFamilyGroupInvite_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_CancelFamilyGroupInvite_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetUsersSharingDevice_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetUsersSharingDevice_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_DeleteFamilyGroup_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_DeleteFamilyGroup_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetPlaytimeSummary_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_PlaytimeEntry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetPlaytimeSummary_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_RequestPurchase_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_RequestPurchase_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetPurchaseRequests_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PurchaseRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetPurchaseRequests_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_RespondToRequestedPurchase_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_RespondToRequestedPurchase_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetChangeLog_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetChangeLog_Response_Change_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetChangeLog_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_SetFamilyCooldownOverrides_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_SetFamilyCooldownOverrides_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetSharedLibraryApps_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetSharedLibraryApps_Response_SharedApp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetSharedLibraryApps_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_SetPreferredLender_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_SetPreferredLender_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetPreferredLenders_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetPreferredLenders_Response_FamilyMember_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetPreferredLenders_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetDispersionForFamily_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_FamilyDispersionGraph_Edge_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_FamilyDispersionGraph_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroups_GetDispersionForFamily_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroupsClient_NotifyRunningApps_Notification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroupsClient_InviteStatus_Notification_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CFamilyGroupsClient_GroupChanged_Notification_default_instance_),
};

const char descriptor_table_protodef_steammessages_5ffamilygroups_2esteamclient_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n,steammessages_familygroups.steamclient"
  ".proto\032 google/protobuf/descriptor.proto"
  "\032\030steammessages_base.proto\032,steammessage"
  "s_unified_base.steamclient.proto\"H\n\'CFam"
  "ilyGroups_CreateFamilyGroup_Request\022\014\n\004n"
  "ame\030\001 \001(\t\022\017\n\007steamid\030\002 \001(\006\"B\n(CFamilyGro"
  "ups_CreateFamilyGroup_Response\022\026\n\016family"
  "_groupid\030\001 \001(\004\"Y\n$CFamilyGroups_GetFamil"
  "yGroup_Request\022\026\n\016family_groupid\030\001 \001(\004\022\031"
  "\n\021send_running_apps\030\002 \001(\010\"\225\001\n\021FamilyGrou"
  "pMember\022\017\n\007steamid\030\001 \001(\006\0226\n\004role\030\002 \001(\0162\021"
  ".EFamilyGroupRole:\025EFamilyGroupRole_None"
  "\022\023\n\013time_joined\030\003 \001(\r\022\"\n\032cooldown_second"
  "s_remaining\030\004 \001(\r\"c\n\030FamilyGroupPendingI"
  "nvite\022\017\n\007steamid\030\001 \001(\006\0226\n\004role\030\002 \001(\0162\021.E"
  "FamilyGroupRole:\025EFamilyGroupRole_None\"*"
  "\n\027FamilyGroupFormerMember\022\017\n\007steamid\030\001 \001"
  "(\006\"\257\002\n%CFamilyGroups_GetFamilyGroup_Resp"
  "onse\022\014\n\004name\030\001 \001(\t\022#\n\007members\030\002 \003(\0132\022.Fa"
  "milyGroupMember\0222\n\017pending_invites\030\003 \003(\013"
  "2\031.FamilyGroupPendingInvite\022\022\n\nfree_spot"
  "s\030\004 \001(\r\022\017\n\007country\030\005 \001(\t\022\'\n\037slot_cooldow"
  "n_remaining_seconds\030\006 \001(\r\0220\n\016former_memb"
  "ers\030\007 \003(\0132\030.FamilyGroupFormerMember\022\037\n\027s"
  "lot_cooldown_overrides\030\010 \001(\r\"e\n+CFamilyG"
  "roups_GetFamilyGroupForUser_Request\022\017\n\007s"
  "teamid\030\001 \001(\004\022%\n\035include_family_group_res"
  "ponse\030\002 \001(\010\"\212\001\n\037FamilyGroupPendingInvite"
  "ForUser\022\026\n\016family_groupid\030\001 \001(\004\0226\n\004role\030"
  "\002 \001(\0162\021.EFamilyGroupRole:\025EFamilyGroupRo"
  "le_None\022\027\n\017inviter_steamid\030\003 \001(\006\"\335\002\n,CFa"
  "milyGroups_GetFamilyGroupForUser_Respons"
  "e\022\026\n\016family_groupid\030\001 \001(\004\022\"\n\032is_not_memb"
  "er_of_any_group\030\002 \001(\010\022\032\n\022latest_time_joi"
  "ned\030\003 \001(\r\022$\n\034latest_joined_family_groupi"
  "d\030\004 \001(\004\022\?\n\025pending_group_invites\030\005 \003(\0132 "
  ".FamilyGroupPendingInviteForUser\022\014\n\004role"
  "\030\006 \001(\r\022\"\n\032cooldown_seconds_remaining\030\007 \001"
  "(\r\022<\n\014family_group\030\010 \001(\0132&.CFamilyGroups"
  "_GetFamilyGroup_Response\"V\n.CFamilyGroup"
  "s_ModifyFamilyGroupDetails_Request\022\026\n\016fa"
  "mily_groupid\030\001 \001(\004\022\014\n\004name\030\002 \001(\t\"1\n/CFam"
  "ilyGroups_ModifyFamilyGroupDetails_Respo"
  "nse\"\236\001\n)CFamilyGroups_InviteToFamilyGrou"
  "p_Request\022\026\n\016family_groupid\030\001 \001(\004\022\030\n\020rec"
  "eiver_steamid\030\002 \001(\006\022\?\n\rreceiver_role\030\003 \001"
  "(\0162\021.EFamilyGroupRole:\025EFamilyGroupRole_"
  "None\"\233\001\n*CFamilyGroups_InviteToFamilyGro"
  "up_Response\022\021\n\tinvite_id\030\001 \001(\004\022Z\n\021two_fa"
  "ctor_method\030\002 \001(\0162\035.EFamilyGroupsTwoFact"
  "orMethod: EFamilyGroupsTwoFactorMethodNo"
  "ne\"l\n0CFamilyGroups_ConfirmInviteToFamil"
  "yGroup_Request\022\026\n\016family_groupid\030\001 \001(\004\022\021"
  "\n\tinvite_id\030\002 \001(\004\022\r\n\005nonce\030\003 \001(\004\"3\n1CFam"
  "ilyGroups_ConfirmInviteToFamilyGroup_Res"
  "ponse\"^\n3CFamilyGroups_ResendInvitationT"
  "oFamilyGroup_Request\022\026\n\016family_groupid\030\001"
  " \001(\004\022\017\n\007steamid\030\002 \001(\004\"6\n4CFamilyGroups_R"
  "esendInvitationToFamilyGroup_Response\"N\n"
  "%CFamilyGroups_JoinFamilyGroup_Request\022\026"
  "\n\016family_groupid\030\001 \001(\004\022\r\n\005nonce\030\002 \001(\004\"\204\001"
  "\n&CFamilyGroups_JoinFamilyGroup_Response"
  "\022Z\n\021two_factor_method\030\002 \001(\0162\035.EFamilyGro"
  "upsTwoFactorMethod: EFamilyGroupsTwoFact"
  "orMethodNone\"h\n,CFamilyGroups_ConfirmJoi"
  "nFamilyGroup_Request\022\026\n\016family_groupid\030\001"
  " \001(\004\022\021\n\tinvite_id\030\002 \001(\004\022\r\n\005nonce\030\003 \001(\004\"/"
  "\n-CFamilyGroups_ConfirmJoinFamilyGroup_R"
  "esponse\"`\n+CFamilyGroups_RemoveFromFamil"
  "yGroup_Request\022\026\n\016family_groupid\030\001 \001(\004\022\031"
  "\n\021steamid_to_remove\030\002 \001(\006\".\n,CFamilyGrou"
  "ps_RemoveFromFamilyGroup_Response\"b\n-CFa"
  "milyGroups_CancelFamilyGroupInvite_Reque"
  "st\022\026\n\016family_groupid\030\001 \001(\004\022\031\n\021steamid_to"
  "_cancel\030\002 \001(\006\"0\n.CFamilyGroups_CancelFam"
  "ilyGroupInvite_Response\"a\n+CFamilyGroups"
  "_GetUsersSharingDevice_Request\022\026\n\016family"
  "_groupid\030\001 \001(\004\022\032\n\022client_instance_id\030\002 \001"
  "(\004\"=\n,CFamilyGroups_GetUsersSharingDevic"
  "e_Response\022\r\n\005users\030\001 \003(\006\"A\n\'CFamilyGrou"
  "ps_DeleteFamilyGroup_Request\022\026\n\016family_g"
  "roupid\030\001 \001(\004\"*\n(CFamilyGroups_DeleteFami"
  "lyGroup_Response\"B\n(CFamilyGroups_GetPla"
  "ytimeSummary_Request\022\026\n\016family_groupid\030\001"
  " \001(\006\"\202\001\n\033CFamilyGroups_PlaytimeEntry\022\017\n\007"
  "steamid\030\001 \001(\006\022\r\n\005appid\030\002 \001(\r\022\024\n\014first_pl"
  "ayed\030\003 \001(\r\022\025\n\rlatest_played\030\004 \001(\r\022\026\n\016sec"
  "onds_played\030\005 \001(\r\"Z\n)CFamilyGroups_GetPl"
  "aytimeSummary_Response\022-\n\007entries\030\001 \003(\0132"
  "\034.CFamilyGroups_PlaytimeEntry\"\216\001\n%CFamil"
  "yGroups_RequestPurchase_Request\022\026\n\016famil"
  "y_groupid\030\001 \001(\004\022\027\n\017gidshoppingcart\030\002 \001(\004"
  "\022\032\n\022store_country_code\030\003 \001(\t\022\030\n\020use_acco"
  "unt_cart\030\004 \001(\010\"U\n&CFamilyGroups_RequestP"
  "urchase_Response\022\027\n\017gidshoppingcart\030\001 \001("
  "\004\022\022\n\nrequest_id\030\002 \001(\004\"|\n)CFamilyGroups_G"
  "etPurchaseRequests_Request\022\026\n\016family_gro"
  "upid\030\001 \001(\004\022\023\n\013request_ids\030\003 \003(\004\022\"\n\032rt_in"
  "clude_completed_since\030\004 \001(\r\"\377\002\n\017Purchase"
  "Request\022\031\n\021requester_steamid\030\001 \001(\006\022\027\n\017gi"
  "dshoppingcart\030\002 \001(\004\022\026\n\016time_requested\030\003 "
  "\001(\r\022\026\n\016time_responded\030\004 \001(\r\022\031\n\021responder"
  "_steamid\030\005 \001(\006\022M\n\017response_action\030\006 \001(\0162"
  "\027.EPurchaseRequestAction:\033EPurchaseReque"
  "stAction_None\022\024\n\014is_completed\030\007 \001(\010\022\022\n\nr"
  "equest_id\030\010 \001(\004\022\034\n\024requested_packageids\030"
  "\t \003(\r\022\034\n\024purchased_packageids\030\n \003(\r\022\033\n\023r"
  "equested_bundleids\030\013 \003(\r\022\033\n\023purchased_bu"
  "ndleids\030\014 \003(\r\"P\n*CFamilyGroups_GetPurcha"
  "seRequests_Response\022\"\n\010requests\030\001 \003(\0132\020."
  "PurchaseRequest\"\244\001\n0CFamilyGroups_Respon"
  "dToRequestedPurchase_Request\022\026\n\016family_g"
  "roupid\030\001 \001(\004\022D\n\006action\030\003 \001(\0162\027.EPurchase"
  "RequestAction:\033EPurchaseRequestAction_No"
  "ne\022\022\n\nrequest_id\030\004 \001(\004\"3\n1CFamilyGroups_"
  "RespondToRequestedPurchase_Response\"<\n\"C"
  "FamilyGroups_GetChangeLog_Request\022\026\n\016fam"
  "ily_groupid\030\001 \001(\004\"\367\001\n#CFamilyGroups_GetC"
  "hangeLog_Response\022<\n\007changes\030\001 \003(\0132+.CFa"
  "milyGroups_GetChangeLog_Response.Change\032"
  "\221\001\n\006Change\022\021\n\ttimestamp\030\001 \001(\006\022\025\n\ractor_s"
  "teamid\030\002 \001(\006\022;\n\004type\030\003 \001(\0162\032.EFamilyGrou"
  "pChangeLogType:\021InvalidChangeType\022\014\n\004bod"
  "y\030\004 \001(\t\022\022\n\nby_support\030\005 \001(\010\"b\n0CFamilyGr"
  "oups_SetFamilyCooldownOverrides_Request\022"
  "\026\n\016family_groupid\030\001 \001(\004\022\026\n\016cooldown_coun"
  "t\030\002 \001(\r\"3\n1CFamilyGroups_SetFamilyCooldo"
  "wnOverrides_Response\"\227\001\n*CFamilyGroups_G"
  "etSharedLibraryApps_Request\022\026\n\016family_gr"
  "oupid\030\001 \001(\006\022\023\n\013include_own\030\002 \001(\010\022\030\n\020incl"
  "ude_excluded\030\003 \001(\010\022\020\n\010language\030\005 \001(\t\022\020\n\010"
  "max_apps\030\006 \001(\r\"\216\003\n+CFamilyGroups_GetShar"
  "edLibraryApps_Response\022D\n\004apps\030\001 \003(\01326.C"
  "FamilyGroups_GetSharedLibraryApps_Respon"
  "se.SharedApp\032\230\002\n\tSharedApp\022\r\n\005appid\030\001 \001("
  "\r\022\026\n\016owner_steamids\030\002 \003(\006\022\014\n\004name\030\006 \001(\t\022"
  "\017\n\007sort_as\030\007 \001(\t\022\030\n\020capsule_filename\030\010 \001"
  "(\t\022\025\n\rimg_icon_hash\030\t \001(\t\022M\n\016exclude_rea"
  "son\030\n \001(\0162\034.ESharedLibraryExcludeReason:"
  "\027ESharedLibrary_Included\022\030\n\020rt_time_acqu"
  "ired\030\013 \001(\r\022\026\n\016rt_last_played\030\014 \001(\r\022\023\n\013rt"
  "_playtime\030\r \001(\r\"i\n(CFamilyGroups_SetPref"
  "erredLender_Request\022\026\n\016family_groupid\030\001 "
  "\001(\004\022\r\n\005appid\030\002 \001(\r\022\026\n\016lender_steamid\030\003 \001"
  "(\006\"+\n)CFamilyGroups_SetPreferredLender_R"
  "esponse\"C\n)CFamilyGroups_GetPreferredLen"
  "ders_Request\022\026\n\016family_groupid\030\001 \001(\004\"\262\001\n"
  "*CFamilyGroups_GetPreferredLenders_Respo"
  "nse\022I\n\007members\030\001 \003(\01328.CFamilyGroups_Get"
  "PreferredLenders_Response.FamilyMember\0329"
  "\n\014FamilyMember\022\017\n\007steamid\030\001 \001(\006\022\030\n\020prefe"
  "rred_appids\030\002 \003(\r\"F\n,CFamilyGroups_GetDi"
  "spersionForFamily_Request\022\026\n\016family_grou"
  "pid\030\001 \001(\004\"\241\001\n#CFamilyGroups_FamilyDisper"
  "sionGraph\0228\n\005edges\030\001 \003(\0132).CFamilyGroups"
  "_FamilyDispersionGraph.Edge\032@\n\004Edge\022\022\n\na"
  "ccountid1\030\001 \001(\r\022\022\n\naccountid2\030\002 \001(\r\022\020\n\010d"
  "istance\030\003 \001(\001\"~\n-CFamilyGroups_GetDisper"
  "sionForFamily_Response\022\030\n\020total_dispersi"
  "on\030\001 \001(\001\0223\n\005graph\030\002 \001(\0132$.CFamilyGroups_"
  "FamilyDispersionGraph\"\333\002\n2CFamilyGroupsC"
  "lient_NotifyRunningApps_Notification\022\026\n\016"
  "family_groupid\030\001 \001(\004\022T\n\014running_apps\030\002 \003"
  "(\0132>.CFamilyGroupsClient_NotifyRunningAp"
  "ps_Notification.RunningApp\032>\n\rPlayingMem"
  "ber\022\026\n\016member_steamid\030\001 \001(\006\022\025\n\rowner_ste"
  "amid\030\002 \001(\006\032w\n\nRunningApp\022\r\n\005appid\030\001 \001(\r\022"
  "Z\n\017playing_members\030\003 \003(\0132A.CFamilyGroups"
  "Client_NotifyRunningApps_Notification.Pl"
  "ayingMember\"/\n-CFamilyGroupsClient_Invit"
  "eStatus_Notification\"G\n-CFamilyGroupsCli"
  "ent_GroupChanged_Notification\022\026\n\016family_"
  "groupid\030\001 \001(\004*\177\n\020EFamilyGroupRole\022\031\n\025EFa"
  "milyGroupRole_None\020\000\022\032\n\026EFamilyGroupRole"
  "_Adult\020\001\022\032\n\026EFamilyGroupRole_Child\020\002\022\030\n\024"
  "EFamilyGroupRole_MAX\020\003*\223\001\n\034EFamilyGroups"
  "TwoFactorMethod\022$\n EFamilyGroupsTwoFacto"
  "rMethodNone\020\000\022&\n\"EFamilyGroupsTwoFactorM"
  "ethodMobile\020\001\022%\n!EFamilyGroupsTwoFactorM"
  "ethodEmail\020\002*\354\001\n\026EPurchaseRequestAction\022"
  "\037\n\033EPurchaseRequestAction_None\020\000\022\"\n\036EPur"
  "chaseRequestAction_Decline\020\001\022$\n EPurchas"
  "eRequestAction_Purchased\020\002\022$\n EPurchaseR"
  "equestAction_Abandoned\020\003\022!\n\035EPurchaseReq"
  "uestAction_Cancel\020\004\022\036\n\032EPurchaseRequestA"
  "ction_MAX\020\005*\361\004\n\031EFamilyGroupChangeLogTyp"
  "e\022\025\n\021InvalidChangeType\020\000\022\026\n\022FamilyGroupC"
  "reated\020\001\022\027\n\023FamilyGroupModified\020\002\022\026\n\022Fam"
  "ilyGroupDeleted\020\003\022\022\n\016AccountInvited\020\004\022\033\n"
  "\027InviteDeniedByGroupSize\020\005\022\025\n\021JoinedFami"
  "lyGroup\020\006\022\036\n\032JoinDeniedByRegionMismatch\020"
  "\007\022 \n\034JoinDeniedByMissingIpAddress\020\010\022\036\n\032J"
  "oinDeniedByFamilyCooldown\020\t\022\034\n\030JoinDenie"
  "dByUserCooldown\020\n\022\032\n\026JoinDeniedByOtherGr"
  "oup\020\013\022\022\n\016AccountRemoved\020\014\022\022\n\016InviteCance"
  "led\020\r\022\025\n\021PurchaseRequested\020\016\022\033\n\027Parental"
  "SettingsEnabled\020\017\022\034\n\030ParentalSettingsDis"
  "abled\020\020\022\033\n\027ParentalSettingsChanged\020\021\022\"\n\036"
  "FamilyCooldownOverridesChanged\020\022\022\033\n\027Purc"
  "haseRequestCanceled\020\023\022\033\n\027PurchaseRequest"
  "Approved\020\024\022\033\n\027PurchaseRequestDeclined\020\025*"
  "\224\013\n\033ESharedLibraryExcludeReason\022\033\n\027EShar"
  "edLibrary_Included\020\000\022(\n$ESharedLibrary_A"
  "ppExcluded_ByPartner\020\001\022\"\n\036ESharedLibrary"
  "_LicenseExcluded\020\002\022\033\n\027ESharedLibrary_Fre"
  "eGame\020\003\022!\n\035ESharedLibrary_LicensePrivate"
  "\020\004\022+\n\'ESharedLibrary_AppExcluded_WrongAp"
  "pType\020\006\022/\n+ESharedLibrary_AppExcluded_No"
  "nrefundableDLC\020\007\022,\n(ESharedLibrary_AppEx"
  "cluded_UnreleasedApp\020\010\0220\n,ESharedLibrary"
  "_AppExcluded_ParentAppExcluded\020\t\022,\n(ESha"
  "redLibrary_PackageExcluded_ByPartner\020\n\022*"
  "\n&ESharedLibrary_PackageExcluded_Special"
  "\020\013\022&\n\"ESharedLibrary_PackageExcluded_Dev"
  "\020\014\022.\n*ESharedLibrary_PackageExcluded_Fre"
  "eWeekend\020\r\0220\n,ESharedLibrary_PackageExcl"
  "uded_FreePromotion\020\016\022*\n&ESharedLibrary_P"
  "ackageExcluded_Invalid\020\017\0223\n/ESharedLibra"
  "ry_PackageExcluded_RecurringLicense\020\020\0223\n"
  "/ESharedLibrary_PackageExcluded_WrongLic"
  "enseType\020\021\022,\n(ESharedLibrary_PackageExcl"
  "uded_MasterSub\020\022\0222\n.ESharedLibrary_Packa"
  "geExcluded_NoShareableApps\020\023\0223\n/ESharedL"
  "ibrary_LicenseExcluded_PaymentMasterSub\020"
  "\024\0225\n1ESharedLibrary_LicenseExcluded_Paym"
  "entFamilyGroup\020\025\022:\n6ESharedLibrary_Licen"
  "seExcluded_PaymentAuthorizedDevice\020\026\0223\n/"
  "ESharedLibrary_LicenseExcluded_PaymentAu"
  "toGrant\020\027\022.\n*ESharedLibrary_LicenseExclu"
  "ded_FlagPending\020\030\0224\n0ESharedLibrary_Lice"
  "nseExcluded_FlagPendingRefund\020\031\022/\n+EShar"
  "edLibrary_LicenseExcluded_FlagBorrowed\020\032"
  "\0220\n,ESharedLibrary_LicenseExcluded_FlagA"
  "utoGrant\020\033\0221\n-ESharedLibrary_LicenseExcl"
  "uded_FlagTimedTrial\020\034\022*\n&ESharedLibrary_"
  "LicenseExcluded_FreeSub\020\035\022+\n\'ESharedLibr"
  "ary_LicenseExcluded_Inactive\020\0362\363\024\n\014Famil"
  "yGroups\022h\n\021CreateFamilyGroup\022(.CFamilyGr"
  "oups_CreateFamilyGroup_Request\032).CFamily"
  "Groups_CreateFamilyGroup_Response\022_\n\016Get"
  "FamilyGroup\022%.CFamilyGroups_GetFamilyGro"
  "up_Request\032&.CFamilyGroups_GetFamilyGrou"
  "p_Response\022t\n\025GetFamilyGroupForUser\022,.CF"
  "amilyGroups_GetFamilyGroupForUser_Reques"
  "t\032-.CFamilyGroups_GetFamilyGroupForUser_"
  "Response\022}\n\030ModifyFamilyGroupDetails\022/.C"
  "FamilyGroups_ModifyFamilyGroupDetails_Re"
  "quest\0320.CFamilyGroups_ModifyFamilyGroupD"
  "etails_Response\022n\n\023InviteToFamilyGroup\022*"
  ".CFamilyGroups_InviteToFamilyGroup_Reque"
  "st\032+.CFamilyGroups_InviteToFamilyGroup_R"
  "esponse\022\203\001\n\032ConfirmInviteToFamilyGroup\0221"
  ".CFamilyGroups_ConfirmInviteToFamilyGrou"
  "p_Request\0322.CFamilyGroups_ConfirmInviteT"
  "oFamilyGroup_Response\022\214\001\n\035ResendInvitati"
  "onToFamilyGroup\0224.CFamilyGroups_ResendIn"
  "vitationToFamilyGroup_Request\0325.CFamilyG"
  "roups_ResendInvitationToFamilyGroup_Resp"
  "onse\022b\n\017JoinFamilyGroup\022&.CFamilyGroups_"
  "JoinFamilyGroup_Request\032\'.CFamilyGroups_"
  "JoinFamilyGroup_Response\022w\n\026ConfirmJoinF"
  "amilyGroup\022-.CFamilyGroups_ConfirmJoinFa"
  "milyGroup_Request\032..CFamilyGroups_Confir"
  "mJoinFamilyGroup_Response\022t\n\025RemoveFromF"
  "amilyGroup\022,.CFamilyGroups_RemoveFromFam"
  "ilyGroup_Request\032-.CFamilyGroups_RemoveF"
  "romFamilyGroup_Response\022z\n\027CancelFamilyG"
  "roupInvite\022..CFamilyGroups_CancelFamilyG"
  "roupInvite_Request\032/.CFamilyGroups_Cance"
  "lFamilyGroupInvite_Response\022t\n\025GetUsersS"
  "haringDevice\022,.CFamilyGroups_GetUsersSha"
  "ringDevice_Request\032-.CFamilyGroups_GetUs"
  "ersSharingDevice_Response\022h\n\021DeleteFamil"
  "yGroup\022(.CFamilyGroups_DeleteFamilyGroup"
  "_Request\032).CFamilyGroups_DeleteFamilyGro"
  "up_Response\022k\n\022GetPlaytimeSummary\022).CFam"
  "ilyGroups_GetPlaytimeSummary_Request\032*.C"
  "FamilyGroups_GetPlaytimeSummary_Response"
  "\022b\n\017RequestPurchase\022&.CFamilyGroups_Requ"
  "estPurchase_Request\032\'.CFamilyGroups_Requ"
  "estPurchase_Response\022n\n\023GetPurchaseReque"
  "sts\022*.CFamilyGroups_GetPurchaseRequests_"
  "Request\032+.CFamilyGroups_GetPurchaseReque"
  "sts_Response\022\203\001\n\032RespondToRequestedPurch"
  "ase\0221.CFamilyGroups_RespondToRequestedPu"
  "rchase_Request\0322.CFamilyGroups_RespondTo"
  "RequestedPurchase_Response\022Y\n\014GetChangeL"
  "og\022#.CFamilyGroups_GetChangeLog_Request\032"
  "$.CFamilyGroups_GetChangeLog_Response\022\203\001"
  "\n\032SetFamilyCooldownOverrides\0221.CFamilyGr"
  "oups_SetFamilyCooldownOverrides_Request\032"
  "2.CFamilyGroups_SetFamilyCooldownOverrid"
  "es_Response\022q\n\024GetSharedLibraryApps\022+.CF"
  "amilyGroups_GetSharedLibraryApps_Request"
  "\032,.CFamilyGroups_GetSharedLibraryApps_Re"
  "sponse\022k\n\022SetPreferredLender\022).CFamilyGr"
  "oups_SetPreferredLender_Request\032*.CFamil"
  "yGroups_SetPreferredLender_Response\022n\n\023G"
  "etPreferredLenders\022*.CFamilyGroups_GetPr"
  "eferredLenders_Request\032+.CFamilyGroups_G"
  "etPreferredLenders_Response\022w\n\026GetDisper"
  "sionForFamily\022-.CFamilyGroups_GetDispers"
  "ionForFamily_Request\032..CFamilyGroups_Get"
  "DispersionForFamily_Response2\227\002\n\022FamilyG"
  "roupsClient\022U\n\021NotifyRunningApps\0223.CFami"
  "lyGroupsClient_NotifyRunningApps_Notific"
  "ation\032\013.NoResponse\022Q\n\022NotifyInviteStatus"
  "\022..CFamilyGroupsClient_InviteStatus_Noti"
  "fication\032\013.NoResponse\022Q\n\022NotifyGroupChan"
  "ged\022..CFamilyGroupsClient_GroupChanged_N"
  "otification\032\013.NoResponse\032\004\300\265\030\002B\035\200\001\001\252\002\027Op"
  "enSteamworks.Protobuf"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_steammessages_5ffamilygroups_2esteamclient_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
  &::descriptor_table_steammessages_5fbase_2eproto,
  &::descriptor_table_steammessages_5funified_5fbase_2esteamclient_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_steammessages_5ffamilygroups_2esteamclient_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_steammessages_5ffamilygroups_2esteamclient_2eproto = {
  false, false, 12461, descriptor_table_protodef_steammessages_5ffamilygroups_2esteamclient_2eproto, "steammessages_familygroups.steamclient.proto", 
  &descriptor_table_steammessages_5ffamilygroups_2esteamclient_2eproto_once, descriptor_table_steammessages_5ffamilygroups_2esteamclient_2eproto_deps, 3, 62,
  schemas, file_default_instances, TableStruct_steammessages_5ffamilygroups_2esteamclient_2eproto::offsets,
  file_level_metadata_steammessages_5ffamilygroups_2esteamclient_2eproto, file_level_enum_descriptors_steammessages_5ffamilygroups_2esteamclient_2eproto, file_level_service_descriptors_steammessages_5ffamilygroups_2esteamclient_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_steammessages_5ffamilygroups_2esteamclient_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_steammessages_5ffamilygroups_2esteamclient_2eproto);
  return descriptor_table_steammessages_5ffamilygroups_2esteamclient_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_steammessages_5ffamilygroups_2esteamclient_2eproto(&descriptor_table_steammessages_5ffamilygroups_2esteamclient_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EFamilyGroupRole_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_steammessages_5ffamilygroups_2esteamclient_2eproto);
  return file_level_enum_descriptors_steammessages_5ffamilygroups_2esteamclient_2eproto[0];
}
bool EFamilyGroupRole_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EFamilyGroupsTwoFactorMethod_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_steammessages_5ffamilygroups_2esteamclient_2eproto);
  return file_level_enum_descriptors_steammessages_5ffamilygroups_2esteamclient_2eproto[1];
}
bool EFamilyGroupsTwoFactorMethod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EPurchaseRequestAction_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_steammessages_5ffamilygroups_2esteamclient_2eproto);
  return file_level_enum_descriptors_steammessages_5ffamilygroups_2esteamclient_2eproto[2];
}
bool EPurchaseRequestAction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EFamilyGroupChangeLogType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_steammessages_5ffamilygroups_2esteamclient_2eproto);
  return file_level_enum_descriptors_steammessages_5ffamilygroups_2esteamclient_2eproto[3];
}
bool EFamilyGroupChangeLogType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ESharedLibraryExcludeReason_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_steammessages_5ffamilygroups_2esteamclient_2eproto);
  return file_level_enum_descriptors_steammessages_5ffamilygroups_2esteamclient_2eproto[4];
}
bool ESharedLibraryExcludeReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class CFamilyGroups_CreateFamilyGroup_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_CreateFamilyGroup_Request>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CFamilyGroups_CreateFamilyGroup_Request::CFamilyGroups_CreateFamilyGroup_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_CreateFamilyGroup_Request)
}
CFamilyGroups_CreateFamilyGroup_Request::CFamilyGroups_CreateFamilyGroup_Request(const CFamilyGroups_CreateFamilyGroup_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_name()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_CreateFamilyGroup_Request)
}

void CFamilyGroups_CreateFamilyGroup_Request::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
steamid_ = PROTOBUF_ULONGLONG(0);
}

CFamilyGroups_CreateFamilyGroup_Request::~CFamilyGroups_CreateFamilyGroup_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_CreateFamilyGroup_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_CreateFamilyGroup_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CFamilyGroups_CreateFamilyGroup_Request::ArenaDtor(void* object) {
  CFamilyGroups_CreateFamilyGroup_Request* _this = reinterpret_cast< CFamilyGroups_CreateFamilyGroup_Request* >(object);
  (void)_this;
}
void CFamilyGroups_CreateFamilyGroup_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_CreateFamilyGroup_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_CreateFamilyGroup_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_CreateFamilyGroup_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmpty();
  }
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_CreateFamilyGroup_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CFamilyGroups_CreateFamilyGroup_Request.name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed64 steamid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_steamid(&has_bits);
          steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_CreateFamilyGroup_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_CreateFamilyGroup_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CFamilyGroups_CreateFamilyGroup_Request.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional fixed64 steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(2, this->_internal_steamid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_CreateFamilyGroup_Request)
  return target;
}

size_t CFamilyGroups_CreateFamilyGroup_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_CreateFamilyGroup_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional fixed64 steamid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_CreateFamilyGroup_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_CreateFamilyGroup_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_CreateFamilyGroup_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_CreateFamilyGroup_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_CreateFamilyGroup_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_CreateFamilyGroup_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_CreateFamilyGroup_Request::MergeFrom(const CFamilyGroups_CreateFamilyGroup_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_CreateFamilyGroup_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_ = from.steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_CreateFamilyGroup_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_CreateFamilyGroup_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_CreateFamilyGroup_Request::CopyFrom(const CFamilyGroups_CreateFamilyGroup_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_CreateFamilyGroup_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_CreateFamilyGroup_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_CreateFamilyGroup_Request::InternalSwap(CFamilyGroups_CreateFamilyGroup_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(steamid_, other->steamid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_CreateFamilyGroup_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_CreateFamilyGroup_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_CreateFamilyGroup_Response>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CFamilyGroups_CreateFamilyGroup_Response::CFamilyGroups_CreateFamilyGroup_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_CreateFamilyGroup_Response)
}
CFamilyGroups_CreateFamilyGroup_Response::CFamilyGroups_CreateFamilyGroup_Response(const CFamilyGroups_CreateFamilyGroup_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  family_groupid_ = from.family_groupid_;
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_CreateFamilyGroup_Response)
}

void CFamilyGroups_CreateFamilyGroup_Response::SharedCtor() {
family_groupid_ = PROTOBUF_ULONGLONG(0);
}

CFamilyGroups_CreateFamilyGroup_Response::~CFamilyGroups_CreateFamilyGroup_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_CreateFamilyGroup_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_CreateFamilyGroup_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_CreateFamilyGroup_Response::ArenaDtor(void* object) {
  CFamilyGroups_CreateFamilyGroup_Response* _this = reinterpret_cast< CFamilyGroups_CreateFamilyGroup_Response* >(object);
  (void)_this;
}
void CFamilyGroups_CreateFamilyGroup_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_CreateFamilyGroup_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_CreateFamilyGroup_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_CreateFamilyGroup_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  family_groupid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_CreateFamilyGroup_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_CreateFamilyGroup_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_CreateFamilyGroup_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_CreateFamilyGroup_Response)
  return target;
}

size_t CFamilyGroups_CreateFamilyGroup_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_CreateFamilyGroup_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 family_groupid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_family_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_CreateFamilyGroup_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_CreateFamilyGroup_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_CreateFamilyGroup_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_CreateFamilyGroup_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_CreateFamilyGroup_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_CreateFamilyGroup_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_CreateFamilyGroup_Response::MergeFrom(const CFamilyGroups_CreateFamilyGroup_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_CreateFamilyGroup_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_family_groupid()) {
    _internal_set_family_groupid(from._internal_family_groupid());
  }
}

void CFamilyGroups_CreateFamilyGroup_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_CreateFamilyGroup_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_CreateFamilyGroup_Response::CopyFrom(const CFamilyGroups_CreateFamilyGroup_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_CreateFamilyGroup_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_CreateFamilyGroup_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_CreateFamilyGroup_Response::InternalSwap(CFamilyGroups_CreateFamilyGroup_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(family_groupid_, other->family_groupid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_CreateFamilyGroup_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetFamilyGroup_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_GetFamilyGroup_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_send_running_apps(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CFamilyGroups_GetFamilyGroup_Request::CFamilyGroups_GetFamilyGroup_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetFamilyGroup_Request)
}
CFamilyGroups_GetFamilyGroup_Request::CFamilyGroups_GetFamilyGroup_Request(const CFamilyGroups_GetFamilyGroup_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&family_groupid_, &from.family_groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&send_running_apps_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(send_running_apps_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetFamilyGroup_Request)
}

void CFamilyGroups_GetFamilyGroup_Request::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&family_groupid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&send_running_apps_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(send_running_apps_));
}

CFamilyGroups_GetFamilyGroup_Request::~CFamilyGroups_GetFamilyGroup_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetFamilyGroup_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetFamilyGroup_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_GetFamilyGroup_Request::ArenaDtor(void* object) {
  CFamilyGroups_GetFamilyGroup_Request* _this = reinterpret_cast< CFamilyGroups_GetFamilyGroup_Request* >(object);
  (void)_this;
}
void CFamilyGroups_GetFamilyGroup_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetFamilyGroup_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetFamilyGroup_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetFamilyGroup_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&family_groupid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&send_running_apps_) -
        reinterpret_cast<char*>(&family_groupid_)) + sizeof(send_running_apps_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetFamilyGroup_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool send_running_apps = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_send_running_apps(&has_bits);
          send_running_apps_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetFamilyGroup_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetFamilyGroup_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  // optional bool send_running_apps = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_send_running_apps(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetFamilyGroup_Request)
  return target;
}

size_t CFamilyGroups_GetFamilyGroup_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetFamilyGroup_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 family_groupid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_family_groupid());
    }

    // optional bool send_running_apps = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetFamilyGroup_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetFamilyGroup_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetFamilyGroup_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetFamilyGroup_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetFamilyGroup_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetFamilyGroup_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetFamilyGroup_Request::MergeFrom(const CFamilyGroups_GetFamilyGroup_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetFamilyGroup_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      family_groupid_ = from.family_groupid_;
    }
    if (cached_has_bits & 0x00000002u) {
      send_running_apps_ = from.send_running_apps_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_GetFamilyGroup_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetFamilyGroup_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetFamilyGroup_Request::CopyFrom(const CFamilyGroups_GetFamilyGroup_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetFamilyGroup_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetFamilyGroup_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetFamilyGroup_Request::InternalSwap(CFamilyGroups_GetFamilyGroup_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_GetFamilyGroup_Request, send_running_apps_)
      + sizeof(CFamilyGroups_GetFamilyGroup_Request::send_running_apps_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_GetFamilyGroup_Request, family_groupid_)>(
          reinterpret_cast<char*>(&family_groupid_),
          reinterpret_cast<char*>(&other->family_groupid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetFamilyGroup_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FamilyGroupMember::_Internal {
 public:
  using HasBits = decltype(std::declval<FamilyGroupMember>()._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_role(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_time_joined(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_cooldown_seconds_remaining(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

FamilyGroupMember::FamilyGroupMember(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:FamilyGroupMember)
}
FamilyGroupMember::FamilyGroupMember(const FamilyGroupMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&cooldown_seconds_remaining_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(cooldown_seconds_remaining_));
  // @@protoc_insertion_point(copy_constructor:FamilyGroupMember)
}

void FamilyGroupMember::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&steamid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&cooldown_seconds_remaining_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(cooldown_seconds_remaining_));
}

FamilyGroupMember::~FamilyGroupMember() {
  // @@protoc_insertion_point(destructor:FamilyGroupMember)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FamilyGroupMember::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FamilyGroupMember::ArenaDtor(void* object) {
  FamilyGroupMember* _this = reinterpret_cast< FamilyGroupMember* >(object);
  (void)_this;
}
void FamilyGroupMember::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FamilyGroupMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FamilyGroupMember::Clear() {
// @@protoc_insertion_point(message_clear_start:FamilyGroupMember)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cooldown_seconds_remaining_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(cooldown_seconds_remaining_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FamilyGroupMember::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 steamid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_steamid(&has_bits);
          steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional .EFamilyGroupRole role = 2 [default = EFamilyGroupRole_None];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EFamilyGroupRole_IsValid(val))) {
            _internal_set_role(static_cast<::EFamilyGroupRole>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional uint32 time_joined = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_time_joined(&has_bits);
          time_joined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 cooldown_seconds_remaining = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_cooldown_seconds_remaining(&has_bits);
          cooldown_seconds_remaining_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FamilyGroupMember::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FamilyGroupMember)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_steamid(), target);
  }

  // optional .EFamilyGroupRole role = 2 [default = EFamilyGroupRole_None];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_role(), target);
  }

  // optional uint32 time_joined = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_time_joined(), target);
  }

  // optional uint32 cooldown_seconds_remaining = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_cooldown_seconds_remaining(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FamilyGroupMember)
  return target;
}

size_t FamilyGroupMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FamilyGroupMember)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional fixed64 steamid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional .EFamilyGroupRole role = 2 [default = EFamilyGroupRole_None];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_role());
    }

    // optional uint32 time_joined = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_time_joined());
    }

    // optional uint32 cooldown_seconds_remaining = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_cooldown_seconds_remaining());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FamilyGroupMember::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FamilyGroupMember)
  GOOGLE_DCHECK_NE(&from, this);
  const FamilyGroupMember* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FamilyGroupMember>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FamilyGroupMember)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FamilyGroupMember)
    MergeFrom(*source);
  }
}

void FamilyGroupMember::MergeFrom(const FamilyGroupMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FamilyGroupMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      role_ = from.role_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_joined_ = from.time_joined_;
    }
    if (cached_has_bits & 0x00000008u) {
      cooldown_seconds_remaining_ = from.cooldown_seconds_remaining_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FamilyGroupMember::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FamilyGroupMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FamilyGroupMember::CopyFrom(const FamilyGroupMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FamilyGroupMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FamilyGroupMember::IsInitialized() const {
  return true;
}

void FamilyGroupMember::InternalSwap(FamilyGroupMember* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FamilyGroupMember, cooldown_seconds_remaining_)
      + sizeof(FamilyGroupMember::cooldown_seconds_remaining_)
      - PROTOBUF_FIELD_OFFSET(FamilyGroupMember, steamid_)>(
          reinterpret_cast<char*>(&steamid_),
          reinterpret_cast<char*>(&other->steamid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FamilyGroupMember::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FamilyGroupPendingInvite::_Internal {
 public:
  using HasBits = decltype(std::declval<FamilyGroupPendingInvite>()._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_role(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

FamilyGroupPendingInvite::FamilyGroupPendingInvite(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:FamilyGroupPendingInvite)
}
FamilyGroupPendingInvite::FamilyGroupPendingInvite(const FamilyGroupPendingInvite& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&role_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(role_));
  // @@protoc_insertion_point(copy_constructor:FamilyGroupPendingInvite)
}

void FamilyGroupPendingInvite::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&steamid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&role_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(role_));
}

FamilyGroupPendingInvite::~FamilyGroupPendingInvite() {
  // @@protoc_insertion_point(destructor:FamilyGroupPendingInvite)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FamilyGroupPendingInvite::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FamilyGroupPendingInvite::ArenaDtor(void* object) {
  FamilyGroupPendingInvite* _this = reinterpret_cast< FamilyGroupPendingInvite* >(object);
  (void)_this;
}
void FamilyGroupPendingInvite::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FamilyGroupPendingInvite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FamilyGroupPendingInvite::Clear() {
// @@protoc_insertion_point(message_clear_start:FamilyGroupPendingInvite)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&role_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(role_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FamilyGroupPendingInvite::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 steamid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_steamid(&has_bits);
          steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional .EFamilyGroupRole role = 2 [default = EFamilyGroupRole_None];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EFamilyGroupRole_IsValid(val))) {
            _internal_set_role(static_cast<::EFamilyGroupRole>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FamilyGroupPendingInvite::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FamilyGroupPendingInvite)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_steamid(), target);
  }

  // optional .EFamilyGroupRole role = 2 [default = EFamilyGroupRole_None];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_role(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FamilyGroupPendingInvite)
  return target;
}

size_t FamilyGroupPendingInvite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FamilyGroupPendingInvite)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 steamid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional .EFamilyGroupRole role = 2 [default = EFamilyGroupRole_None];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_role());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FamilyGroupPendingInvite::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FamilyGroupPendingInvite)
  GOOGLE_DCHECK_NE(&from, this);
  const FamilyGroupPendingInvite* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FamilyGroupPendingInvite>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FamilyGroupPendingInvite)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FamilyGroupPendingInvite)
    MergeFrom(*source);
  }
}

void FamilyGroupPendingInvite::MergeFrom(const FamilyGroupPendingInvite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FamilyGroupPendingInvite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      role_ = from.role_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FamilyGroupPendingInvite::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FamilyGroupPendingInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FamilyGroupPendingInvite::CopyFrom(const FamilyGroupPendingInvite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FamilyGroupPendingInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FamilyGroupPendingInvite::IsInitialized() const {
  return true;
}

void FamilyGroupPendingInvite::InternalSwap(FamilyGroupPendingInvite* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FamilyGroupPendingInvite, role_)
      + sizeof(FamilyGroupPendingInvite::role_)
      - PROTOBUF_FIELD_OFFSET(FamilyGroupPendingInvite, steamid_)>(
          reinterpret_cast<char*>(&steamid_),
          reinterpret_cast<char*>(&other->steamid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FamilyGroupPendingInvite::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FamilyGroupFormerMember::_Internal {
 public:
  using HasBits = decltype(std::declval<FamilyGroupFormerMember>()._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

FamilyGroupFormerMember::FamilyGroupFormerMember(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:FamilyGroupFormerMember)
}
FamilyGroupFormerMember::FamilyGroupFormerMember(const FamilyGroupFormerMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:FamilyGroupFormerMember)
}

void FamilyGroupFormerMember::SharedCtor() {
steamid_ = PROTOBUF_ULONGLONG(0);
}

FamilyGroupFormerMember::~FamilyGroupFormerMember() {
  // @@protoc_insertion_point(destructor:FamilyGroupFormerMember)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FamilyGroupFormerMember::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FamilyGroupFormerMember::ArenaDtor(void* object) {
  FamilyGroupFormerMember* _this = reinterpret_cast< FamilyGroupFormerMember* >(object);
  (void)_this;
}
void FamilyGroupFormerMember::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FamilyGroupFormerMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FamilyGroupFormerMember::Clear() {
// @@protoc_insertion_point(message_clear_start:FamilyGroupFormerMember)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FamilyGroupFormerMember::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 steamid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_steamid(&has_bits);
          steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FamilyGroupFormerMember::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FamilyGroupFormerMember)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_steamid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FamilyGroupFormerMember)
  return target;
}

size_t FamilyGroupFormerMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FamilyGroupFormerMember)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 steamid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FamilyGroupFormerMember::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FamilyGroupFormerMember)
  GOOGLE_DCHECK_NE(&from, this);
  const FamilyGroupFormerMember* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FamilyGroupFormerMember>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FamilyGroupFormerMember)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FamilyGroupFormerMember)
    MergeFrom(*source);
  }
}

void FamilyGroupFormerMember::MergeFrom(const FamilyGroupFormerMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FamilyGroupFormerMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_steamid()) {
    _internal_set_steamid(from._internal_steamid());
  }
}

void FamilyGroupFormerMember::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FamilyGroupFormerMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FamilyGroupFormerMember::CopyFrom(const FamilyGroupFormerMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FamilyGroupFormerMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FamilyGroupFormerMember::IsInitialized() const {
  return true;
}

void FamilyGroupFormerMember::InternalSwap(FamilyGroupFormerMember* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(steamid_, other->steamid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FamilyGroupFormerMember::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetFamilyGroup_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_GetFamilyGroup_Response>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_free_spots(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_country(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_slot_cooldown_remaining_seconds(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_slot_cooldown_overrides(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

CFamilyGroups_GetFamilyGroup_Response::CFamilyGroups_GetFamilyGroup_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  members_(arena),
  pending_invites_(arena),
  former_members_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetFamilyGroup_Response)
}
CFamilyGroups_GetFamilyGroup_Response::CFamilyGroups_GetFamilyGroup_Response(const CFamilyGroups_GetFamilyGroup_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      members_(from.members_),
      pending_invites_(from.pending_invites_),
      former_members_(from.former_members_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_name()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  country_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_country()) {
    country_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_country(), 
      GetArena());
  }
  ::memcpy(&free_spots_, &from.free_spots_,
    static_cast<size_t>(reinterpret_cast<char*>(&slot_cooldown_overrides_) -
    reinterpret_cast<char*>(&free_spots_)) + sizeof(slot_cooldown_overrides_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetFamilyGroup_Response)
}

void CFamilyGroups_GetFamilyGroup_Response::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
country_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&free_spots_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&slot_cooldown_overrides_) -
    reinterpret_cast<char*>(&free_spots_)) + sizeof(slot_cooldown_overrides_));
}

CFamilyGroups_GetFamilyGroup_Response::~CFamilyGroups_GetFamilyGroup_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetFamilyGroup_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetFamilyGroup_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  country_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CFamilyGroups_GetFamilyGroup_Response::ArenaDtor(void* object) {
  CFamilyGroups_GetFamilyGroup_Response* _this = reinterpret_cast< CFamilyGroups_GetFamilyGroup_Response* >(object);
  (void)_this;
}
void CFamilyGroups_GetFamilyGroup_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetFamilyGroup_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetFamilyGroup_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetFamilyGroup_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  pending_invites_.Clear();
  former_members_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      country_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&free_spots_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&slot_cooldown_overrides_) -
        reinterpret_cast<char*>(&free_spots_)) + sizeof(slot_cooldown_overrides_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetFamilyGroup_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CFamilyGroups_GetFamilyGroup_Response.name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .FamilyGroupMember members = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_members(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .FamilyGroupPendingInvite pending_invites = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pending_invites(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint32 free_spots = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_free_spots(&has_bits);
          free_spots_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string country = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_country();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CFamilyGroups_GetFamilyGroup_Response.country");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 slot_cooldown_remaining_seconds = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_slot_cooldown_remaining_seconds(&has_bits);
          slot_cooldown_remaining_seconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .FamilyGroupFormerMember former_members = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_former_members(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint32 slot_cooldown_overrides = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_slot_cooldown_overrides(&has_bits);
          slot_cooldown_overrides_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetFamilyGroup_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetFamilyGroup_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CFamilyGroups_GetFamilyGroup_Response.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated .FamilyGroupMember members = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_members_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_members(i), target, stream);
  }

  // repeated .FamilyGroupPendingInvite pending_invites = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pending_invites_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_pending_invites(i), target, stream);
  }

  // optional uint32 free_spots = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_free_spots(), target);
  }

  // optional string country = 5;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_country().data(), static_cast<int>(this->_internal_country().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CFamilyGroups_GetFamilyGroup_Response.country");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_country(), target);
  }

  // optional uint32 slot_cooldown_remaining_seconds = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_slot_cooldown_remaining_seconds(), target);
  }

  // repeated .FamilyGroupFormerMember former_members = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_former_members_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, this->_internal_former_members(i), target, stream);
  }

  // optional uint32 slot_cooldown_overrides = 8;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_slot_cooldown_overrides(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetFamilyGroup_Response)
  return target;
}

size_t CFamilyGroups_GetFamilyGroup_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetFamilyGroup_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .FamilyGroupMember members = 2;
  total_size += 1UL * this->_internal_members_size();
  for (const auto& msg : this->members_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .FamilyGroupPendingInvite pending_invites = 3;
  total_size += 1UL * this->_internal_pending_invites_size();
  for (const auto& msg : this->pending_invites_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .FamilyGroupFormerMember former_members = 7;
  total_size += 1UL * this->_internal_former_members_size();
  for (const auto& msg : this->former_members_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string country = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_country());
    }

    // optional uint32 free_spots = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_free_spots());
    }

    // optional uint32 slot_cooldown_remaining_seconds = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_slot_cooldown_remaining_seconds());
    }

    // optional uint32 slot_cooldown_overrides = 8;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_slot_cooldown_overrides());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetFamilyGroup_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetFamilyGroup_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetFamilyGroup_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetFamilyGroup_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetFamilyGroup_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetFamilyGroup_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetFamilyGroup_Response::MergeFrom(const CFamilyGroups_GetFamilyGroup_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetFamilyGroup_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
  pending_invites_.MergeFrom(from.pending_invites_);
  former_members_.MergeFrom(from.former_members_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_country(from._internal_country());
    }
    if (cached_has_bits & 0x00000004u) {
      free_spots_ = from.free_spots_;
    }
    if (cached_has_bits & 0x00000008u) {
      slot_cooldown_remaining_seconds_ = from.slot_cooldown_remaining_seconds_;
    }
    if (cached_has_bits & 0x00000010u) {
      slot_cooldown_overrides_ = from.slot_cooldown_overrides_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_GetFamilyGroup_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetFamilyGroup_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetFamilyGroup_Response::CopyFrom(const CFamilyGroups_GetFamilyGroup_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetFamilyGroup_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetFamilyGroup_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetFamilyGroup_Response::InternalSwap(CFamilyGroups_GetFamilyGroup_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  members_.InternalSwap(&other->members_);
  pending_invites_.InternalSwap(&other->pending_invites_);
  former_members_.InternalSwap(&other->former_members_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  country_.Swap(&other->country_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_GetFamilyGroup_Response, slot_cooldown_overrides_)
      + sizeof(CFamilyGroups_GetFamilyGroup_Response::slot_cooldown_overrides_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_GetFamilyGroup_Response, free_spots_)>(
          reinterpret_cast<char*>(&free_spots_),
          reinterpret_cast<char*>(&other->free_spots_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetFamilyGroup_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetFamilyGroupForUser_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_GetFamilyGroupForUser_Request>()._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_include_family_group_response(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CFamilyGroups_GetFamilyGroupForUser_Request::CFamilyGroups_GetFamilyGroupForUser_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetFamilyGroupForUser_Request)
}
CFamilyGroups_GetFamilyGroupForUser_Request::CFamilyGroups_GetFamilyGroupForUser_Request(const CFamilyGroups_GetFamilyGroupForUser_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&include_family_group_response_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(include_family_group_response_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetFamilyGroupForUser_Request)
}

void CFamilyGroups_GetFamilyGroupForUser_Request::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&steamid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&include_family_group_response_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(include_family_group_response_));
}

CFamilyGroups_GetFamilyGroupForUser_Request::~CFamilyGroups_GetFamilyGroupForUser_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetFamilyGroupForUser_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetFamilyGroupForUser_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_GetFamilyGroupForUser_Request::ArenaDtor(void* object) {
  CFamilyGroups_GetFamilyGroupForUser_Request* _this = reinterpret_cast< CFamilyGroups_GetFamilyGroupForUser_Request* >(object);
  (void)_this;
}
void CFamilyGroups_GetFamilyGroupForUser_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetFamilyGroupForUser_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetFamilyGroupForUser_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetFamilyGroupForUser_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&include_family_group_response_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(include_family_group_response_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetFamilyGroupForUser_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 steamid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_steamid(&has_bits);
          steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool include_family_group_response = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_include_family_group_response(&has_bits);
          include_family_group_response_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetFamilyGroupForUser_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetFamilyGroupForUser_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_steamid(), target);
  }

  // optional bool include_family_group_response = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_include_family_group_response(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetFamilyGroupForUser_Request)
  return target;
}

size_t CFamilyGroups_GetFamilyGroupForUser_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetFamilyGroupForUser_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 steamid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_steamid());
    }

    // optional bool include_family_group_response = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetFamilyGroupForUser_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetFamilyGroupForUser_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetFamilyGroupForUser_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetFamilyGroupForUser_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetFamilyGroupForUser_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetFamilyGroupForUser_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetFamilyGroupForUser_Request::MergeFrom(const CFamilyGroups_GetFamilyGroupForUser_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetFamilyGroupForUser_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      include_family_group_response_ = from.include_family_group_response_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_GetFamilyGroupForUser_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetFamilyGroupForUser_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetFamilyGroupForUser_Request::CopyFrom(const CFamilyGroups_GetFamilyGroupForUser_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetFamilyGroupForUser_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetFamilyGroupForUser_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetFamilyGroupForUser_Request::InternalSwap(CFamilyGroups_GetFamilyGroupForUser_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_GetFamilyGroupForUser_Request, include_family_group_response_)
      + sizeof(CFamilyGroups_GetFamilyGroupForUser_Request::include_family_group_response_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_GetFamilyGroupForUser_Request, steamid_)>(
          reinterpret_cast<char*>(&steamid_),
          reinterpret_cast<char*>(&other->steamid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetFamilyGroupForUser_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FamilyGroupPendingInviteForUser::_Internal {
 public:
  using HasBits = decltype(std::declval<FamilyGroupPendingInviteForUser>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_role(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_inviter_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

FamilyGroupPendingInviteForUser::FamilyGroupPendingInviteForUser(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:FamilyGroupPendingInviteForUser)
}
FamilyGroupPendingInviteForUser::FamilyGroupPendingInviteForUser(const FamilyGroupPendingInviteForUser& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&family_groupid_, &from.family_groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&role_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(role_));
  // @@protoc_insertion_point(copy_constructor:FamilyGroupPendingInviteForUser)
}

void FamilyGroupPendingInviteForUser::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&family_groupid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&role_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(role_));
}

FamilyGroupPendingInviteForUser::~FamilyGroupPendingInviteForUser() {
  // @@protoc_insertion_point(destructor:FamilyGroupPendingInviteForUser)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FamilyGroupPendingInviteForUser::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FamilyGroupPendingInviteForUser::ArenaDtor(void* object) {
  FamilyGroupPendingInviteForUser* _this = reinterpret_cast< FamilyGroupPendingInviteForUser* >(object);
  (void)_this;
}
void FamilyGroupPendingInviteForUser::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FamilyGroupPendingInviteForUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FamilyGroupPendingInviteForUser::Clear() {
// @@protoc_insertion_point(message_clear_start:FamilyGroupPendingInviteForUser)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&family_groupid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&role_) -
        reinterpret_cast<char*>(&family_groupid_)) + sizeof(role_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FamilyGroupPendingInviteForUser::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .EFamilyGroupRole role = 2 [default = EFamilyGroupRole_None];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EFamilyGroupRole_IsValid(val))) {
            _internal_set_role(static_cast<::EFamilyGroupRole>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional fixed64 inviter_steamid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _Internal::set_has_inviter_steamid(&has_bits);
          inviter_steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FamilyGroupPendingInviteForUser::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:FamilyGroupPendingInviteForUser)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  // optional .EFamilyGroupRole role = 2 [default = EFamilyGroupRole_None];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_role(), target);
  }

  // optional fixed64 inviter_steamid = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(3, this->_internal_inviter_steamid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FamilyGroupPendingInviteForUser)
  return target;
}

size_t FamilyGroupPendingInviteForUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:FamilyGroupPendingInviteForUser)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 family_groupid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_family_groupid());
    }

    // optional fixed64 inviter_steamid = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional .EFamilyGroupRole role = 2 [default = EFamilyGroupRole_None];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_role());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FamilyGroupPendingInviteForUser::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:FamilyGroupPendingInviteForUser)
  GOOGLE_DCHECK_NE(&from, this);
  const FamilyGroupPendingInviteForUser* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FamilyGroupPendingInviteForUser>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:FamilyGroupPendingInviteForUser)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:FamilyGroupPendingInviteForUser)
    MergeFrom(*source);
  }
}

void FamilyGroupPendingInviteForUser::MergeFrom(const FamilyGroupPendingInviteForUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:FamilyGroupPendingInviteForUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      family_groupid_ = from.family_groupid_;
    }
    if (cached_has_bits & 0x00000002u) {
      inviter_steamid_ = from.inviter_steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      role_ = from.role_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FamilyGroupPendingInviteForUser::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:FamilyGroupPendingInviteForUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FamilyGroupPendingInviteForUser::CopyFrom(const FamilyGroupPendingInviteForUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:FamilyGroupPendingInviteForUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FamilyGroupPendingInviteForUser::IsInitialized() const {
  return true;
}

void FamilyGroupPendingInviteForUser::InternalSwap(FamilyGroupPendingInviteForUser* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FamilyGroupPendingInviteForUser, role_)
      + sizeof(FamilyGroupPendingInviteForUser::role_)
      - PROTOBUF_FIELD_OFFSET(FamilyGroupPendingInviteForUser, family_groupid_)>(
          reinterpret_cast<char*>(&family_groupid_),
          reinterpret_cast<char*>(&other->family_groupid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FamilyGroupPendingInviteForUser::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetFamilyGroupForUser_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_GetFamilyGroupForUser_Response>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_is_not_member_of_any_group(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_latest_time_joined(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_latest_joined_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_role(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_cooldown_seconds_remaining(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::CFamilyGroups_GetFamilyGroup_Response& family_group(const CFamilyGroups_GetFamilyGroupForUser_Response* msg);
  static void set_has_family_group(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CFamilyGroups_GetFamilyGroup_Response&
CFamilyGroups_GetFamilyGroupForUser_Response::_Internal::family_group(const CFamilyGroups_GetFamilyGroupForUser_Response* msg) {
  return *msg->family_group_;
}
CFamilyGroups_GetFamilyGroupForUser_Response::CFamilyGroups_GetFamilyGroupForUser_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  pending_group_invites_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetFamilyGroupForUser_Response)
}
CFamilyGroups_GetFamilyGroupForUser_Response::CFamilyGroups_GetFamilyGroupForUser_Response(const CFamilyGroups_GetFamilyGroupForUser_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      pending_group_invites_(from.pending_group_invites_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_family_group()) {
    family_group_ = new ::CFamilyGroups_GetFamilyGroup_Response(*from.family_group_);
  } else {
    family_group_ = nullptr;
  }
  ::memcpy(&family_groupid_, &from.family_groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&cooldown_seconds_remaining_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(cooldown_seconds_remaining_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetFamilyGroupForUser_Response)
}

void CFamilyGroups_GetFamilyGroupForUser_Response::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&family_group_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&cooldown_seconds_remaining_) -
    reinterpret_cast<char*>(&family_group_)) + sizeof(cooldown_seconds_remaining_));
}

CFamilyGroups_GetFamilyGroupForUser_Response::~CFamilyGroups_GetFamilyGroupForUser_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetFamilyGroupForUser_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetFamilyGroupForUser_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete family_group_;
}

void CFamilyGroups_GetFamilyGroupForUser_Response::ArenaDtor(void* object) {
  CFamilyGroups_GetFamilyGroupForUser_Response* _this = reinterpret_cast< CFamilyGroups_GetFamilyGroupForUser_Response* >(object);
  (void)_this;
}
void CFamilyGroups_GetFamilyGroupForUser_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetFamilyGroupForUser_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetFamilyGroupForUser_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetFamilyGroupForUser_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pending_group_invites_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(family_group_ != nullptr);
    family_group_->Clear();
  }
  if (cached_has_bits & 0x0000007eu) {
    ::memset(&family_groupid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cooldown_seconds_remaining_) -
        reinterpret_cast<char*>(&family_groupid_)) + sizeof(cooldown_seconds_remaining_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetFamilyGroupForUser_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_not_member_of_any_group = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_is_not_member_of_any_group(&has_bits);
          is_not_member_of_any_group_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 latest_time_joined = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_latest_time_joined(&has_bits);
          latest_time_joined_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 latest_joined_family_groupid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_latest_joined_family_groupid(&has_bits);
          latest_joined_family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .FamilyGroupPendingInviteForUser pending_group_invites = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pending_group_invites(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint32 role = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_role(&has_bits);
          role_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 cooldown_seconds_remaining = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_cooldown_seconds_remaining(&has_bits);
          cooldown_seconds_remaining_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .CFamilyGroups_GetFamilyGroup_Response family_group = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_family_group(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetFamilyGroupForUser_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetFamilyGroupForUser_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  // optional bool is_not_member_of_any_group = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_is_not_member_of_any_group(), target);
  }

  // optional uint32 latest_time_joined = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_latest_time_joined(), target);
  }

  // optional uint64 latest_joined_family_groupid = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_latest_joined_family_groupid(), target);
  }

  // repeated .FamilyGroupPendingInviteForUser pending_group_invites = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pending_group_invites_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_pending_group_invites(i), target, stream);
  }

  // optional uint32 role = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_role(), target);
  }

  // optional uint32 cooldown_seconds_remaining = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_cooldown_seconds_remaining(), target);
  }

  // optional .CFamilyGroups_GetFamilyGroup_Response family_group = 8;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::family_group(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetFamilyGroupForUser_Response)
  return target;
}

size_t CFamilyGroups_GetFamilyGroupForUser_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetFamilyGroupForUser_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .FamilyGroupPendingInviteForUser pending_group_invites = 5;
  total_size += 1UL * this->_internal_pending_group_invites_size();
  for (const auto& msg : this->pending_group_invites_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional .CFamilyGroups_GetFamilyGroup_Response family_group = 8;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *family_group_);
    }

    // optional uint64 family_groupid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_family_groupid());
    }

    // optional bool is_not_member_of_any_group = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional uint32 latest_time_joined = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_latest_time_joined());
    }

    // optional uint64 latest_joined_family_groupid = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_latest_joined_family_groupid());
    }

    // optional uint32 role = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_role());
    }

    // optional uint32 cooldown_seconds_remaining = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_cooldown_seconds_remaining());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetFamilyGroupForUser_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetFamilyGroupForUser_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetFamilyGroupForUser_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetFamilyGroupForUser_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetFamilyGroupForUser_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetFamilyGroupForUser_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetFamilyGroupForUser_Response::MergeFrom(const CFamilyGroups_GetFamilyGroupForUser_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetFamilyGroupForUser_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pending_group_invites_.MergeFrom(from.pending_group_invites_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_family_group()->::CFamilyGroups_GetFamilyGroup_Response::MergeFrom(from._internal_family_group());
    }
    if (cached_has_bits & 0x00000002u) {
      family_groupid_ = from.family_groupid_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_not_member_of_any_group_ = from.is_not_member_of_any_group_;
    }
    if (cached_has_bits & 0x00000008u) {
      latest_time_joined_ = from.latest_time_joined_;
    }
    if (cached_has_bits & 0x00000010u) {
      latest_joined_family_groupid_ = from.latest_joined_family_groupid_;
    }
    if (cached_has_bits & 0x00000020u) {
      role_ = from.role_;
    }
    if (cached_has_bits & 0x00000040u) {
      cooldown_seconds_remaining_ = from.cooldown_seconds_remaining_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_GetFamilyGroupForUser_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetFamilyGroupForUser_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetFamilyGroupForUser_Response::CopyFrom(const CFamilyGroups_GetFamilyGroupForUser_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetFamilyGroupForUser_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetFamilyGroupForUser_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetFamilyGroupForUser_Response::InternalSwap(CFamilyGroups_GetFamilyGroupForUser_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  pending_group_invites_.InternalSwap(&other->pending_group_invites_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_GetFamilyGroupForUser_Response, cooldown_seconds_remaining_)
      + sizeof(CFamilyGroups_GetFamilyGroupForUser_Response::cooldown_seconds_remaining_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_GetFamilyGroupForUser_Response, family_group_)>(
          reinterpret_cast<char*>(&family_group_),
          reinterpret_cast<char*>(&other->family_group_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetFamilyGroupForUser_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_ModifyFamilyGroupDetails_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_ModifyFamilyGroupDetails_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CFamilyGroups_ModifyFamilyGroupDetails_Request::CFamilyGroups_ModifyFamilyGroupDetails_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_ModifyFamilyGroupDetails_Request)
}
CFamilyGroups_ModifyFamilyGroupDetails_Request::CFamilyGroups_ModifyFamilyGroupDetails_Request(const CFamilyGroups_ModifyFamilyGroupDetails_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_name()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  family_groupid_ = from.family_groupid_;
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_ModifyFamilyGroupDetails_Request)
}

void CFamilyGroups_ModifyFamilyGroupDetails_Request::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
family_groupid_ = PROTOBUF_ULONGLONG(0);
}

CFamilyGroups_ModifyFamilyGroupDetails_Request::~CFamilyGroups_ModifyFamilyGroupDetails_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_ModifyFamilyGroupDetails_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_ModifyFamilyGroupDetails_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CFamilyGroups_ModifyFamilyGroupDetails_Request::ArenaDtor(void* object) {
  CFamilyGroups_ModifyFamilyGroupDetails_Request* _this = reinterpret_cast< CFamilyGroups_ModifyFamilyGroupDetails_Request* >(object);
  (void)_this;
}
void CFamilyGroups_ModifyFamilyGroupDetails_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_ModifyFamilyGroupDetails_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_ModifyFamilyGroupDetails_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_ModifyFamilyGroupDetails_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmpty();
  }
  family_groupid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_ModifyFamilyGroupDetails_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CFamilyGroups_ModifyFamilyGroupDetails_Request.name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_ModifyFamilyGroupDetails_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_ModifyFamilyGroupDetails_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CFamilyGroups_ModifyFamilyGroupDetails_Request.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_ModifyFamilyGroupDetails_Request)
  return target;
}

size_t CFamilyGroups_ModifyFamilyGroupDetails_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_ModifyFamilyGroupDetails_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional uint64 family_groupid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_family_groupid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_ModifyFamilyGroupDetails_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_ModifyFamilyGroupDetails_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_ModifyFamilyGroupDetails_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_ModifyFamilyGroupDetails_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_ModifyFamilyGroupDetails_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_ModifyFamilyGroupDetails_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_ModifyFamilyGroupDetails_Request::MergeFrom(const CFamilyGroups_ModifyFamilyGroupDetails_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_ModifyFamilyGroupDetails_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      family_groupid_ = from.family_groupid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_ModifyFamilyGroupDetails_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_ModifyFamilyGroupDetails_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_ModifyFamilyGroupDetails_Request::CopyFrom(const CFamilyGroups_ModifyFamilyGroupDetails_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_ModifyFamilyGroupDetails_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_ModifyFamilyGroupDetails_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_ModifyFamilyGroupDetails_Request::InternalSwap(CFamilyGroups_ModifyFamilyGroupDetails_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(family_groupid_, other->family_groupid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_ModifyFamilyGroupDetails_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_ModifyFamilyGroupDetails_Response::_Internal {
 public:
};

CFamilyGroups_ModifyFamilyGroupDetails_Response::CFamilyGroups_ModifyFamilyGroupDetails_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_ModifyFamilyGroupDetails_Response)
}
CFamilyGroups_ModifyFamilyGroupDetails_Response::CFamilyGroups_ModifyFamilyGroupDetails_Response(const CFamilyGroups_ModifyFamilyGroupDetails_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_ModifyFamilyGroupDetails_Response)
}

void CFamilyGroups_ModifyFamilyGroupDetails_Response::SharedCtor() {
}

CFamilyGroups_ModifyFamilyGroupDetails_Response::~CFamilyGroups_ModifyFamilyGroupDetails_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_ModifyFamilyGroupDetails_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_ModifyFamilyGroupDetails_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_ModifyFamilyGroupDetails_Response::ArenaDtor(void* object) {
  CFamilyGroups_ModifyFamilyGroupDetails_Response* _this = reinterpret_cast< CFamilyGroups_ModifyFamilyGroupDetails_Response* >(object);
  (void)_this;
}
void CFamilyGroups_ModifyFamilyGroupDetails_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_ModifyFamilyGroupDetails_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_ModifyFamilyGroupDetails_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_ModifyFamilyGroupDetails_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_ModifyFamilyGroupDetails_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_ModifyFamilyGroupDetails_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_ModifyFamilyGroupDetails_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_ModifyFamilyGroupDetails_Response)
  return target;
}

size_t CFamilyGroups_ModifyFamilyGroupDetails_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_ModifyFamilyGroupDetails_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_ModifyFamilyGroupDetails_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_ModifyFamilyGroupDetails_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_ModifyFamilyGroupDetails_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_ModifyFamilyGroupDetails_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_ModifyFamilyGroupDetails_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_ModifyFamilyGroupDetails_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_ModifyFamilyGroupDetails_Response::MergeFrom(const CFamilyGroups_ModifyFamilyGroupDetails_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_ModifyFamilyGroupDetails_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CFamilyGroups_ModifyFamilyGroupDetails_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_ModifyFamilyGroupDetails_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_ModifyFamilyGroupDetails_Response::CopyFrom(const CFamilyGroups_ModifyFamilyGroupDetails_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_ModifyFamilyGroupDetails_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_ModifyFamilyGroupDetails_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_ModifyFamilyGroupDetails_Response::InternalSwap(CFamilyGroups_ModifyFamilyGroupDetails_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_ModifyFamilyGroupDetails_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_InviteToFamilyGroup_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_InviteToFamilyGroup_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_receiver_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_receiver_role(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CFamilyGroups_InviteToFamilyGroup_Request::CFamilyGroups_InviteToFamilyGroup_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_InviteToFamilyGroup_Request)
}
CFamilyGroups_InviteToFamilyGroup_Request::CFamilyGroups_InviteToFamilyGroup_Request(const CFamilyGroups_InviteToFamilyGroup_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&family_groupid_, &from.family_groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&receiver_role_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(receiver_role_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_InviteToFamilyGroup_Request)
}

void CFamilyGroups_InviteToFamilyGroup_Request::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&family_groupid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&receiver_role_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(receiver_role_));
}

CFamilyGroups_InviteToFamilyGroup_Request::~CFamilyGroups_InviteToFamilyGroup_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_InviteToFamilyGroup_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_InviteToFamilyGroup_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_InviteToFamilyGroup_Request::ArenaDtor(void* object) {
  CFamilyGroups_InviteToFamilyGroup_Request* _this = reinterpret_cast< CFamilyGroups_InviteToFamilyGroup_Request* >(object);
  (void)_this;
}
void CFamilyGroups_InviteToFamilyGroup_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_InviteToFamilyGroup_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_InviteToFamilyGroup_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_InviteToFamilyGroup_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&family_groupid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&receiver_role_) -
        reinterpret_cast<char*>(&family_groupid_)) + sizeof(receiver_role_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_InviteToFamilyGroup_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed64 receiver_steamid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_receiver_steamid(&has_bits);
          receiver_steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional .EFamilyGroupRole receiver_role = 3 [default = EFamilyGroupRole_None];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EFamilyGroupRole_IsValid(val))) {
            _internal_set_receiver_role(static_cast<::EFamilyGroupRole>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_InviteToFamilyGroup_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_InviteToFamilyGroup_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  // optional fixed64 receiver_steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(2, this->_internal_receiver_steamid(), target);
  }

  // optional .EFamilyGroupRole receiver_role = 3 [default = EFamilyGroupRole_None];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_receiver_role(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_InviteToFamilyGroup_Request)
  return target;
}

size_t CFamilyGroups_InviteToFamilyGroup_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_InviteToFamilyGroup_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 family_groupid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_family_groupid());
    }

    // optional fixed64 receiver_steamid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional .EFamilyGroupRole receiver_role = 3 [default = EFamilyGroupRole_None];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_receiver_role());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_InviteToFamilyGroup_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_InviteToFamilyGroup_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_InviteToFamilyGroup_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_InviteToFamilyGroup_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_InviteToFamilyGroup_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_InviteToFamilyGroup_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_InviteToFamilyGroup_Request::MergeFrom(const CFamilyGroups_InviteToFamilyGroup_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_InviteToFamilyGroup_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      family_groupid_ = from.family_groupid_;
    }
    if (cached_has_bits & 0x00000002u) {
      receiver_steamid_ = from.receiver_steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      receiver_role_ = from.receiver_role_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_InviteToFamilyGroup_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_InviteToFamilyGroup_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_InviteToFamilyGroup_Request::CopyFrom(const CFamilyGroups_InviteToFamilyGroup_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_InviteToFamilyGroup_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_InviteToFamilyGroup_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_InviteToFamilyGroup_Request::InternalSwap(CFamilyGroups_InviteToFamilyGroup_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_InviteToFamilyGroup_Request, receiver_role_)
      + sizeof(CFamilyGroups_InviteToFamilyGroup_Request::receiver_role_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_InviteToFamilyGroup_Request, family_groupid_)>(
          reinterpret_cast<char*>(&family_groupid_),
          reinterpret_cast<char*>(&other->family_groupid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_InviteToFamilyGroup_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_InviteToFamilyGroup_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_InviteToFamilyGroup_Response>()._has_bits_);
  static void set_has_invite_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_two_factor_method(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CFamilyGroups_InviteToFamilyGroup_Response::CFamilyGroups_InviteToFamilyGroup_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_InviteToFamilyGroup_Response)
}
CFamilyGroups_InviteToFamilyGroup_Response::CFamilyGroups_InviteToFamilyGroup_Response(const CFamilyGroups_InviteToFamilyGroup_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&invite_id_, &from.invite_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&two_factor_method_) -
    reinterpret_cast<char*>(&invite_id_)) + sizeof(two_factor_method_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_InviteToFamilyGroup_Response)
}

void CFamilyGroups_InviteToFamilyGroup_Response::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&invite_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&two_factor_method_) -
    reinterpret_cast<char*>(&invite_id_)) + sizeof(two_factor_method_));
}

CFamilyGroups_InviteToFamilyGroup_Response::~CFamilyGroups_InviteToFamilyGroup_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_InviteToFamilyGroup_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_InviteToFamilyGroup_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_InviteToFamilyGroup_Response::ArenaDtor(void* object) {
  CFamilyGroups_InviteToFamilyGroup_Response* _this = reinterpret_cast< CFamilyGroups_InviteToFamilyGroup_Response* >(object);
  (void)_this;
}
void CFamilyGroups_InviteToFamilyGroup_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_InviteToFamilyGroup_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_InviteToFamilyGroup_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_InviteToFamilyGroup_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&invite_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&two_factor_method_) -
        reinterpret_cast<char*>(&invite_id_)) + sizeof(two_factor_method_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_InviteToFamilyGroup_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 invite_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_invite_id(&has_bits);
          invite_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .EFamilyGroupsTwoFactorMethod two_factor_method = 2 [default = EFamilyGroupsTwoFactorMethodNone];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EFamilyGroupsTwoFactorMethod_IsValid(val))) {
            _internal_set_two_factor_method(static_cast<::EFamilyGroupsTwoFactorMethod>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_InviteToFamilyGroup_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_InviteToFamilyGroup_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 invite_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_invite_id(), target);
  }

  // optional .EFamilyGroupsTwoFactorMethod two_factor_method = 2 [default = EFamilyGroupsTwoFactorMethodNone];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_two_factor_method(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_InviteToFamilyGroup_Response)
  return target;
}

size_t CFamilyGroups_InviteToFamilyGroup_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_InviteToFamilyGroup_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 invite_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_invite_id());
    }

    // optional .EFamilyGroupsTwoFactorMethod two_factor_method = 2 [default = EFamilyGroupsTwoFactorMethodNone];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_two_factor_method());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_InviteToFamilyGroup_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_InviteToFamilyGroup_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_InviteToFamilyGroup_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_InviteToFamilyGroup_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_InviteToFamilyGroup_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_InviteToFamilyGroup_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_InviteToFamilyGroup_Response::MergeFrom(const CFamilyGroups_InviteToFamilyGroup_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_InviteToFamilyGroup_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      invite_id_ = from.invite_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      two_factor_method_ = from.two_factor_method_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_InviteToFamilyGroup_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_InviteToFamilyGroup_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_InviteToFamilyGroup_Response::CopyFrom(const CFamilyGroups_InviteToFamilyGroup_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_InviteToFamilyGroup_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_InviteToFamilyGroup_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_InviteToFamilyGroup_Response::InternalSwap(CFamilyGroups_InviteToFamilyGroup_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_InviteToFamilyGroup_Response, two_factor_method_)
      + sizeof(CFamilyGroups_InviteToFamilyGroup_Response::two_factor_method_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_InviteToFamilyGroup_Response, invite_id_)>(
          reinterpret_cast<char*>(&invite_id_),
          reinterpret_cast<char*>(&other->invite_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_InviteToFamilyGroup_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_ConfirmInviteToFamilyGroup_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_ConfirmInviteToFamilyGroup_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_invite_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_nonce(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CFamilyGroups_ConfirmInviteToFamilyGroup_Request::CFamilyGroups_ConfirmInviteToFamilyGroup_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_ConfirmInviteToFamilyGroup_Request)
}
CFamilyGroups_ConfirmInviteToFamilyGroup_Request::CFamilyGroups_ConfirmInviteToFamilyGroup_Request(const CFamilyGroups_ConfirmInviteToFamilyGroup_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&family_groupid_, &from.family_groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&nonce_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(nonce_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_ConfirmInviteToFamilyGroup_Request)
}

void CFamilyGroups_ConfirmInviteToFamilyGroup_Request::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&family_groupid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&nonce_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(nonce_));
}

CFamilyGroups_ConfirmInviteToFamilyGroup_Request::~CFamilyGroups_ConfirmInviteToFamilyGroup_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_ConfirmInviteToFamilyGroup_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_ConfirmInviteToFamilyGroup_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_ConfirmInviteToFamilyGroup_Request::ArenaDtor(void* object) {
  CFamilyGroups_ConfirmInviteToFamilyGroup_Request* _this = reinterpret_cast< CFamilyGroups_ConfirmInviteToFamilyGroup_Request* >(object);
  (void)_this;
}
void CFamilyGroups_ConfirmInviteToFamilyGroup_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_ConfirmInviteToFamilyGroup_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_ConfirmInviteToFamilyGroup_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_ConfirmInviteToFamilyGroup_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&family_groupid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&nonce_) -
        reinterpret_cast<char*>(&family_groupid_)) + sizeof(nonce_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_ConfirmInviteToFamilyGroup_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 invite_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_invite_id(&has_bits);
          invite_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 nonce = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_nonce(&has_bits);
          nonce_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_ConfirmInviteToFamilyGroup_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_ConfirmInviteToFamilyGroup_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  // optional uint64 invite_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_invite_id(), target);
  }

  // optional uint64 nonce = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_nonce(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_ConfirmInviteToFamilyGroup_Request)
  return target;
}

size_t CFamilyGroups_ConfirmInviteToFamilyGroup_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_ConfirmInviteToFamilyGroup_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 family_groupid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_family_groupid());
    }

    // optional uint64 invite_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_invite_id());
    }

    // optional uint64 nonce = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_nonce());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_ConfirmInviteToFamilyGroup_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_ConfirmInviteToFamilyGroup_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_ConfirmInviteToFamilyGroup_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_ConfirmInviteToFamilyGroup_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_ConfirmInviteToFamilyGroup_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_ConfirmInviteToFamilyGroup_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_ConfirmInviteToFamilyGroup_Request::MergeFrom(const CFamilyGroups_ConfirmInviteToFamilyGroup_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_ConfirmInviteToFamilyGroup_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      family_groupid_ = from.family_groupid_;
    }
    if (cached_has_bits & 0x00000002u) {
      invite_id_ = from.invite_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      nonce_ = from.nonce_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_ConfirmInviteToFamilyGroup_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_ConfirmInviteToFamilyGroup_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_ConfirmInviteToFamilyGroup_Request::CopyFrom(const CFamilyGroups_ConfirmInviteToFamilyGroup_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_ConfirmInviteToFamilyGroup_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_ConfirmInviteToFamilyGroup_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_ConfirmInviteToFamilyGroup_Request::InternalSwap(CFamilyGroups_ConfirmInviteToFamilyGroup_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_ConfirmInviteToFamilyGroup_Request, nonce_)
      + sizeof(CFamilyGroups_ConfirmInviteToFamilyGroup_Request::nonce_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_ConfirmInviteToFamilyGroup_Request, family_groupid_)>(
          reinterpret_cast<char*>(&family_groupid_),
          reinterpret_cast<char*>(&other->family_groupid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_ConfirmInviteToFamilyGroup_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_ConfirmInviteToFamilyGroup_Response::_Internal {
 public:
};

CFamilyGroups_ConfirmInviteToFamilyGroup_Response::CFamilyGroups_ConfirmInviteToFamilyGroup_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_ConfirmInviteToFamilyGroup_Response)
}
CFamilyGroups_ConfirmInviteToFamilyGroup_Response::CFamilyGroups_ConfirmInviteToFamilyGroup_Response(const CFamilyGroups_ConfirmInviteToFamilyGroup_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_ConfirmInviteToFamilyGroup_Response)
}

void CFamilyGroups_ConfirmInviteToFamilyGroup_Response::SharedCtor() {
}

CFamilyGroups_ConfirmInviteToFamilyGroup_Response::~CFamilyGroups_ConfirmInviteToFamilyGroup_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_ConfirmInviteToFamilyGroup_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_ConfirmInviteToFamilyGroup_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_ConfirmInviteToFamilyGroup_Response::ArenaDtor(void* object) {
  CFamilyGroups_ConfirmInviteToFamilyGroup_Response* _this = reinterpret_cast< CFamilyGroups_ConfirmInviteToFamilyGroup_Response* >(object);
  (void)_this;
}
void CFamilyGroups_ConfirmInviteToFamilyGroup_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_ConfirmInviteToFamilyGroup_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_ConfirmInviteToFamilyGroup_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_ConfirmInviteToFamilyGroup_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_ConfirmInviteToFamilyGroup_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_ConfirmInviteToFamilyGroup_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_ConfirmInviteToFamilyGroup_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_ConfirmInviteToFamilyGroup_Response)
  return target;
}

size_t CFamilyGroups_ConfirmInviteToFamilyGroup_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_ConfirmInviteToFamilyGroup_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_ConfirmInviteToFamilyGroup_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_ConfirmInviteToFamilyGroup_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_ConfirmInviteToFamilyGroup_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_ConfirmInviteToFamilyGroup_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_ConfirmInviteToFamilyGroup_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_ConfirmInviteToFamilyGroup_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_ConfirmInviteToFamilyGroup_Response::MergeFrom(const CFamilyGroups_ConfirmInviteToFamilyGroup_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_ConfirmInviteToFamilyGroup_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CFamilyGroups_ConfirmInviteToFamilyGroup_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_ConfirmInviteToFamilyGroup_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_ConfirmInviteToFamilyGroup_Response::CopyFrom(const CFamilyGroups_ConfirmInviteToFamilyGroup_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_ConfirmInviteToFamilyGroup_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_ConfirmInviteToFamilyGroup_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_ConfirmInviteToFamilyGroup_Response::InternalSwap(CFamilyGroups_ConfirmInviteToFamilyGroup_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_ConfirmInviteToFamilyGroup_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_ResendInvitationToFamilyGroup_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_ResendInvitationToFamilyGroup_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CFamilyGroups_ResendInvitationToFamilyGroup_Request::CFamilyGroups_ResendInvitationToFamilyGroup_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_ResendInvitationToFamilyGroup_Request)
}
CFamilyGroups_ResendInvitationToFamilyGroup_Request::CFamilyGroups_ResendInvitationToFamilyGroup_Request(const CFamilyGroups_ResendInvitationToFamilyGroup_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&family_groupid_, &from.family_groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&steamid_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(steamid_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_ResendInvitationToFamilyGroup_Request)
}

void CFamilyGroups_ResendInvitationToFamilyGroup_Request::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&family_groupid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&steamid_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(steamid_));
}

CFamilyGroups_ResendInvitationToFamilyGroup_Request::~CFamilyGroups_ResendInvitationToFamilyGroup_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_ResendInvitationToFamilyGroup_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_ResendInvitationToFamilyGroup_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_ResendInvitationToFamilyGroup_Request::ArenaDtor(void* object) {
  CFamilyGroups_ResendInvitationToFamilyGroup_Request* _this = reinterpret_cast< CFamilyGroups_ResendInvitationToFamilyGroup_Request* >(object);
  (void)_this;
}
void CFamilyGroups_ResendInvitationToFamilyGroup_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_ResendInvitationToFamilyGroup_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_ResendInvitationToFamilyGroup_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_ResendInvitationToFamilyGroup_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&family_groupid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&steamid_) -
        reinterpret_cast<char*>(&family_groupid_)) + sizeof(steamid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_ResendInvitationToFamilyGroup_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 steamid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_steamid(&has_bits);
          steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_ResendInvitationToFamilyGroup_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_ResendInvitationToFamilyGroup_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  // optional uint64 steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_steamid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_ResendInvitationToFamilyGroup_Request)
  return target;
}

size_t CFamilyGroups_ResendInvitationToFamilyGroup_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_ResendInvitationToFamilyGroup_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 family_groupid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_family_groupid());
    }

    // optional uint64 steamid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_steamid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_ResendInvitationToFamilyGroup_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_ResendInvitationToFamilyGroup_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_ResendInvitationToFamilyGroup_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_ResendInvitationToFamilyGroup_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_ResendInvitationToFamilyGroup_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_ResendInvitationToFamilyGroup_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_ResendInvitationToFamilyGroup_Request::MergeFrom(const CFamilyGroups_ResendInvitationToFamilyGroup_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_ResendInvitationToFamilyGroup_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      family_groupid_ = from.family_groupid_;
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_ = from.steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_ResendInvitationToFamilyGroup_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_ResendInvitationToFamilyGroup_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_ResendInvitationToFamilyGroup_Request::CopyFrom(const CFamilyGroups_ResendInvitationToFamilyGroup_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_ResendInvitationToFamilyGroup_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_ResendInvitationToFamilyGroup_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_ResendInvitationToFamilyGroup_Request::InternalSwap(CFamilyGroups_ResendInvitationToFamilyGroup_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_ResendInvitationToFamilyGroup_Request, steamid_)
      + sizeof(CFamilyGroups_ResendInvitationToFamilyGroup_Request::steamid_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_ResendInvitationToFamilyGroup_Request, family_groupid_)>(
          reinterpret_cast<char*>(&family_groupid_),
          reinterpret_cast<char*>(&other->family_groupid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_ResendInvitationToFamilyGroup_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_ResendInvitationToFamilyGroup_Response::_Internal {
 public:
};

CFamilyGroups_ResendInvitationToFamilyGroup_Response::CFamilyGroups_ResendInvitationToFamilyGroup_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_ResendInvitationToFamilyGroup_Response)
}
CFamilyGroups_ResendInvitationToFamilyGroup_Response::CFamilyGroups_ResendInvitationToFamilyGroup_Response(const CFamilyGroups_ResendInvitationToFamilyGroup_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_ResendInvitationToFamilyGroup_Response)
}

void CFamilyGroups_ResendInvitationToFamilyGroup_Response::SharedCtor() {
}

CFamilyGroups_ResendInvitationToFamilyGroup_Response::~CFamilyGroups_ResendInvitationToFamilyGroup_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_ResendInvitationToFamilyGroup_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_ResendInvitationToFamilyGroup_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_ResendInvitationToFamilyGroup_Response::ArenaDtor(void* object) {
  CFamilyGroups_ResendInvitationToFamilyGroup_Response* _this = reinterpret_cast< CFamilyGroups_ResendInvitationToFamilyGroup_Response* >(object);
  (void)_this;
}
void CFamilyGroups_ResendInvitationToFamilyGroup_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_ResendInvitationToFamilyGroup_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_ResendInvitationToFamilyGroup_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_ResendInvitationToFamilyGroup_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_ResendInvitationToFamilyGroup_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_ResendInvitationToFamilyGroup_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_ResendInvitationToFamilyGroup_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_ResendInvitationToFamilyGroup_Response)
  return target;
}

size_t CFamilyGroups_ResendInvitationToFamilyGroup_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_ResendInvitationToFamilyGroup_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_ResendInvitationToFamilyGroup_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_ResendInvitationToFamilyGroup_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_ResendInvitationToFamilyGroup_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_ResendInvitationToFamilyGroup_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_ResendInvitationToFamilyGroup_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_ResendInvitationToFamilyGroup_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_ResendInvitationToFamilyGroup_Response::MergeFrom(const CFamilyGroups_ResendInvitationToFamilyGroup_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_ResendInvitationToFamilyGroup_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CFamilyGroups_ResendInvitationToFamilyGroup_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_ResendInvitationToFamilyGroup_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_ResendInvitationToFamilyGroup_Response::CopyFrom(const CFamilyGroups_ResendInvitationToFamilyGroup_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_ResendInvitationToFamilyGroup_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_ResendInvitationToFamilyGroup_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_ResendInvitationToFamilyGroup_Response::InternalSwap(CFamilyGroups_ResendInvitationToFamilyGroup_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_ResendInvitationToFamilyGroup_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_JoinFamilyGroup_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_JoinFamilyGroup_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_nonce(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CFamilyGroups_JoinFamilyGroup_Request::CFamilyGroups_JoinFamilyGroup_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_JoinFamilyGroup_Request)
}
CFamilyGroups_JoinFamilyGroup_Request::CFamilyGroups_JoinFamilyGroup_Request(const CFamilyGroups_JoinFamilyGroup_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&family_groupid_, &from.family_groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&nonce_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(nonce_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_JoinFamilyGroup_Request)
}

void CFamilyGroups_JoinFamilyGroup_Request::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&family_groupid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&nonce_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(nonce_));
}

CFamilyGroups_JoinFamilyGroup_Request::~CFamilyGroups_JoinFamilyGroup_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_JoinFamilyGroup_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_JoinFamilyGroup_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_JoinFamilyGroup_Request::ArenaDtor(void* object) {
  CFamilyGroups_JoinFamilyGroup_Request* _this = reinterpret_cast< CFamilyGroups_JoinFamilyGroup_Request* >(object);
  (void)_this;
}
void CFamilyGroups_JoinFamilyGroup_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_JoinFamilyGroup_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_JoinFamilyGroup_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_JoinFamilyGroup_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&family_groupid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&nonce_) -
        reinterpret_cast<char*>(&family_groupid_)) + sizeof(nonce_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_JoinFamilyGroup_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 nonce = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_nonce(&has_bits);
          nonce_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_JoinFamilyGroup_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_JoinFamilyGroup_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  // optional uint64 nonce = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_nonce(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_JoinFamilyGroup_Request)
  return target;
}

size_t CFamilyGroups_JoinFamilyGroup_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_JoinFamilyGroup_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 family_groupid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_family_groupid());
    }

    // optional uint64 nonce = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_nonce());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_JoinFamilyGroup_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_JoinFamilyGroup_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_JoinFamilyGroup_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_JoinFamilyGroup_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_JoinFamilyGroup_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_JoinFamilyGroup_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_JoinFamilyGroup_Request::MergeFrom(const CFamilyGroups_JoinFamilyGroup_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_JoinFamilyGroup_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      family_groupid_ = from.family_groupid_;
    }
    if (cached_has_bits & 0x00000002u) {
      nonce_ = from.nonce_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_JoinFamilyGroup_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_JoinFamilyGroup_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_JoinFamilyGroup_Request::CopyFrom(const CFamilyGroups_JoinFamilyGroup_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_JoinFamilyGroup_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_JoinFamilyGroup_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_JoinFamilyGroup_Request::InternalSwap(CFamilyGroups_JoinFamilyGroup_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_JoinFamilyGroup_Request, nonce_)
      + sizeof(CFamilyGroups_JoinFamilyGroup_Request::nonce_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_JoinFamilyGroup_Request, family_groupid_)>(
          reinterpret_cast<char*>(&family_groupid_),
          reinterpret_cast<char*>(&other->family_groupid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_JoinFamilyGroup_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_JoinFamilyGroup_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_JoinFamilyGroup_Response>()._has_bits_);
  static void set_has_two_factor_method(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CFamilyGroups_JoinFamilyGroup_Response::CFamilyGroups_JoinFamilyGroup_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_JoinFamilyGroup_Response)
}
CFamilyGroups_JoinFamilyGroup_Response::CFamilyGroups_JoinFamilyGroup_Response(const CFamilyGroups_JoinFamilyGroup_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  two_factor_method_ = from.two_factor_method_;
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_JoinFamilyGroup_Response)
}

void CFamilyGroups_JoinFamilyGroup_Response::SharedCtor() {
two_factor_method_ = 0;
}

CFamilyGroups_JoinFamilyGroup_Response::~CFamilyGroups_JoinFamilyGroup_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_JoinFamilyGroup_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_JoinFamilyGroup_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_JoinFamilyGroup_Response::ArenaDtor(void* object) {
  CFamilyGroups_JoinFamilyGroup_Response* _this = reinterpret_cast< CFamilyGroups_JoinFamilyGroup_Response* >(object);
  (void)_this;
}
void CFamilyGroups_JoinFamilyGroup_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_JoinFamilyGroup_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_JoinFamilyGroup_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_JoinFamilyGroup_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  two_factor_method_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_JoinFamilyGroup_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .EFamilyGroupsTwoFactorMethod two_factor_method = 2 [default = EFamilyGroupsTwoFactorMethodNone];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EFamilyGroupsTwoFactorMethod_IsValid(val))) {
            _internal_set_two_factor_method(static_cast<::EFamilyGroupsTwoFactorMethod>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_JoinFamilyGroup_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_JoinFamilyGroup_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .EFamilyGroupsTwoFactorMethod two_factor_method = 2 [default = EFamilyGroupsTwoFactorMethodNone];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_two_factor_method(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_JoinFamilyGroup_Response)
  return target;
}

size_t CFamilyGroups_JoinFamilyGroup_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_JoinFamilyGroup_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .EFamilyGroupsTwoFactorMethod two_factor_method = 2 [default = EFamilyGroupsTwoFactorMethodNone];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_two_factor_method());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_JoinFamilyGroup_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_JoinFamilyGroup_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_JoinFamilyGroup_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_JoinFamilyGroup_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_JoinFamilyGroup_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_JoinFamilyGroup_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_JoinFamilyGroup_Response::MergeFrom(const CFamilyGroups_JoinFamilyGroup_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_JoinFamilyGroup_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_two_factor_method()) {
    _internal_set_two_factor_method(from._internal_two_factor_method());
  }
}

void CFamilyGroups_JoinFamilyGroup_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_JoinFamilyGroup_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_JoinFamilyGroup_Response::CopyFrom(const CFamilyGroups_JoinFamilyGroup_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_JoinFamilyGroup_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_JoinFamilyGroup_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_JoinFamilyGroup_Response::InternalSwap(CFamilyGroups_JoinFamilyGroup_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(two_factor_method_, other->two_factor_method_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_JoinFamilyGroup_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_ConfirmJoinFamilyGroup_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_ConfirmJoinFamilyGroup_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_invite_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_nonce(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CFamilyGroups_ConfirmJoinFamilyGroup_Request::CFamilyGroups_ConfirmJoinFamilyGroup_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_ConfirmJoinFamilyGroup_Request)
}
CFamilyGroups_ConfirmJoinFamilyGroup_Request::CFamilyGroups_ConfirmJoinFamilyGroup_Request(const CFamilyGroups_ConfirmJoinFamilyGroup_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&family_groupid_, &from.family_groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&nonce_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(nonce_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_ConfirmJoinFamilyGroup_Request)
}

void CFamilyGroups_ConfirmJoinFamilyGroup_Request::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&family_groupid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&nonce_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(nonce_));
}

CFamilyGroups_ConfirmJoinFamilyGroup_Request::~CFamilyGroups_ConfirmJoinFamilyGroup_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_ConfirmJoinFamilyGroup_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_ConfirmJoinFamilyGroup_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_ConfirmJoinFamilyGroup_Request::ArenaDtor(void* object) {
  CFamilyGroups_ConfirmJoinFamilyGroup_Request* _this = reinterpret_cast< CFamilyGroups_ConfirmJoinFamilyGroup_Request* >(object);
  (void)_this;
}
void CFamilyGroups_ConfirmJoinFamilyGroup_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_ConfirmJoinFamilyGroup_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_ConfirmJoinFamilyGroup_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_ConfirmJoinFamilyGroup_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&family_groupid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&nonce_) -
        reinterpret_cast<char*>(&family_groupid_)) + sizeof(nonce_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_ConfirmJoinFamilyGroup_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 invite_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_invite_id(&has_bits);
          invite_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 nonce = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_nonce(&has_bits);
          nonce_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_ConfirmJoinFamilyGroup_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_ConfirmJoinFamilyGroup_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  // optional uint64 invite_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_invite_id(), target);
  }

  // optional uint64 nonce = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_nonce(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_ConfirmJoinFamilyGroup_Request)
  return target;
}

size_t CFamilyGroups_ConfirmJoinFamilyGroup_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_ConfirmJoinFamilyGroup_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 family_groupid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_family_groupid());
    }

    // optional uint64 invite_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_invite_id());
    }

    // optional uint64 nonce = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_nonce());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_ConfirmJoinFamilyGroup_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_ConfirmJoinFamilyGroup_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_ConfirmJoinFamilyGroup_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_ConfirmJoinFamilyGroup_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_ConfirmJoinFamilyGroup_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_ConfirmJoinFamilyGroup_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_ConfirmJoinFamilyGroup_Request::MergeFrom(const CFamilyGroups_ConfirmJoinFamilyGroup_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_ConfirmJoinFamilyGroup_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      family_groupid_ = from.family_groupid_;
    }
    if (cached_has_bits & 0x00000002u) {
      invite_id_ = from.invite_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      nonce_ = from.nonce_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_ConfirmJoinFamilyGroup_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_ConfirmJoinFamilyGroup_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_ConfirmJoinFamilyGroup_Request::CopyFrom(const CFamilyGroups_ConfirmJoinFamilyGroup_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_ConfirmJoinFamilyGroup_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_ConfirmJoinFamilyGroup_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_ConfirmJoinFamilyGroup_Request::InternalSwap(CFamilyGroups_ConfirmJoinFamilyGroup_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_ConfirmJoinFamilyGroup_Request, nonce_)
      + sizeof(CFamilyGroups_ConfirmJoinFamilyGroup_Request::nonce_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_ConfirmJoinFamilyGroup_Request, family_groupid_)>(
          reinterpret_cast<char*>(&family_groupid_),
          reinterpret_cast<char*>(&other->family_groupid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_ConfirmJoinFamilyGroup_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_ConfirmJoinFamilyGroup_Response::_Internal {
 public:
};

CFamilyGroups_ConfirmJoinFamilyGroup_Response::CFamilyGroups_ConfirmJoinFamilyGroup_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_ConfirmJoinFamilyGroup_Response)
}
CFamilyGroups_ConfirmJoinFamilyGroup_Response::CFamilyGroups_ConfirmJoinFamilyGroup_Response(const CFamilyGroups_ConfirmJoinFamilyGroup_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_ConfirmJoinFamilyGroup_Response)
}

void CFamilyGroups_ConfirmJoinFamilyGroup_Response::SharedCtor() {
}

CFamilyGroups_ConfirmJoinFamilyGroup_Response::~CFamilyGroups_ConfirmJoinFamilyGroup_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_ConfirmJoinFamilyGroup_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_ConfirmJoinFamilyGroup_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_ConfirmJoinFamilyGroup_Response::ArenaDtor(void* object) {
  CFamilyGroups_ConfirmJoinFamilyGroup_Response* _this = reinterpret_cast< CFamilyGroups_ConfirmJoinFamilyGroup_Response* >(object);
  (void)_this;
}
void CFamilyGroups_ConfirmJoinFamilyGroup_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_ConfirmJoinFamilyGroup_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_ConfirmJoinFamilyGroup_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_ConfirmJoinFamilyGroup_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_ConfirmJoinFamilyGroup_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_ConfirmJoinFamilyGroup_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_ConfirmJoinFamilyGroup_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_ConfirmJoinFamilyGroup_Response)
  return target;
}

size_t CFamilyGroups_ConfirmJoinFamilyGroup_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_ConfirmJoinFamilyGroup_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_ConfirmJoinFamilyGroup_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_ConfirmJoinFamilyGroup_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_ConfirmJoinFamilyGroup_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_ConfirmJoinFamilyGroup_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_ConfirmJoinFamilyGroup_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_ConfirmJoinFamilyGroup_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_ConfirmJoinFamilyGroup_Response::MergeFrom(const CFamilyGroups_ConfirmJoinFamilyGroup_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_ConfirmJoinFamilyGroup_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CFamilyGroups_ConfirmJoinFamilyGroup_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_ConfirmJoinFamilyGroup_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_ConfirmJoinFamilyGroup_Response::CopyFrom(const CFamilyGroups_ConfirmJoinFamilyGroup_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_ConfirmJoinFamilyGroup_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_ConfirmJoinFamilyGroup_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_ConfirmJoinFamilyGroup_Response::InternalSwap(CFamilyGroups_ConfirmJoinFamilyGroup_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_ConfirmJoinFamilyGroup_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_RemoveFromFamilyGroup_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_RemoveFromFamilyGroup_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_steamid_to_remove(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CFamilyGroups_RemoveFromFamilyGroup_Request::CFamilyGroups_RemoveFromFamilyGroup_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_RemoveFromFamilyGroup_Request)
}
CFamilyGroups_RemoveFromFamilyGroup_Request::CFamilyGroups_RemoveFromFamilyGroup_Request(const CFamilyGroups_RemoveFromFamilyGroup_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&family_groupid_, &from.family_groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&steamid_to_remove_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(steamid_to_remove_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_RemoveFromFamilyGroup_Request)
}

void CFamilyGroups_RemoveFromFamilyGroup_Request::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&family_groupid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&steamid_to_remove_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(steamid_to_remove_));
}

CFamilyGroups_RemoveFromFamilyGroup_Request::~CFamilyGroups_RemoveFromFamilyGroup_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_RemoveFromFamilyGroup_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_RemoveFromFamilyGroup_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_RemoveFromFamilyGroup_Request::ArenaDtor(void* object) {
  CFamilyGroups_RemoveFromFamilyGroup_Request* _this = reinterpret_cast< CFamilyGroups_RemoveFromFamilyGroup_Request* >(object);
  (void)_this;
}
void CFamilyGroups_RemoveFromFamilyGroup_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_RemoveFromFamilyGroup_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_RemoveFromFamilyGroup_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_RemoveFromFamilyGroup_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&family_groupid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&steamid_to_remove_) -
        reinterpret_cast<char*>(&family_groupid_)) + sizeof(steamid_to_remove_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_RemoveFromFamilyGroup_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed64 steamid_to_remove = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_steamid_to_remove(&has_bits);
          steamid_to_remove_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_RemoveFromFamilyGroup_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_RemoveFromFamilyGroup_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  // optional fixed64 steamid_to_remove = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(2, this->_internal_steamid_to_remove(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_RemoveFromFamilyGroup_Request)
  return target;
}

size_t CFamilyGroups_RemoveFromFamilyGroup_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_RemoveFromFamilyGroup_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 family_groupid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_family_groupid());
    }

    // optional fixed64 steamid_to_remove = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_RemoveFromFamilyGroup_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_RemoveFromFamilyGroup_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_RemoveFromFamilyGroup_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_RemoveFromFamilyGroup_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_RemoveFromFamilyGroup_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_RemoveFromFamilyGroup_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_RemoveFromFamilyGroup_Request::MergeFrom(const CFamilyGroups_RemoveFromFamilyGroup_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_RemoveFromFamilyGroup_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      family_groupid_ = from.family_groupid_;
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_to_remove_ = from.steamid_to_remove_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_RemoveFromFamilyGroup_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_RemoveFromFamilyGroup_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_RemoveFromFamilyGroup_Request::CopyFrom(const CFamilyGroups_RemoveFromFamilyGroup_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_RemoveFromFamilyGroup_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_RemoveFromFamilyGroup_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_RemoveFromFamilyGroup_Request::InternalSwap(CFamilyGroups_RemoveFromFamilyGroup_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_RemoveFromFamilyGroup_Request, steamid_to_remove_)
      + sizeof(CFamilyGroups_RemoveFromFamilyGroup_Request::steamid_to_remove_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_RemoveFromFamilyGroup_Request, family_groupid_)>(
          reinterpret_cast<char*>(&family_groupid_),
          reinterpret_cast<char*>(&other->family_groupid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_RemoveFromFamilyGroup_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_RemoveFromFamilyGroup_Response::_Internal {
 public:
};

CFamilyGroups_RemoveFromFamilyGroup_Response::CFamilyGroups_RemoveFromFamilyGroup_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_RemoveFromFamilyGroup_Response)
}
CFamilyGroups_RemoveFromFamilyGroup_Response::CFamilyGroups_RemoveFromFamilyGroup_Response(const CFamilyGroups_RemoveFromFamilyGroup_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_RemoveFromFamilyGroup_Response)
}

void CFamilyGroups_RemoveFromFamilyGroup_Response::SharedCtor() {
}

CFamilyGroups_RemoveFromFamilyGroup_Response::~CFamilyGroups_RemoveFromFamilyGroup_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_RemoveFromFamilyGroup_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_RemoveFromFamilyGroup_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_RemoveFromFamilyGroup_Response::ArenaDtor(void* object) {
  CFamilyGroups_RemoveFromFamilyGroup_Response* _this = reinterpret_cast< CFamilyGroups_RemoveFromFamilyGroup_Response* >(object);
  (void)_this;
}
void CFamilyGroups_RemoveFromFamilyGroup_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_RemoveFromFamilyGroup_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_RemoveFromFamilyGroup_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_RemoveFromFamilyGroup_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_RemoveFromFamilyGroup_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_RemoveFromFamilyGroup_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_RemoveFromFamilyGroup_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_RemoveFromFamilyGroup_Response)
  return target;
}

size_t CFamilyGroups_RemoveFromFamilyGroup_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_RemoveFromFamilyGroup_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_RemoveFromFamilyGroup_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_RemoveFromFamilyGroup_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_RemoveFromFamilyGroup_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_RemoveFromFamilyGroup_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_RemoveFromFamilyGroup_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_RemoveFromFamilyGroup_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_RemoveFromFamilyGroup_Response::MergeFrom(const CFamilyGroups_RemoveFromFamilyGroup_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_RemoveFromFamilyGroup_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CFamilyGroups_RemoveFromFamilyGroup_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_RemoveFromFamilyGroup_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_RemoveFromFamilyGroup_Response::CopyFrom(const CFamilyGroups_RemoveFromFamilyGroup_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_RemoveFromFamilyGroup_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_RemoveFromFamilyGroup_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_RemoveFromFamilyGroup_Response::InternalSwap(CFamilyGroups_RemoveFromFamilyGroup_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_RemoveFromFamilyGroup_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_CancelFamilyGroupInvite_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_CancelFamilyGroupInvite_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_steamid_to_cancel(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CFamilyGroups_CancelFamilyGroupInvite_Request::CFamilyGroups_CancelFamilyGroupInvite_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_CancelFamilyGroupInvite_Request)
}
CFamilyGroups_CancelFamilyGroupInvite_Request::CFamilyGroups_CancelFamilyGroupInvite_Request(const CFamilyGroups_CancelFamilyGroupInvite_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&family_groupid_, &from.family_groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&steamid_to_cancel_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(steamid_to_cancel_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_CancelFamilyGroupInvite_Request)
}

void CFamilyGroups_CancelFamilyGroupInvite_Request::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&family_groupid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&steamid_to_cancel_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(steamid_to_cancel_));
}

CFamilyGroups_CancelFamilyGroupInvite_Request::~CFamilyGroups_CancelFamilyGroupInvite_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_CancelFamilyGroupInvite_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_CancelFamilyGroupInvite_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_CancelFamilyGroupInvite_Request::ArenaDtor(void* object) {
  CFamilyGroups_CancelFamilyGroupInvite_Request* _this = reinterpret_cast< CFamilyGroups_CancelFamilyGroupInvite_Request* >(object);
  (void)_this;
}
void CFamilyGroups_CancelFamilyGroupInvite_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_CancelFamilyGroupInvite_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_CancelFamilyGroupInvite_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_CancelFamilyGroupInvite_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&family_groupid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&steamid_to_cancel_) -
        reinterpret_cast<char*>(&family_groupid_)) + sizeof(steamid_to_cancel_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_CancelFamilyGroupInvite_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed64 steamid_to_cancel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_steamid_to_cancel(&has_bits);
          steamid_to_cancel_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_CancelFamilyGroupInvite_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_CancelFamilyGroupInvite_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  // optional fixed64 steamid_to_cancel = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(2, this->_internal_steamid_to_cancel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_CancelFamilyGroupInvite_Request)
  return target;
}

size_t CFamilyGroups_CancelFamilyGroupInvite_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_CancelFamilyGroupInvite_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 family_groupid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_family_groupid());
    }

    // optional fixed64 steamid_to_cancel = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_CancelFamilyGroupInvite_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_CancelFamilyGroupInvite_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_CancelFamilyGroupInvite_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_CancelFamilyGroupInvite_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_CancelFamilyGroupInvite_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_CancelFamilyGroupInvite_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_CancelFamilyGroupInvite_Request::MergeFrom(const CFamilyGroups_CancelFamilyGroupInvite_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_CancelFamilyGroupInvite_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      family_groupid_ = from.family_groupid_;
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_to_cancel_ = from.steamid_to_cancel_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_CancelFamilyGroupInvite_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_CancelFamilyGroupInvite_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_CancelFamilyGroupInvite_Request::CopyFrom(const CFamilyGroups_CancelFamilyGroupInvite_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_CancelFamilyGroupInvite_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_CancelFamilyGroupInvite_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_CancelFamilyGroupInvite_Request::InternalSwap(CFamilyGroups_CancelFamilyGroupInvite_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_CancelFamilyGroupInvite_Request, steamid_to_cancel_)
      + sizeof(CFamilyGroups_CancelFamilyGroupInvite_Request::steamid_to_cancel_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_CancelFamilyGroupInvite_Request, family_groupid_)>(
          reinterpret_cast<char*>(&family_groupid_),
          reinterpret_cast<char*>(&other->family_groupid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_CancelFamilyGroupInvite_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_CancelFamilyGroupInvite_Response::_Internal {
 public:
};

CFamilyGroups_CancelFamilyGroupInvite_Response::CFamilyGroups_CancelFamilyGroupInvite_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_CancelFamilyGroupInvite_Response)
}
CFamilyGroups_CancelFamilyGroupInvite_Response::CFamilyGroups_CancelFamilyGroupInvite_Response(const CFamilyGroups_CancelFamilyGroupInvite_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_CancelFamilyGroupInvite_Response)
}

void CFamilyGroups_CancelFamilyGroupInvite_Response::SharedCtor() {
}

CFamilyGroups_CancelFamilyGroupInvite_Response::~CFamilyGroups_CancelFamilyGroupInvite_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_CancelFamilyGroupInvite_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_CancelFamilyGroupInvite_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_CancelFamilyGroupInvite_Response::ArenaDtor(void* object) {
  CFamilyGroups_CancelFamilyGroupInvite_Response* _this = reinterpret_cast< CFamilyGroups_CancelFamilyGroupInvite_Response* >(object);
  (void)_this;
}
void CFamilyGroups_CancelFamilyGroupInvite_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_CancelFamilyGroupInvite_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_CancelFamilyGroupInvite_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_CancelFamilyGroupInvite_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_CancelFamilyGroupInvite_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_CancelFamilyGroupInvite_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_CancelFamilyGroupInvite_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_CancelFamilyGroupInvite_Response)
  return target;
}

size_t CFamilyGroups_CancelFamilyGroupInvite_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_CancelFamilyGroupInvite_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_CancelFamilyGroupInvite_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_CancelFamilyGroupInvite_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_CancelFamilyGroupInvite_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_CancelFamilyGroupInvite_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_CancelFamilyGroupInvite_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_CancelFamilyGroupInvite_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_CancelFamilyGroupInvite_Response::MergeFrom(const CFamilyGroups_CancelFamilyGroupInvite_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_CancelFamilyGroupInvite_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CFamilyGroups_CancelFamilyGroupInvite_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_CancelFamilyGroupInvite_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_CancelFamilyGroupInvite_Response::CopyFrom(const CFamilyGroups_CancelFamilyGroupInvite_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_CancelFamilyGroupInvite_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_CancelFamilyGroupInvite_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_CancelFamilyGroupInvite_Response::InternalSwap(CFamilyGroups_CancelFamilyGroupInvite_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_CancelFamilyGroupInvite_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetUsersSharingDevice_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_GetUsersSharingDevice_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_client_instance_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CFamilyGroups_GetUsersSharingDevice_Request::CFamilyGroups_GetUsersSharingDevice_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetUsersSharingDevice_Request)
}
CFamilyGroups_GetUsersSharingDevice_Request::CFamilyGroups_GetUsersSharingDevice_Request(const CFamilyGroups_GetUsersSharingDevice_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&family_groupid_, &from.family_groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&client_instance_id_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(client_instance_id_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetUsersSharingDevice_Request)
}

void CFamilyGroups_GetUsersSharingDevice_Request::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&family_groupid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&client_instance_id_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(client_instance_id_));
}

CFamilyGroups_GetUsersSharingDevice_Request::~CFamilyGroups_GetUsersSharingDevice_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetUsersSharingDevice_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetUsersSharingDevice_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_GetUsersSharingDevice_Request::ArenaDtor(void* object) {
  CFamilyGroups_GetUsersSharingDevice_Request* _this = reinterpret_cast< CFamilyGroups_GetUsersSharingDevice_Request* >(object);
  (void)_this;
}
void CFamilyGroups_GetUsersSharingDevice_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetUsersSharingDevice_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetUsersSharingDevice_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetUsersSharingDevice_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&family_groupid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&client_instance_id_) -
        reinterpret_cast<char*>(&family_groupid_)) + sizeof(client_instance_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetUsersSharingDevice_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 client_instance_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_client_instance_id(&has_bits);
          client_instance_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetUsersSharingDevice_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetUsersSharingDevice_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  // optional uint64 client_instance_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_client_instance_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetUsersSharingDevice_Request)
  return target;
}

size_t CFamilyGroups_GetUsersSharingDevice_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetUsersSharingDevice_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 family_groupid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_family_groupid());
    }

    // optional uint64 client_instance_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_client_instance_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetUsersSharingDevice_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetUsersSharingDevice_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetUsersSharingDevice_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetUsersSharingDevice_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetUsersSharingDevice_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetUsersSharingDevice_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetUsersSharingDevice_Request::MergeFrom(const CFamilyGroups_GetUsersSharingDevice_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetUsersSharingDevice_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      family_groupid_ = from.family_groupid_;
    }
    if (cached_has_bits & 0x00000002u) {
      client_instance_id_ = from.client_instance_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_GetUsersSharingDevice_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetUsersSharingDevice_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetUsersSharingDevice_Request::CopyFrom(const CFamilyGroups_GetUsersSharingDevice_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetUsersSharingDevice_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetUsersSharingDevice_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetUsersSharingDevice_Request::InternalSwap(CFamilyGroups_GetUsersSharingDevice_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_GetUsersSharingDevice_Request, client_instance_id_)
      + sizeof(CFamilyGroups_GetUsersSharingDevice_Request::client_instance_id_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_GetUsersSharingDevice_Request, family_groupid_)>(
          reinterpret_cast<char*>(&family_groupid_),
          reinterpret_cast<char*>(&other->family_groupid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetUsersSharingDevice_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetUsersSharingDevice_Response::_Internal {
 public:
};

CFamilyGroups_GetUsersSharingDevice_Response::CFamilyGroups_GetUsersSharingDevice_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  users_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetUsersSharingDevice_Response)
}
CFamilyGroups_GetUsersSharingDevice_Response::CFamilyGroups_GetUsersSharingDevice_Response(const CFamilyGroups_GetUsersSharingDevice_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      users_(from.users_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetUsersSharingDevice_Response)
}

void CFamilyGroups_GetUsersSharingDevice_Response::SharedCtor() {
}

CFamilyGroups_GetUsersSharingDevice_Response::~CFamilyGroups_GetUsersSharingDevice_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetUsersSharingDevice_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetUsersSharingDevice_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_GetUsersSharingDevice_Response::ArenaDtor(void* object) {
  CFamilyGroups_GetUsersSharingDevice_Response* _this = reinterpret_cast< CFamilyGroups_GetUsersSharingDevice_Response* >(object);
  (void)_this;
}
void CFamilyGroups_GetUsersSharingDevice_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetUsersSharingDevice_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetUsersSharingDevice_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetUsersSharingDevice_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  users_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetUsersSharingDevice_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated fixed64 users = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_users(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr));
            ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<9>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFixed64Parser(_internal_mutable_users(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetUsersSharingDevice_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetUsersSharingDevice_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 users = 1;
  for (int i = 0, n = this->_internal_users_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_users(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetUsersSharingDevice_Response)
  return target;
}

size_t CFamilyGroups_GetUsersSharingDevice_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetUsersSharingDevice_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated fixed64 users = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_users_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_users_size());
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetUsersSharingDevice_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetUsersSharingDevice_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetUsersSharingDevice_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetUsersSharingDevice_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetUsersSharingDevice_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetUsersSharingDevice_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetUsersSharingDevice_Response::MergeFrom(const CFamilyGroups_GetUsersSharingDevice_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetUsersSharingDevice_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  users_.MergeFrom(from.users_);
}

void CFamilyGroups_GetUsersSharingDevice_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetUsersSharingDevice_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetUsersSharingDevice_Response::CopyFrom(const CFamilyGroups_GetUsersSharingDevice_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetUsersSharingDevice_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetUsersSharingDevice_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetUsersSharingDevice_Response::InternalSwap(CFamilyGroups_GetUsersSharingDevice_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  users_.InternalSwap(&other->users_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetUsersSharingDevice_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_DeleteFamilyGroup_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_DeleteFamilyGroup_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CFamilyGroups_DeleteFamilyGroup_Request::CFamilyGroups_DeleteFamilyGroup_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_DeleteFamilyGroup_Request)
}
CFamilyGroups_DeleteFamilyGroup_Request::CFamilyGroups_DeleteFamilyGroup_Request(const CFamilyGroups_DeleteFamilyGroup_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  family_groupid_ = from.family_groupid_;
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_DeleteFamilyGroup_Request)
}

void CFamilyGroups_DeleteFamilyGroup_Request::SharedCtor() {
family_groupid_ = PROTOBUF_ULONGLONG(0);
}

CFamilyGroups_DeleteFamilyGroup_Request::~CFamilyGroups_DeleteFamilyGroup_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_DeleteFamilyGroup_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_DeleteFamilyGroup_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_DeleteFamilyGroup_Request::ArenaDtor(void* object) {
  CFamilyGroups_DeleteFamilyGroup_Request* _this = reinterpret_cast< CFamilyGroups_DeleteFamilyGroup_Request* >(object);
  (void)_this;
}
void CFamilyGroups_DeleteFamilyGroup_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_DeleteFamilyGroup_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_DeleteFamilyGroup_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_DeleteFamilyGroup_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  family_groupid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_DeleteFamilyGroup_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_DeleteFamilyGroup_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_DeleteFamilyGroup_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_DeleteFamilyGroup_Request)
  return target;
}

size_t CFamilyGroups_DeleteFamilyGroup_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_DeleteFamilyGroup_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 family_groupid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_family_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_DeleteFamilyGroup_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_DeleteFamilyGroup_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_DeleteFamilyGroup_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_DeleteFamilyGroup_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_DeleteFamilyGroup_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_DeleteFamilyGroup_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_DeleteFamilyGroup_Request::MergeFrom(const CFamilyGroups_DeleteFamilyGroup_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_DeleteFamilyGroup_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_family_groupid()) {
    _internal_set_family_groupid(from._internal_family_groupid());
  }
}

void CFamilyGroups_DeleteFamilyGroup_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_DeleteFamilyGroup_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_DeleteFamilyGroup_Request::CopyFrom(const CFamilyGroups_DeleteFamilyGroup_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_DeleteFamilyGroup_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_DeleteFamilyGroup_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_DeleteFamilyGroup_Request::InternalSwap(CFamilyGroups_DeleteFamilyGroup_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(family_groupid_, other->family_groupid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_DeleteFamilyGroup_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_DeleteFamilyGroup_Response::_Internal {
 public:
};

CFamilyGroups_DeleteFamilyGroup_Response::CFamilyGroups_DeleteFamilyGroup_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_DeleteFamilyGroup_Response)
}
CFamilyGroups_DeleteFamilyGroup_Response::CFamilyGroups_DeleteFamilyGroup_Response(const CFamilyGroups_DeleteFamilyGroup_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_DeleteFamilyGroup_Response)
}

void CFamilyGroups_DeleteFamilyGroup_Response::SharedCtor() {
}

CFamilyGroups_DeleteFamilyGroup_Response::~CFamilyGroups_DeleteFamilyGroup_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_DeleteFamilyGroup_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_DeleteFamilyGroup_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_DeleteFamilyGroup_Response::ArenaDtor(void* object) {
  CFamilyGroups_DeleteFamilyGroup_Response* _this = reinterpret_cast< CFamilyGroups_DeleteFamilyGroup_Response* >(object);
  (void)_this;
}
void CFamilyGroups_DeleteFamilyGroup_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_DeleteFamilyGroup_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_DeleteFamilyGroup_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_DeleteFamilyGroup_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_DeleteFamilyGroup_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_DeleteFamilyGroup_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_DeleteFamilyGroup_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_DeleteFamilyGroup_Response)
  return target;
}

size_t CFamilyGroups_DeleteFamilyGroup_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_DeleteFamilyGroup_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_DeleteFamilyGroup_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_DeleteFamilyGroup_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_DeleteFamilyGroup_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_DeleteFamilyGroup_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_DeleteFamilyGroup_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_DeleteFamilyGroup_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_DeleteFamilyGroup_Response::MergeFrom(const CFamilyGroups_DeleteFamilyGroup_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_DeleteFamilyGroup_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CFamilyGroups_DeleteFamilyGroup_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_DeleteFamilyGroup_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_DeleteFamilyGroup_Response::CopyFrom(const CFamilyGroups_DeleteFamilyGroup_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_DeleteFamilyGroup_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_DeleteFamilyGroup_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_DeleteFamilyGroup_Response::InternalSwap(CFamilyGroups_DeleteFamilyGroup_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_DeleteFamilyGroup_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetPlaytimeSummary_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_GetPlaytimeSummary_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CFamilyGroups_GetPlaytimeSummary_Request::CFamilyGroups_GetPlaytimeSummary_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetPlaytimeSummary_Request)
}
CFamilyGroups_GetPlaytimeSummary_Request::CFamilyGroups_GetPlaytimeSummary_Request(const CFamilyGroups_GetPlaytimeSummary_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  family_groupid_ = from.family_groupid_;
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetPlaytimeSummary_Request)
}

void CFamilyGroups_GetPlaytimeSummary_Request::SharedCtor() {
family_groupid_ = PROTOBUF_ULONGLONG(0);
}

CFamilyGroups_GetPlaytimeSummary_Request::~CFamilyGroups_GetPlaytimeSummary_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetPlaytimeSummary_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetPlaytimeSummary_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_GetPlaytimeSummary_Request::ArenaDtor(void* object) {
  CFamilyGroups_GetPlaytimeSummary_Request* _this = reinterpret_cast< CFamilyGroups_GetPlaytimeSummary_Request* >(object);
  (void)_this;
}
void CFamilyGroups_GetPlaytimeSummary_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetPlaytimeSummary_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetPlaytimeSummary_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetPlaytimeSummary_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  family_groupid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetPlaytimeSummary_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetPlaytimeSummary_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetPlaytimeSummary_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_family_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetPlaytimeSummary_Request)
  return target;
}

size_t CFamilyGroups_GetPlaytimeSummary_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetPlaytimeSummary_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional fixed64 family_groupid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetPlaytimeSummary_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetPlaytimeSummary_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetPlaytimeSummary_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetPlaytimeSummary_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetPlaytimeSummary_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetPlaytimeSummary_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetPlaytimeSummary_Request::MergeFrom(const CFamilyGroups_GetPlaytimeSummary_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetPlaytimeSummary_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_family_groupid()) {
    _internal_set_family_groupid(from._internal_family_groupid());
  }
}

void CFamilyGroups_GetPlaytimeSummary_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetPlaytimeSummary_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetPlaytimeSummary_Request::CopyFrom(const CFamilyGroups_GetPlaytimeSummary_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetPlaytimeSummary_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetPlaytimeSummary_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetPlaytimeSummary_Request::InternalSwap(CFamilyGroups_GetPlaytimeSummary_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(family_groupid_, other->family_groupid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetPlaytimeSummary_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_PlaytimeEntry::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_PlaytimeEntry>()._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_first_played(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_latest_played(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_seconds_played(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

CFamilyGroups_PlaytimeEntry::CFamilyGroups_PlaytimeEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_PlaytimeEntry)
}
CFamilyGroups_PlaytimeEntry::CFamilyGroups_PlaytimeEntry(const CFamilyGroups_PlaytimeEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&seconds_played_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(seconds_played_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_PlaytimeEntry)
}

void CFamilyGroups_PlaytimeEntry::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&steamid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&seconds_played_) -
    reinterpret_cast<char*>(&steamid_)) + sizeof(seconds_played_));
}

CFamilyGroups_PlaytimeEntry::~CFamilyGroups_PlaytimeEntry() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_PlaytimeEntry)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_PlaytimeEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_PlaytimeEntry::ArenaDtor(void* object) {
  CFamilyGroups_PlaytimeEntry* _this = reinterpret_cast< CFamilyGroups_PlaytimeEntry* >(object);
  (void)_this;
}
void CFamilyGroups_PlaytimeEntry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_PlaytimeEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_PlaytimeEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_PlaytimeEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&seconds_played_) -
        reinterpret_cast<char*>(&steamid_)) + sizeof(seconds_played_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_PlaytimeEntry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 steamid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_steamid(&has_bits);
          steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional uint32 appid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_appid(&has_bits);
          appid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 first_played = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_first_played(&has_bits);
          first_played_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 latest_played = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_latest_played(&has_bits);
          latest_played_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 seconds_played = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_seconds_played(&has_bits);
          seconds_played_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_PlaytimeEntry::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_PlaytimeEntry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_appid(), target);
  }

  // optional uint32 first_played = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_first_played(), target);
  }

  // optional uint32 latest_played = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_latest_played(), target);
  }

  // optional uint32 seconds_played = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_seconds_played(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_PlaytimeEntry)
  return target;
}

size_t CFamilyGroups_PlaytimeEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_PlaytimeEntry)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional fixed64 steamid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional uint32 appid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_appid());
    }

    // optional uint32 first_played = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_first_played());
    }

    // optional uint32 latest_played = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_latest_played());
    }

    // optional uint32 seconds_played = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_seconds_played());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_PlaytimeEntry::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_PlaytimeEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_PlaytimeEntry* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_PlaytimeEntry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_PlaytimeEntry)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_PlaytimeEntry)
    MergeFrom(*source);
  }
}

void CFamilyGroups_PlaytimeEntry::MergeFrom(const CFamilyGroups_PlaytimeEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_PlaytimeEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000004u) {
      first_played_ = from.first_played_;
    }
    if (cached_has_bits & 0x00000008u) {
      latest_played_ = from.latest_played_;
    }
    if (cached_has_bits & 0x00000010u) {
      seconds_played_ = from.seconds_played_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_PlaytimeEntry::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_PlaytimeEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_PlaytimeEntry::CopyFrom(const CFamilyGroups_PlaytimeEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_PlaytimeEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_PlaytimeEntry::IsInitialized() const {
  return true;
}

void CFamilyGroups_PlaytimeEntry::InternalSwap(CFamilyGroups_PlaytimeEntry* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_PlaytimeEntry, seconds_played_)
      + sizeof(CFamilyGroups_PlaytimeEntry::seconds_played_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_PlaytimeEntry, steamid_)>(
          reinterpret_cast<char*>(&steamid_),
          reinterpret_cast<char*>(&other->steamid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_PlaytimeEntry::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetPlaytimeSummary_Response::_Internal {
 public:
};

CFamilyGroups_GetPlaytimeSummary_Response::CFamilyGroups_GetPlaytimeSummary_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  entries_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetPlaytimeSummary_Response)
}
CFamilyGroups_GetPlaytimeSummary_Response::CFamilyGroups_GetPlaytimeSummary_Response(const CFamilyGroups_GetPlaytimeSummary_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetPlaytimeSummary_Response)
}

void CFamilyGroups_GetPlaytimeSummary_Response::SharedCtor() {
}

CFamilyGroups_GetPlaytimeSummary_Response::~CFamilyGroups_GetPlaytimeSummary_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetPlaytimeSummary_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetPlaytimeSummary_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_GetPlaytimeSummary_Response::ArenaDtor(void* object) {
  CFamilyGroups_GetPlaytimeSummary_Response* _this = reinterpret_cast< CFamilyGroups_GetPlaytimeSummary_Response* >(object);
  (void)_this;
}
void CFamilyGroups_GetPlaytimeSummary_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetPlaytimeSummary_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetPlaytimeSummary_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetPlaytimeSummary_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetPlaytimeSummary_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .CFamilyGroups_PlaytimeEntry entries = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetPlaytimeSummary_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetPlaytimeSummary_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CFamilyGroups_PlaytimeEntry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_entries(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetPlaytimeSummary_Response)
  return target;
}

size_t CFamilyGroups_GetPlaytimeSummary_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetPlaytimeSummary_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CFamilyGroups_PlaytimeEntry entries = 1;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetPlaytimeSummary_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetPlaytimeSummary_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetPlaytimeSummary_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetPlaytimeSummary_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetPlaytimeSummary_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetPlaytimeSummary_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetPlaytimeSummary_Response::MergeFrom(const CFamilyGroups_GetPlaytimeSummary_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetPlaytimeSummary_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void CFamilyGroups_GetPlaytimeSummary_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetPlaytimeSummary_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetPlaytimeSummary_Response::CopyFrom(const CFamilyGroups_GetPlaytimeSummary_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetPlaytimeSummary_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetPlaytimeSummary_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetPlaytimeSummary_Response::InternalSwap(CFamilyGroups_GetPlaytimeSummary_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  entries_.InternalSwap(&other->entries_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetPlaytimeSummary_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_RequestPurchase_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_RequestPurchase_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_gidshoppingcart(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_store_country_code(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_use_account_cart(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CFamilyGroups_RequestPurchase_Request::CFamilyGroups_RequestPurchase_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_RequestPurchase_Request)
}
CFamilyGroups_RequestPurchase_Request::CFamilyGroups_RequestPurchase_Request(const CFamilyGroups_RequestPurchase_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  store_country_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_store_country_code()) {
    store_country_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_store_country_code(), 
      GetArena());
  }
  ::memcpy(&family_groupid_, &from.family_groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&use_account_cart_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(use_account_cart_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_RequestPurchase_Request)
}

void CFamilyGroups_RequestPurchase_Request::SharedCtor() {
store_country_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&family_groupid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&use_account_cart_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(use_account_cart_));
}

CFamilyGroups_RequestPurchase_Request::~CFamilyGroups_RequestPurchase_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_RequestPurchase_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_RequestPurchase_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  store_country_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CFamilyGroups_RequestPurchase_Request::ArenaDtor(void* object) {
  CFamilyGroups_RequestPurchase_Request* _this = reinterpret_cast< CFamilyGroups_RequestPurchase_Request* >(object);
  (void)_this;
}
void CFamilyGroups_RequestPurchase_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_RequestPurchase_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_RequestPurchase_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_RequestPurchase_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    store_country_code_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&family_groupid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&use_account_cart_) -
        reinterpret_cast<char*>(&family_groupid_)) + sizeof(use_account_cart_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_RequestPurchase_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 gidshoppingcart = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_gidshoppingcart(&has_bits);
          gidshoppingcart_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string store_country_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_store_country_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CFamilyGroups_RequestPurchase_Request.store_country_code");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool use_account_cart = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_use_account_cart(&has_bits);
          use_account_cart_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_RequestPurchase_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_RequestPurchase_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  // optional uint64 gidshoppingcart = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_gidshoppingcart(), target);
  }

  // optional string store_country_code = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_store_country_code().data(), static_cast<int>(this->_internal_store_country_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CFamilyGroups_RequestPurchase_Request.store_country_code");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_store_country_code(), target);
  }

  // optional bool use_account_cart = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_use_account_cart(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_RequestPurchase_Request)
  return target;
}

size_t CFamilyGroups_RequestPurchase_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_RequestPurchase_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string store_country_code = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_store_country_code());
    }

    // optional uint64 family_groupid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_family_groupid());
    }

    // optional uint64 gidshoppingcart = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_gidshoppingcart());
    }

    // optional bool use_account_cart = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_RequestPurchase_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_RequestPurchase_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_RequestPurchase_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_RequestPurchase_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_RequestPurchase_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_RequestPurchase_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_RequestPurchase_Request::MergeFrom(const CFamilyGroups_RequestPurchase_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_RequestPurchase_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_store_country_code(from._internal_store_country_code());
    }
    if (cached_has_bits & 0x00000002u) {
      family_groupid_ = from.family_groupid_;
    }
    if (cached_has_bits & 0x00000004u) {
      gidshoppingcart_ = from.gidshoppingcart_;
    }
    if (cached_has_bits & 0x00000008u) {
      use_account_cart_ = from.use_account_cart_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_RequestPurchase_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_RequestPurchase_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_RequestPurchase_Request::CopyFrom(const CFamilyGroups_RequestPurchase_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_RequestPurchase_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_RequestPurchase_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_RequestPurchase_Request::InternalSwap(CFamilyGroups_RequestPurchase_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  store_country_code_.Swap(&other->store_country_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_RequestPurchase_Request, use_account_cart_)
      + sizeof(CFamilyGroups_RequestPurchase_Request::use_account_cart_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_RequestPurchase_Request, family_groupid_)>(
          reinterpret_cast<char*>(&family_groupid_),
          reinterpret_cast<char*>(&other->family_groupid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_RequestPurchase_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_RequestPurchase_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_RequestPurchase_Response>()._has_bits_);
  static void set_has_gidshoppingcart(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_request_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CFamilyGroups_RequestPurchase_Response::CFamilyGroups_RequestPurchase_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_RequestPurchase_Response)
}
CFamilyGroups_RequestPurchase_Response::CFamilyGroups_RequestPurchase_Response(const CFamilyGroups_RequestPurchase_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&gidshoppingcart_, &from.gidshoppingcart_,
    static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
    reinterpret_cast<char*>(&gidshoppingcart_)) + sizeof(request_id_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_RequestPurchase_Response)
}

void CFamilyGroups_RequestPurchase_Response::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&gidshoppingcart_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
    reinterpret_cast<char*>(&gidshoppingcart_)) + sizeof(request_id_));
}

CFamilyGroups_RequestPurchase_Response::~CFamilyGroups_RequestPurchase_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_RequestPurchase_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_RequestPurchase_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_RequestPurchase_Response::ArenaDtor(void* object) {
  CFamilyGroups_RequestPurchase_Response* _this = reinterpret_cast< CFamilyGroups_RequestPurchase_Response* >(object);
  (void)_this;
}
void CFamilyGroups_RequestPurchase_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_RequestPurchase_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_RequestPurchase_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_RequestPurchase_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&gidshoppingcart_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&request_id_) -
        reinterpret_cast<char*>(&gidshoppingcart_)) + sizeof(request_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_RequestPurchase_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 gidshoppingcart = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_gidshoppingcart(&has_bits);
          gidshoppingcart_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 request_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_request_id(&has_bits);
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_RequestPurchase_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_RequestPurchase_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 gidshoppingcart = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_gidshoppingcart(), target);
  }

  // optional uint64 request_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_request_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_RequestPurchase_Response)
  return target;
}

size_t CFamilyGroups_RequestPurchase_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_RequestPurchase_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 gidshoppingcart = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_gidshoppingcart());
    }

    // optional uint64 request_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_request_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_RequestPurchase_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_RequestPurchase_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_RequestPurchase_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_RequestPurchase_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_RequestPurchase_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_RequestPurchase_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_RequestPurchase_Response::MergeFrom(const CFamilyGroups_RequestPurchase_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_RequestPurchase_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      gidshoppingcart_ = from.gidshoppingcart_;
    }
    if (cached_has_bits & 0x00000002u) {
      request_id_ = from.request_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_RequestPurchase_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_RequestPurchase_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_RequestPurchase_Response::CopyFrom(const CFamilyGroups_RequestPurchase_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_RequestPurchase_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_RequestPurchase_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_RequestPurchase_Response::InternalSwap(CFamilyGroups_RequestPurchase_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_RequestPurchase_Response, request_id_)
      + sizeof(CFamilyGroups_RequestPurchase_Response::request_id_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_RequestPurchase_Response, gidshoppingcart_)>(
          reinterpret_cast<char*>(&gidshoppingcart_),
          reinterpret_cast<char*>(&other->gidshoppingcart_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_RequestPurchase_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetPurchaseRequests_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_GetPurchaseRequests_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_rt_include_completed_since(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CFamilyGroups_GetPurchaseRequests_Request::CFamilyGroups_GetPurchaseRequests_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  request_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetPurchaseRequests_Request)
}
CFamilyGroups_GetPurchaseRequests_Request::CFamilyGroups_GetPurchaseRequests_Request(const CFamilyGroups_GetPurchaseRequests_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      request_ids_(from.request_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&family_groupid_, &from.family_groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&rt_include_completed_since_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(rt_include_completed_since_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetPurchaseRequests_Request)
}

void CFamilyGroups_GetPurchaseRequests_Request::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&family_groupid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&rt_include_completed_since_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(rt_include_completed_since_));
}

CFamilyGroups_GetPurchaseRequests_Request::~CFamilyGroups_GetPurchaseRequests_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetPurchaseRequests_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetPurchaseRequests_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_GetPurchaseRequests_Request::ArenaDtor(void* object) {
  CFamilyGroups_GetPurchaseRequests_Request* _this = reinterpret_cast< CFamilyGroups_GetPurchaseRequests_Request* >(object);
  (void)_this;
}
void CFamilyGroups_GetPurchaseRequests_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetPurchaseRequests_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetPurchaseRequests_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetPurchaseRequests_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_ids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&family_groupid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rt_include_completed_since_) -
        reinterpret_cast<char*>(&family_groupid_)) + sizeof(rt_include_completed_since_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetPurchaseRequests_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint64 request_ids = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_request_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<24>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_request_ids(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 rt_include_completed_since = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_rt_include_completed_since(&has_bits);
          rt_include_completed_since_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetPurchaseRequests_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetPurchaseRequests_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  // repeated uint64 request_ids = 3;
  for (int i = 0, n = this->_internal_request_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_request_ids(i), target);
  }

  // optional uint32 rt_include_completed_since = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_rt_include_completed_since(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetPurchaseRequests_Request)
  return target;
}

size_t CFamilyGroups_GetPurchaseRequests_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetPurchaseRequests_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 request_ids = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->request_ids_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_request_ids_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 family_groupid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_family_groupid());
    }

    // optional uint32 rt_include_completed_since = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_rt_include_completed_since());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetPurchaseRequests_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetPurchaseRequests_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetPurchaseRequests_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetPurchaseRequests_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetPurchaseRequests_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetPurchaseRequests_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetPurchaseRequests_Request::MergeFrom(const CFamilyGroups_GetPurchaseRequests_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetPurchaseRequests_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  request_ids_.MergeFrom(from.request_ids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      family_groupid_ = from.family_groupid_;
    }
    if (cached_has_bits & 0x00000002u) {
      rt_include_completed_since_ = from.rt_include_completed_since_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_GetPurchaseRequests_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetPurchaseRequests_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetPurchaseRequests_Request::CopyFrom(const CFamilyGroups_GetPurchaseRequests_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetPurchaseRequests_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetPurchaseRequests_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetPurchaseRequests_Request::InternalSwap(CFamilyGroups_GetPurchaseRequests_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  request_ids_.InternalSwap(&other->request_ids_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_GetPurchaseRequests_Request, rt_include_completed_since_)
      + sizeof(CFamilyGroups_GetPurchaseRequests_Request::rt_include_completed_since_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_GetPurchaseRequests_Request, family_groupid_)>(
          reinterpret_cast<char*>(&family_groupid_),
          reinterpret_cast<char*>(&other->family_groupid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetPurchaseRequests_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PurchaseRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PurchaseRequest>()._has_bits_);
  static void set_has_requester_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_gidshoppingcart(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_time_requested(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_time_responded(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_responder_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_response_action(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_is_completed(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_request_id(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

PurchaseRequest::PurchaseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  requested_packageids_(arena),
  purchased_packageids_(arena),
  requested_bundleids_(arena),
  purchased_bundleids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PurchaseRequest)
}
PurchaseRequest::PurchaseRequest(const PurchaseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      requested_packageids_(from.requested_packageids_),
      purchased_packageids_(from.purchased_packageids_),
      requested_bundleids_(from.requested_bundleids_),
      purchased_bundleids_(from.purchased_bundleids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&requester_steamid_, &from.requester_steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
    reinterpret_cast<char*>(&requester_steamid_)) + sizeof(request_id_));
  // @@protoc_insertion_point(copy_constructor:PurchaseRequest)
}

void PurchaseRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&requester_steamid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&request_id_) -
    reinterpret_cast<char*>(&requester_steamid_)) + sizeof(request_id_));
}

PurchaseRequest::~PurchaseRequest() {
  // @@protoc_insertion_point(destructor:PurchaseRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PurchaseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PurchaseRequest::ArenaDtor(void* object) {
  PurchaseRequest* _this = reinterpret_cast< PurchaseRequest* >(object);
  (void)_this;
}
void PurchaseRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PurchaseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PurchaseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PurchaseRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requested_packageids_.Clear();
  purchased_packageids_.Clear();
  requested_bundleids_.Clear();
  purchased_bundleids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&requester_steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&request_id_) -
        reinterpret_cast<char*>(&requester_steamid_)) + sizeof(request_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PurchaseRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 requester_steamid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_requester_steamid(&has_bits);
          requester_steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional uint64 gidshoppingcart = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_gidshoppingcart(&has_bits);
          gidshoppingcart_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 time_requested = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_time_requested(&has_bits);
          time_requested_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 time_responded = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_time_responded(&has_bits);
          time_responded_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed64 responder_steamid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          _Internal::set_has_responder_steamid(&has_bits);
          responder_steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional .EPurchaseRequestAction response_action = 6 [default = EPurchaseRequestAction_None];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EPurchaseRequestAction_IsValid(val))) {
            _internal_set_response_action(static_cast<::EPurchaseRequestAction>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional bool is_completed = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_is_completed(&has_bits);
          is_completed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 request_id = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_request_id(&has_bits);
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 requested_packageids = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_requested_packageids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<72>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_requested_packageids(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 purchased_packageids = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_purchased_packageids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<80>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_purchased_packageids(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 requested_bundleids = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_requested_bundleids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<88>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_requested_bundleids(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 purchased_bundleids = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_purchased_bundleids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<96>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_purchased_bundleids(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PurchaseRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PurchaseRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 requester_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_requester_steamid(), target);
  }

  // optional uint64 gidshoppingcart = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_gidshoppingcart(), target);
  }

  // optional uint32 time_requested = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_time_requested(), target);
  }

  // optional uint32 time_responded = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_time_responded(), target);
  }

  // optional fixed64 responder_steamid = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(5, this->_internal_responder_steamid(), target);
  }

  // optional .EPurchaseRequestAction response_action = 6 [default = EPurchaseRequestAction_None];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_response_action(), target);
  }

  // optional bool is_completed = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_is_completed(), target);
  }

  // optional uint64 request_id = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(8, this->_internal_request_id(), target);
  }

  // repeated uint32 requested_packageids = 9;
  for (int i = 0, n = this->_internal_requested_packageids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_requested_packageids(i), target);
  }

  // repeated uint32 purchased_packageids = 10;
  for (int i = 0, n = this->_internal_purchased_packageids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_purchased_packageids(i), target);
  }

  // repeated uint32 requested_bundleids = 11;
  for (int i = 0, n = this->_internal_requested_bundleids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_requested_bundleids(i), target);
  }

  // repeated uint32 purchased_bundleids = 12;
  for (int i = 0, n = this->_internal_purchased_bundleids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_purchased_bundleids(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PurchaseRequest)
  return target;
}

size_t PurchaseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PurchaseRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 requested_packageids = 9;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->requested_packageids_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_requested_packageids_size());
    total_size += data_size;
  }

  // repeated uint32 purchased_packageids = 10;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->purchased_packageids_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_purchased_packageids_size());
    total_size += data_size;
  }

  // repeated uint32 requested_bundleids = 11;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->requested_bundleids_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_requested_bundleids_size());
    total_size += data_size;
  }

  // repeated uint32 purchased_bundleids = 12;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->purchased_bundleids_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_purchased_bundleids_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional fixed64 requester_steamid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional uint64 gidshoppingcart = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_gidshoppingcart());
    }

    // optional uint32 time_requested = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_time_requested());
    }

    // optional uint32 time_responded = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_time_responded());
    }

    // optional fixed64 responder_steamid = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

    // optional .EPurchaseRequestAction response_action = 6 [default = EPurchaseRequestAction_None];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_response_action());
    }

    // optional bool is_completed = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional uint64 request_id = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_request_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PurchaseRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PurchaseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PurchaseRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PurchaseRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PurchaseRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PurchaseRequest)
    MergeFrom(*source);
  }
}

void PurchaseRequest::MergeFrom(const PurchaseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PurchaseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requested_packageids_.MergeFrom(from.requested_packageids_);
  purchased_packageids_.MergeFrom(from.purchased_packageids_);
  requested_bundleids_.MergeFrom(from.requested_bundleids_);
  purchased_bundleids_.MergeFrom(from.purchased_bundleids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      requester_steamid_ = from.requester_steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      gidshoppingcart_ = from.gidshoppingcart_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_requested_ = from.time_requested_;
    }
    if (cached_has_bits & 0x00000008u) {
      time_responded_ = from.time_responded_;
    }
    if (cached_has_bits & 0x00000010u) {
      responder_steamid_ = from.responder_steamid_;
    }
    if (cached_has_bits & 0x00000020u) {
      response_action_ = from.response_action_;
    }
    if (cached_has_bits & 0x00000040u) {
      is_completed_ = from.is_completed_;
    }
    if (cached_has_bits & 0x00000080u) {
      request_id_ = from.request_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PurchaseRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PurchaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PurchaseRequest::CopyFrom(const PurchaseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PurchaseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PurchaseRequest::IsInitialized() const {
  return true;
}

void PurchaseRequest::InternalSwap(PurchaseRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  requested_packageids_.InternalSwap(&other->requested_packageids_);
  purchased_packageids_.InternalSwap(&other->purchased_packageids_);
  requested_bundleids_.InternalSwap(&other->requested_bundleids_);
  purchased_bundleids_.InternalSwap(&other->purchased_bundleids_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PurchaseRequest, request_id_)
      + sizeof(PurchaseRequest::request_id_)
      - PROTOBUF_FIELD_OFFSET(PurchaseRequest, requester_steamid_)>(
          reinterpret_cast<char*>(&requester_steamid_),
          reinterpret_cast<char*>(&other->requester_steamid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PurchaseRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetPurchaseRequests_Response::_Internal {
 public:
};

CFamilyGroups_GetPurchaseRequests_Response::CFamilyGroups_GetPurchaseRequests_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  requests_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetPurchaseRequests_Response)
}
CFamilyGroups_GetPurchaseRequests_Response::CFamilyGroups_GetPurchaseRequests_Response(const CFamilyGroups_GetPurchaseRequests_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      requests_(from.requests_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetPurchaseRequests_Response)
}

void CFamilyGroups_GetPurchaseRequests_Response::SharedCtor() {
}

CFamilyGroups_GetPurchaseRequests_Response::~CFamilyGroups_GetPurchaseRequests_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetPurchaseRequests_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetPurchaseRequests_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_GetPurchaseRequests_Response::ArenaDtor(void* object) {
  CFamilyGroups_GetPurchaseRequests_Response* _this = reinterpret_cast< CFamilyGroups_GetPurchaseRequests_Response* >(object);
  (void)_this;
}
void CFamilyGroups_GetPurchaseRequests_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetPurchaseRequests_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetPurchaseRequests_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetPurchaseRequests_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requests_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetPurchaseRequests_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .PurchaseRequest requests = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_requests(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetPurchaseRequests_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetPurchaseRequests_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PurchaseRequest requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_requests_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_requests(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetPurchaseRequests_Response)
  return target;
}

size_t CFamilyGroups_GetPurchaseRequests_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetPurchaseRequests_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PurchaseRequest requests = 1;
  total_size += 1UL * this->_internal_requests_size();
  for (const auto& msg : this->requests_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetPurchaseRequests_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetPurchaseRequests_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetPurchaseRequests_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetPurchaseRequests_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetPurchaseRequests_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetPurchaseRequests_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetPurchaseRequests_Response::MergeFrom(const CFamilyGroups_GetPurchaseRequests_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetPurchaseRequests_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requests_.MergeFrom(from.requests_);
}

void CFamilyGroups_GetPurchaseRequests_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetPurchaseRequests_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetPurchaseRequests_Response::CopyFrom(const CFamilyGroups_GetPurchaseRequests_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetPurchaseRequests_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetPurchaseRequests_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetPurchaseRequests_Response::InternalSwap(CFamilyGroups_GetPurchaseRequests_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  requests_.InternalSwap(&other->requests_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetPurchaseRequests_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_RespondToRequestedPurchase_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_RespondToRequestedPurchase_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_action(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_request_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CFamilyGroups_RespondToRequestedPurchase_Request::CFamilyGroups_RespondToRequestedPurchase_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_RespondToRequestedPurchase_Request)
}
CFamilyGroups_RespondToRequestedPurchase_Request::CFamilyGroups_RespondToRequestedPurchase_Request(const CFamilyGroups_RespondToRequestedPurchase_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&family_groupid_, &from.family_groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(action_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_RespondToRequestedPurchase_Request)
}

void CFamilyGroups_RespondToRequestedPurchase_Request::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&family_groupid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(action_));
}

CFamilyGroups_RespondToRequestedPurchase_Request::~CFamilyGroups_RespondToRequestedPurchase_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_RespondToRequestedPurchase_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_RespondToRequestedPurchase_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_RespondToRequestedPurchase_Request::ArenaDtor(void* object) {
  CFamilyGroups_RespondToRequestedPurchase_Request* _this = reinterpret_cast< CFamilyGroups_RespondToRequestedPurchase_Request* >(object);
  (void)_this;
}
void CFamilyGroups_RespondToRequestedPurchase_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_RespondToRequestedPurchase_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_RespondToRequestedPurchase_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_RespondToRequestedPurchase_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&family_groupid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&action_) -
        reinterpret_cast<char*>(&family_groupid_)) + sizeof(action_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_RespondToRequestedPurchase_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .EPurchaseRequestAction action = 3 [default = EPurchaseRequestAction_None];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EPurchaseRequestAction_IsValid(val))) {
            _internal_set_action(static_cast<::EPurchaseRequestAction>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional uint64 request_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_request_id(&has_bits);
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_RespondToRequestedPurchase_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_RespondToRequestedPurchase_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  // optional .EPurchaseRequestAction action = 3 [default = EPurchaseRequestAction_None];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_action(), target);
  }

  // optional uint64 request_id = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_request_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_RespondToRequestedPurchase_Request)
  return target;
}

size_t CFamilyGroups_RespondToRequestedPurchase_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_RespondToRequestedPurchase_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 family_groupid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_family_groupid());
    }

    // optional uint64 request_id = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_request_id());
    }

    // optional .EPurchaseRequestAction action = 3 [default = EPurchaseRequestAction_None];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_action());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_RespondToRequestedPurchase_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_RespondToRequestedPurchase_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_RespondToRequestedPurchase_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_RespondToRequestedPurchase_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_RespondToRequestedPurchase_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_RespondToRequestedPurchase_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_RespondToRequestedPurchase_Request::MergeFrom(const CFamilyGroups_RespondToRequestedPurchase_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_RespondToRequestedPurchase_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      family_groupid_ = from.family_groupid_;
    }
    if (cached_has_bits & 0x00000002u) {
      request_id_ = from.request_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      action_ = from.action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_RespondToRequestedPurchase_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_RespondToRequestedPurchase_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_RespondToRequestedPurchase_Request::CopyFrom(const CFamilyGroups_RespondToRequestedPurchase_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_RespondToRequestedPurchase_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_RespondToRequestedPurchase_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_RespondToRequestedPurchase_Request::InternalSwap(CFamilyGroups_RespondToRequestedPurchase_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_RespondToRequestedPurchase_Request, action_)
      + sizeof(CFamilyGroups_RespondToRequestedPurchase_Request::action_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_RespondToRequestedPurchase_Request, family_groupid_)>(
          reinterpret_cast<char*>(&family_groupid_),
          reinterpret_cast<char*>(&other->family_groupid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_RespondToRequestedPurchase_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_RespondToRequestedPurchase_Response::_Internal {
 public:
};

CFamilyGroups_RespondToRequestedPurchase_Response::CFamilyGroups_RespondToRequestedPurchase_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_RespondToRequestedPurchase_Response)
}
CFamilyGroups_RespondToRequestedPurchase_Response::CFamilyGroups_RespondToRequestedPurchase_Response(const CFamilyGroups_RespondToRequestedPurchase_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_RespondToRequestedPurchase_Response)
}

void CFamilyGroups_RespondToRequestedPurchase_Response::SharedCtor() {
}

CFamilyGroups_RespondToRequestedPurchase_Response::~CFamilyGroups_RespondToRequestedPurchase_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_RespondToRequestedPurchase_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_RespondToRequestedPurchase_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_RespondToRequestedPurchase_Response::ArenaDtor(void* object) {
  CFamilyGroups_RespondToRequestedPurchase_Response* _this = reinterpret_cast< CFamilyGroups_RespondToRequestedPurchase_Response* >(object);
  (void)_this;
}
void CFamilyGroups_RespondToRequestedPurchase_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_RespondToRequestedPurchase_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_RespondToRequestedPurchase_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_RespondToRequestedPurchase_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_RespondToRequestedPurchase_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_RespondToRequestedPurchase_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_RespondToRequestedPurchase_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_RespondToRequestedPurchase_Response)
  return target;
}

size_t CFamilyGroups_RespondToRequestedPurchase_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_RespondToRequestedPurchase_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_RespondToRequestedPurchase_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_RespondToRequestedPurchase_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_RespondToRequestedPurchase_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_RespondToRequestedPurchase_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_RespondToRequestedPurchase_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_RespondToRequestedPurchase_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_RespondToRequestedPurchase_Response::MergeFrom(const CFamilyGroups_RespondToRequestedPurchase_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_RespondToRequestedPurchase_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CFamilyGroups_RespondToRequestedPurchase_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_RespondToRequestedPurchase_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_RespondToRequestedPurchase_Response::CopyFrom(const CFamilyGroups_RespondToRequestedPurchase_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_RespondToRequestedPurchase_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_RespondToRequestedPurchase_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_RespondToRequestedPurchase_Response::InternalSwap(CFamilyGroups_RespondToRequestedPurchase_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_RespondToRequestedPurchase_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetChangeLog_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_GetChangeLog_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CFamilyGroups_GetChangeLog_Request::CFamilyGroups_GetChangeLog_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetChangeLog_Request)
}
CFamilyGroups_GetChangeLog_Request::CFamilyGroups_GetChangeLog_Request(const CFamilyGroups_GetChangeLog_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  family_groupid_ = from.family_groupid_;
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetChangeLog_Request)
}

void CFamilyGroups_GetChangeLog_Request::SharedCtor() {
family_groupid_ = PROTOBUF_ULONGLONG(0);
}

CFamilyGroups_GetChangeLog_Request::~CFamilyGroups_GetChangeLog_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetChangeLog_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetChangeLog_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_GetChangeLog_Request::ArenaDtor(void* object) {
  CFamilyGroups_GetChangeLog_Request* _this = reinterpret_cast< CFamilyGroups_GetChangeLog_Request* >(object);
  (void)_this;
}
void CFamilyGroups_GetChangeLog_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetChangeLog_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetChangeLog_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetChangeLog_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  family_groupid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetChangeLog_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetChangeLog_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetChangeLog_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetChangeLog_Request)
  return target;
}

size_t CFamilyGroups_GetChangeLog_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetChangeLog_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 family_groupid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_family_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetChangeLog_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetChangeLog_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetChangeLog_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetChangeLog_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetChangeLog_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetChangeLog_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetChangeLog_Request::MergeFrom(const CFamilyGroups_GetChangeLog_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetChangeLog_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_family_groupid()) {
    _internal_set_family_groupid(from._internal_family_groupid());
  }
}

void CFamilyGroups_GetChangeLog_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetChangeLog_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetChangeLog_Request::CopyFrom(const CFamilyGroups_GetChangeLog_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetChangeLog_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetChangeLog_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetChangeLog_Request::InternalSwap(CFamilyGroups_GetChangeLog_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(family_groupid_, other->family_groupid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetChangeLog_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetChangeLog_Response_Change::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_GetChangeLog_Response_Change>()._has_bits_);
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_actor_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_body(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_by_support(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

CFamilyGroups_GetChangeLog_Response_Change::CFamilyGroups_GetChangeLog_Response_Change(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetChangeLog_Response.Change)
}
CFamilyGroups_GetChangeLog_Response_Change::CFamilyGroups_GetChangeLog_Response_Change(const CFamilyGroups_GetChangeLog_Response_Change& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  body_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_body()) {
    body_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_body(), 
      GetArena());
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&by_support_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(by_support_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetChangeLog_Response.Change)
}

void CFamilyGroups_GetChangeLog_Response_Change::SharedCtor() {
body_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&timestamp_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&by_support_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(by_support_));
}

CFamilyGroups_GetChangeLog_Response_Change::~CFamilyGroups_GetChangeLog_Response_Change() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetChangeLog_Response.Change)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetChangeLog_Response_Change::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  body_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CFamilyGroups_GetChangeLog_Response_Change::ArenaDtor(void* object) {
  CFamilyGroups_GetChangeLog_Response_Change* _this = reinterpret_cast< CFamilyGroups_GetChangeLog_Response_Change* >(object);
  (void)_this;
}
void CFamilyGroups_GetChangeLog_Response_Change::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetChangeLog_Response_Change::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetChangeLog_Response_Change::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetChangeLog_Response.Change)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    body_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&by_support_) -
        reinterpret_cast<char*>(&timestamp_)) + sizeof(by_support_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetChangeLog_Response_Change::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_timestamp(&has_bits);
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional fixed64 actor_steamid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_actor_steamid(&has_bits);
          actor_steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional .EFamilyGroupChangeLogType type = 3 [default = InvalidChangeType];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EFamilyGroupChangeLogType_IsValid(val))) {
            _internal_set_type(static_cast<::EFamilyGroupChangeLogType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional string body = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_body();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CFamilyGroups_GetChangeLog_Response.Change.body");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool by_support = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_by_support(&has_bits);
          by_support_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetChangeLog_Response_Change::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetChangeLog_Response.Change)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 timestamp = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_timestamp(), target);
  }

  // optional fixed64 actor_steamid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(2, this->_internal_actor_steamid(), target);
  }

  // optional .EFamilyGroupChangeLogType type = 3 [default = InvalidChangeType];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_type(), target);
  }

  // optional string body = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_body().data(), static_cast<int>(this->_internal_body().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CFamilyGroups_GetChangeLog_Response.Change.body");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_body(), target);
  }

  // optional bool by_support = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_by_support(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetChangeLog_Response.Change)
  return target;
}

size_t CFamilyGroups_GetChangeLog_Response_Change::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetChangeLog_Response.Change)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string body = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_body());
    }

    // optional fixed64 timestamp = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional fixed64 actor_steamid = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional .EFamilyGroupChangeLogType type = 3 [default = InvalidChangeType];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
    }

    // optional bool by_support = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetChangeLog_Response_Change::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetChangeLog_Response.Change)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetChangeLog_Response_Change* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetChangeLog_Response_Change>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetChangeLog_Response.Change)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetChangeLog_Response.Change)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetChangeLog_Response_Change::MergeFrom(const CFamilyGroups_GetChangeLog_Response_Change& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetChangeLog_Response.Change)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_body(from._internal_body());
    }
    if (cached_has_bits & 0x00000002u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000004u) {
      actor_steamid_ = from.actor_steamid_;
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000010u) {
      by_support_ = from.by_support_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_GetChangeLog_Response_Change::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetChangeLog_Response.Change)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetChangeLog_Response_Change::CopyFrom(const CFamilyGroups_GetChangeLog_Response_Change& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetChangeLog_Response.Change)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetChangeLog_Response_Change::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetChangeLog_Response_Change::InternalSwap(CFamilyGroups_GetChangeLog_Response_Change* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  body_.Swap(&other->body_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_GetChangeLog_Response_Change, by_support_)
      + sizeof(CFamilyGroups_GetChangeLog_Response_Change::by_support_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_GetChangeLog_Response_Change, timestamp_)>(
          reinterpret_cast<char*>(&timestamp_),
          reinterpret_cast<char*>(&other->timestamp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetChangeLog_Response_Change::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetChangeLog_Response::_Internal {
 public:
};

CFamilyGroups_GetChangeLog_Response::CFamilyGroups_GetChangeLog_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  changes_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetChangeLog_Response)
}
CFamilyGroups_GetChangeLog_Response::CFamilyGroups_GetChangeLog_Response(const CFamilyGroups_GetChangeLog_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      changes_(from.changes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetChangeLog_Response)
}

void CFamilyGroups_GetChangeLog_Response::SharedCtor() {
}

CFamilyGroups_GetChangeLog_Response::~CFamilyGroups_GetChangeLog_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetChangeLog_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetChangeLog_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_GetChangeLog_Response::ArenaDtor(void* object) {
  CFamilyGroups_GetChangeLog_Response* _this = reinterpret_cast< CFamilyGroups_GetChangeLog_Response* >(object);
  (void)_this;
}
void CFamilyGroups_GetChangeLog_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetChangeLog_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetChangeLog_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetChangeLog_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  changes_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetChangeLog_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .CFamilyGroups_GetChangeLog_Response.Change changes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_changes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetChangeLog_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetChangeLog_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CFamilyGroups_GetChangeLog_Response.Change changes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_changes_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_changes(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetChangeLog_Response)
  return target;
}

size_t CFamilyGroups_GetChangeLog_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetChangeLog_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CFamilyGroups_GetChangeLog_Response.Change changes = 1;
  total_size += 1UL * this->_internal_changes_size();
  for (const auto& msg : this->changes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetChangeLog_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetChangeLog_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetChangeLog_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetChangeLog_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetChangeLog_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetChangeLog_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetChangeLog_Response::MergeFrom(const CFamilyGroups_GetChangeLog_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetChangeLog_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  changes_.MergeFrom(from.changes_);
}

void CFamilyGroups_GetChangeLog_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetChangeLog_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetChangeLog_Response::CopyFrom(const CFamilyGroups_GetChangeLog_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetChangeLog_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetChangeLog_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetChangeLog_Response::InternalSwap(CFamilyGroups_GetChangeLog_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  changes_.InternalSwap(&other->changes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetChangeLog_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_SetFamilyCooldownOverrides_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_SetFamilyCooldownOverrides_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_cooldown_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CFamilyGroups_SetFamilyCooldownOverrides_Request::CFamilyGroups_SetFamilyCooldownOverrides_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_SetFamilyCooldownOverrides_Request)
}
CFamilyGroups_SetFamilyCooldownOverrides_Request::CFamilyGroups_SetFamilyCooldownOverrides_Request(const CFamilyGroups_SetFamilyCooldownOverrides_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&family_groupid_, &from.family_groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&cooldown_count_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(cooldown_count_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_SetFamilyCooldownOverrides_Request)
}

void CFamilyGroups_SetFamilyCooldownOverrides_Request::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&family_groupid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&cooldown_count_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(cooldown_count_));
}

CFamilyGroups_SetFamilyCooldownOverrides_Request::~CFamilyGroups_SetFamilyCooldownOverrides_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_SetFamilyCooldownOverrides_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_SetFamilyCooldownOverrides_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_SetFamilyCooldownOverrides_Request::ArenaDtor(void* object) {
  CFamilyGroups_SetFamilyCooldownOverrides_Request* _this = reinterpret_cast< CFamilyGroups_SetFamilyCooldownOverrides_Request* >(object);
  (void)_this;
}
void CFamilyGroups_SetFamilyCooldownOverrides_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_SetFamilyCooldownOverrides_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_SetFamilyCooldownOverrides_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_SetFamilyCooldownOverrides_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&family_groupid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&cooldown_count_) -
        reinterpret_cast<char*>(&family_groupid_)) + sizeof(cooldown_count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_SetFamilyCooldownOverrides_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 cooldown_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_cooldown_count(&has_bits);
          cooldown_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_SetFamilyCooldownOverrides_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_SetFamilyCooldownOverrides_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  // optional uint32 cooldown_count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_cooldown_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_SetFamilyCooldownOverrides_Request)
  return target;
}

size_t CFamilyGroups_SetFamilyCooldownOverrides_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_SetFamilyCooldownOverrides_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 family_groupid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_family_groupid());
    }

    // optional uint32 cooldown_count = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_cooldown_count());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_SetFamilyCooldownOverrides_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_SetFamilyCooldownOverrides_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_SetFamilyCooldownOverrides_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_SetFamilyCooldownOverrides_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_SetFamilyCooldownOverrides_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_SetFamilyCooldownOverrides_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_SetFamilyCooldownOverrides_Request::MergeFrom(const CFamilyGroups_SetFamilyCooldownOverrides_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_SetFamilyCooldownOverrides_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      family_groupid_ = from.family_groupid_;
    }
    if (cached_has_bits & 0x00000002u) {
      cooldown_count_ = from.cooldown_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_SetFamilyCooldownOverrides_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_SetFamilyCooldownOverrides_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_SetFamilyCooldownOverrides_Request::CopyFrom(const CFamilyGroups_SetFamilyCooldownOverrides_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_SetFamilyCooldownOverrides_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_SetFamilyCooldownOverrides_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_SetFamilyCooldownOverrides_Request::InternalSwap(CFamilyGroups_SetFamilyCooldownOverrides_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_SetFamilyCooldownOverrides_Request, cooldown_count_)
      + sizeof(CFamilyGroups_SetFamilyCooldownOverrides_Request::cooldown_count_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_SetFamilyCooldownOverrides_Request, family_groupid_)>(
          reinterpret_cast<char*>(&family_groupid_),
          reinterpret_cast<char*>(&other->family_groupid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_SetFamilyCooldownOverrides_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_SetFamilyCooldownOverrides_Response::_Internal {
 public:
};

CFamilyGroups_SetFamilyCooldownOverrides_Response::CFamilyGroups_SetFamilyCooldownOverrides_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_SetFamilyCooldownOverrides_Response)
}
CFamilyGroups_SetFamilyCooldownOverrides_Response::CFamilyGroups_SetFamilyCooldownOverrides_Response(const CFamilyGroups_SetFamilyCooldownOverrides_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_SetFamilyCooldownOverrides_Response)
}

void CFamilyGroups_SetFamilyCooldownOverrides_Response::SharedCtor() {
}

CFamilyGroups_SetFamilyCooldownOverrides_Response::~CFamilyGroups_SetFamilyCooldownOverrides_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_SetFamilyCooldownOverrides_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_SetFamilyCooldownOverrides_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_SetFamilyCooldownOverrides_Response::ArenaDtor(void* object) {
  CFamilyGroups_SetFamilyCooldownOverrides_Response* _this = reinterpret_cast< CFamilyGroups_SetFamilyCooldownOverrides_Response* >(object);
  (void)_this;
}
void CFamilyGroups_SetFamilyCooldownOverrides_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_SetFamilyCooldownOverrides_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_SetFamilyCooldownOverrides_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_SetFamilyCooldownOverrides_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_SetFamilyCooldownOverrides_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_SetFamilyCooldownOverrides_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_SetFamilyCooldownOverrides_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_SetFamilyCooldownOverrides_Response)
  return target;
}

size_t CFamilyGroups_SetFamilyCooldownOverrides_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_SetFamilyCooldownOverrides_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_SetFamilyCooldownOverrides_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_SetFamilyCooldownOverrides_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_SetFamilyCooldownOverrides_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_SetFamilyCooldownOverrides_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_SetFamilyCooldownOverrides_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_SetFamilyCooldownOverrides_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_SetFamilyCooldownOverrides_Response::MergeFrom(const CFamilyGroups_SetFamilyCooldownOverrides_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_SetFamilyCooldownOverrides_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CFamilyGroups_SetFamilyCooldownOverrides_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_SetFamilyCooldownOverrides_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_SetFamilyCooldownOverrides_Response::CopyFrom(const CFamilyGroups_SetFamilyCooldownOverrides_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_SetFamilyCooldownOverrides_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_SetFamilyCooldownOverrides_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_SetFamilyCooldownOverrides_Response::InternalSwap(CFamilyGroups_SetFamilyCooldownOverrides_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_SetFamilyCooldownOverrides_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetSharedLibraryApps_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_GetSharedLibraryApps_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_include_own(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_include_excluded(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_language(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_max_apps(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

CFamilyGroups_GetSharedLibraryApps_Request::CFamilyGroups_GetSharedLibraryApps_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetSharedLibraryApps_Request)
}
CFamilyGroups_GetSharedLibraryApps_Request::CFamilyGroups_GetSharedLibraryApps_Request(const CFamilyGroups_GetSharedLibraryApps_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  language_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_language()) {
    language_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_language(), 
      GetArena());
  }
  ::memcpy(&family_groupid_, &from.family_groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_apps_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(max_apps_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetSharedLibraryApps_Request)
}

void CFamilyGroups_GetSharedLibraryApps_Request::SharedCtor() {
language_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&family_groupid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&max_apps_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(max_apps_));
}

CFamilyGroups_GetSharedLibraryApps_Request::~CFamilyGroups_GetSharedLibraryApps_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetSharedLibraryApps_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetSharedLibraryApps_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  language_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CFamilyGroups_GetSharedLibraryApps_Request::ArenaDtor(void* object) {
  CFamilyGroups_GetSharedLibraryApps_Request* _this = reinterpret_cast< CFamilyGroups_GetSharedLibraryApps_Request* >(object);
  (void)_this;
}
void CFamilyGroups_GetSharedLibraryApps_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetSharedLibraryApps_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetSharedLibraryApps_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetSharedLibraryApps_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    language_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&family_groupid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&max_apps_) -
        reinterpret_cast<char*>(&family_groupid_)) + sizeof(max_apps_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetSharedLibraryApps_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional bool include_own = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_include_own(&has_bits);
          include_own_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool include_excluded = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_include_excluded(&has_bits);
          include_excluded_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string language = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_language();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CFamilyGroups_GetSharedLibraryApps_Request.language");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 max_apps = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_max_apps(&has_bits);
          max_apps_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetSharedLibraryApps_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetSharedLibraryApps_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 family_groupid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_family_groupid(), target);
  }

  // optional bool include_own = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_include_own(), target);
  }

  // optional bool include_excluded = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_include_excluded(), target);
  }

  // optional string language = 5;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_language().data(), static_cast<int>(this->_internal_language().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CFamilyGroups_GetSharedLibraryApps_Request.language");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_language(), target);
  }

  // optional uint32 max_apps = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_max_apps(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetSharedLibraryApps_Request)
  return target;
}

size_t CFamilyGroups_GetSharedLibraryApps_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetSharedLibraryApps_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string language = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_language());
    }

    // optional fixed64 family_groupid = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional bool include_own = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool include_excluded = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional uint32 max_apps = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_max_apps());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetSharedLibraryApps_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetSharedLibraryApps_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetSharedLibraryApps_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetSharedLibraryApps_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetSharedLibraryApps_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetSharedLibraryApps_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetSharedLibraryApps_Request::MergeFrom(const CFamilyGroups_GetSharedLibraryApps_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetSharedLibraryApps_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_language(from._internal_language());
    }
    if (cached_has_bits & 0x00000002u) {
      family_groupid_ = from.family_groupid_;
    }
    if (cached_has_bits & 0x00000004u) {
      include_own_ = from.include_own_;
    }
    if (cached_has_bits & 0x00000008u) {
      include_excluded_ = from.include_excluded_;
    }
    if (cached_has_bits & 0x00000010u) {
      max_apps_ = from.max_apps_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_GetSharedLibraryApps_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetSharedLibraryApps_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetSharedLibraryApps_Request::CopyFrom(const CFamilyGroups_GetSharedLibraryApps_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetSharedLibraryApps_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetSharedLibraryApps_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetSharedLibraryApps_Request::InternalSwap(CFamilyGroups_GetSharedLibraryApps_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  language_.Swap(&other->language_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_GetSharedLibraryApps_Request, max_apps_)
      + sizeof(CFamilyGroups_GetSharedLibraryApps_Request::max_apps_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_GetSharedLibraryApps_Request, family_groupid_)>(
          reinterpret_cast<char*>(&family_groupid_),
          reinterpret_cast<char*>(&other->family_groupid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetSharedLibraryApps_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_GetSharedLibraryApps_Response_SharedApp>()._has_bits_);
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_sort_as(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_capsule_filename(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_img_icon_hash(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_exclude_reason(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_rt_time_acquired(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_rt_last_played(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_rt_playtime(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::CFamilyGroups_GetSharedLibraryApps_Response_SharedApp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  owner_steamids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetSharedLibraryApps_Response.SharedApp)
}
CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::CFamilyGroups_GetSharedLibraryApps_Response_SharedApp(const CFamilyGroups_GetSharedLibraryApps_Response_SharedApp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      owner_steamids_(from.owner_steamids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_name()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  sort_as_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_sort_as()) {
    sort_as_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sort_as(), 
      GetArena());
  }
  capsule_filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_capsule_filename()) {
    capsule_filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_capsule_filename(), 
      GetArena());
  }
  img_icon_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_img_icon_hash()) {
    img_icon_hash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_img_icon_hash(), 
      GetArena());
  }
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&rt_last_played_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(rt_last_played_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetSharedLibraryApps_Response.SharedApp)
}

void CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
sort_as_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
capsule_filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
img_icon_hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&appid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&rt_last_played_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(rt_last_played_));
}

CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::~CFamilyGroups_GetSharedLibraryApps_Response_SharedApp() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetSharedLibraryApps_Response.SharedApp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sort_as_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  capsule_filename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  img_icon_hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::ArenaDtor(void* object) {
  CFamilyGroups_GetSharedLibraryApps_Response_SharedApp* _this = reinterpret_cast< CFamilyGroups_GetSharedLibraryApps_Response_SharedApp* >(object);
  (void)_this;
}
void CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetSharedLibraryApps_Response.SharedApp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  owner_steamids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      sort_as_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      capsule_filename_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      img_icon_hash_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&appid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rt_time_acquired_) -
        reinterpret_cast<char*>(&appid_)) + sizeof(rt_time_acquired_));
  }
  rt_last_played_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 appid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_appid(&has_bits);
          appid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated fixed64 owner_steamids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_owner_steamids(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr));
            ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<17>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFixed64Parser(_internal_mutable_owner_steamids(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CFamilyGroups_GetSharedLibraryApps_Response.SharedApp.name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string sort_as = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_sort_as();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CFamilyGroups_GetSharedLibraryApps_Response.SharedApp.sort_as");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string capsule_filename = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_capsule_filename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CFamilyGroups_GetSharedLibraryApps_Response.SharedApp.capsule_filename");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string img_icon_hash = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_img_icon_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CFamilyGroups_GetSharedLibraryApps_Response.SharedApp.img_icon_hash");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ESharedLibraryExcludeReason exclude_reason = 10 [default = ESharedLibrary_Included];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ESharedLibraryExcludeReason_IsValid(val))) {
            _internal_set_exclude_reason(static_cast<::ESharedLibraryExcludeReason>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(10, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional uint32 rt_time_acquired = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_rt_time_acquired(&has_bits);
          rt_time_acquired_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 rt_last_played = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_rt_last_played(&has_bits);
          rt_last_played_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 rt_playtime = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_rt_playtime(&has_bits);
          rt_playtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetSharedLibraryApps_Response.SharedApp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_appid(), target);
  }

  // repeated fixed64 owner_steamids = 2;
  for (int i = 0, n = this->_internal_owner_steamids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(2, this->_internal_owner_steamids(i), target);
  }

  // optional string name = 6;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CFamilyGroups_GetSharedLibraryApps_Response.SharedApp.name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_name(), target);
  }

  // optional string sort_as = 7;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_sort_as().data(), static_cast<int>(this->_internal_sort_as().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CFamilyGroups_GetSharedLibraryApps_Response.SharedApp.sort_as");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_sort_as(), target);
  }

  // optional string capsule_filename = 8;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_capsule_filename().data(), static_cast<int>(this->_internal_capsule_filename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CFamilyGroups_GetSharedLibraryApps_Response.SharedApp.capsule_filename");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_capsule_filename(), target);
  }

  // optional string img_icon_hash = 9;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_img_icon_hash().data(), static_cast<int>(this->_internal_img_icon_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CFamilyGroups_GetSharedLibraryApps_Response.SharedApp.img_icon_hash");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_img_icon_hash(), target);
  }

  // optional .ESharedLibraryExcludeReason exclude_reason = 10 [default = ESharedLibrary_Included];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_exclude_reason(), target);
  }

  // optional uint32 rt_time_acquired = 11;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_rt_time_acquired(), target);
  }

  // optional uint32 rt_last_played = 12;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_rt_last_played(), target);
  }

  // optional uint32 rt_playtime = 13;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_rt_playtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetSharedLibraryApps_Response.SharedApp)
  return target;
}

size_t CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetSharedLibraryApps_Response.SharedApp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated fixed64 owner_steamids = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_owner_steamids_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_owner_steamids_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string name = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string sort_as = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_sort_as());
    }

    // optional string capsule_filename = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_capsule_filename());
    }

    // optional string img_icon_hash = 9;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_img_icon_hash());
    }

    // optional uint32 appid = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_appid());
    }

    // optional .ESharedLibraryExcludeReason exclude_reason = 10 [default = ESharedLibrary_Included];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_exclude_reason());
    }

    // optional uint32 rt_playtime = 13;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_rt_playtime());
    }

    // optional uint32 rt_time_acquired = 11;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_rt_time_acquired());
    }

  }
  // optional uint32 rt_last_played = 12;
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_rt_last_played());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetSharedLibraryApps_Response.SharedApp)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetSharedLibraryApps_Response_SharedApp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetSharedLibraryApps_Response_SharedApp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetSharedLibraryApps_Response.SharedApp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetSharedLibraryApps_Response.SharedApp)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::MergeFrom(const CFamilyGroups_GetSharedLibraryApps_Response_SharedApp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetSharedLibraryApps_Response.SharedApp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  owner_steamids_.MergeFrom(from.owner_steamids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_sort_as(from._internal_sort_as());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_capsule_filename(from._internal_capsule_filename());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_img_icon_hash(from._internal_img_icon_hash());
    }
    if (cached_has_bits & 0x00000010u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000020u) {
      exclude_reason_ = from.exclude_reason_;
    }
    if (cached_has_bits & 0x00000040u) {
      rt_playtime_ = from.rt_playtime_;
    }
    if (cached_has_bits & 0x00000080u) {
      rt_time_acquired_ = from.rt_time_acquired_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _internal_set_rt_last_played(from._internal_rt_last_played());
  }
}

void CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetSharedLibraryApps_Response.SharedApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::CopyFrom(const CFamilyGroups_GetSharedLibraryApps_Response_SharedApp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetSharedLibraryApps_Response.SharedApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::InternalSwap(CFamilyGroups_GetSharedLibraryApps_Response_SharedApp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  owner_steamids_.InternalSwap(&other->owner_steamids_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sort_as_.Swap(&other->sort_as_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  capsule_filename_.Swap(&other->capsule_filename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  img_icon_hash_.Swap(&other->img_icon_hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_GetSharedLibraryApps_Response_SharedApp, rt_last_played_)
      + sizeof(CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::rt_last_played_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_GetSharedLibraryApps_Response_SharedApp, appid_)>(
          reinterpret_cast<char*>(&appid_),
          reinterpret_cast<char*>(&other->appid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetSharedLibraryApps_Response_SharedApp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetSharedLibraryApps_Response::_Internal {
 public:
};

CFamilyGroups_GetSharedLibraryApps_Response::CFamilyGroups_GetSharedLibraryApps_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  apps_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetSharedLibraryApps_Response)
}
CFamilyGroups_GetSharedLibraryApps_Response::CFamilyGroups_GetSharedLibraryApps_Response(const CFamilyGroups_GetSharedLibraryApps_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      apps_(from.apps_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetSharedLibraryApps_Response)
}

void CFamilyGroups_GetSharedLibraryApps_Response::SharedCtor() {
}

CFamilyGroups_GetSharedLibraryApps_Response::~CFamilyGroups_GetSharedLibraryApps_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetSharedLibraryApps_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetSharedLibraryApps_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_GetSharedLibraryApps_Response::ArenaDtor(void* object) {
  CFamilyGroups_GetSharedLibraryApps_Response* _this = reinterpret_cast< CFamilyGroups_GetSharedLibraryApps_Response* >(object);
  (void)_this;
}
void CFamilyGroups_GetSharedLibraryApps_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetSharedLibraryApps_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetSharedLibraryApps_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetSharedLibraryApps_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apps_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetSharedLibraryApps_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .CFamilyGroups_GetSharedLibraryApps_Response.SharedApp apps = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_apps(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetSharedLibraryApps_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetSharedLibraryApps_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CFamilyGroups_GetSharedLibraryApps_Response.SharedApp apps = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_apps_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_apps(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetSharedLibraryApps_Response)
  return target;
}

size_t CFamilyGroups_GetSharedLibraryApps_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetSharedLibraryApps_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CFamilyGroups_GetSharedLibraryApps_Response.SharedApp apps = 1;
  total_size += 1UL * this->_internal_apps_size();
  for (const auto& msg : this->apps_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetSharedLibraryApps_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetSharedLibraryApps_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetSharedLibraryApps_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetSharedLibraryApps_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetSharedLibraryApps_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetSharedLibraryApps_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetSharedLibraryApps_Response::MergeFrom(const CFamilyGroups_GetSharedLibraryApps_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetSharedLibraryApps_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  apps_.MergeFrom(from.apps_);
}

void CFamilyGroups_GetSharedLibraryApps_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetSharedLibraryApps_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetSharedLibraryApps_Response::CopyFrom(const CFamilyGroups_GetSharedLibraryApps_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetSharedLibraryApps_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetSharedLibraryApps_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetSharedLibraryApps_Response::InternalSwap(CFamilyGroups_GetSharedLibraryApps_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  apps_.InternalSwap(&other->apps_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetSharedLibraryApps_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_SetPreferredLender_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_SetPreferredLender_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_lender_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CFamilyGroups_SetPreferredLender_Request::CFamilyGroups_SetPreferredLender_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_SetPreferredLender_Request)
}
CFamilyGroups_SetPreferredLender_Request::CFamilyGroups_SetPreferredLender_Request(const CFamilyGroups_SetPreferredLender_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&family_groupid_, &from.family_groupid_,
    static_cast<size_t>(reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(appid_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_SetPreferredLender_Request)
}

void CFamilyGroups_SetPreferredLender_Request::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&family_groupid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&family_groupid_)) + sizeof(appid_));
}

CFamilyGroups_SetPreferredLender_Request::~CFamilyGroups_SetPreferredLender_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_SetPreferredLender_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_SetPreferredLender_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_SetPreferredLender_Request::ArenaDtor(void* object) {
  CFamilyGroups_SetPreferredLender_Request* _this = reinterpret_cast< CFamilyGroups_SetPreferredLender_Request* >(object);
  (void)_this;
}
void CFamilyGroups_SetPreferredLender_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_SetPreferredLender_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_SetPreferredLender_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_SetPreferredLender_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&family_groupid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&appid_) -
        reinterpret_cast<char*>(&family_groupid_)) + sizeof(appid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_SetPreferredLender_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 appid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_appid(&has_bits);
          appid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed64 lender_steamid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _Internal::set_has_lender_steamid(&has_bits);
          lender_steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_SetPreferredLender_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_SetPreferredLender_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_appid(), target);
  }

  // optional fixed64 lender_steamid = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(3, this->_internal_lender_steamid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_SetPreferredLender_Request)
  return target;
}

size_t CFamilyGroups_SetPreferredLender_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_SetPreferredLender_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 family_groupid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_family_groupid());
    }

    // optional fixed64 lender_steamid = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional uint32 appid = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_appid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_SetPreferredLender_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_SetPreferredLender_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_SetPreferredLender_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_SetPreferredLender_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_SetPreferredLender_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_SetPreferredLender_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_SetPreferredLender_Request::MergeFrom(const CFamilyGroups_SetPreferredLender_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_SetPreferredLender_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      family_groupid_ = from.family_groupid_;
    }
    if (cached_has_bits & 0x00000002u) {
      lender_steamid_ = from.lender_steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_SetPreferredLender_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_SetPreferredLender_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_SetPreferredLender_Request::CopyFrom(const CFamilyGroups_SetPreferredLender_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_SetPreferredLender_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_SetPreferredLender_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_SetPreferredLender_Request::InternalSwap(CFamilyGroups_SetPreferredLender_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_SetPreferredLender_Request, appid_)
      + sizeof(CFamilyGroups_SetPreferredLender_Request::appid_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_SetPreferredLender_Request, family_groupid_)>(
          reinterpret_cast<char*>(&family_groupid_),
          reinterpret_cast<char*>(&other->family_groupid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_SetPreferredLender_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_SetPreferredLender_Response::_Internal {
 public:
};

CFamilyGroups_SetPreferredLender_Response::CFamilyGroups_SetPreferredLender_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_SetPreferredLender_Response)
}
CFamilyGroups_SetPreferredLender_Response::CFamilyGroups_SetPreferredLender_Response(const CFamilyGroups_SetPreferredLender_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_SetPreferredLender_Response)
}

void CFamilyGroups_SetPreferredLender_Response::SharedCtor() {
}

CFamilyGroups_SetPreferredLender_Response::~CFamilyGroups_SetPreferredLender_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_SetPreferredLender_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_SetPreferredLender_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_SetPreferredLender_Response::ArenaDtor(void* object) {
  CFamilyGroups_SetPreferredLender_Response* _this = reinterpret_cast< CFamilyGroups_SetPreferredLender_Response* >(object);
  (void)_this;
}
void CFamilyGroups_SetPreferredLender_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_SetPreferredLender_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_SetPreferredLender_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_SetPreferredLender_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_SetPreferredLender_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_SetPreferredLender_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_SetPreferredLender_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_SetPreferredLender_Response)
  return target;
}

size_t CFamilyGroups_SetPreferredLender_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_SetPreferredLender_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_SetPreferredLender_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_SetPreferredLender_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_SetPreferredLender_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_SetPreferredLender_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_SetPreferredLender_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_SetPreferredLender_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_SetPreferredLender_Response::MergeFrom(const CFamilyGroups_SetPreferredLender_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_SetPreferredLender_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CFamilyGroups_SetPreferredLender_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_SetPreferredLender_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_SetPreferredLender_Response::CopyFrom(const CFamilyGroups_SetPreferredLender_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_SetPreferredLender_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_SetPreferredLender_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_SetPreferredLender_Response::InternalSwap(CFamilyGroups_SetPreferredLender_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_SetPreferredLender_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetPreferredLenders_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_GetPreferredLenders_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CFamilyGroups_GetPreferredLenders_Request::CFamilyGroups_GetPreferredLenders_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetPreferredLenders_Request)
}
CFamilyGroups_GetPreferredLenders_Request::CFamilyGroups_GetPreferredLenders_Request(const CFamilyGroups_GetPreferredLenders_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  family_groupid_ = from.family_groupid_;
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetPreferredLenders_Request)
}

void CFamilyGroups_GetPreferredLenders_Request::SharedCtor() {
family_groupid_ = PROTOBUF_ULONGLONG(0);
}

CFamilyGroups_GetPreferredLenders_Request::~CFamilyGroups_GetPreferredLenders_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetPreferredLenders_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetPreferredLenders_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_GetPreferredLenders_Request::ArenaDtor(void* object) {
  CFamilyGroups_GetPreferredLenders_Request* _this = reinterpret_cast< CFamilyGroups_GetPreferredLenders_Request* >(object);
  (void)_this;
}
void CFamilyGroups_GetPreferredLenders_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetPreferredLenders_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetPreferredLenders_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetPreferredLenders_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  family_groupid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetPreferredLenders_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetPreferredLenders_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetPreferredLenders_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetPreferredLenders_Request)
  return target;
}

size_t CFamilyGroups_GetPreferredLenders_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetPreferredLenders_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 family_groupid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_family_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetPreferredLenders_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetPreferredLenders_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetPreferredLenders_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetPreferredLenders_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetPreferredLenders_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetPreferredLenders_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetPreferredLenders_Request::MergeFrom(const CFamilyGroups_GetPreferredLenders_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetPreferredLenders_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_family_groupid()) {
    _internal_set_family_groupid(from._internal_family_groupid());
  }
}

void CFamilyGroups_GetPreferredLenders_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetPreferredLenders_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetPreferredLenders_Request::CopyFrom(const CFamilyGroups_GetPreferredLenders_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetPreferredLenders_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetPreferredLenders_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetPreferredLenders_Request::InternalSwap(CFamilyGroups_GetPreferredLenders_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(family_groupid_, other->family_groupid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetPreferredLenders_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetPreferredLenders_Response_FamilyMember::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_GetPreferredLenders_Response_FamilyMember>()._has_bits_);
  static void set_has_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CFamilyGroups_GetPreferredLenders_Response_FamilyMember::CFamilyGroups_GetPreferredLenders_Response_FamilyMember(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  preferred_appids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetPreferredLenders_Response.FamilyMember)
}
CFamilyGroups_GetPreferredLenders_Response_FamilyMember::CFamilyGroups_GetPreferredLenders_Response_FamilyMember(const CFamilyGroups_GetPreferredLenders_Response_FamilyMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      preferred_appids_(from.preferred_appids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetPreferredLenders_Response.FamilyMember)
}

void CFamilyGroups_GetPreferredLenders_Response_FamilyMember::SharedCtor() {
steamid_ = PROTOBUF_ULONGLONG(0);
}

CFamilyGroups_GetPreferredLenders_Response_FamilyMember::~CFamilyGroups_GetPreferredLenders_Response_FamilyMember() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetPreferredLenders_Response.FamilyMember)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetPreferredLenders_Response_FamilyMember::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_GetPreferredLenders_Response_FamilyMember::ArenaDtor(void* object) {
  CFamilyGroups_GetPreferredLenders_Response_FamilyMember* _this = reinterpret_cast< CFamilyGroups_GetPreferredLenders_Response_FamilyMember* >(object);
  (void)_this;
}
void CFamilyGroups_GetPreferredLenders_Response_FamilyMember::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetPreferredLenders_Response_FamilyMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetPreferredLenders_Response_FamilyMember::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetPreferredLenders_Response.FamilyMember)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  preferred_appids_.Clear();
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetPreferredLenders_Response_FamilyMember::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 steamid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_steamid(&has_bits);
          steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // repeated uint32 preferred_appids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_preferred_appids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_preferred_appids(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetPreferredLenders_Response_FamilyMember::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetPreferredLenders_Response.FamilyMember)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_steamid(), target);
  }

  // repeated uint32 preferred_appids = 2;
  for (int i = 0, n = this->_internal_preferred_appids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_preferred_appids(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetPreferredLenders_Response.FamilyMember)
  return target;
}

size_t CFamilyGroups_GetPreferredLenders_Response_FamilyMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetPreferredLenders_Response.FamilyMember)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 preferred_appids = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->preferred_appids_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_preferred_appids_size());
    total_size += data_size;
  }

  // optional fixed64 steamid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetPreferredLenders_Response_FamilyMember::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetPreferredLenders_Response.FamilyMember)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetPreferredLenders_Response_FamilyMember* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetPreferredLenders_Response_FamilyMember>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetPreferredLenders_Response.FamilyMember)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetPreferredLenders_Response.FamilyMember)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetPreferredLenders_Response_FamilyMember::MergeFrom(const CFamilyGroups_GetPreferredLenders_Response_FamilyMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetPreferredLenders_Response.FamilyMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  preferred_appids_.MergeFrom(from.preferred_appids_);
  if (from._internal_has_steamid()) {
    _internal_set_steamid(from._internal_steamid());
  }
}

void CFamilyGroups_GetPreferredLenders_Response_FamilyMember::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetPreferredLenders_Response.FamilyMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetPreferredLenders_Response_FamilyMember::CopyFrom(const CFamilyGroups_GetPreferredLenders_Response_FamilyMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetPreferredLenders_Response.FamilyMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetPreferredLenders_Response_FamilyMember::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetPreferredLenders_Response_FamilyMember::InternalSwap(CFamilyGroups_GetPreferredLenders_Response_FamilyMember* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  preferred_appids_.InternalSwap(&other->preferred_appids_);
  swap(steamid_, other->steamid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetPreferredLenders_Response_FamilyMember::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetPreferredLenders_Response::_Internal {
 public:
};

CFamilyGroups_GetPreferredLenders_Response::CFamilyGroups_GetPreferredLenders_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  members_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetPreferredLenders_Response)
}
CFamilyGroups_GetPreferredLenders_Response::CFamilyGroups_GetPreferredLenders_Response(const CFamilyGroups_GetPreferredLenders_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      members_(from.members_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetPreferredLenders_Response)
}

void CFamilyGroups_GetPreferredLenders_Response::SharedCtor() {
}

CFamilyGroups_GetPreferredLenders_Response::~CFamilyGroups_GetPreferredLenders_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetPreferredLenders_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetPreferredLenders_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_GetPreferredLenders_Response::ArenaDtor(void* object) {
  CFamilyGroups_GetPreferredLenders_Response* _this = reinterpret_cast< CFamilyGroups_GetPreferredLenders_Response* >(object);
  (void)_this;
}
void CFamilyGroups_GetPreferredLenders_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetPreferredLenders_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetPreferredLenders_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetPreferredLenders_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetPreferredLenders_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .CFamilyGroups_GetPreferredLenders_Response.FamilyMember members = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_members(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetPreferredLenders_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetPreferredLenders_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CFamilyGroups_GetPreferredLenders_Response.FamilyMember members = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_members_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_members(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetPreferredLenders_Response)
  return target;
}

size_t CFamilyGroups_GetPreferredLenders_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetPreferredLenders_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CFamilyGroups_GetPreferredLenders_Response.FamilyMember members = 1;
  total_size += 1UL * this->_internal_members_size();
  for (const auto& msg : this->members_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetPreferredLenders_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetPreferredLenders_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetPreferredLenders_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetPreferredLenders_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetPreferredLenders_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetPreferredLenders_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetPreferredLenders_Response::MergeFrom(const CFamilyGroups_GetPreferredLenders_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetPreferredLenders_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_.MergeFrom(from.members_);
}

void CFamilyGroups_GetPreferredLenders_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetPreferredLenders_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetPreferredLenders_Response::CopyFrom(const CFamilyGroups_GetPreferredLenders_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetPreferredLenders_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetPreferredLenders_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetPreferredLenders_Response::InternalSwap(CFamilyGroups_GetPreferredLenders_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  members_.InternalSwap(&other->members_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetPreferredLenders_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetDispersionForFamily_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_GetDispersionForFamily_Request>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CFamilyGroups_GetDispersionForFamily_Request::CFamilyGroups_GetDispersionForFamily_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetDispersionForFamily_Request)
}
CFamilyGroups_GetDispersionForFamily_Request::CFamilyGroups_GetDispersionForFamily_Request(const CFamilyGroups_GetDispersionForFamily_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  family_groupid_ = from.family_groupid_;
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetDispersionForFamily_Request)
}

void CFamilyGroups_GetDispersionForFamily_Request::SharedCtor() {
family_groupid_ = PROTOBUF_ULONGLONG(0);
}

CFamilyGroups_GetDispersionForFamily_Request::~CFamilyGroups_GetDispersionForFamily_Request() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetDispersionForFamily_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetDispersionForFamily_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_GetDispersionForFamily_Request::ArenaDtor(void* object) {
  CFamilyGroups_GetDispersionForFamily_Request* _this = reinterpret_cast< CFamilyGroups_GetDispersionForFamily_Request* >(object);
  (void)_this;
}
void CFamilyGroups_GetDispersionForFamily_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetDispersionForFamily_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetDispersionForFamily_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetDispersionForFamily_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  family_groupid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetDispersionForFamily_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetDispersionForFamily_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetDispersionForFamily_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetDispersionForFamily_Request)
  return target;
}

size_t CFamilyGroups_GetDispersionForFamily_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetDispersionForFamily_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 family_groupid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_family_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetDispersionForFamily_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetDispersionForFamily_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetDispersionForFamily_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetDispersionForFamily_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetDispersionForFamily_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetDispersionForFamily_Request)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetDispersionForFamily_Request::MergeFrom(const CFamilyGroups_GetDispersionForFamily_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetDispersionForFamily_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_family_groupid()) {
    _internal_set_family_groupid(from._internal_family_groupid());
  }
}

void CFamilyGroups_GetDispersionForFamily_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetDispersionForFamily_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetDispersionForFamily_Request::CopyFrom(const CFamilyGroups_GetDispersionForFamily_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetDispersionForFamily_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetDispersionForFamily_Request::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetDispersionForFamily_Request::InternalSwap(CFamilyGroups_GetDispersionForFamily_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(family_groupid_, other->family_groupid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetDispersionForFamily_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_FamilyDispersionGraph_Edge::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_FamilyDispersionGraph_Edge>()._has_bits_);
  static void set_has_accountid1(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_accountid2(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_distance(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CFamilyGroups_FamilyDispersionGraph_Edge::CFamilyGroups_FamilyDispersionGraph_Edge(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_FamilyDispersionGraph.Edge)
}
CFamilyGroups_FamilyDispersionGraph_Edge::CFamilyGroups_FamilyDispersionGraph_Edge(const CFamilyGroups_FamilyDispersionGraph_Edge& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&accountid1_, &from.accountid1_,
    static_cast<size_t>(reinterpret_cast<char*>(&distance_) -
    reinterpret_cast<char*>(&accountid1_)) + sizeof(distance_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_FamilyDispersionGraph.Edge)
}

void CFamilyGroups_FamilyDispersionGraph_Edge::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&accountid1_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&distance_) -
    reinterpret_cast<char*>(&accountid1_)) + sizeof(distance_));
}

CFamilyGroups_FamilyDispersionGraph_Edge::~CFamilyGroups_FamilyDispersionGraph_Edge() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_FamilyDispersionGraph.Edge)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_FamilyDispersionGraph_Edge::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_FamilyDispersionGraph_Edge::ArenaDtor(void* object) {
  CFamilyGroups_FamilyDispersionGraph_Edge* _this = reinterpret_cast< CFamilyGroups_FamilyDispersionGraph_Edge* >(object);
  (void)_this;
}
void CFamilyGroups_FamilyDispersionGraph_Edge::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_FamilyDispersionGraph_Edge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_FamilyDispersionGraph_Edge::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_FamilyDispersionGraph.Edge)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&accountid1_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&distance_) -
        reinterpret_cast<char*>(&accountid1_)) + sizeof(distance_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_FamilyDispersionGraph_Edge::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 accountid1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_accountid1(&has_bits);
          accountid1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 accountid2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_accountid2(&has_bits);
          accountid2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional double distance = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _Internal::set_has_distance(&has_bits);
          distance_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_FamilyDispersionGraph_Edge::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_FamilyDispersionGraph.Edge)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 accountid1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_accountid1(), target);
  }

  // optional uint32 accountid2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_accountid2(), target);
  }

  // optional double distance = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_distance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_FamilyDispersionGraph.Edge)
  return target;
}

size_t CFamilyGroups_FamilyDispersionGraph_Edge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_FamilyDispersionGraph.Edge)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 accountid1 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_accountid1());
    }

    // optional uint32 accountid2 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_accountid2());
    }

    // optional double distance = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_FamilyDispersionGraph_Edge::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_FamilyDispersionGraph.Edge)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_FamilyDispersionGraph_Edge* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_FamilyDispersionGraph_Edge>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_FamilyDispersionGraph.Edge)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_FamilyDispersionGraph.Edge)
    MergeFrom(*source);
  }
}

void CFamilyGroups_FamilyDispersionGraph_Edge::MergeFrom(const CFamilyGroups_FamilyDispersionGraph_Edge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_FamilyDispersionGraph.Edge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      accountid1_ = from.accountid1_;
    }
    if (cached_has_bits & 0x00000002u) {
      accountid2_ = from.accountid2_;
    }
    if (cached_has_bits & 0x00000004u) {
      distance_ = from.distance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_FamilyDispersionGraph_Edge::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_FamilyDispersionGraph.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_FamilyDispersionGraph_Edge::CopyFrom(const CFamilyGroups_FamilyDispersionGraph_Edge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_FamilyDispersionGraph.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_FamilyDispersionGraph_Edge::IsInitialized() const {
  return true;
}

void CFamilyGroups_FamilyDispersionGraph_Edge::InternalSwap(CFamilyGroups_FamilyDispersionGraph_Edge* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_FamilyDispersionGraph_Edge, distance_)
      + sizeof(CFamilyGroups_FamilyDispersionGraph_Edge::distance_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_FamilyDispersionGraph_Edge, accountid1_)>(
          reinterpret_cast<char*>(&accountid1_),
          reinterpret_cast<char*>(&other->accountid1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_FamilyDispersionGraph_Edge::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_FamilyDispersionGraph::_Internal {
 public:
};

CFamilyGroups_FamilyDispersionGraph::CFamilyGroups_FamilyDispersionGraph(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  edges_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_FamilyDispersionGraph)
}
CFamilyGroups_FamilyDispersionGraph::CFamilyGroups_FamilyDispersionGraph(const CFamilyGroups_FamilyDispersionGraph& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      edges_(from.edges_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_FamilyDispersionGraph)
}

void CFamilyGroups_FamilyDispersionGraph::SharedCtor() {
}

CFamilyGroups_FamilyDispersionGraph::~CFamilyGroups_FamilyDispersionGraph() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_FamilyDispersionGraph)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_FamilyDispersionGraph::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroups_FamilyDispersionGraph::ArenaDtor(void* object) {
  CFamilyGroups_FamilyDispersionGraph* _this = reinterpret_cast< CFamilyGroups_FamilyDispersionGraph* >(object);
  (void)_this;
}
void CFamilyGroups_FamilyDispersionGraph::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_FamilyDispersionGraph::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_FamilyDispersionGraph::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_FamilyDispersionGraph)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edges_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_FamilyDispersionGraph::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .CFamilyGroups_FamilyDispersionGraph.Edge edges = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_edges(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_FamilyDispersionGraph::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_FamilyDispersionGraph)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CFamilyGroups_FamilyDispersionGraph.Edge edges = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_edges_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_edges(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_FamilyDispersionGraph)
  return target;
}

size_t CFamilyGroups_FamilyDispersionGraph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_FamilyDispersionGraph)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CFamilyGroups_FamilyDispersionGraph.Edge edges = 1;
  total_size += 1UL * this->_internal_edges_size();
  for (const auto& msg : this->edges_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_FamilyDispersionGraph::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_FamilyDispersionGraph)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_FamilyDispersionGraph* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_FamilyDispersionGraph>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_FamilyDispersionGraph)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_FamilyDispersionGraph)
    MergeFrom(*source);
  }
}

void CFamilyGroups_FamilyDispersionGraph::MergeFrom(const CFamilyGroups_FamilyDispersionGraph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_FamilyDispersionGraph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  edges_.MergeFrom(from.edges_);
}

void CFamilyGroups_FamilyDispersionGraph::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_FamilyDispersionGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_FamilyDispersionGraph::CopyFrom(const CFamilyGroups_FamilyDispersionGraph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_FamilyDispersionGraph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_FamilyDispersionGraph::IsInitialized() const {
  return true;
}

void CFamilyGroups_FamilyDispersionGraph::InternalSwap(CFamilyGroups_FamilyDispersionGraph* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  edges_.InternalSwap(&other->edges_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_FamilyDispersionGraph::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroups_GetDispersionForFamily_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroups_GetDispersionForFamily_Response>()._has_bits_);
  static void set_has_total_dispersion(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CFamilyGroups_FamilyDispersionGraph& graph(const CFamilyGroups_GetDispersionForFamily_Response* msg);
  static void set_has_graph(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CFamilyGroups_FamilyDispersionGraph&
CFamilyGroups_GetDispersionForFamily_Response::_Internal::graph(const CFamilyGroups_GetDispersionForFamily_Response* msg) {
  return *msg->graph_;
}
CFamilyGroups_GetDispersionForFamily_Response::CFamilyGroups_GetDispersionForFamily_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroups_GetDispersionForFamily_Response)
}
CFamilyGroups_GetDispersionForFamily_Response::CFamilyGroups_GetDispersionForFamily_Response(const CFamilyGroups_GetDispersionForFamily_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_graph()) {
    graph_ = new ::CFamilyGroups_FamilyDispersionGraph(*from.graph_);
  } else {
    graph_ = nullptr;
  }
  total_dispersion_ = from.total_dispersion_;
  // @@protoc_insertion_point(copy_constructor:CFamilyGroups_GetDispersionForFamily_Response)
}

void CFamilyGroups_GetDispersionForFamily_Response::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&graph_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&total_dispersion_) -
    reinterpret_cast<char*>(&graph_)) + sizeof(total_dispersion_));
}

CFamilyGroups_GetDispersionForFamily_Response::~CFamilyGroups_GetDispersionForFamily_Response() {
  // @@protoc_insertion_point(destructor:CFamilyGroups_GetDispersionForFamily_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroups_GetDispersionForFamily_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete graph_;
}

void CFamilyGroups_GetDispersionForFamily_Response::ArenaDtor(void* object) {
  CFamilyGroups_GetDispersionForFamily_Response* _this = reinterpret_cast< CFamilyGroups_GetDispersionForFamily_Response* >(object);
  (void)_this;
}
void CFamilyGroups_GetDispersionForFamily_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroups_GetDispersionForFamily_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroups_GetDispersionForFamily_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroups_GetDispersionForFamily_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(graph_ != nullptr);
    graph_->Clear();
  }
  total_dispersion_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroups_GetDispersionForFamily_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional double total_dispersion = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_total_dispersion(&has_bits);
          total_dispersion_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .CFamilyGroups_FamilyDispersionGraph graph = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_graph(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroups_GetDispersionForFamily_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroups_GetDispersionForFamily_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double total_dispersion = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_total_dispersion(), target);
  }

  // optional .CFamilyGroups_FamilyDispersionGraph graph = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::graph(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroups_GetDispersionForFamily_Response)
  return target;
}

size_t CFamilyGroups_GetDispersionForFamily_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroups_GetDispersionForFamily_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CFamilyGroups_FamilyDispersionGraph graph = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *graph_);
    }

    // optional double total_dispersion = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroups_GetDispersionForFamily_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroups_GetDispersionForFamily_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroups_GetDispersionForFamily_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroups_GetDispersionForFamily_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroups_GetDispersionForFamily_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroups_GetDispersionForFamily_Response)
    MergeFrom(*source);
  }
}

void CFamilyGroups_GetDispersionForFamily_Response::MergeFrom(const CFamilyGroups_GetDispersionForFamily_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroups_GetDispersionForFamily_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_graph()->::CFamilyGroups_FamilyDispersionGraph::MergeFrom(from._internal_graph());
    }
    if (cached_has_bits & 0x00000002u) {
      total_dispersion_ = from.total_dispersion_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroups_GetDispersionForFamily_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroups_GetDispersionForFamily_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroups_GetDispersionForFamily_Response::CopyFrom(const CFamilyGroups_GetDispersionForFamily_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroups_GetDispersionForFamily_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroups_GetDispersionForFamily_Response::IsInitialized() const {
  return true;
}

void CFamilyGroups_GetDispersionForFamily_Response::InternalSwap(CFamilyGroups_GetDispersionForFamily_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroups_GetDispersionForFamily_Response, total_dispersion_)
      + sizeof(CFamilyGroups_GetDispersionForFamily_Response::total_dispersion_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroups_GetDispersionForFamily_Response, graph_)>(
          reinterpret_cast<char*>(&graph_),
          reinterpret_cast<char*>(&other->graph_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroups_GetDispersionForFamily_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember>()._has_bits_);
  static void set_has_member_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_owner_steamid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroupsClient_NotifyRunningApps_Notification.PlayingMember)
}
CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember(const CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&member_steamid_, &from.member_steamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&owner_steamid_) -
    reinterpret_cast<char*>(&member_steamid_)) + sizeof(owner_steamid_));
  // @@protoc_insertion_point(copy_constructor:CFamilyGroupsClient_NotifyRunningApps_Notification.PlayingMember)
}

void CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&member_steamid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&owner_steamid_) -
    reinterpret_cast<char*>(&member_steamid_)) + sizeof(owner_steamid_));
}

CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::~CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember() {
  // @@protoc_insertion_point(destructor:CFamilyGroupsClient_NotifyRunningApps_Notification.PlayingMember)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::ArenaDtor(void* object) {
  CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember* _this = reinterpret_cast< CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember* >(object);
  (void)_this;
}
void CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroupsClient_NotifyRunningApps_Notification.PlayingMember)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&member_steamid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&owner_steamid_) -
        reinterpret_cast<char*>(&member_steamid_)) + sizeof(owner_steamid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional fixed64 member_steamid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_member_steamid(&has_bits);
          member_steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      // optional fixed64 owner_steamid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_owner_steamid(&has_bits);
          owner_steamid_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint64>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint64);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroupsClient_NotifyRunningApps_Notification.PlayingMember)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 member_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(1, this->_internal_member_steamid(), target);
  }

  // optional fixed64 owner_steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed64ToArray(2, this->_internal_owner_steamid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroupsClient_NotifyRunningApps_Notification.PlayingMember)
  return target;
}

size_t CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroupsClient_NotifyRunningApps_Notification.PlayingMember)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional fixed64 member_steamid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional fixed64 owner_steamid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroupsClient_NotifyRunningApps_Notification.PlayingMember)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroupsClient_NotifyRunningApps_Notification.PlayingMember)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroupsClient_NotifyRunningApps_Notification.PlayingMember)
    MergeFrom(*source);
  }
}

void CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::MergeFrom(const CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroupsClient_NotifyRunningApps_Notification.PlayingMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      member_steamid_ = from.member_steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      owner_steamid_ = from.owner_steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroupsClient_NotifyRunningApps_Notification.PlayingMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::CopyFrom(const CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroupsClient_NotifyRunningApps_Notification.PlayingMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::IsInitialized() const {
  return true;
}

void CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::InternalSwap(CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember, owner_steamid_)
      + sizeof(CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::owner_steamid_)
      - PROTOBUF_FIELD_OFFSET(CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember, member_steamid_)>(
          reinterpret_cast<char*>(&member_steamid_),
          reinterpret_cast<char*>(&other->member_steamid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp>()._has_bits_);
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  playing_members_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroupsClient_NotifyRunningApps_Notification.RunningApp)
}
CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp(const CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      playing_members_(from.playing_members_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CFamilyGroupsClient_NotifyRunningApps_Notification.RunningApp)
}

void CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::SharedCtor() {
appid_ = 0u;
}

CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::~CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp() {
  // @@protoc_insertion_point(destructor:CFamilyGroupsClient_NotifyRunningApps_Notification.RunningApp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::ArenaDtor(void* object) {
  CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp* _this = reinterpret_cast< CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp* >(object);
  (void)_this;
}
void CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroupsClient_NotifyRunningApps_Notification.RunningApp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playing_members_.Clear();
  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 appid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_appid(&has_bits);
          appid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .CFamilyGroupsClient_NotifyRunningApps_Notification.PlayingMember playing_members = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_playing_members(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroupsClient_NotifyRunningApps_Notification.RunningApp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_appid(), target);
  }

  // repeated .CFamilyGroupsClient_NotifyRunningApps_Notification.PlayingMember playing_members = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_playing_members_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_playing_members(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroupsClient_NotifyRunningApps_Notification.RunningApp)
  return target;
}

size_t CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroupsClient_NotifyRunningApps_Notification.RunningApp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CFamilyGroupsClient_NotifyRunningApps_Notification.PlayingMember playing_members = 3;
  total_size += 1UL * this->_internal_playing_members_size();
  for (const auto& msg : this->playing_members_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional uint32 appid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_appid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroupsClient_NotifyRunningApps_Notification.RunningApp)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroupsClient_NotifyRunningApps_Notification.RunningApp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroupsClient_NotifyRunningApps_Notification.RunningApp)
    MergeFrom(*source);
  }
}

void CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::MergeFrom(const CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroupsClient_NotifyRunningApps_Notification.RunningApp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  playing_members_.MergeFrom(from.playing_members_);
  if (from._internal_has_appid()) {
    _internal_set_appid(from._internal_appid());
  }
}

void CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroupsClient_NotifyRunningApps_Notification.RunningApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::CopyFrom(const CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroupsClient_NotifyRunningApps_Notification.RunningApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::IsInitialized() const {
  return true;
}

void CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::InternalSwap(CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  playing_members_.InternalSwap(&other->playing_members_);
  swap(appid_, other->appid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroupsClient_NotifyRunningApps_Notification::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroupsClient_NotifyRunningApps_Notification>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CFamilyGroupsClient_NotifyRunningApps_Notification::CFamilyGroupsClient_NotifyRunningApps_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  running_apps_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroupsClient_NotifyRunningApps_Notification)
}
CFamilyGroupsClient_NotifyRunningApps_Notification::CFamilyGroupsClient_NotifyRunningApps_Notification(const CFamilyGroupsClient_NotifyRunningApps_Notification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      running_apps_(from.running_apps_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  family_groupid_ = from.family_groupid_;
  // @@protoc_insertion_point(copy_constructor:CFamilyGroupsClient_NotifyRunningApps_Notification)
}

void CFamilyGroupsClient_NotifyRunningApps_Notification::SharedCtor() {
family_groupid_ = PROTOBUF_ULONGLONG(0);
}

CFamilyGroupsClient_NotifyRunningApps_Notification::~CFamilyGroupsClient_NotifyRunningApps_Notification() {
  // @@protoc_insertion_point(destructor:CFamilyGroupsClient_NotifyRunningApps_Notification)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroupsClient_NotifyRunningApps_Notification::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroupsClient_NotifyRunningApps_Notification::ArenaDtor(void* object) {
  CFamilyGroupsClient_NotifyRunningApps_Notification* _this = reinterpret_cast< CFamilyGroupsClient_NotifyRunningApps_Notification* >(object);
  (void)_this;
}
void CFamilyGroupsClient_NotifyRunningApps_Notification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroupsClient_NotifyRunningApps_Notification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroupsClient_NotifyRunningApps_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroupsClient_NotifyRunningApps_Notification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  running_apps_.Clear();
  family_groupid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroupsClient_NotifyRunningApps_Notification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .CFamilyGroupsClient_NotifyRunningApps_Notification.RunningApp running_apps = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_running_apps(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroupsClient_NotifyRunningApps_Notification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroupsClient_NotifyRunningApps_Notification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  // repeated .CFamilyGroupsClient_NotifyRunningApps_Notification.RunningApp running_apps = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_running_apps_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_running_apps(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroupsClient_NotifyRunningApps_Notification)
  return target;
}

size_t CFamilyGroupsClient_NotifyRunningApps_Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroupsClient_NotifyRunningApps_Notification)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CFamilyGroupsClient_NotifyRunningApps_Notification.RunningApp running_apps = 2;
  total_size += 1UL * this->_internal_running_apps_size();
  for (const auto& msg : this->running_apps_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional uint64 family_groupid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_family_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroupsClient_NotifyRunningApps_Notification::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroupsClient_NotifyRunningApps_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroupsClient_NotifyRunningApps_Notification* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroupsClient_NotifyRunningApps_Notification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroupsClient_NotifyRunningApps_Notification)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroupsClient_NotifyRunningApps_Notification)
    MergeFrom(*source);
  }
}

void CFamilyGroupsClient_NotifyRunningApps_Notification::MergeFrom(const CFamilyGroupsClient_NotifyRunningApps_Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroupsClient_NotifyRunningApps_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  running_apps_.MergeFrom(from.running_apps_);
  if (from._internal_has_family_groupid()) {
    _internal_set_family_groupid(from._internal_family_groupid());
  }
}

void CFamilyGroupsClient_NotifyRunningApps_Notification::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroupsClient_NotifyRunningApps_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroupsClient_NotifyRunningApps_Notification::CopyFrom(const CFamilyGroupsClient_NotifyRunningApps_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroupsClient_NotifyRunningApps_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroupsClient_NotifyRunningApps_Notification::IsInitialized() const {
  return true;
}

void CFamilyGroupsClient_NotifyRunningApps_Notification::InternalSwap(CFamilyGroupsClient_NotifyRunningApps_Notification* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  running_apps_.InternalSwap(&other->running_apps_);
  swap(family_groupid_, other->family_groupid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroupsClient_NotifyRunningApps_Notification::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroupsClient_InviteStatus_Notification::_Internal {
 public:
};

CFamilyGroupsClient_InviteStatus_Notification::CFamilyGroupsClient_InviteStatus_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroupsClient_InviteStatus_Notification)
}
CFamilyGroupsClient_InviteStatus_Notification::CFamilyGroupsClient_InviteStatus_Notification(const CFamilyGroupsClient_InviteStatus_Notification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CFamilyGroupsClient_InviteStatus_Notification)
}

void CFamilyGroupsClient_InviteStatus_Notification::SharedCtor() {
}

CFamilyGroupsClient_InviteStatus_Notification::~CFamilyGroupsClient_InviteStatus_Notification() {
  // @@protoc_insertion_point(destructor:CFamilyGroupsClient_InviteStatus_Notification)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroupsClient_InviteStatus_Notification::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroupsClient_InviteStatus_Notification::ArenaDtor(void* object) {
  CFamilyGroupsClient_InviteStatus_Notification* _this = reinterpret_cast< CFamilyGroupsClient_InviteStatus_Notification* >(object);
  (void)_this;
}
void CFamilyGroupsClient_InviteStatus_Notification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroupsClient_InviteStatus_Notification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroupsClient_InviteStatus_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroupsClient_InviteStatus_Notification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroupsClient_InviteStatus_Notification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroupsClient_InviteStatus_Notification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroupsClient_InviteStatus_Notification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroupsClient_InviteStatus_Notification)
  return target;
}

size_t CFamilyGroupsClient_InviteStatus_Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroupsClient_InviteStatus_Notification)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroupsClient_InviteStatus_Notification::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroupsClient_InviteStatus_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroupsClient_InviteStatus_Notification* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroupsClient_InviteStatus_Notification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroupsClient_InviteStatus_Notification)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroupsClient_InviteStatus_Notification)
    MergeFrom(*source);
  }
}

void CFamilyGroupsClient_InviteStatus_Notification::MergeFrom(const CFamilyGroupsClient_InviteStatus_Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroupsClient_InviteStatus_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CFamilyGroupsClient_InviteStatus_Notification::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroupsClient_InviteStatus_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroupsClient_InviteStatus_Notification::CopyFrom(const CFamilyGroupsClient_InviteStatus_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroupsClient_InviteStatus_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroupsClient_InviteStatus_Notification::IsInitialized() const {
  return true;
}

void CFamilyGroupsClient_InviteStatus_Notification::InternalSwap(CFamilyGroupsClient_InviteStatus_Notification* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroupsClient_InviteStatus_Notification::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CFamilyGroupsClient_GroupChanged_Notification::_Internal {
 public:
  using HasBits = decltype(std::declval<CFamilyGroupsClient_GroupChanged_Notification>()._has_bits_);
  static void set_has_family_groupid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CFamilyGroupsClient_GroupChanged_Notification::CFamilyGroupsClient_GroupChanged_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CFamilyGroupsClient_GroupChanged_Notification)
}
CFamilyGroupsClient_GroupChanged_Notification::CFamilyGroupsClient_GroupChanged_Notification(const CFamilyGroupsClient_GroupChanged_Notification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  family_groupid_ = from.family_groupid_;
  // @@protoc_insertion_point(copy_constructor:CFamilyGroupsClient_GroupChanged_Notification)
}

void CFamilyGroupsClient_GroupChanged_Notification::SharedCtor() {
family_groupid_ = PROTOBUF_ULONGLONG(0);
}

CFamilyGroupsClient_GroupChanged_Notification::~CFamilyGroupsClient_GroupChanged_Notification() {
  // @@protoc_insertion_point(destructor:CFamilyGroupsClient_GroupChanged_Notification)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CFamilyGroupsClient_GroupChanged_Notification::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CFamilyGroupsClient_GroupChanged_Notification::ArenaDtor(void* object) {
  CFamilyGroupsClient_GroupChanged_Notification* _this = reinterpret_cast< CFamilyGroupsClient_GroupChanged_Notification* >(object);
  (void)_this;
}
void CFamilyGroupsClient_GroupChanged_Notification::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CFamilyGroupsClient_GroupChanged_Notification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CFamilyGroupsClient_GroupChanged_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:CFamilyGroupsClient_GroupChanged_Notification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  family_groupid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CFamilyGroupsClient_GroupChanged_Notification::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 family_groupid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_family_groupid(&has_bits);
          family_groupid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CFamilyGroupsClient_GroupChanged_Notification::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CFamilyGroupsClient_GroupChanged_Notification)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 family_groupid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_family_groupid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CFamilyGroupsClient_GroupChanged_Notification)
  return target;
}

size_t CFamilyGroupsClient_GroupChanged_Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CFamilyGroupsClient_GroupChanged_Notification)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 family_groupid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_family_groupid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CFamilyGroupsClient_GroupChanged_Notification::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CFamilyGroupsClient_GroupChanged_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  const CFamilyGroupsClient_GroupChanged_Notification* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CFamilyGroupsClient_GroupChanged_Notification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CFamilyGroupsClient_GroupChanged_Notification)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CFamilyGroupsClient_GroupChanged_Notification)
    MergeFrom(*source);
  }
}

void CFamilyGroupsClient_GroupChanged_Notification::MergeFrom(const CFamilyGroupsClient_GroupChanged_Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CFamilyGroupsClient_GroupChanged_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_family_groupid()) {
    _internal_set_family_groupid(from._internal_family_groupid());
  }
}

void CFamilyGroupsClient_GroupChanged_Notification::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CFamilyGroupsClient_GroupChanged_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CFamilyGroupsClient_GroupChanged_Notification::CopyFrom(const CFamilyGroupsClient_GroupChanged_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CFamilyGroupsClient_GroupChanged_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CFamilyGroupsClient_GroupChanged_Notification::IsInitialized() const {
  return true;
}

void CFamilyGroupsClient_GroupChanged_Notification::InternalSwap(CFamilyGroupsClient_GroupChanged_Notification* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(family_groupid_, other->family_groupid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CFamilyGroupsClient_GroupChanged_Notification::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

FamilyGroups::~FamilyGroups() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* FamilyGroups::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_steammessages_5ffamilygroups_2esteamclient_2eproto);
  return file_level_service_descriptors_steammessages_5ffamilygroups_2esteamclient_2eproto[0];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* FamilyGroups::GetDescriptor() {
  return descriptor();
}

void FamilyGroups::CreateFamilyGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_CreateFamilyGroup_Request*,
                         ::CFamilyGroups_CreateFamilyGroup_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CreateFamilyGroup() not implemented.");
  done->Run();
}

void FamilyGroups::GetFamilyGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_GetFamilyGroup_Request*,
                         ::CFamilyGroups_GetFamilyGroup_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetFamilyGroup() not implemented.");
  done->Run();
}

void FamilyGroups::GetFamilyGroupForUser(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_GetFamilyGroupForUser_Request*,
                         ::CFamilyGroups_GetFamilyGroupForUser_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetFamilyGroupForUser() not implemented.");
  done->Run();
}

void FamilyGroups::ModifyFamilyGroupDetails(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_ModifyFamilyGroupDetails_Request*,
                         ::CFamilyGroups_ModifyFamilyGroupDetails_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ModifyFamilyGroupDetails() not implemented.");
  done->Run();
}

void FamilyGroups::InviteToFamilyGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_InviteToFamilyGroup_Request*,
                         ::CFamilyGroups_InviteToFamilyGroup_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method InviteToFamilyGroup() not implemented.");
  done->Run();
}

void FamilyGroups::ConfirmInviteToFamilyGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_ConfirmInviteToFamilyGroup_Request*,
                         ::CFamilyGroups_ConfirmInviteToFamilyGroup_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ConfirmInviteToFamilyGroup() not implemented.");
  done->Run();
}

void FamilyGroups::ResendInvitationToFamilyGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_ResendInvitationToFamilyGroup_Request*,
                         ::CFamilyGroups_ResendInvitationToFamilyGroup_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ResendInvitationToFamilyGroup() not implemented.");
  done->Run();
}

void FamilyGroups::JoinFamilyGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_JoinFamilyGroup_Request*,
                         ::CFamilyGroups_JoinFamilyGroup_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method JoinFamilyGroup() not implemented.");
  done->Run();
}

void FamilyGroups::ConfirmJoinFamilyGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_ConfirmJoinFamilyGroup_Request*,
                         ::CFamilyGroups_ConfirmJoinFamilyGroup_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ConfirmJoinFamilyGroup() not implemented.");
  done->Run();
}

void FamilyGroups::RemoveFromFamilyGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_RemoveFromFamilyGroup_Request*,
                         ::CFamilyGroups_RemoveFromFamilyGroup_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RemoveFromFamilyGroup() not implemented.");
  done->Run();
}

void FamilyGroups::CancelFamilyGroupInvite(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_CancelFamilyGroupInvite_Request*,
                         ::CFamilyGroups_CancelFamilyGroupInvite_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CancelFamilyGroupInvite() not implemented.");
  done->Run();
}

void FamilyGroups::GetUsersSharingDevice(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_GetUsersSharingDevice_Request*,
                         ::CFamilyGroups_GetUsersSharingDevice_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetUsersSharingDevice() not implemented.");
  done->Run();
}

void FamilyGroups::DeleteFamilyGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_DeleteFamilyGroup_Request*,
                         ::CFamilyGroups_DeleteFamilyGroup_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DeleteFamilyGroup() not implemented.");
  done->Run();
}

void FamilyGroups::GetPlaytimeSummary(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_GetPlaytimeSummary_Request*,
                         ::CFamilyGroups_GetPlaytimeSummary_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetPlaytimeSummary() not implemented.");
  done->Run();
}

void FamilyGroups::RequestPurchase(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_RequestPurchase_Request*,
                         ::CFamilyGroups_RequestPurchase_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RequestPurchase() not implemented.");
  done->Run();
}

void FamilyGroups::GetPurchaseRequests(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_GetPurchaseRequests_Request*,
                         ::CFamilyGroups_GetPurchaseRequests_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetPurchaseRequests() not implemented.");
  done->Run();
}

void FamilyGroups::RespondToRequestedPurchase(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_RespondToRequestedPurchase_Request*,
                         ::CFamilyGroups_RespondToRequestedPurchase_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RespondToRequestedPurchase() not implemented.");
  done->Run();
}

void FamilyGroups::GetChangeLog(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_GetChangeLog_Request*,
                         ::CFamilyGroups_GetChangeLog_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetChangeLog() not implemented.");
  done->Run();
}

void FamilyGroups::SetFamilyCooldownOverrides(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_SetFamilyCooldownOverrides_Request*,
                         ::CFamilyGroups_SetFamilyCooldownOverrides_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SetFamilyCooldownOverrides() not implemented.");
  done->Run();
}

void FamilyGroups::GetSharedLibraryApps(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_GetSharedLibraryApps_Request*,
                         ::CFamilyGroups_GetSharedLibraryApps_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetSharedLibraryApps() not implemented.");
  done->Run();
}

void FamilyGroups::SetPreferredLender(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_SetPreferredLender_Request*,
                         ::CFamilyGroups_SetPreferredLender_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SetPreferredLender() not implemented.");
  done->Run();
}

void FamilyGroups::GetPreferredLenders(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_GetPreferredLenders_Request*,
                         ::CFamilyGroups_GetPreferredLenders_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetPreferredLenders() not implemented.");
  done->Run();
}

void FamilyGroups::GetDispersionForFamily(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroups_GetDispersionForFamily_Request*,
                         ::CFamilyGroups_GetDispersionForFamily_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetDispersionForFamily() not implemented.");
  done->Run();
}

void FamilyGroups::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_steammessages_5ffamilygroups_2esteamclient_2eproto[0]);
  switch(method->index()) {
    case 0:
      CreateFamilyGroup(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_CreateFamilyGroup_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_CreateFamilyGroup_Response*>(
                 response),
             done);
      break;
    case 1:
      GetFamilyGroup(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_GetFamilyGroup_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_GetFamilyGroup_Response*>(
                 response),
             done);
      break;
    case 2:
      GetFamilyGroupForUser(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_GetFamilyGroupForUser_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_GetFamilyGroupForUser_Response*>(
                 response),
             done);
      break;
    case 3:
      ModifyFamilyGroupDetails(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_ModifyFamilyGroupDetails_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_ModifyFamilyGroupDetails_Response*>(
                 response),
             done);
      break;
    case 4:
      InviteToFamilyGroup(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_InviteToFamilyGroup_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_InviteToFamilyGroup_Response*>(
                 response),
             done);
      break;
    case 5:
      ConfirmInviteToFamilyGroup(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_ConfirmInviteToFamilyGroup_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_ConfirmInviteToFamilyGroup_Response*>(
                 response),
             done);
      break;
    case 6:
      ResendInvitationToFamilyGroup(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_ResendInvitationToFamilyGroup_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_ResendInvitationToFamilyGroup_Response*>(
                 response),
             done);
      break;
    case 7:
      JoinFamilyGroup(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_JoinFamilyGroup_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_JoinFamilyGroup_Response*>(
                 response),
             done);
      break;
    case 8:
      ConfirmJoinFamilyGroup(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_ConfirmJoinFamilyGroup_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_ConfirmJoinFamilyGroup_Response*>(
                 response),
             done);
      break;
    case 9:
      RemoveFromFamilyGroup(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_RemoveFromFamilyGroup_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_RemoveFromFamilyGroup_Response*>(
                 response),
             done);
      break;
    case 10:
      CancelFamilyGroupInvite(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_CancelFamilyGroupInvite_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_CancelFamilyGroupInvite_Response*>(
                 response),
             done);
      break;
    case 11:
      GetUsersSharingDevice(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_GetUsersSharingDevice_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_GetUsersSharingDevice_Response*>(
                 response),
             done);
      break;
    case 12:
      DeleteFamilyGroup(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_DeleteFamilyGroup_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_DeleteFamilyGroup_Response*>(
                 response),
             done);
      break;
    case 13:
      GetPlaytimeSummary(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_GetPlaytimeSummary_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_GetPlaytimeSummary_Response*>(
                 response),
             done);
      break;
    case 14:
      RequestPurchase(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_RequestPurchase_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_RequestPurchase_Response*>(
                 response),
             done);
      break;
    case 15:
      GetPurchaseRequests(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_GetPurchaseRequests_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_GetPurchaseRequests_Response*>(
                 response),
             done);
      break;
    case 16:
      RespondToRequestedPurchase(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_RespondToRequestedPurchase_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_RespondToRequestedPurchase_Response*>(
                 response),
             done);
      break;
    case 17:
      GetChangeLog(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_GetChangeLog_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_GetChangeLog_Response*>(
                 response),
             done);
      break;
    case 18:
      SetFamilyCooldownOverrides(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_SetFamilyCooldownOverrides_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_SetFamilyCooldownOverrides_Response*>(
                 response),
             done);
      break;
    case 19:
      GetSharedLibraryApps(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_GetSharedLibraryApps_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_GetSharedLibraryApps_Response*>(
                 response),
             done);
      break;
    case 20:
      SetPreferredLender(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_SetPreferredLender_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_SetPreferredLender_Response*>(
                 response),
             done);
      break;
    case 21:
      GetPreferredLenders(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_GetPreferredLenders_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_GetPreferredLenders_Response*>(
                 response),
             done);
      break;
    case 22:
      GetDispersionForFamily(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroups_GetDispersionForFamily_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CFamilyGroups_GetDispersionForFamily_Response*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& FamilyGroups::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CFamilyGroups_CreateFamilyGroup_Request::default_instance();
    case 1:
      return ::CFamilyGroups_GetFamilyGroup_Request::default_instance();
    case 2:
      return ::CFamilyGroups_GetFamilyGroupForUser_Request::default_instance();
    case 3:
      return ::CFamilyGroups_ModifyFamilyGroupDetails_Request::default_instance();
    case 4:
      return ::CFamilyGroups_InviteToFamilyGroup_Request::default_instance();
    case 5:
      return ::CFamilyGroups_ConfirmInviteToFamilyGroup_Request::default_instance();
    case 6:
      return ::CFamilyGroups_ResendInvitationToFamilyGroup_Request::default_instance();
    case 7:
      return ::CFamilyGroups_JoinFamilyGroup_Request::default_instance();
    case 8:
      return ::CFamilyGroups_ConfirmJoinFamilyGroup_Request::default_instance();
    case 9:
      return ::CFamilyGroups_RemoveFromFamilyGroup_Request::default_instance();
    case 10:
      return ::CFamilyGroups_CancelFamilyGroupInvite_Request::default_instance();
    case 11:
      return ::CFamilyGroups_GetUsersSharingDevice_Request::default_instance();
    case 12:
      return ::CFamilyGroups_DeleteFamilyGroup_Request::default_instance();
    case 13:
      return ::CFamilyGroups_GetPlaytimeSummary_Request::default_instance();
    case 14:
      return ::CFamilyGroups_RequestPurchase_Request::default_instance();
    case 15:
      return ::CFamilyGroups_GetPurchaseRequests_Request::default_instance();
    case 16:
      return ::CFamilyGroups_RespondToRequestedPurchase_Request::default_instance();
    case 17:
      return ::CFamilyGroups_GetChangeLog_Request::default_instance();
    case 18:
      return ::CFamilyGroups_SetFamilyCooldownOverrides_Request::default_instance();
    case 19:
      return ::CFamilyGroups_GetSharedLibraryApps_Request::default_instance();
    case 20:
      return ::CFamilyGroups_SetPreferredLender_Request::default_instance();
    case 21:
      return ::CFamilyGroups_GetPreferredLenders_Request::default_instance();
    case 22:
      return ::CFamilyGroups_GetDispersionForFamily_Request::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& FamilyGroups::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CFamilyGroups_CreateFamilyGroup_Response::default_instance();
    case 1:
      return ::CFamilyGroups_GetFamilyGroup_Response::default_instance();
    case 2:
      return ::CFamilyGroups_GetFamilyGroupForUser_Response::default_instance();
    case 3:
      return ::CFamilyGroups_ModifyFamilyGroupDetails_Response::default_instance();
    case 4:
      return ::CFamilyGroups_InviteToFamilyGroup_Response::default_instance();
    case 5:
      return ::CFamilyGroups_ConfirmInviteToFamilyGroup_Response::default_instance();
    case 6:
      return ::CFamilyGroups_ResendInvitationToFamilyGroup_Response::default_instance();
    case 7:
      return ::CFamilyGroups_JoinFamilyGroup_Response::default_instance();
    case 8:
      return ::CFamilyGroups_ConfirmJoinFamilyGroup_Response::default_instance();
    case 9:
      return ::CFamilyGroups_RemoveFromFamilyGroup_Response::default_instance();
    case 10:
      return ::CFamilyGroups_CancelFamilyGroupInvite_Response::default_instance();
    case 11:
      return ::CFamilyGroups_GetUsersSharingDevice_Response::default_instance();
    case 12:
      return ::CFamilyGroups_DeleteFamilyGroup_Response::default_instance();
    case 13:
      return ::CFamilyGroups_GetPlaytimeSummary_Response::default_instance();
    case 14:
      return ::CFamilyGroups_RequestPurchase_Response::default_instance();
    case 15:
      return ::CFamilyGroups_GetPurchaseRequests_Response::default_instance();
    case 16:
      return ::CFamilyGroups_RespondToRequestedPurchase_Response::default_instance();
    case 17:
      return ::CFamilyGroups_GetChangeLog_Response::default_instance();
    case 18:
      return ::CFamilyGroups_SetFamilyCooldownOverrides_Response::default_instance();
    case 19:
      return ::CFamilyGroups_GetSharedLibraryApps_Response::default_instance();
    case 20:
      return ::CFamilyGroups_SetPreferredLender_Response::default_instance();
    case 21:
      return ::CFamilyGroups_GetPreferredLenders_Response::default_instance();
    case 22:
      return ::CFamilyGroups_GetDispersionForFamily_Response::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

FamilyGroups_Stub::FamilyGroups_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
FamilyGroups_Stub::FamilyGroups_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
FamilyGroups_Stub::~FamilyGroups_Stub() {
  if (owns_channel_) delete channel_;
}

void FamilyGroups_Stub::CreateFamilyGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_CreateFamilyGroup_Request* request,
                              ::CFamilyGroups_CreateFamilyGroup_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void FamilyGroups_Stub::GetFamilyGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_GetFamilyGroup_Request* request,
                              ::CFamilyGroups_GetFamilyGroup_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void FamilyGroups_Stub::GetFamilyGroupForUser(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_GetFamilyGroupForUser_Request* request,
                              ::CFamilyGroups_GetFamilyGroupForUser_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void FamilyGroups_Stub::ModifyFamilyGroupDetails(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_ModifyFamilyGroupDetails_Request* request,
                              ::CFamilyGroups_ModifyFamilyGroupDetails_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void FamilyGroups_Stub::InviteToFamilyGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_InviteToFamilyGroup_Request* request,
                              ::CFamilyGroups_InviteToFamilyGroup_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void FamilyGroups_Stub::ConfirmInviteToFamilyGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_ConfirmInviteToFamilyGroup_Request* request,
                              ::CFamilyGroups_ConfirmInviteToFamilyGroup_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void FamilyGroups_Stub::ResendInvitationToFamilyGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_ResendInvitationToFamilyGroup_Request* request,
                              ::CFamilyGroups_ResendInvitationToFamilyGroup_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}
void FamilyGroups_Stub::JoinFamilyGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_JoinFamilyGroup_Request* request,
                              ::CFamilyGroups_JoinFamilyGroup_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(7),
                       controller, request, response, done);
}
void FamilyGroups_Stub::ConfirmJoinFamilyGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_ConfirmJoinFamilyGroup_Request* request,
                              ::CFamilyGroups_ConfirmJoinFamilyGroup_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(8),
                       controller, request, response, done);
}
void FamilyGroups_Stub::RemoveFromFamilyGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_RemoveFromFamilyGroup_Request* request,
                              ::CFamilyGroups_RemoveFromFamilyGroup_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(9),
                       controller, request, response, done);
}
void FamilyGroups_Stub::CancelFamilyGroupInvite(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_CancelFamilyGroupInvite_Request* request,
                              ::CFamilyGroups_CancelFamilyGroupInvite_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(10),
                       controller, request, response, done);
}
void FamilyGroups_Stub::GetUsersSharingDevice(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_GetUsersSharingDevice_Request* request,
                              ::CFamilyGroups_GetUsersSharingDevice_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(11),
                       controller, request, response, done);
}
void FamilyGroups_Stub::DeleteFamilyGroup(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_DeleteFamilyGroup_Request* request,
                              ::CFamilyGroups_DeleteFamilyGroup_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(12),
                       controller, request, response, done);
}
void FamilyGroups_Stub::GetPlaytimeSummary(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_GetPlaytimeSummary_Request* request,
                              ::CFamilyGroups_GetPlaytimeSummary_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(13),
                       controller, request, response, done);
}
void FamilyGroups_Stub::RequestPurchase(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_RequestPurchase_Request* request,
                              ::CFamilyGroups_RequestPurchase_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(14),
                       controller, request, response, done);
}
void FamilyGroups_Stub::GetPurchaseRequests(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_GetPurchaseRequests_Request* request,
                              ::CFamilyGroups_GetPurchaseRequests_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(15),
                       controller, request, response, done);
}
void FamilyGroups_Stub::RespondToRequestedPurchase(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_RespondToRequestedPurchase_Request* request,
                              ::CFamilyGroups_RespondToRequestedPurchase_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(16),
                       controller, request, response, done);
}
void FamilyGroups_Stub::GetChangeLog(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_GetChangeLog_Request* request,
                              ::CFamilyGroups_GetChangeLog_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(17),
                       controller, request, response, done);
}
void FamilyGroups_Stub::SetFamilyCooldownOverrides(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_SetFamilyCooldownOverrides_Request* request,
                              ::CFamilyGroups_SetFamilyCooldownOverrides_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(18),
                       controller, request, response, done);
}
void FamilyGroups_Stub::GetSharedLibraryApps(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_GetSharedLibraryApps_Request* request,
                              ::CFamilyGroups_GetSharedLibraryApps_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(19),
                       controller, request, response, done);
}
void FamilyGroups_Stub::SetPreferredLender(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_SetPreferredLender_Request* request,
                              ::CFamilyGroups_SetPreferredLender_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(20),
                       controller, request, response, done);
}
void FamilyGroups_Stub::GetPreferredLenders(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_GetPreferredLenders_Request* request,
                              ::CFamilyGroups_GetPreferredLenders_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(21),
                       controller, request, response, done);
}
void FamilyGroups_Stub::GetDispersionForFamily(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroups_GetDispersionForFamily_Request* request,
                              ::CFamilyGroups_GetDispersionForFamily_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(22),
                       controller, request, response, done);
}
// ===================================================================

FamilyGroupsClient::~FamilyGroupsClient() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* FamilyGroupsClient::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_steammessages_5ffamilygroups_2esteamclient_2eproto);
  return file_level_service_descriptors_steammessages_5ffamilygroups_2esteamclient_2eproto[1];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* FamilyGroupsClient::GetDescriptor() {
  return descriptor();
}

void FamilyGroupsClient::NotifyRunningApps(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroupsClient_NotifyRunningApps_Notification*,
                         ::NoResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method NotifyRunningApps() not implemented.");
  done->Run();
}

void FamilyGroupsClient::NotifyInviteStatus(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroupsClient_InviteStatus_Notification*,
                         ::NoResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method NotifyInviteStatus() not implemented.");
  done->Run();
}

void FamilyGroupsClient::NotifyGroupChanged(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CFamilyGroupsClient_GroupChanged_Notification*,
                         ::NoResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method NotifyGroupChanged() not implemented.");
  done->Run();
}

void FamilyGroupsClient::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_steammessages_5ffamilygroups_2esteamclient_2eproto[1]);
  switch(method->index()) {
    case 0:
      NotifyRunningApps(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroupsClient_NotifyRunningApps_Notification*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::NoResponse*>(
                 response),
             done);
      break;
    case 1:
      NotifyInviteStatus(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroupsClient_InviteStatus_Notification*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::NoResponse*>(
                 response),
             done);
      break;
    case 2:
      NotifyGroupChanged(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CFamilyGroupsClient_GroupChanged_Notification*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::NoResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& FamilyGroupsClient::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CFamilyGroupsClient_NotifyRunningApps_Notification::default_instance();
    case 1:
      return ::CFamilyGroupsClient_InviteStatus_Notification::default_instance();
    case 2:
      return ::CFamilyGroupsClient_GroupChanged_Notification::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& FamilyGroupsClient::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::NoResponse::default_instance();
    case 1:
      return ::NoResponse::default_instance();
    case 2:
      return ::NoResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

FamilyGroupsClient_Stub::FamilyGroupsClient_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
FamilyGroupsClient_Stub::FamilyGroupsClient_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
FamilyGroupsClient_Stub::~FamilyGroupsClient_Stub() {
  if (owns_channel_) delete channel_;
}

void FamilyGroupsClient_Stub::NotifyRunningApps(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroupsClient_NotifyRunningApps_Notification* request,
                              ::NoResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void FamilyGroupsClient_Stub::NotifyInviteStatus(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroupsClient_InviteStatus_Notification* request,
                              ::NoResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void FamilyGroupsClient_Stub::NotifyGroupChanged(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CFamilyGroupsClient_GroupChanged_Notification* request,
                              ::NoResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CFamilyGroups_CreateFamilyGroup_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_CreateFamilyGroup_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_CreateFamilyGroup_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_CreateFamilyGroup_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_CreateFamilyGroup_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_CreateFamilyGroup_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetFamilyGroup_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_GetFamilyGroup_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetFamilyGroup_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::FamilyGroupMember* Arena::CreateMaybeMessage< ::FamilyGroupMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::FamilyGroupMember >(arena);
}
template<> PROTOBUF_NOINLINE ::FamilyGroupPendingInvite* Arena::CreateMaybeMessage< ::FamilyGroupPendingInvite >(Arena* arena) {
  return Arena::CreateMessageInternal< ::FamilyGroupPendingInvite >(arena);
}
template<> PROTOBUF_NOINLINE ::FamilyGroupFormerMember* Arena::CreateMaybeMessage< ::FamilyGroupFormerMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::FamilyGroupFormerMember >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetFamilyGroup_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_GetFamilyGroup_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetFamilyGroup_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetFamilyGroupForUser_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_GetFamilyGroupForUser_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetFamilyGroupForUser_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::FamilyGroupPendingInviteForUser* Arena::CreateMaybeMessage< ::FamilyGroupPendingInviteForUser >(Arena* arena) {
  return Arena::CreateMessageInternal< ::FamilyGroupPendingInviteForUser >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetFamilyGroupForUser_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_GetFamilyGroupForUser_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetFamilyGroupForUser_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_ModifyFamilyGroupDetails_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_ModifyFamilyGroupDetails_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_ModifyFamilyGroupDetails_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_ModifyFamilyGroupDetails_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_ModifyFamilyGroupDetails_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_ModifyFamilyGroupDetails_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_InviteToFamilyGroup_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_InviteToFamilyGroup_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_InviteToFamilyGroup_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_InviteToFamilyGroup_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_InviteToFamilyGroup_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_InviteToFamilyGroup_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_ConfirmInviteToFamilyGroup_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_ConfirmInviteToFamilyGroup_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_ConfirmInviteToFamilyGroup_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_ConfirmInviteToFamilyGroup_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_ConfirmInviteToFamilyGroup_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_ConfirmInviteToFamilyGroup_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_ResendInvitationToFamilyGroup_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_ResendInvitationToFamilyGroup_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_ResendInvitationToFamilyGroup_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_ResendInvitationToFamilyGroup_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_ResendInvitationToFamilyGroup_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_ResendInvitationToFamilyGroup_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_JoinFamilyGroup_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_JoinFamilyGroup_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_JoinFamilyGroup_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_JoinFamilyGroup_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_JoinFamilyGroup_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_JoinFamilyGroup_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_ConfirmJoinFamilyGroup_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_ConfirmJoinFamilyGroup_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_ConfirmJoinFamilyGroup_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_ConfirmJoinFamilyGroup_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_ConfirmJoinFamilyGroup_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_ConfirmJoinFamilyGroup_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_RemoveFromFamilyGroup_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_RemoveFromFamilyGroup_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_RemoveFromFamilyGroup_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_RemoveFromFamilyGroup_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_RemoveFromFamilyGroup_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_RemoveFromFamilyGroup_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_CancelFamilyGroupInvite_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_CancelFamilyGroupInvite_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_CancelFamilyGroupInvite_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_CancelFamilyGroupInvite_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_CancelFamilyGroupInvite_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_CancelFamilyGroupInvite_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetUsersSharingDevice_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_GetUsersSharingDevice_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetUsersSharingDevice_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetUsersSharingDevice_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_GetUsersSharingDevice_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetUsersSharingDevice_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_DeleteFamilyGroup_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_DeleteFamilyGroup_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_DeleteFamilyGroup_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_DeleteFamilyGroup_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_DeleteFamilyGroup_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_DeleteFamilyGroup_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetPlaytimeSummary_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_GetPlaytimeSummary_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetPlaytimeSummary_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_PlaytimeEntry* Arena::CreateMaybeMessage< ::CFamilyGroups_PlaytimeEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_PlaytimeEntry >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetPlaytimeSummary_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_GetPlaytimeSummary_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetPlaytimeSummary_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_RequestPurchase_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_RequestPurchase_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_RequestPurchase_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_RequestPurchase_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_RequestPurchase_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_RequestPurchase_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetPurchaseRequests_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_GetPurchaseRequests_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetPurchaseRequests_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::PurchaseRequest* Arena::CreateMaybeMessage< ::PurchaseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PurchaseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetPurchaseRequests_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_GetPurchaseRequests_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetPurchaseRequests_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_RespondToRequestedPurchase_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_RespondToRequestedPurchase_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_RespondToRequestedPurchase_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_RespondToRequestedPurchase_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_RespondToRequestedPurchase_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_RespondToRequestedPurchase_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetChangeLog_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_GetChangeLog_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetChangeLog_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetChangeLog_Response_Change* Arena::CreateMaybeMessage< ::CFamilyGroups_GetChangeLog_Response_Change >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetChangeLog_Response_Change >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetChangeLog_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_GetChangeLog_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetChangeLog_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_SetFamilyCooldownOverrides_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_SetFamilyCooldownOverrides_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_SetFamilyCooldownOverrides_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_SetFamilyCooldownOverrides_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_SetFamilyCooldownOverrides_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_SetFamilyCooldownOverrides_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetSharedLibraryApps_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_GetSharedLibraryApps_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetSharedLibraryApps_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetSharedLibraryApps_Response_SharedApp* Arena::CreateMaybeMessage< ::CFamilyGroups_GetSharedLibraryApps_Response_SharedApp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetSharedLibraryApps_Response_SharedApp >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetSharedLibraryApps_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_GetSharedLibraryApps_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetSharedLibraryApps_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_SetPreferredLender_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_SetPreferredLender_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_SetPreferredLender_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_SetPreferredLender_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_SetPreferredLender_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_SetPreferredLender_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetPreferredLenders_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_GetPreferredLenders_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetPreferredLenders_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetPreferredLenders_Response_FamilyMember* Arena::CreateMaybeMessage< ::CFamilyGroups_GetPreferredLenders_Response_FamilyMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetPreferredLenders_Response_FamilyMember >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetPreferredLenders_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_GetPreferredLenders_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetPreferredLenders_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetDispersionForFamily_Request* Arena::CreateMaybeMessage< ::CFamilyGroups_GetDispersionForFamily_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetDispersionForFamily_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_FamilyDispersionGraph_Edge* Arena::CreateMaybeMessage< ::CFamilyGroups_FamilyDispersionGraph_Edge >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_FamilyDispersionGraph_Edge >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_FamilyDispersionGraph* Arena::CreateMaybeMessage< ::CFamilyGroups_FamilyDispersionGraph >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_FamilyDispersionGraph >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroups_GetDispersionForFamily_Response* Arena::CreateMaybeMessage< ::CFamilyGroups_GetDispersionForFamily_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroups_GetDispersionForFamily_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember* Arena::CreateMaybeMessage< ::CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroupsClient_NotifyRunningApps_Notification_PlayingMember >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp* Arena::CreateMaybeMessage< ::CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroupsClient_NotifyRunningApps_Notification_RunningApp >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroupsClient_NotifyRunningApps_Notification* Arena::CreateMaybeMessage< ::CFamilyGroupsClient_NotifyRunningApps_Notification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroupsClient_NotifyRunningApps_Notification >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroupsClient_InviteStatus_Notification* Arena::CreateMaybeMessage< ::CFamilyGroupsClient_InviteStatus_Notification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroupsClient_InviteStatus_Notification >(arena);
}
template<> PROTOBUF_NOINLINE ::CFamilyGroupsClient_GroupChanged_Notification* Arena::CreateMaybeMessage< ::CFamilyGroupsClient_GroupChanged_Notification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CFamilyGroupsClient_GroupChanged_Notification >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
