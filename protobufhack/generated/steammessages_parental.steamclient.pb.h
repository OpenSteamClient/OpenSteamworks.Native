// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_parental.steamclient.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_steammessages_5fparental_2esteamclient_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_steammessages_5fparental_2esteamclient_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
#include "steammessages_base.pb.h"
#include "steammessages_unified_base.steamclient.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fparental_2esteamclient_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fparental_2esteamclient_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[43]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_steammessages_5fparental_2esteamclient_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(int index);
class CParental_ApproveFeatureAccess_Request;
struct CParental_ApproveFeatureAccess_RequestDefaultTypeInternal;
extern CParental_ApproveFeatureAccess_RequestDefaultTypeInternal _CParental_ApproveFeatureAccess_Request_default_instance_;
class CParental_ApproveFeatureAccess_Response;
struct CParental_ApproveFeatureAccess_ResponseDefaultTypeInternal;
extern CParental_ApproveFeatureAccess_ResponseDefaultTypeInternal _CParental_ApproveFeatureAccess_Response_default_instance_;
class CParental_ApprovePlaytime_Request;
struct CParental_ApprovePlaytime_RequestDefaultTypeInternal;
extern CParental_ApprovePlaytime_RequestDefaultTypeInternal _CParental_ApprovePlaytime_Request_default_instance_;
class CParental_ApprovePlaytime_Response;
struct CParental_ApprovePlaytime_ResponseDefaultTypeInternal;
extern CParental_ApprovePlaytime_ResponseDefaultTypeInternal _CParental_ApprovePlaytime_Response_default_instance_;
class CParental_DisableParentalSettings_Request;
struct CParental_DisableParentalSettings_RequestDefaultTypeInternal;
extern CParental_DisableParentalSettings_RequestDefaultTypeInternal _CParental_DisableParentalSettings_Request_default_instance_;
class CParental_DisableParentalSettings_Response;
struct CParental_DisableParentalSettings_ResponseDefaultTypeInternal;
extern CParental_DisableParentalSettings_ResponseDefaultTypeInternal _CParental_DisableParentalSettings_Response_default_instance_;
class CParental_DisableWithRecoveryCode_Request;
struct CParental_DisableWithRecoveryCode_RequestDefaultTypeInternal;
extern CParental_DisableWithRecoveryCode_RequestDefaultTypeInternal _CParental_DisableWithRecoveryCode_Request_default_instance_;
class CParental_DisableWithRecoveryCode_Response;
struct CParental_DisableWithRecoveryCode_ResponseDefaultTypeInternal;
extern CParental_DisableWithRecoveryCode_ResponseDefaultTypeInternal _CParental_DisableWithRecoveryCode_Response_default_instance_;
class CParental_EnableParentalSettings_Request;
struct CParental_EnableParentalSettings_RequestDefaultTypeInternal;
extern CParental_EnableParentalSettings_RequestDefaultTypeInternal _CParental_EnableParentalSettings_Request_default_instance_;
class CParental_EnableParentalSettings_Response;
struct CParental_EnableParentalSettings_ResponseDefaultTypeInternal;
extern CParental_EnableParentalSettings_ResponseDefaultTypeInternal _CParental_EnableParentalSettings_Response_default_instance_;
class CParental_GetParentalSettings_Request;
struct CParental_GetParentalSettings_RequestDefaultTypeInternal;
extern CParental_GetParentalSettings_RequestDefaultTypeInternal _CParental_GetParentalSettings_Request_default_instance_;
class CParental_GetParentalSettings_Response;
struct CParental_GetParentalSettings_ResponseDefaultTypeInternal;
extern CParental_GetParentalSettings_ResponseDefaultTypeInternal _CParental_GetParentalSettings_Response_default_instance_;
class CParental_GetRequests_Request;
struct CParental_GetRequests_RequestDefaultTypeInternal;
extern CParental_GetRequests_RequestDefaultTypeInternal _CParental_GetRequests_Request_default_instance_;
class CParental_GetRequests_Response;
struct CParental_GetRequests_ResponseDefaultTypeInternal;
extern CParental_GetRequests_ResponseDefaultTypeInternal _CParental_GetRequests_Response_default_instance_;
class CParental_GetSignedParentalSettings_Request;
struct CParental_GetSignedParentalSettings_RequestDefaultTypeInternal;
extern CParental_GetSignedParentalSettings_RequestDefaultTypeInternal _CParental_GetSignedParentalSettings_Request_default_instance_;
class CParental_GetSignedParentalSettings_Response;
struct CParental_GetSignedParentalSettings_ResponseDefaultTypeInternal;
extern CParental_GetSignedParentalSettings_ResponseDefaultTypeInternal _CParental_GetSignedParentalSettings_Response_default_instance_;
class CParental_LockClient_Request;
struct CParental_LockClient_RequestDefaultTypeInternal;
extern CParental_LockClient_RequestDefaultTypeInternal _CParental_LockClient_Request_default_instance_;
class CParental_LockClient_Response;
struct CParental_LockClient_ResponseDefaultTypeInternal;
extern CParental_LockClient_ResponseDefaultTypeInternal _CParental_LockClient_Response_default_instance_;
class CParental_ParentalLocNotification;
struct CParental_ParentalLocNotificationDefaultTypeInternal;
extern CParental_ParentalLocNotificationDefaultTypeInternal _CParental_ParentalLocNotification_default_instance_;
class CParental_ParentalSettingsChange_Notification;
struct CParental_ParentalSettingsChange_NotificationDefaultTypeInternal;
extern CParental_ParentalSettingsChange_NotificationDefaultTypeInternal _CParental_ParentalSettingsChange_Notification_default_instance_;
class CParental_ParentalUnlocNotification;
struct CParental_ParentalUnlocNotificationDefaultTypeInternal;
extern CParental_ParentalUnlocNotificationDefaultTypeInternal _CParental_ParentalUnlocNotification_default_instance_;
class CParental_PlaytimeUsed_Notification;
struct CParental_PlaytimeUsed_NotificationDefaultTypeInternal;
extern CParental_PlaytimeUsed_NotificationDefaultTypeInternal _CParental_PlaytimeUsed_Notification_default_instance_;
class CParental_ReportPlaytimeAndNotify_Request;
struct CParental_ReportPlaytimeAndNotify_RequestDefaultTypeInternal;
extern CParental_ReportPlaytimeAndNotify_RequestDefaultTypeInternal _CParental_ReportPlaytimeAndNotify_Request_default_instance_;
class CParental_ReportPlaytimeAndNotify_Response;
struct CParental_ReportPlaytimeAndNotify_ResponseDefaultTypeInternal;
extern CParental_ReportPlaytimeAndNotify_ResponseDefaultTypeInternal _CParental_ReportPlaytimeAndNotify_Response_default_instance_;
class CParental_RequestFeatureAccess_Request;
struct CParental_RequestFeatureAccess_RequestDefaultTypeInternal;
extern CParental_RequestFeatureAccess_RequestDefaultTypeInternal _CParental_RequestFeatureAccess_Request_default_instance_;
class CParental_RequestFeatureAccess_Response;
struct CParental_RequestFeatureAccess_ResponseDefaultTypeInternal;
extern CParental_RequestFeatureAccess_ResponseDefaultTypeInternal _CParental_RequestFeatureAccess_Response_default_instance_;
class CParental_RequestPlaytime_Request;
struct CParental_RequestPlaytime_RequestDefaultTypeInternal;
extern CParental_RequestPlaytime_RequestDefaultTypeInternal _CParental_RequestPlaytime_Request_default_instance_;
class CParental_RequestPlaytime_Response;
struct CParental_RequestPlaytime_ResponseDefaultTypeInternal;
extern CParental_RequestPlaytime_ResponseDefaultTypeInternal _CParental_RequestPlaytime_Response_default_instance_;
class CParental_RequestRecoveryCode_Request;
struct CParental_RequestRecoveryCode_RequestDefaultTypeInternal;
extern CParental_RequestRecoveryCode_RequestDefaultTypeInternal _CParental_RequestRecoveryCode_Request_default_instance_;
class CParental_RequestRecoveryCode_Response;
struct CParental_RequestRecoveryCode_ResponseDefaultTypeInternal;
extern CParental_RequestRecoveryCode_ResponseDefaultTypeInternal _CParental_RequestRecoveryCode_Response_default_instance_;
class CParental_SetParentalSettings_Request;
struct CParental_SetParentalSettings_RequestDefaultTypeInternal;
extern CParental_SetParentalSettings_RequestDefaultTypeInternal _CParental_SetParentalSettings_Request_default_instance_;
class CParental_SetParentalSettings_Response;
struct CParental_SetParentalSettings_ResponseDefaultTypeInternal;
extern CParental_SetParentalSettings_ResponseDefaultTypeInternal _CParental_SetParentalSettings_Response_default_instance_;
class CParental_ValidatePassword_Request;
struct CParental_ValidatePassword_RequestDefaultTypeInternal;
extern CParental_ValidatePassword_RequestDefaultTypeInternal _CParental_ValidatePassword_Request_default_instance_;
class CParental_ValidatePassword_Response;
struct CParental_ValidatePassword_ResponseDefaultTypeInternal;
extern CParental_ValidatePassword_ResponseDefaultTypeInternal _CParental_ValidatePassword_Response_default_instance_;
class CParental_ValidateToken_Request;
struct CParental_ValidateToken_RequestDefaultTypeInternal;
extern CParental_ValidateToken_RequestDefaultTypeInternal _CParental_ValidateToken_Request_default_instance_;
class CParental_ValidateToken_Response;
struct CParental_ValidateToken_ResponseDefaultTypeInternal;
extern CParental_ValidateToken_ResponseDefaultTypeInternal _CParental_ValidateToken_Response_default_instance_;
class ParentalApp;
struct ParentalAppDefaultTypeInternal;
extern ParentalAppDefaultTypeInternal _ParentalApp_default_instance_;
class ParentalFeatureRequest;
struct ParentalFeatureRequestDefaultTypeInternal;
extern ParentalFeatureRequestDefaultTypeInternal _ParentalFeatureRequest_default_instance_;
class ParentalPlaytimeDay;
struct ParentalPlaytimeDayDefaultTypeInternal;
extern ParentalPlaytimeDayDefaultTypeInternal _ParentalPlaytimeDay_default_instance_;
class ParentalPlaytimeRequest;
struct ParentalPlaytimeRequestDefaultTypeInternal;
extern ParentalPlaytimeRequestDefaultTypeInternal _ParentalPlaytimeRequest_default_instance_;
class ParentalPlaytimeRestrictions;
struct ParentalPlaytimeRestrictionsDefaultTypeInternal;
extern ParentalPlaytimeRestrictionsDefaultTypeInternal _ParentalPlaytimeRestrictions_default_instance_;
class ParentalSettings;
struct ParentalSettingsDefaultTypeInternal;
extern ParentalSettingsDefaultTypeInternal _ParentalSettings_default_instance_;
class ParentalTemporaryPlaytimeRestrictions;
struct ParentalTemporaryPlaytimeRestrictionsDefaultTypeInternal;
extern ParentalTemporaryPlaytimeRestrictionsDefaultTypeInternal _ParentalTemporaryPlaytimeRestrictions_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CParental_ApproveFeatureAccess_Request* Arena::CreateMaybeMessage<::CParental_ApproveFeatureAccess_Request>(Arena*);
template<> ::CParental_ApproveFeatureAccess_Response* Arena::CreateMaybeMessage<::CParental_ApproveFeatureAccess_Response>(Arena*);
template<> ::CParental_ApprovePlaytime_Request* Arena::CreateMaybeMessage<::CParental_ApprovePlaytime_Request>(Arena*);
template<> ::CParental_ApprovePlaytime_Response* Arena::CreateMaybeMessage<::CParental_ApprovePlaytime_Response>(Arena*);
template<> ::CParental_DisableParentalSettings_Request* Arena::CreateMaybeMessage<::CParental_DisableParentalSettings_Request>(Arena*);
template<> ::CParental_DisableParentalSettings_Response* Arena::CreateMaybeMessage<::CParental_DisableParentalSettings_Response>(Arena*);
template<> ::CParental_DisableWithRecoveryCode_Request* Arena::CreateMaybeMessage<::CParental_DisableWithRecoveryCode_Request>(Arena*);
template<> ::CParental_DisableWithRecoveryCode_Response* Arena::CreateMaybeMessage<::CParental_DisableWithRecoveryCode_Response>(Arena*);
template<> ::CParental_EnableParentalSettings_Request* Arena::CreateMaybeMessage<::CParental_EnableParentalSettings_Request>(Arena*);
template<> ::CParental_EnableParentalSettings_Response* Arena::CreateMaybeMessage<::CParental_EnableParentalSettings_Response>(Arena*);
template<> ::CParental_GetParentalSettings_Request* Arena::CreateMaybeMessage<::CParental_GetParentalSettings_Request>(Arena*);
template<> ::CParental_GetParentalSettings_Response* Arena::CreateMaybeMessage<::CParental_GetParentalSettings_Response>(Arena*);
template<> ::CParental_GetRequests_Request* Arena::CreateMaybeMessage<::CParental_GetRequests_Request>(Arena*);
template<> ::CParental_GetRequests_Response* Arena::CreateMaybeMessage<::CParental_GetRequests_Response>(Arena*);
template<> ::CParental_GetSignedParentalSettings_Request* Arena::CreateMaybeMessage<::CParental_GetSignedParentalSettings_Request>(Arena*);
template<> ::CParental_GetSignedParentalSettings_Response* Arena::CreateMaybeMessage<::CParental_GetSignedParentalSettings_Response>(Arena*);
template<> ::CParental_LockClient_Request* Arena::CreateMaybeMessage<::CParental_LockClient_Request>(Arena*);
template<> ::CParental_LockClient_Response* Arena::CreateMaybeMessage<::CParental_LockClient_Response>(Arena*);
template<> ::CParental_ParentalLocNotification* Arena::CreateMaybeMessage<::CParental_ParentalLocNotification>(Arena*);
template<> ::CParental_ParentalSettingsChange_Notification* Arena::CreateMaybeMessage<::CParental_ParentalSettingsChange_Notification>(Arena*);
template<> ::CParental_ParentalUnlocNotification* Arena::CreateMaybeMessage<::CParental_ParentalUnlocNotification>(Arena*);
template<> ::CParental_PlaytimeUsed_Notification* Arena::CreateMaybeMessage<::CParental_PlaytimeUsed_Notification>(Arena*);
template<> ::CParental_ReportPlaytimeAndNotify_Request* Arena::CreateMaybeMessage<::CParental_ReportPlaytimeAndNotify_Request>(Arena*);
template<> ::CParental_ReportPlaytimeAndNotify_Response* Arena::CreateMaybeMessage<::CParental_ReportPlaytimeAndNotify_Response>(Arena*);
template<> ::CParental_RequestFeatureAccess_Request* Arena::CreateMaybeMessage<::CParental_RequestFeatureAccess_Request>(Arena*);
template<> ::CParental_RequestFeatureAccess_Response* Arena::CreateMaybeMessage<::CParental_RequestFeatureAccess_Response>(Arena*);
template<> ::CParental_RequestPlaytime_Request* Arena::CreateMaybeMessage<::CParental_RequestPlaytime_Request>(Arena*);
template<> ::CParental_RequestPlaytime_Response* Arena::CreateMaybeMessage<::CParental_RequestPlaytime_Response>(Arena*);
template<> ::CParental_RequestRecoveryCode_Request* Arena::CreateMaybeMessage<::CParental_RequestRecoveryCode_Request>(Arena*);
template<> ::CParental_RequestRecoveryCode_Response* Arena::CreateMaybeMessage<::CParental_RequestRecoveryCode_Response>(Arena*);
template<> ::CParental_SetParentalSettings_Request* Arena::CreateMaybeMessage<::CParental_SetParentalSettings_Request>(Arena*);
template<> ::CParental_SetParentalSettings_Response* Arena::CreateMaybeMessage<::CParental_SetParentalSettings_Response>(Arena*);
template<> ::CParental_ValidatePassword_Request* Arena::CreateMaybeMessage<::CParental_ValidatePassword_Request>(Arena*);
template<> ::CParental_ValidatePassword_Response* Arena::CreateMaybeMessage<::CParental_ValidatePassword_Response>(Arena*);
template<> ::CParental_ValidateToken_Request* Arena::CreateMaybeMessage<::CParental_ValidateToken_Request>(Arena*);
template<> ::CParental_ValidateToken_Response* Arena::CreateMaybeMessage<::CParental_ValidateToken_Response>(Arena*);
template<> ::ParentalApp* Arena::CreateMaybeMessage<::ParentalApp>(Arena*);
template<> ::ParentalFeatureRequest* Arena::CreateMaybeMessage<::ParentalFeatureRequest>(Arena*);
template<> ::ParentalPlaytimeDay* Arena::CreateMaybeMessage<::ParentalPlaytimeDay>(Arena*);
template<> ::ParentalPlaytimeRequest* Arena::CreateMaybeMessage<::ParentalPlaytimeRequest>(Arena*);
template<> ::ParentalPlaytimeRestrictions* Arena::CreateMaybeMessage<::ParentalPlaytimeRestrictions>(Arena*);
template<> ::ParentalSettings* Arena::CreateMaybeMessage<::ParentalSettings>(Arena*);
template<> ::ParentalTemporaryPlaytimeRestrictions* Arena::CreateMaybeMessage<::ParentalTemporaryPlaytimeRestrictions>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class ParentalApp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ParentalApp) */ {
 public:
  inline ParentalApp() : ParentalApp(nullptr) {}
  virtual ~ParentalApp();
  explicit constexpr ParentalApp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParentalApp(const ParentalApp& from);
  ParentalApp(ParentalApp&& from) noexcept
    : ParentalApp() {
    *this = ::std::move(from);
  }

  inline ParentalApp& operator=(const ParentalApp& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParentalApp& operator=(ParentalApp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ParentalApp& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParentalApp* internal_default_instance() {
    return reinterpret_cast<const ParentalApp*>(
               &_ParentalApp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ParentalApp& a, ParentalApp& b) {
    a.Swap(&b);
  }
  inline void Swap(ParentalApp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParentalApp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParentalApp* New() const final {
    return CreateMaybeMessage<ParentalApp>(nullptr);
  }

  ParentalApp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParentalApp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParentalApp& from);
  void MergeFrom(const ParentalApp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParentalApp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ParentalApp";
  }
  protected:
  explicit ParentalApp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppidFieldNumber = 1,
    kIsAllowedFieldNumber = 2,
  };
  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool is_allowed = 2;
  bool has_is_allowed() const;
  private:
  bool _internal_has_is_allowed() const;
  public:
  void clear_is_allowed();
  bool is_allowed() const;
  void set_is_allowed(bool value);
  private:
  bool _internal_is_allowed() const;
  void _internal_set_is_allowed(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ParentalApp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  bool is_allowed_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class ParentalPlaytimeDay PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ParentalPlaytimeDay) */ {
 public:
  inline ParentalPlaytimeDay() : ParentalPlaytimeDay(nullptr) {}
  virtual ~ParentalPlaytimeDay();
  explicit constexpr ParentalPlaytimeDay(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParentalPlaytimeDay(const ParentalPlaytimeDay& from);
  ParentalPlaytimeDay(ParentalPlaytimeDay&& from) noexcept
    : ParentalPlaytimeDay() {
    *this = ::std::move(from);
  }

  inline ParentalPlaytimeDay& operator=(const ParentalPlaytimeDay& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParentalPlaytimeDay& operator=(ParentalPlaytimeDay&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ParentalPlaytimeDay& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParentalPlaytimeDay* internal_default_instance() {
    return reinterpret_cast<const ParentalPlaytimeDay*>(
               &_ParentalPlaytimeDay_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ParentalPlaytimeDay& a, ParentalPlaytimeDay& b) {
    a.Swap(&b);
  }
  inline void Swap(ParentalPlaytimeDay* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParentalPlaytimeDay* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParentalPlaytimeDay* New() const final {
    return CreateMaybeMessage<ParentalPlaytimeDay>(nullptr);
  }

  ParentalPlaytimeDay* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParentalPlaytimeDay>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParentalPlaytimeDay& from);
  void MergeFrom(const ParentalPlaytimeDay& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParentalPlaytimeDay* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ParentalPlaytimeDay";
  }
  protected:
  explicit ParentalPlaytimeDay(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAllowedTimeWindowsFieldNumber = 1,
    kAllowedDailyMinutesFieldNumber = 2,
  };
  // optional uint64 allowed_time_windows = 1;
  bool has_allowed_time_windows() const;
  private:
  bool _internal_has_allowed_time_windows() const;
  public:
  void clear_allowed_time_windows();
  ::PROTOBUF_NAMESPACE_ID::uint64 allowed_time_windows() const;
  void set_allowed_time_windows(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_allowed_time_windows() const;
  void _internal_set_allowed_time_windows(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 allowed_daily_minutes = 2;
  bool has_allowed_daily_minutes() const;
  private:
  bool _internal_has_allowed_daily_minutes() const;
  public:
  void clear_allowed_daily_minutes();
  ::PROTOBUF_NAMESPACE_ID::uint32 allowed_daily_minutes() const;
  void set_allowed_daily_minutes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_allowed_daily_minutes() const;
  void _internal_set_allowed_daily_minutes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ParentalPlaytimeDay)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 allowed_time_windows_;
  ::PROTOBUF_NAMESPACE_ID::uint32 allowed_daily_minutes_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class ParentalPlaytimeRestrictions PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ParentalPlaytimeRestrictions) */ {
 public:
  inline ParentalPlaytimeRestrictions() : ParentalPlaytimeRestrictions(nullptr) {}
  virtual ~ParentalPlaytimeRestrictions();
  explicit constexpr ParentalPlaytimeRestrictions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParentalPlaytimeRestrictions(const ParentalPlaytimeRestrictions& from);
  ParentalPlaytimeRestrictions(ParentalPlaytimeRestrictions&& from) noexcept
    : ParentalPlaytimeRestrictions() {
    *this = ::std::move(from);
  }

  inline ParentalPlaytimeRestrictions& operator=(const ParentalPlaytimeRestrictions& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParentalPlaytimeRestrictions& operator=(ParentalPlaytimeRestrictions&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ParentalPlaytimeRestrictions& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParentalPlaytimeRestrictions* internal_default_instance() {
    return reinterpret_cast<const ParentalPlaytimeRestrictions*>(
               &_ParentalPlaytimeRestrictions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ParentalPlaytimeRestrictions& a, ParentalPlaytimeRestrictions& b) {
    a.Swap(&b);
  }
  inline void Swap(ParentalPlaytimeRestrictions* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParentalPlaytimeRestrictions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParentalPlaytimeRestrictions* New() const final {
    return CreateMaybeMessage<ParentalPlaytimeRestrictions>(nullptr);
  }

  ParentalPlaytimeRestrictions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParentalPlaytimeRestrictions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParentalPlaytimeRestrictions& from);
  void MergeFrom(const ParentalPlaytimeRestrictions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParentalPlaytimeRestrictions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ParentalPlaytimeRestrictions";
  }
  protected:
  explicit ParentalPlaytimeRestrictions(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlaytimeDaysFieldNumber = 15,
    kApplyPlaytimeRestrictionsFieldNumber = 2,
  };
  // repeated .ParentalPlaytimeDay playtime_days = 15;
  int playtime_days_size() const;
  private:
  int _internal_playtime_days_size() const;
  public:
  void clear_playtime_days();
  ::ParentalPlaytimeDay* mutable_playtime_days(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalPlaytimeDay >*
      mutable_playtime_days();
  private:
  const ::ParentalPlaytimeDay& _internal_playtime_days(int index) const;
  ::ParentalPlaytimeDay* _internal_add_playtime_days();
  public:
  const ::ParentalPlaytimeDay& playtime_days(int index) const;
  ::ParentalPlaytimeDay* add_playtime_days();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalPlaytimeDay >&
      playtime_days() const;

  // optional bool apply_playtime_restrictions = 2;
  bool has_apply_playtime_restrictions() const;
  private:
  bool _internal_has_apply_playtime_restrictions() const;
  public:
  void clear_apply_playtime_restrictions();
  bool apply_playtime_restrictions() const;
  void set_apply_playtime_restrictions(bool value);
  private:
  bool _internal_apply_playtime_restrictions() const;
  void _internal_set_apply_playtime_restrictions(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ParentalPlaytimeRestrictions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalPlaytimeDay > playtime_days_;
  bool apply_playtime_restrictions_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class ParentalTemporaryPlaytimeRestrictions PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ParentalTemporaryPlaytimeRestrictions) */ {
 public:
  inline ParentalTemporaryPlaytimeRestrictions() : ParentalTemporaryPlaytimeRestrictions(nullptr) {}
  virtual ~ParentalTemporaryPlaytimeRestrictions();
  explicit constexpr ParentalTemporaryPlaytimeRestrictions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParentalTemporaryPlaytimeRestrictions(const ParentalTemporaryPlaytimeRestrictions& from);
  ParentalTemporaryPlaytimeRestrictions(ParentalTemporaryPlaytimeRestrictions&& from) noexcept
    : ParentalTemporaryPlaytimeRestrictions() {
    *this = ::std::move(from);
  }

  inline ParentalTemporaryPlaytimeRestrictions& operator=(const ParentalTemporaryPlaytimeRestrictions& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParentalTemporaryPlaytimeRestrictions& operator=(ParentalTemporaryPlaytimeRestrictions&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ParentalTemporaryPlaytimeRestrictions& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParentalTemporaryPlaytimeRestrictions* internal_default_instance() {
    return reinterpret_cast<const ParentalTemporaryPlaytimeRestrictions*>(
               &_ParentalTemporaryPlaytimeRestrictions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ParentalTemporaryPlaytimeRestrictions& a, ParentalTemporaryPlaytimeRestrictions& b) {
    a.Swap(&b);
  }
  inline void Swap(ParentalTemporaryPlaytimeRestrictions* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParentalTemporaryPlaytimeRestrictions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParentalTemporaryPlaytimeRestrictions* New() const final {
    return CreateMaybeMessage<ParentalTemporaryPlaytimeRestrictions>(nullptr);
  }

  ParentalTemporaryPlaytimeRestrictions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParentalTemporaryPlaytimeRestrictions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParentalTemporaryPlaytimeRestrictions& from);
  void MergeFrom(const ParentalTemporaryPlaytimeRestrictions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParentalTemporaryPlaytimeRestrictions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ParentalTemporaryPlaytimeRestrictions";
  }
  protected:
  explicit ParentalTemporaryPlaytimeRestrictions(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRestrictionsFieldNumber = 1,
    kRtimeExpiresFieldNumber = 2,
  };
  // optional .ParentalPlaytimeDay restrictions = 1;
  bool has_restrictions() const;
  private:
  bool _internal_has_restrictions() const;
  public:
  void clear_restrictions();
  const ::ParentalPlaytimeDay& restrictions() const;
  ::ParentalPlaytimeDay* release_restrictions();
  ::ParentalPlaytimeDay* mutable_restrictions();
  void set_allocated_restrictions(::ParentalPlaytimeDay* restrictions);
  private:
  const ::ParentalPlaytimeDay& _internal_restrictions() const;
  ::ParentalPlaytimeDay* _internal_mutable_restrictions();
  public:
  void unsafe_arena_set_allocated_restrictions(
      ::ParentalPlaytimeDay* restrictions);
  ::ParentalPlaytimeDay* unsafe_arena_release_restrictions();

  // optional uint32 rtime_expires = 2;
  bool has_rtime_expires() const;
  private:
  bool _internal_has_rtime_expires() const;
  public:
  void clear_rtime_expires();
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime_expires() const;
  void set_rtime_expires(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rtime_expires() const;
  void _internal_set_rtime_expires(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ParentalTemporaryPlaytimeRestrictions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::ParentalPlaytimeDay* restrictions_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime_expires_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class ParentalSettings PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ParentalSettings) */ {
 public:
  inline ParentalSettings() : ParentalSettings(nullptr) {}
  virtual ~ParentalSettings();
  explicit constexpr ParentalSettings(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParentalSettings(const ParentalSettings& from);
  ParentalSettings(ParentalSettings&& from) noexcept
    : ParentalSettings() {
    *this = ::std::move(from);
  }

  inline ParentalSettings& operator=(const ParentalSettings& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParentalSettings& operator=(ParentalSettings&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ParentalSettings& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParentalSettings* internal_default_instance() {
    return reinterpret_cast<const ParentalSettings*>(
               &_ParentalSettings_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ParentalSettings& a, ParentalSettings& b) {
    a.Swap(&b);
  }
  inline void Swap(ParentalSettings* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParentalSettings* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParentalSettings* New() const final {
    return CreateMaybeMessage<ParentalSettings>(nullptr);
  }

  ParentalSettings* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParentalSettings>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParentalSettings& from);
  void MergeFrom(const ParentalSettings& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParentalSettings* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ParentalSettings";
  }
  protected:
  explicit ParentalSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kApplistBaseFieldNumber = 4,
    kApplistCustomFieldNumber = 5,
    kApplistBaseDescriptionFieldNumber = 3,
    kSaltFieldNumber = 7,
    kPasswordhashFieldNumber = 8,
    kRecoveryEmailFieldNumber = 11,
    kPlaytimeRestrictionsFieldNumber = 15,
    kTemporaryPlaytimeRestrictionsFieldNumber = 16,
    kSteamidFieldNumber = 1,
    kApplistBaseIdFieldNumber = 2,
    kPasswordhashtypeFieldNumber = 6,
    kEnabledFeaturesFieldNumber = 10,
    kIsEnabledFieldNumber = 9,
    kIsSiteLicenseLockFieldNumber = 12,
    kTemporaryEnabledFeaturesFieldNumber = 13,
    kRtimeTemporaryFeatureExpirationFieldNumber = 14,
  };
  // repeated .ParentalApp applist_base = 4;
  int applist_base_size() const;
  private:
  int _internal_applist_base_size() const;
  public:
  void clear_applist_base();
  ::ParentalApp* mutable_applist_base(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalApp >*
      mutable_applist_base();
  private:
  const ::ParentalApp& _internal_applist_base(int index) const;
  ::ParentalApp* _internal_add_applist_base();
  public:
  const ::ParentalApp& applist_base(int index) const;
  ::ParentalApp* add_applist_base();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalApp >&
      applist_base() const;

  // repeated .ParentalApp applist_custom = 5;
  int applist_custom_size() const;
  private:
  int _internal_applist_custom_size() const;
  public:
  void clear_applist_custom();
  ::ParentalApp* mutable_applist_custom(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalApp >*
      mutable_applist_custom();
  private:
  const ::ParentalApp& _internal_applist_custom(int index) const;
  ::ParentalApp* _internal_add_applist_custom();
  public:
  const ::ParentalApp& applist_custom(int index) const;
  ::ParentalApp* add_applist_custom();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalApp >&
      applist_custom() const;

  // optional string applist_base_description = 3;
  bool has_applist_base_description() const;
  private:
  bool _internal_has_applist_base_description() const;
  public:
  void clear_applist_base_description();
  const std::string& applist_base_description() const;
  void set_applist_base_description(const std::string& value);
  void set_applist_base_description(std::string&& value);
  void set_applist_base_description(const char* value);
  void set_applist_base_description(const char* value, size_t size);
  std::string* mutable_applist_base_description();
  std::string* release_applist_base_description();
  void set_allocated_applist_base_description(std::string* applist_base_description);
  private:
  const std::string& _internal_applist_base_description() const;
  void _internal_set_applist_base_description(const std::string& value);
  std::string* _internal_mutable_applist_base_description();
  public:

  // optional bytes salt = 7;
  bool has_salt() const;
  private:
  bool _internal_has_salt() const;
  public:
  void clear_salt();
  const std::string& salt() const;
  void set_salt(const std::string& value);
  void set_salt(std::string&& value);
  void set_salt(const char* value);
  void set_salt(const void* value, size_t size);
  std::string* mutable_salt();
  std::string* release_salt();
  void set_allocated_salt(std::string* salt);
  private:
  const std::string& _internal_salt() const;
  void _internal_set_salt(const std::string& value);
  std::string* _internal_mutable_salt();
  public:

  // optional bytes passwordhash = 8;
  bool has_passwordhash() const;
  private:
  bool _internal_has_passwordhash() const;
  public:
  void clear_passwordhash();
  const std::string& passwordhash() const;
  void set_passwordhash(const std::string& value);
  void set_passwordhash(std::string&& value);
  void set_passwordhash(const char* value);
  void set_passwordhash(const void* value, size_t size);
  std::string* mutable_passwordhash();
  std::string* release_passwordhash();
  void set_allocated_passwordhash(std::string* passwordhash);
  private:
  const std::string& _internal_passwordhash() const;
  void _internal_set_passwordhash(const std::string& value);
  std::string* _internal_mutable_passwordhash();
  public:

  // optional string recovery_email = 11;
  bool has_recovery_email() const;
  private:
  bool _internal_has_recovery_email() const;
  public:
  void clear_recovery_email();
  const std::string& recovery_email() const;
  void set_recovery_email(const std::string& value);
  void set_recovery_email(std::string&& value);
  void set_recovery_email(const char* value);
  void set_recovery_email(const char* value, size_t size);
  std::string* mutable_recovery_email();
  std::string* release_recovery_email();
  void set_allocated_recovery_email(std::string* recovery_email);
  private:
  const std::string& _internal_recovery_email() const;
  void _internal_set_recovery_email(const std::string& value);
  std::string* _internal_mutable_recovery_email();
  public:

  // optional .ParentalPlaytimeRestrictions playtime_restrictions = 15;
  bool has_playtime_restrictions() const;
  private:
  bool _internal_has_playtime_restrictions() const;
  public:
  void clear_playtime_restrictions();
  const ::ParentalPlaytimeRestrictions& playtime_restrictions() const;
  ::ParentalPlaytimeRestrictions* release_playtime_restrictions();
  ::ParentalPlaytimeRestrictions* mutable_playtime_restrictions();
  void set_allocated_playtime_restrictions(::ParentalPlaytimeRestrictions* playtime_restrictions);
  private:
  const ::ParentalPlaytimeRestrictions& _internal_playtime_restrictions() const;
  ::ParentalPlaytimeRestrictions* _internal_mutable_playtime_restrictions();
  public:
  void unsafe_arena_set_allocated_playtime_restrictions(
      ::ParentalPlaytimeRestrictions* playtime_restrictions);
  ::ParentalPlaytimeRestrictions* unsafe_arena_release_playtime_restrictions();

  // optional .ParentalTemporaryPlaytimeRestrictions temporary_playtime_restrictions = 16;
  bool has_temporary_playtime_restrictions() const;
  private:
  bool _internal_has_temporary_playtime_restrictions() const;
  public:
  void clear_temporary_playtime_restrictions();
  const ::ParentalTemporaryPlaytimeRestrictions& temporary_playtime_restrictions() const;
  ::ParentalTemporaryPlaytimeRestrictions* release_temporary_playtime_restrictions();
  ::ParentalTemporaryPlaytimeRestrictions* mutable_temporary_playtime_restrictions();
  void set_allocated_temporary_playtime_restrictions(::ParentalTemporaryPlaytimeRestrictions* temporary_playtime_restrictions);
  private:
  const ::ParentalTemporaryPlaytimeRestrictions& _internal_temporary_playtime_restrictions() const;
  ::ParentalTemporaryPlaytimeRestrictions* _internal_mutable_temporary_playtime_restrictions();
  public:
  void unsafe_arena_set_allocated_temporary_playtime_restrictions(
      ::ParentalTemporaryPlaytimeRestrictions* temporary_playtime_restrictions);
  ::ParentalTemporaryPlaytimeRestrictions* unsafe_arena_release_temporary_playtime_restrictions();

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 applist_base_id = 2;
  bool has_applist_base_id() const;
  private:
  bool _internal_has_applist_base_id() const;
  public:
  void clear_applist_base_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 applist_base_id() const;
  void set_applist_base_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_applist_base_id() const;
  void _internal_set_applist_base_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 passwordhashtype = 6;
  bool has_passwordhashtype() const;
  private:
  bool _internal_has_passwordhashtype() const;
  public:
  void clear_passwordhashtype();
  ::PROTOBUF_NAMESPACE_ID::uint32 passwordhashtype() const;
  void set_passwordhashtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_passwordhashtype() const;
  void _internal_set_passwordhashtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 enabled_features = 10;
  bool has_enabled_features() const;
  private:
  bool _internal_has_enabled_features() const;
  public:
  void clear_enabled_features();
  ::PROTOBUF_NAMESPACE_ID::uint32 enabled_features() const;
  void set_enabled_features(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_enabled_features() const;
  void _internal_set_enabled_features(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool is_enabled = 9;
  bool has_is_enabled() const;
  private:
  bool _internal_has_is_enabled() const;
  public:
  void clear_is_enabled();
  bool is_enabled() const;
  void set_is_enabled(bool value);
  private:
  bool _internal_is_enabled() const;
  void _internal_set_is_enabled(bool value);
  public:

  // optional bool is_site_license_lock = 12;
  bool has_is_site_license_lock() const;
  private:
  bool _internal_has_is_site_license_lock() const;
  public:
  void clear_is_site_license_lock();
  bool is_site_license_lock() const;
  void set_is_site_license_lock(bool value);
  private:
  bool _internal_is_site_license_lock() const;
  void _internal_set_is_site_license_lock(bool value);
  public:

  // optional uint32 temporary_enabled_features = 13;
  bool has_temporary_enabled_features() const;
  private:
  bool _internal_has_temporary_enabled_features() const;
  public:
  void clear_temporary_enabled_features();
  ::PROTOBUF_NAMESPACE_ID::uint32 temporary_enabled_features() const;
  void set_temporary_enabled_features(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_temporary_enabled_features() const;
  void _internal_set_temporary_enabled_features(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 rtime_temporary_feature_expiration = 14;
  bool has_rtime_temporary_feature_expiration() const;
  private:
  bool _internal_has_rtime_temporary_feature_expiration() const;
  public:
  void clear_rtime_temporary_feature_expiration();
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime_temporary_feature_expiration() const;
  void set_rtime_temporary_feature_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rtime_temporary_feature_expiration() const;
  void _internal_set_rtime_temporary_feature_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ParentalSettings)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalApp > applist_base_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalApp > applist_custom_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr applist_base_description_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr salt_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr passwordhash_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr recovery_email_;
  ::ParentalPlaytimeRestrictions* playtime_restrictions_;
  ::ParentalTemporaryPlaytimeRestrictions* temporary_playtime_restrictions_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 applist_base_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 passwordhashtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 enabled_features_;
  bool is_enabled_;
  bool is_site_license_lock_;
  ::PROTOBUF_NAMESPACE_ID::uint32 temporary_enabled_features_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime_temporary_feature_expiration_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_EnableParentalSettings_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_EnableParentalSettings_Request) */ {
 public:
  inline CParental_EnableParentalSettings_Request() : CParental_EnableParentalSettings_Request(nullptr) {}
  virtual ~CParental_EnableParentalSettings_Request();
  explicit constexpr CParental_EnableParentalSettings_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_EnableParentalSettings_Request(const CParental_EnableParentalSettings_Request& from);
  CParental_EnableParentalSettings_Request(CParental_EnableParentalSettings_Request&& from) noexcept
    : CParental_EnableParentalSettings_Request() {
    *this = ::std::move(from);
  }

  inline CParental_EnableParentalSettings_Request& operator=(const CParental_EnableParentalSettings_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_EnableParentalSettings_Request& operator=(CParental_EnableParentalSettings_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_EnableParentalSettings_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_EnableParentalSettings_Request* internal_default_instance() {
    return reinterpret_cast<const CParental_EnableParentalSettings_Request*>(
               &_CParental_EnableParentalSettings_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CParental_EnableParentalSettings_Request& a, CParental_EnableParentalSettings_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_EnableParentalSettings_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_EnableParentalSettings_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_EnableParentalSettings_Request* New() const final {
    return CreateMaybeMessage<CParental_EnableParentalSettings_Request>(nullptr);
  }

  CParental_EnableParentalSettings_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_EnableParentalSettings_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_EnableParentalSettings_Request& from);
  void MergeFrom(const CParental_EnableParentalSettings_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_EnableParentalSettings_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_EnableParentalSettings_Request";
  }
  protected:
  explicit CParental_EnableParentalSettings_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPasswordFieldNumber = 1,
    kSessionidFieldNumber = 3,
    kSettingsFieldNumber = 2,
    kEnablecodeFieldNumber = 4,
    kSteamidFieldNumber = 10,
  };
  // optional string password = 1;
  bool has_password() const;
  private:
  bool _internal_has_password() const;
  public:
  void clear_password();
  const std::string& password() const;
  void set_password(const std::string& value);
  void set_password(std::string&& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  std::string* mutable_password();
  std::string* release_password();
  void set_allocated_password(std::string* password);
  private:
  const std::string& _internal_password() const;
  void _internal_set_password(const std::string& value);
  std::string* _internal_mutable_password();
  public:

  // optional string sessionid = 3;
  bool has_sessionid() const;
  private:
  bool _internal_has_sessionid() const;
  public:
  void clear_sessionid();
  const std::string& sessionid() const;
  void set_sessionid(const std::string& value);
  void set_sessionid(std::string&& value);
  void set_sessionid(const char* value);
  void set_sessionid(const char* value, size_t size);
  std::string* mutable_sessionid();
  std::string* release_sessionid();
  void set_allocated_sessionid(std::string* sessionid);
  private:
  const std::string& _internal_sessionid() const;
  void _internal_set_sessionid(const std::string& value);
  std::string* _internal_mutable_sessionid();
  public:

  // optional .ParentalSettings settings = 2;
  bool has_settings() const;
  private:
  bool _internal_has_settings() const;
  public:
  void clear_settings();
  const ::ParentalSettings& settings() const;
  ::ParentalSettings* release_settings();
  ::ParentalSettings* mutable_settings();
  void set_allocated_settings(::ParentalSettings* settings);
  private:
  const ::ParentalSettings& _internal_settings() const;
  ::ParentalSettings* _internal_mutable_settings();
  public:
  void unsafe_arena_set_allocated_settings(
      ::ParentalSettings* settings);
  ::ParentalSettings* unsafe_arena_release_settings();

  // optional uint32 enablecode = 4;
  bool has_enablecode() const;
  private:
  bool _internal_has_enablecode() const;
  public:
  void clear_enablecode();
  ::PROTOBUF_NAMESPACE_ID::uint32 enablecode() const;
  void set_enablecode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_enablecode() const;
  void _internal_set_enablecode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed64 steamid = 10;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CParental_EnableParentalSettings_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sessionid_;
  ::ParentalSettings* settings_;
  ::PROTOBUF_NAMESPACE_ID::uint32 enablecode_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_EnableParentalSettings_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_EnableParentalSettings_Response) */ {
 public:
  inline CParental_EnableParentalSettings_Response() : CParental_EnableParentalSettings_Response(nullptr) {}
  virtual ~CParental_EnableParentalSettings_Response();
  explicit constexpr CParental_EnableParentalSettings_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_EnableParentalSettings_Response(const CParental_EnableParentalSettings_Response& from);
  CParental_EnableParentalSettings_Response(CParental_EnableParentalSettings_Response&& from) noexcept
    : CParental_EnableParentalSettings_Response() {
    *this = ::std::move(from);
  }

  inline CParental_EnableParentalSettings_Response& operator=(const CParental_EnableParentalSettings_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_EnableParentalSettings_Response& operator=(CParental_EnableParentalSettings_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_EnableParentalSettings_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_EnableParentalSettings_Response* internal_default_instance() {
    return reinterpret_cast<const CParental_EnableParentalSettings_Response*>(
               &_CParental_EnableParentalSettings_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CParental_EnableParentalSettings_Response& a, CParental_EnableParentalSettings_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_EnableParentalSettings_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_EnableParentalSettings_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_EnableParentalSettings_Response* New() const final {
    return CreateMaybeMessage<CParental_EnableParentalSettings_Response>(nullptr);
  }

  CParental_EnableParentalSettings_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_EnableParentalSettings_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_EnableParentalSettings_Response& from);
  void MergeFrom(const CParental_EnableParentalSettings_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_EnableParentalSettings_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_EnableParentalSettings_Response";
  }
  protected:
  explicit CParental_EnableParentalSettings_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CParental_EnableParentalSettings_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_DisableParentalSettings_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_DisableParentalSettings_Request) */ {
 public:
  inline CParental_DisableParentalSettings_Request() : CParental_DisableParentalSettings_Request(nullptr) {}
  virtual ~CParental_DisableParentalSettings_Request();
  explicit constexpr CParental_DisableParentalSettings_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_DisableParentalSettings_Request(const CParental_DisableParentalSettings_Request& from);
  CParental_DisableParentalSettings_Request(CParental_DisableParentalSettings_Request&& from) noexcept
    : CParental_DisableParentalSettings_Request() {
    *this = ::std::move(from);
  }

  inline CParental_DisableParentalSettings_Request& operator=(const CParental_DisableParentalSettings_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_DisableParentalSettings_Request& operator=(CParental_DisableParentalSettings_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_DisableParentalSettings_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_DisableParentalSettings_Request* internal_default_instance() {
    return reinterpret_cast<const CParental_DisableParentalSettings_Request*>(
               &_CParental_DisableParentalSettings_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CParental_DisableParentalSettings_Request& a, CParental_DisableParentalSettings_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_DisableParentalSettings_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_DisableParentalSettings_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_DisableParentalSettings_Request* New() const final {
    return CreateMaybeMessage<CParental_DisableParentalSettings_Request>(nullptr);
  }

  CParental_DisableParentalSettings_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_DisableParentalSettings_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_DisableParentalSettings_Request& from);
  void MergeFrom(const CParental_DisableParentalSettings_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_DisableParentalSettings_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_DisableParentalSettings_Request";
  }
  protected:
  explicit CParental_DisableParentalSettings_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPasswordFieldNumber = 1,
    kSteamidFieldNumber = 10,
  };
  // optional string password = 1;
  bool has_password() const;
  private:
  bool _internal_has_password() const;
  public:
  void clear_password();
  const std::string& password() const;
  void set_password(const std::string& value);
  void set_password(std::string&& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  std::string* mutable_password();
  std::string* release_password();
  void set_allocated_password(std::string* password);
  private:
  const std::string& _internal_password() const;
  void _internal_set_password(const std::string& value);
  std::string* _internal_mutable_password();
  public:

  // optional fixed64 steamid = 10;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CParental_DisableParentalSettings_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr password_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_DisableParentalSettings_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_DisableParentalSettings_Response) */ {
 public:
  inline CParental_DisableParentalSettings_Response() : CParental_DisableParentalSettings_Response(nullptr) {}
  virtual ~CParental_DisableParentalSettings_Response();
  explicit constexpr CParental_DisableParentalSettings_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_DisableParentalSettings_Response(const CParental_DisableParentalSettings_Response& from);
  CParental_DisableParentalSettings_Response(CParental_DisableParentalSettings_Response&& from) noexcept
    : CParental_DisableParentalSettings_Response() {
    *this = ::std::move(from);
  }

  inline CParental_DisableParentalSettings_Response& operator=(const CParental_DisableParentalSettings_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_DisableParentalSettings_Response& operator=(CParental_DisableParentalSettings_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_DisableParentalSettings_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_DisableParentalSettings_Response* internal_default_instance() {
    return reinterpret_cast<const CParental_DisableParentalSettings_Response*>(
               &_CParental_DisableParentalSettings_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CParental_DisableParentalSettings_Response& a, CParental_DisableParentalSettings_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_DisableParentalSettings_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_DisableParentalSettings_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_DisableParentalSettings_Response* New() const final {
    return CreateMaybeMessage<CParental_DisableParentalSettings_Response>(nullptr);
  }

  CParental_DisableParentalSettings_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_DisableParentalSettings_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_DisableParentalSettings_Response& from);
  void MergeFrom(const CParental_DisableParentalSettings_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_DisableParentalSettings_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_DisableParentalSettings_Response";
  }
  protected:
  explicit CParental_DisableParentalSettings_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CParental_DisableParentalSettings_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_GetParentalSettings_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_GetParentalSettings_Request) */ {
 public:
  inline CParental_GetParentalSettings_Request() : CParental_GetParentalSettings_Request(nullptr) {}
  virtual ~CParental_GetParentalSettings_Request();
  explicit constexpr CParental_GetParentalSettings_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_GetParentalSettings_Request(const CParental_GetParentalSettings_Request& from);
  CParental_GetParentalSettings_Request(CParental_GetParentalSettings_Request&& from) noexcept
    : CParental_GetParentalSettings_Request() {
    *this = ::std::move(from);
  }

  inline CParental_GetParentalSettings_Request& operator=(const CParental_GetParentalSettings_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_GetParentalSettings_Request& operator=(CParental_GetParentalSettings_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_GetParentalSettings_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_GetParentalSettings_Request* internal_default_instance() {
    return reinterpret_cast<const CParental_GetParentalSettings_Request*>(
               &_CParental_GetParentalSettings_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CParental_GetParentalSettings_Request& a, CParental_GetParentalSettings_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_GetParentalSettings_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_GetParentalSettings_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_GetParentalSettings_Request* New() const final {
    return CreateMaybeMessage<CParental_GetParentalSettings_Request>(nullptr);
  }

  CParental_GetParentalSettings_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_GetParentalSettings_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_GetParentalSettings_Request& from);
  void MergeFrom(const CParental_GetParentalSettings_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_GetParentalSettings_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_GetParentalSettings_Request";
  }
  protected:
  explicit CParental_GetParentalSettings_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamidFieldNumber = 10,
  };
  // optional fixed64 steamid = 10;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CParental_GetParentalSettings_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_GetParentalSettings_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_GetParentalSettings_Response) */ {
 public:
  inline CParental_GetParentalSettings_Response() : CParental_GetParentalSettings_Response(nullptr) {}
  virtual ~CParental_GetParentalSettings_Response();
  explicit constexpr CParental_GetParentalSettings_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_GetParentalSettings_Response(const CParental_GetParentalSettings_Response& from);
  CParental_GetParentalSettings_Response(CParental_GetParentalSettings_Response&& from) noexcept
    : CParental_GetParentalSettings_Response() {
    *this = ::std::move(from);
  }

  inline CParental_GetParentalSettings_Response& operator=(const CParental_GetParentalSettings_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_GetParentalSettings_Response& operator=(CParental_GetParentalSettings_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_GetParentalSettings_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_GetParentalSettings_Response* internal_default_instance() {
    return reinterpret_cast<const CParental_GetParentalSettings_Response*>(
               &_CParental_GetParentalSettings_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CParental_GetParentalSettings_Response& a, CParental_GetParentalSettings_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_GetParentalSettings_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_GetParentalSettings_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_GetParentalSettings_Response* New() const final {
    return CreateMaybeMessage<CParental_GetParentalSettings_Response>(nullptr);
  }

  CParental_GetParentalSettings_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_GetParentalSettings_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_GetParentalSettings_Response& from);
  void MergeFrom(const CParental_GetParentalSettings_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_GetParentalSettings_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_GetParentalSettings_Response";
  }
  protected:
  explicit CParental_GetParentalSettings_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSettingsFieldNumber = 1,
  };
  // optional .ParentalSettings settings = 1;
  bool has_settings() const;
  private:
  bool _internal_has_settings() const;
  public:
  void clear_settings();
  const ::ParentalSettings& settings() const;
  ::ParentalSettings* release_settings();
  ::ParentalSettings* mutable_settings();
  void set_allocated_settings(::ParentalSettings* settings);
  private:
  const ::ParentalSettings& _internal_settings() const;
  ::ParentalSettings* _internal_mutable_settings();
  public:
  void unsafe_arena_set_allocated_settings(
      ::ParentalSettings* settings);
  ::ParentalSettings* unsafe_arena_release_settings();

  // @@protoc_insertion_point(class_scope:CParental_GetParentalSettings_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::ParentalSettings* settings_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_GetSignedParentalSettings_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_GetSignedParentalSettings_Request) */ {
 public:
  inline CParental_GetSignedParentalSettings_Request() : CParental_GetSignedParentalSettings_Request(nullptr) {}
  virtual ~CParental_GetSignedParentalSettings_Request();
  explicit constexpr CParental_GetSignedParentalSettings_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_GetSignedParentalSettings_Request(const CParental_GetSignedParentalSettings_Request& from);
  CParental_GetSignedParentalSettings_Request(CParental_GetSignedParentalSettings_Request&& from) noexcept
    : CParental_GetSignedParentalSettings_Request() {
    *this = ::std::move(from);
  }

  inline CParental_GetSignedParentalSettings_Request& operator=(const CParental_GetSignedParentalSettings_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_GetSignedParentalSettings_Request& operator=(CParental_GetSignedParentalSettings_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_GetSignedParentalSettings_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_GetSignedParentalSettings_Request* internal_default_instance() {
    return reinterpret_cast<const CParental_GetSignedParentalSettings_Request*>(
               &_CParental_GetSignedParentalSettings_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CParental_GetSignedParentalSettings_Request& a, CParental_GetSignedParentalSettings_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_GetSignedParentalSettings_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_GetSignedParentalSettings_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_GetSignedParentalSettings_Request* New() const final {
    return CreateMaybeMessage<CParental_GetSignedParentalSettings_Request>(nullptr);
  }

  CParental_GetSignedParentalSettings_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_GetSignedParentalSettings_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_GetSignedParentalSettings_Request& from);
  void MergeFrom(const CParental_GetSignedParentalSettings_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_GetSignedParentalSettings_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_GetSignedParentalSettings_Request";
  }
  protected:
  explicit CParental_GetSignedParentalSettings_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPriorityFieldNumber = 1,
  };
  // optional uint32 priority = 1;
  bool has_priority() const;
  private:
  bool _internal_has_priority() const;
  public:
  void clear_priority();
  ::PROTOBUF_NAMESPACE_ID::uint32 priority() const;
  void set_priority(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_priority() const;
  void _internal_set_priority(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CParental_GetSignedParentalSettings_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 priority_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_GetSignedParentalSettings_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_GetSignedParentalSettings_Response) */ {
 public:
  inline CParental_GetSignedParentalSettings_Response() : CParental_GetSignedParentalSettings_Response(nullptr) {}
  virtual ~CParental_GetSignedParentalSettings_Response();
  explicit constexpr CParental_GetSignedParentalSettings_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_GetSignedParentalSettings_Response(const CParental_GetSignedParentalSettings_Response& from);
  CParental_GetSignedParentalSettings_Response(CParental_GetSignedParentalSettings_Response&& from) noexcept
    : CParental_GetSignedParentalSettings_Response() {
    *this = ::std::move(from);
  }

  inline CParental_GetSignedParentalSettings_Response& operator=(const CParental_GetSignedParentalSettings_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_GetSignedParentalSettings_Response& operator=(CParental_GetSignedParentalSettings_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_GetSignedParentalSettings_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_GetSignedParentalSettings_Response* internal_default_instance() {
    return reinterpret_cast<const CParental_GetSignedParentalSettings_Response*>(
               &_CParental_GetSignedParentalSettings_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CParental_GetSignedParentalSettings_Response& a, CParental_GetSignedParentalSettings_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_GetSignedParentalSettings_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_GetSignedParentalSettings_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_GetSignedParentalSettings_Response* New() const final {
    return CreateMaybeMessage<CParental_GetSignedParentalSettings_Response>(nullptr);
  }

  CParental_GetSignedParentalSettings_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_GetSignedParentalSettings_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_GetSignedParentalSettings_Response& from);
  void MergeFrom(const CParental_GetSignedParentalSettings_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_GetSignedParentalSettings_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_GetSignedParentalSettings_Response";
  }
  protected:
  explicit CParental_GetSignedParentalSettings_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSerializedSettingsFieldNumber = 1,
    kSignatureFieldNumber = 2,
  };
  // optional bytes serialized_settings = 1;
  bool has_serialized_settings() const;
  private:
  bool _internal_has_serialized_settings() const;
  public:
  void clear_serialized_settings();
  const std::string& serialized_settings() const;
  void set_serialized_settings(const std::string& value);
  void set_serialized_settings(std::string&& value);
  void set_serialized_settings(const char* value);
  void set_serialized_settings(const void* value, size_t size);
  std::string* mutable_serialized_settings();
  std::string* release_serialized_settings();
  void set_allocated_serialized_settings(std::string* serialized_settings);
  private:
  const std::string& _internal_serialized_settings() const;
  void _internal_set_serialized_settings(const std::string& value);
  std::string* _internal_mutable_serialized_settings();
  public:

  // optional bytes signature = 2;
  bool has_signature() const;
  private:
  bool _internal_has_signature() const;
  public:
  void clear_signature();
  const std::string& signature() const;
  void set_signature(const std::string& value);
  void set_signature(std::string&& value);
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  std::string* mutable_signature();
  std::string* release_signature();
  void set_allocated_signature(std::string* signature);
  private:
  const std::string& _internal_signature() const;
  void _internal_set_signature(const std::string& value);
  std::string* _internal_mutable_signature();
  public:

  // @@protoc_insertion_point(class_scope:CParental_GetSignedParentalSettings_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr serialized_settings_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr signature_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_SetParentalSettings_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_SetParentalSettings_Request) */ {
 public:
  inline CParental_SetParentalSettings_Request() : CParental_SetParentalSettings_Request(nullptr) {}
  virtual ~CParental_SetParentalSettings_Request();
  explicit constexpr CParental_SetParentalSettings_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_SetParentalSettings_Request(const CParental_SetParentalSettings_Request& from);
  CParental_SetParentalSettings_Request(CParental_SetParentalSettings_Request&& from) noexcept
    : CParental_SetParentalSettings_Request() {
    *this = ::std::move(from);
  }

  inline CParental_SetParentalSettings_Request& operator=(const CParental_SetParentalSettings_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_SetParentalSettings_Request& operator=(CParental_SetParentalSettings_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_SetParentalSettings_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_SetParentalSettings_Request* internal_default_instance() {
    return reinterpret_cast<const CParental_SetParentalSettings_Request*>(
               &_CParental_SetParentalSettings_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CParental_SetParentalSettings_Request& a, CParental_SetParentalSettings_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_SetParentalSettings_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_SetParentalSettings_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_SetParentalSettings_Request* New() const final {
    return CreateMaybeMessage<CParental_SetParentalSettings_Request>(nullptr);
  }

  CParental_SetParentalSettings_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_SetParentalSettings_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_SetParentalSettings_Request& from);
  void MergeFrom(const CParental_SetParentalSettings_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_SetParentalSettings_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_SetParentalSettings_Request";
  }
  protected:
  explicit CParental_SetParentalSettings_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPasswordFieldNumber = 1,
    kNewPasswordFieldNumber = 3,
    kSessionidFieldNumber = 4,
    kSettingsFieldNumber = 2,
    kSteamidFieldNumber = 10,
  };
  // optional string password = 1;
  bool has_password() const;
  private:
  bool _internal_has_password() const;
  public:
  void clear_password();
  const std::string& password() const;
  void set_password(const std::string& value);
  void set_password(std::string&& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  std::string* mutable_password();
  std::string* release_password();
  void set_allocated_password(std::string* password);
  private:
  const std::string& _internal_password() const;
  void _internal_set_password(const std::string& value);
  std::string* _internal_mutable_password();
  public:

  // optional string new_password = 3;
  bool has_new_password() const;
  private:
  bool _internal_has_new_password() const;
  public:
  void clear_new_password();
  const std::string& new_password() const;
  void set_new_password(const std::string& value);
  void set_new_password(std::string&& value);
  void set_new_password(const char* value);
  void set_new_password(const char* value, size_t size);
  std::string* mutable_new_password();
  std::string* release_new_password();
  void set_allocated_new_password(std::string* new_password);
  private:
  const std::string& _internal_new_password() const;
  void _internal_set_new_password(const std::string& value);
  std::string* _internal_mutable_new_password();
  public:

  // optional string sessionid = 4;
  bool has_sessionid() const;
  private:
  bool _internal_has_sessionid() const;
  public:
  void clear_sessionid();
  const std::string& sessionid() const;
  void set_sessionid(const std::string& value);
  void set_sessionid(std::string&& value);
  void set_sessionid(const char* value);
  void set_sessionid(const char* value, size_t size);
  std::string* mutable_sessionid();
  std::string* release_sessionid();
  void set_allocated_sessionid(std::string* sessionid);
  private:
  const std::string& _internal_sessionid() const;
  void _internal_set_sessionid(const std::string& value);
  std::string* _internal_mutable_sessionid();
  public:

  // optional .ParentalSettings settings = 2;
  bool has_settings() const;
  private:
  bool _internal_has_settings() const;
  public:
  void clear_settings();
  const ::ParentalSettings& settings() const;
  ::ParentalSettings* release_settings();
  ::ParentalSettings* mutable_settings();
  void set_allocated_settings(::ParentalSettings* settings);
  private:
  const ::ParentalSettings& _internal_settings() const;
  ::ParentalSettings* _internal_mutable_settings();
  public:
  void unsafe_arena_set_allocated_settings(
      ::ParentalSettings* settings);
  ::ParentalSettings* unsafe_arena_release_settings();

  // optional fixed64 steamid = 10;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CParental_SetParentalSettings_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr new_password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sessionid_;
  ::ParentalSettings* settings_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_SetParentalSettings_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_SetParentalSettings_Response) */ {
 public:
  inline CParental_SetParentalSettings_Response() : CParental_SetParentalSettings_Response(nullptr) {}
  virtual ~CParental_SetParentalSettings_Response();
  explicit constexpr CParental_SetParentalSettings_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_SetParentalSettings_Response(const CParental_SetParentalSettings_Response& from);
  CParental_SetParentalSettings_Response(CParental_SetParentalSettings_Response&& from) noexcept
    : CParental_SetParentalSettings_Response() {
    *this = ::std::move(from);
  }

  inline CParental_SetParentalSettings_Response& operator=(const CParental_SetParentalSettings_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_SetParentalSettings_Response& operator=(CParental_SetParentalSettings_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_SetParentalSettings_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_SetParentalSettings_Response* internal_default_instance() {
    return reinterpret_cast<const CParental_SetParentalSettings_Response*>(
               &_CParental_SetParentalSettings_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CParental_SetParentalSettings_Response& a, CParental_SetParentalSettings_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_SetParentalSettings_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_SetParentalSettings_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_SetParentalSettings_Response* New() const final {
    return CreateMaybeMessage<CParental_SetParentalSettings_Response>(nullptr);
  }

  CParental_SetParentalSettings_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_SetParentalSettings_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_SetParentalSettings_Response& from);
  void MergeFrom(const CParental_SetParentalSettings_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_SetParentalSettings_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_SetParentalSettings_Response";
  }
  protected:
  explicit CParental_SetParentalSettings_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CParental_SetParentalSettings_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_ValidateToken_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_ValidateToken_Request) */ {
 public:
  inline CParental_ValidateToken_Request() : CParental_ValidateToken_Request(nullptr) {}
  virtual ~CParental_ValidateToken_Request();
  explicit constexpr CParental_ValidateToken_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_ValidateToken_Request(const CParental_ValidateToken_Request& from);
  CParental_ValidateToken_Request(CParental_ValidateToken_Request&& from) noexcept
    : CParental_ValidateToken_Request() {
    *this = ::std::move(from);
  }

  inline CParental_ValidateToken_Request& operator=(const CParental_ValidateToken_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_ValidateToken_Request& operator=(CParental_ValidateToken_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_ValidateToken_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_ValidateToken_Request* internal_default_instance() {
    return reinterpret_cast<const CParental_ValidateToken_Request*>(
               &_CParental_ValidateToken_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CParental_ValidateToken_Request& a, CParental_ValidateToken_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_ValidateToken_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_ValidateToken_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_ValidateToken_Request* New() const final {
    return CreateMaybeMessage<CParental_ValidateToken_Request>(nullptr);
  }

  CParental_ValidateToken_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_ValidateToken_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_ValidateToken_Request& from);
  void MergeFrom(const CParental_ValidateToken_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_ValidateToken_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_ValidateToken_Request";
  }
  protected:
  explicit CParental_ValidateToken_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnloctokenFieldNumber = 1,
  };
  // optional string unloctoken = 1;
  bool has_unloctoken() const;
  private:
  bool _internal_has_unloctoken() const;
  public:
  void clear_unloctoken();
  const std::string& unloctoken() const;
  void set_unloctoken(const std::string& value);
  void set_unloctoken(std::string&& value);
  void set_unloctoken(const char* value);
  void set_unloctoken(const char* value, size_t size);
  std::string* mutable_unloctoken();
  std::string* release_unloctoken();
  void set_allocated_unloctoken(std::string* unloctoken);
  private:
  const std::string& _internal_unloctoken() const;
  void _internal_set_unloctoken(const std::string& value);
  std::string* _internal_mutable_unloctoken();
  public:

  // @@protoc_insertion_point(class_scope:CParental_ValidateToken_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr unloctoken_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_ValidateToken_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_ValidateToken_Response) */ {
 public:
  inline CParental_ValidateToken_Response() : CParental_ValidateToken_Response(nullptr) {}
  virtual ~CParental_ValidateToken_Response();
  explicit constexpr CParental_ValidateToken_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_ValidateToken_Response(const CParental_ValidateToken_Response& from);
  CParental_ValidateToken_Response(CParental_ValidateToken_Response&& from) noexcept
    : CParental_ValidateToken_Response() {
    *this = ::std::move(from);
  }

  inline CParental_ValidateToken_Response& operator=(const CParental_ValidateToken_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_ValidateToken_Response& operator=(CParental_ValidateToken_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_ValidateToken_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_ValidateToken_Response* internal_default_instance() {
    return reinterpret_cast<const CParental_ValidateToken_Response*>(
               &_CParental_ValidateToken_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CParental_ValidateToken_Response& a, CParental_ValidateToken_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_ValidateToken_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_ValidateToken_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_ValidateToken_Response* New() const final {
    return CreateMaybeMessage<CParental_ValidateToken_Response>(nullptr);
  }

  CParental_ValidateToken_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_ValidateToken_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_ValidateToken_Response& from);
  void MergeFrom(const CParental_ValidateToken_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_ValidateToken_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_ValidateToken_Response";
  }
  protected:
  explicit CParental_ValidateToken_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CParental_ValidateToken_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_ValidatePassword_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_ValidatePassword_Request) */ {
 public:
  inline CParental_ValidatePassword_Request() : CParental_ValidatePassword_Request(nullptr) {}
  virtual ~CParental_ValidatePassword_Request();
  explicit constexpr CParental_ValidatePassword_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_ValidatePassword_Request(const CParental_ValidatePassword_Request& from);
  CParental_ValidatePassword_Request(CParental_ValidatePassword_Request&& from) noexcept
    : CParental_ValidatePassword_Request() {
    *this = ::std::move(from);
  }

  inline CParental_ValidatePassword_Request& operator=(const CParental_ValidatePassword_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_ValidatePassword_Request& operator=(CParental_ValidatePassword_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_ValidatePassword_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_ValidatePassword_Request* internal_default_instance() {
    return reinterpret_cast<const CParental_ValidatePassword_Request*>(
               &_CParental_ValidatePassword_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CParental_ValidatePassword_Request& a, CParental_ValidatePassword_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_ValidatePassword_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_ValidatePassword_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_ValidatePassword_Request* New() const final {
    return CreateMaybeMessage<CParental_ValidatePassword_Request>(nullptr);
  }

  CParental_ValidatePassword_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_ValidatePassword_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_ValidatePassword_Request& from);
  void MergeFrom(const CParental_ValidatePassword_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_ValidatePassword_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_ValidatePassword_Request";
  }
  protected:
  explicit CParental_ValidatePassword_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPasswordFieldNumber = 1,
    kSessionFieldNumber = 2,
    kSendUnloconSuccessFieldNumber = 3,
  };
  // optional string password = 1;
  bool has_password() const;
  private:
  bool _internal_has_password() const;
  public:
  void clear_password();
  const std::string& password() const;
  void set_password(const std::string& value);
  void set_password(std::string&& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  std::string* mutable_password();
  std::string* release_password();
  void set_allocated_password(std::string* password);
  private:
  const std::string& _internal_password() const;
  void _internal_set_password(const std::string& value);
  std::string* _internal_mutable_password();
  public:

  // optional string session = 2;
  bool has_session() const;
  private:
  bool _internal_has_session() const;
  public:
  void clear_session();
  const std::string& session() const;
  void set_session(const std::string& value);
  void set_session(std::string&& value);
  void set_session(const char* value);
  void set_session(const char* value, size_t size);
  std::string* mutable_session();
  std::string* release_session();
  void set_allocated_session(std::string* session);
  private:
  const std::string& _internal_session() const;
  void _internal_set_session(const std::string& value);
  std::string* _internal_mutable_session();
  public:

  // optional bool send_unlocon_success = 3;
  bool has_send_unlocon_success() const;
  private:
  bool _internal_has_send_unlocon_success() const;
  public:
  void clear_send_unlocon_success();
  bool send_unlocon_success() const;
  void set_send_unlocon_success(bool value);
  private:
  bool _internal_send_unlocon_success() const;
  void _internal_set_send_unlocon_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CParental_ValidatePassword_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr session_;
  bool send_unlocon_success_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_ValidatePassword_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_ValidatePassword_Response) */ {
 public:
  inline CParental_ValidatePassword_Response() : CParental_ValidatePassword_Response(nullptr) {}
  virtual ~CParental_ValidatePassword_Response();
  explicit constexpr CParental_ValidatePassword_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_ValidatePassword_Response(const CParental_ValidatePassword_Response& from);
  CParental_ValidatePassword_Response(CParental_ValidatePassword_Response&& from) noexcept
    : CParental_ValidatePassword_Response() {
    *this = ::std::move(from);
  }

  inline CParental_ValidatePassword_Response& operator=(const CParental_ValidatePassword_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_ValidatePassword_Response& operator=(CParental_ValidatePassword_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_ValidatePassword_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_ValidatePassword_Response* internal_default_instance() {
    return reinterpret_cast<const CParental_ValidatePassword_Response*>(
               &_CParental_ValidatePassword_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CParental_ValidatePassword_Response& a, CParental_ValidatePassword_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_ValidatePassword_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_ValidatePassword_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_ValidatePassword_Response* New() const final {
    return CreateMaybeMessage<CParental_ValidatePassword_Response>(nullptr);
  }

  CParental_ValidatePassword_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_ValidatePassword_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_ValidatePassword_Response& from);
  void MergeFrom(const CParental_ValidatePassword_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_ValidatePassword_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_ValidatePassword_Response";
  }
  protected:
  explicit CParental_ValidatePassword_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTokenFieldNumber = 1,
  };
  // optional string token = 1;
  bool has_token() const;
  private:
  bool _internal_has_token() const;
  public:
  void clear_token();
  const std::string& token() const;
  void set_token(const std::string& value);
  void set_token(std::string&& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  std::string* mutable_token();
  std::string* release_token();
  void set_allocated_token(std::string* token);
  private:
  const std::string& _internal_token() const;
  void _internal_set_token(const std::string& value);
  std::string* _internal_mutable_token();
  public:

  // @@protoc_insertion_point(class_scope:CParental_ValidatePassword_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr token_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_LockClient_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_LockClient_Request) */ {
 public:
  inline CParental_LockClient_Request() : CParental_LockClient_Request(nullptr) {}
  virtual ~CParental_LockClient_Request();
  explicit constexpr CParental_LockClient_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_LockClient_Request(const CParental_LockClient_Request& from);
  CParental_LockClient_Request(CParental_LockClient_Request&& from) noexcept
    : CParental_LockClient_Request() {
    *this = ::std::move(from);
  }

  inline CParental_LockClient_Request& operator=(const CParental_LockClient_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_LockClient_Request& operator=(CParental_LockClient_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_LockClient_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_LockClient_Request* internal_default_instance() {
    return reinterpret_cast<const CParental_LockClient_Request*>(
               &_CParental_LockClient_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CParental_LockClient_Request& a, CParental_LockClient_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_LockClient_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_LockClient_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_LockClient_Request* New() const final {
    return CreateMaybeMessage<CParental_LockClient_Request>(nullptr);
  }

  CParental_LockClient_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_LockClient_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_LockClient_Request& from);
  void MergeFrom(const CParental_LockClient_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_LockClient_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_LockClient_Request";
  }
  protected:
  explicit CParental_LockClient_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSessionFieldNumber = 1,
  };
  // optional string session = 1;
  bool has_session() const;
  private:
  bool _internal_has_session() const;
  public:
  void clear_session();
  const std::string& session() const;
  void set_session(const std::string& value);
  void set_session(std::string&& value);
  void set_session(const char* value);
  void set_session(const char* value, size_t size);
  std::string* mutable_session();
  std::string* release_session();
  void set_allocated_session(std::string* session);
  private:
  const std::string& _internal_session() const;
  void _internal_set_session(const std::string& value);
  std::string* _internal_mutable_session();
  public:

  // @@protoc_insertion_point(class_scope:CParental_LockClient_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr session_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_LockClient_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_LockClient_Response) */ {
 public:
  inline CParental_LockClient_Response() : CParental_LockClient_Response(nullptr) {}
  virtual ~CParental_LockClient_Response();
  explicit constexpr CParental_LockClient_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_LockClient_Response(const CParental_LockClient_Response& from);
  CParental_LockClient_Response(CParental_LockClient_Response&& from) noexcept
    : CParental_LockClient_Response() {
    *this = ::std::move(from);
  }

  inline CParental_LockClient_Response& operator=(const CParental_LockClient_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_LockClient_Response& operator=(CParental_LockClient_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_LockClient_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_LockClient_Response* internal_default_instance() {
    return reinterpret_cast<const CParental_LockClient_Response*>(
               &_CParental_LockClient_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CParental_LockClient_Response& a, CParental_LockClient_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_LockClient_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_LockClient_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_LockClient_Response* New() const final {
    return CreateMaybeMessage<CParental_LockClient_Response>(nullptr);
  }

  CParental_LockClient_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_LockClient_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_LockClient_Response& from);
  void MergeFrom(const CParental_LockClient_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_LockClient_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_LockClient_Response";
  }
  protected:
  explicit CParental_LockClient_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CParental_LockClient_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_RequestRecoveryCode_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_RequestRecoveryCode_Request) */ {
 public:
  inline CParental_RequestRecoveryCode_Request() : CParental_RequestRecoveryCode_Request(nullptr) {}
  virtual ~CParental_RequestRecoveryCode_Request();
  explicit constexpr CParental_RequestRecoveryCode_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_RequestRecoveryCode_Request(const CParental_RequestRecoveryCode_Request& from);
  CParental_RequestRecoveryCode_Request(CParental_RequestRecoveryCode_Request&& from) noexcept
    : CParental_RequestRecoveryCode_Request() {
    *this = ::std::move(from);
  }

  inline CParental_RequestRecoveryCode_Request& operator=(const CParental_RequestRecoveryCode_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_RequestRecoveryCode_Request& operator=(CParental_RequestRecoveryCode_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_RequestRecoveryCode_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_RequestRecoveryCode_Request* internal_default_instance() {
    return reinterpret_cast<const CParental_RequestRecoveryCode_Request*>(
               &_CParental_RequestRecoveryCode_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CParental_RequestRecoveryCode_Request& a, CParental_RequestRecoveryCode_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_RequestRecoveryCode_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_RequestRecoveryCode_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_RequestRecoveryCode_Request* New() const final {
    return CreateMaybeMessage<CParental_RequestRecoveryCode_Request>(nullptr);
  }

  CParental_RequestRecoveryCode_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_RequestRecoveryCode_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_RequestRecoveryCode_Request& from);
  void MergeFrom(const CParental_RequestRecoveryCode_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_RequestRecoveryCode_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_RequestRecoveryCode_Request";
  }
  protected:
  explicit CParental_RequestRecoveryCode_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CParental_RequestRecoveryCode_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_RequestRecoveryCode_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_RequestRecoveryCode_Response) */ {
 public:
  inline CParental_RequestRecoveryCode_Response() : CParental_RequestRecoveryCode_Response(nullptr) {}
  virtual ~CParental_RequestRecoveryCode_Response();
  explicit constexpr CParental_RequestRecoveryCode_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_RequestRecoveryCode_Response(const CParental_RequestRecoveryCode_Response& from);
  CParental_RequestRecoveryCode_Response(CParental_RequestRecoveryCode_Response&& from) noexcept
    : CParental_RequestRecoveryCode_Response() {
    *this = ::std::move(from);
  }

  inline CParental_RequestRecoveryCode_Response& operator=(const CParental_RequestRecoveryCode_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_RequestRecoveryCode_Response& operator=(CParental_RequestRecoveryCode_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_RequestRecoveryCode_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_RequestRecoveryCode_Response* internal_default_instance() {
    return reinterpret_cast<const CParental_RequestRecoveryCode_Response*>(
               &_CParental_RequestRecoveryCode_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CParental_RequestRecoveryCode_Response& a, CParental_RequestRecoveryCode_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_RequestRecoveryCode_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_RequestRecoveryCode_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_RequestRecoveryCode_Response* New() const final {
    return CreateMaybeMessage<CParental_RequestRecoveryCode_Response>(nullptr);
  }

  CParental_RequestRecoveryCode_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_RequestRecoveryCode_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_RequestRecoveryCode_Response& from);
  void MergeFrom(const CParental_RequestRecoveryCode_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_RequestRecoveryCode_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_RequestRecoveryCode_Response";
  }
  protected:
  explicit CParental_RequestRecoveryCode_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CParental_RequestRecoveryCode_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_DisableWithRecoveryCode_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_DisableWithRecoveryCode_Request) */ {
 public:
  inline CParental_DisableWithRecoveryCode_Request() : CParental_DisableWithRecoveryCode_Request(nullptr) {}
  virtual ~CParental_DisableWithRecoveryCode_Request();
  explicit constexpr CParental_DisableWithRecoveryCode_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_DisableWithRecoveryCode_Request(const CParental_DisableWithRecoveryCode_Request& from);
  CParental_DisableWithRecoveryCode_Request(CParental_DisableWithRecoveryCode_Request&& from) noexcept
    : CParental_DisableWithRecoveryCode_Request() {
    *this = ::std::move(from);
  }

  inline CParental_DisableWithRecoveryCode_Request& operator=(const CParental_DisableWithRecoveryCode_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_DisableWithRecoveryCode_Request& operator=(CParental_DisableWithRecoveryCode_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_DisableWithRecoveryCode_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_DisableWithRecoveryCode_Request* internal_default_instance() {
    return reinterpret_cast<const CParental_DisableWithRecoveryCode_Request*>(
               &_CParental_DisableWithRecoveryCode_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CParental_DisableWithRecoveryCode_Request& a, CParental_DisableWithRecoveryCode_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_DisableWithRecoveryCode_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_DisableWithRecoveryCode_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_DisableWithRecoveryCode_Request* New() const final {
    return CreateMaybeMessage<CParental_DisableWithRecoveryCode_Request>(nullptr);
  }

  CParental_DisableWithRecoveryCode_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_DisableWithRecoveryCode_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_DisableWithRecoveryCode_Request& from);
  void MergeFrom(const CParental_DisableWithRecoveryCode_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_DisableWithRecoveryCode_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_DisableWithRecoveryCode_Request";
  }
  protected:
  explicit CParental_DisableWithRecoveryCode_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRecoveryCodeFieldNumber = 1,
    kSteamidFieldNumber = 10,
  };
  // optional uint32 recovery_code = 1;
  bool has_recovery_code() const;
  private:
  bool _internal_has_recovery_code() const;
  public:
  void clear_recovery_code();
  ::PROTOBUF_NAMESPACE_ID::uint32 recovery_code() const;
  void set_recovery_code(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_recovery_code() const;
  void _internal_set_recovery_code(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed64 steamid = 10;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CParental_DisableWithRecoveryCode_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 recovery_code_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_DisableWithRecoveryCode_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_DisableWithRecoveryCode_Response) */ {
 public:
  inline CParental_DisableWithRecoveryCode_Response() : CParental_DisableWithRecoveryCode_Response(nullptr) {}
  virtual ~CParental_DisableWithRecoveryCode_Response();
  explicit constexpr CParental_DisableWithRecoveryCode_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_DisableWithRecoveryCode_Response(const CParental_DisableWithRecoveryCode_Response& from);
  CParental_DisableWithRecoveryCode_Response(CParental_DisableWithRecoveryCode_Response&& from) noexcept
    : CParental_DisableWithRecoveryCode_Response() {
    *this = ::std::move(from);
  }

  inline CParental_DisableWithRecoveryCode_Response& operator=(const CParental_DisableWithRecoveryCode_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_DisableWithRecoveryCode_Response& operator=(CParental_DisableWithRecoveryCode_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_DisableWithRecoveryCode_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_DisableWithRecoveryCode_Response* internal_default_instance() {
    return reinterpret_cast<const CParental_DisableWithRecoveryCode_Response*>(
               &_CParental_DisableWithRecoveryCode_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CParental_DisableWithRecoveryCode_Response& a, CParental_DisableWithRecoveryCode_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_DisableWithRecoveryCode_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_DisableWithRecoveryCode_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_DisableWithRecoveryCode_Response* New() const final {
    return CreateMaybeMessage<CParental_DisableWithRecoveryCode_Response>(nullptr);
  }

  CParental_DisableWithRecoveryCode_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_DisableWithRecoveryCode_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_DisableWithRecoveryCode_Response& from);
  void MergeFrom(const CParental_DisableWithRecoveryCode_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_DisableWithRecoveryCode_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_DisableWithRecoveryCode_Response";
  }
  protected:
  explicit CParental_DisableWithRecoveryCode_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CParental_DisableWithRecoveryCode_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_RequestFeatureAccess_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_RequestFeatureAccess_Request) */ {
 public:
  inline CParental_RequestFeatureAccess_Request() : CParental_RequestFeatureAccess_Request(nullptr) {}
  virtual ~CParental_RequestFeatureAccess_Request();
  explicit constexpr CParental_RequestFeatureAccess_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_RequestFeatureAccess_Request(const CParental_RequestFeatureAccess_Request& from);
  CParental_RequestFeatureAccess_Request(CParental_RequestFeatureAccess_Request&& from) noexcept
    : CParental_RequestFeatureAccess_Request() {
    *this = ::std::move(from);
  }

  inline CParental_RequestFeatureAccess_Request& operator=(const CParental_RequestFeatureAccess_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_RequestFeatureAccess_Request& operator=(CParental_RequestFeatureAccess_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_RequestFeatureAccess_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_RequestFeatureAccess_Request* internal_default_instance() {
    return reinterpret_cast<const CParental_RequestFeatureAccess_Request*>(
               &_CParental_RequestFeatureAccess_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CParental_RequestFeatureAccess_Request& a, CParental_RequestFeatureAccess_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_RequestFeatureAccess_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_RequestFeatureAccess_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_RequestFeatureAccess_Request* New() const final {
    return CreateMaybeMessage<CParental_RequestFeatureAccess_Request>(nullptr);
  }

  CParental_RequestFeatureAccess_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_RequestFeatureAccess_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_RequestFeatureAccess_Request& from);
  void MergeFrom(const CParental_RequestFeatureAccess_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_RequestFeatureAccess_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_RequestFeatureAccess_Request";
  }
  protected:
  explicit CParental_RequestFeatureAccess_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFeaturesFieldNumber = 1,
    kSteamidFieldNumber = 10,
  };
  // optional uint32 features = 1;
  bool has_features() const;
  private:
  bool _internal_has_features() const;
  public:
  void clear_features();
  ::PROTOBUF_NAMESPACE_ID::uint32 features() const;
  void set_features(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_features() const;
  void _internal_set_features(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed64 steamid = 10;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CParental_RequestFeatureAccess_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 features_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_RequestFeatureAccess_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_RequestFeatureAccess_Response) */ {
 public:
  inline CParental_RequestFeatureAccess_Response() : CParental_RequestFeatureAccess_Response(nullptr) {}
  virtual ~CParental_RequestFeatureAccess_Response();
  explicit constexpr CParental_RequestFeatureAccess_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_RequestFeatureAccess_Response(const CParental_RequestFeatureAccess_Response& from);
  CParental_RequestFeatureAccess_Response(CParental_RequestFeatureAccess_Response&& from) noexcept
    : CParental_RequestFeatureAccess_Response() {
    *this = ::std::move(from);
  }

  inline CParental_RequestFeatureAccess_Response& operator=(const CParental_RequestFeatureAccess_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_RequestFeatureAccess_Response& operator=(CParental_RequestFeatureAccess_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_RequestFeatureAccess_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_RequestFeatureAccess_Response* internal_default_instance() {
    return reinterpret_cast<const CParental_RequestFeatureAccess_Response*>(
               &_CParental_RequestFeatureAccess_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(CParental_RequestFeatureAccess_Response& a, CParental_RequestFeatureAccess_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_RequestFeatureAccess_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_RequestFeatureAccess_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_RequestFeatureAccess_Response* New() const final {
    return CreateMaybeMessage<CParental_RequestFeatureAccess_Response>(nullptr);
  }

  CParental_RequestFeatureAccess_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_RequestFeatureAccess_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_RequestFeatureAccess_Response& from);
  void MergeFrom(const CParental_RequestFeatureAccess_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_RequestFeatureAccess_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_RequestFeatureAccess_Response";
  }
  protected:
  explicit CParental_RequestFeatureAccess_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequestidFieldNumber = 1,
  };
  // optional fixed64 requestid = 1;
  bool has_requestid() const;
  private:
  bool _internal_has_requestid() const;
  public:
  void clear_requestid();
  ::PROTOBUF_NAMESPACE_ID::uint64 requestid() const;
  void set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_requestid() const;
  void _internal_set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CParental_RequestFeatureAccess_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 requestid_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_ApproveFeatureAccess_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_ApproveFeatureAccess_Request) */ {
 public:
  inline CParental_ApproveFeatureAccess_Request() : CParental_ApproveFeatureAccess_Request(nullptr) {}
  virtual ~CParental_ApproveFeatureAccess_Request();
  explicit constexpr CParental_ApproveFeatureAccess_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_ApproveFeatureAccess_Request(const CParental_ApproveFeatureAccess_Request& from);
  CParental_ApproveFeatureAccess_Request(CParental_ApproveFeatureAccess_Request&& from) noexcept
    : CParental_ApproveFeatureAccess_Request() {
    *this = ::std::move(from);
  }

  inline CParental_ApproveFeatureAccess_Request& operator=(const CParental_ApproveFeatureAccess_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_ApproveFeatureAccess_Request& operator=(CParental_ApproveFeatureAccess_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_ApproveFeatureAccess_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_ApproveFeatureAccess_Request* internal_default_instance() {
    return reinterpret_cast<const CParental_ApproveFeatureAccess_Request*>(
               &_CParental_ApproveFeatureAccess_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(CParental_ApproveFeatureAccess_Request& a, CParental_ApproveFeatureAccess_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_ApproveFeatureAccess_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_ApproveFeatureAccess_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_ApproveFeatureAccess_Request* New() const final {
    return CreateMaybeMessage<CParental_ApproveFeatureAccess_Request>(nullptr);
  }

  CParental_ApproveFeatureAccess_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_ApproveFeatureAccess_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_ApproveFeatureAccess_Request& from);
  void MergeFrom(const CParental_ApproveFeatureAccess_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_ApproveFeatureAccess_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_ApproveFeatureAccess_Request";
  }
  protected:
  explicit CParental_ApproveFeatureAccess_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequestidFieldNumber = 2,
    kApproveFieldNumber = 1,
    kFeaturesFieldNumber = 3,
    kDurationFieldNumber = 4,
    kSteamidFieldNumber = 10,
  };
  // optional fixed64 requestid = 2;
  bool has_requestid() const;
  private:
  bool _internal_has_requestid() const;
  public:
  void clear_requestid();
  ::PROTOBUF_NAMESPACE_ID::uint64 requestid() const;
  void set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_requestid() const;
  void _internal_set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool approve = 1;
  bool has_approve() const;
  private:
  bool _internal_has_approve() const;
  public:
  void clear_approve();
  bool approve() const;
  void set_approve(bool value);
  private:
  bool _internal_approve() const;
  void _internal_set_approve(bool value);
  public:

  // optional uint32 features = 3;
  bool has_features() const;
  private:
  bool _internal_has_features() const;
  public:
  void clear_features();
  ::PROTOBUF_NAMESPACE_ID::uint32 features() const;
  void set_features(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_features() const;
  void _internal_set_features(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 duration = 4;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  ::PROTOBUF_NAMESPACE_ID::uint32 duration() const;
  void set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_duration() const;
  void _internal_set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed64 steamid = 10;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CParental_ApproveFeatureAccess_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 requestid_;
  bool approve_;
  ::PROTOBUF_NAMESPACE_ID::uint32 features_;
  ::PROTOBUF_NAMESPACE_ID::uint32 duration_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_ApproveFeatureAccess_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_ApproveFeatureAccess_Response) */ {
 public:
  inline CParental_ApproveFeatureAccess_Response() : CParental_ApproveFeatureAccess_Response(nullptr) {}
  virtual ~CParental_ApproveFeatureAccess_Response();
  explicit constexpr CParental_ApproveFeatureAccess_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_ApproveFeatureAccess_Response(const CParental_ApproveFeatureAccess_Response& from);
  CParental_ApproveFeatureAccess_Response(CParental_ApproveFeatureAccess_Response&& from) noexcept
    : CParental_ApproveFeatureAccess_Response() {
    *this = ::std::move(from);
  }

  inline CParental_ApproveFeatureAccess_Response& operator=(const CParental_ApproveFeatureAccess_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_ApproveFeatureAccess_Response& operator=(CParental_ApproveFeatureAccess_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_ApproveFeatureAccess_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_ApproveFeatureAccess_Response* internal_default_instance() {
    return reinterpret_cast<const CParental_ApproveFeatureAccess_Response*>(
               &_CParental_ApproveFeatureAccess_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(CParental_ApproveFeatureAccess_Response& a, CParental_ApproveFeatureAccess_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_ApproveFeatureAccess_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_ApproveFeatureAccess_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_ApproveFeatureAccess_Response* New() const final {
    return CreateMaybeMessage<CParental_ApproveFeatureAccess_Response>(nullptr);
  }

  CParental_ApproveFeatureAccess_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_ApproveFeatureAccess_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_ApproveFeatureAccess_Response& from);
  void MergeFrom(const CParental_ApproveFeatureAccess_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_ApproveFeatureAccess_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_ApproveFeatureAccess_Response";
  }
  protected:
  explicit CParental_ApproveFeatureAccess_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CParental_ApproveFeatureAccess_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_RequestPlaytime_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_RequestPlaytime_Request) */ {
 public:
  inline CParental_RequestPlaytime_Request() : CParental_RequestPlaytime_Request(nullptr) {}
  virtual ~CParental_RequestPlaytime_Request();
  explicit constexpr CParental_RequestPlaytime_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_RequestPlaytime_Request(const CParental_RequestPlaytime_Request& from);
  CParental_RequestPlaytime_Request(CParental_RequestPlaytime_Request&& from) noexcept
    : CParental_RequestPlaytime_Request() {
    *this = ::std::move(from);
  }

  inline CParental_RequestPlaytime_Request& operator=(const CParental_RequestPlaytime_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_RequestPlaytime_Request& operator=(CParental_RequestPlaytime_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_RequestPlaytime_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_RequestPlaytime_Request* internal_default_instance() {
    return reinterpret_cast<const CParental_RequestPlaytime_Request*>(
               &_CParental_RequestPlaytime_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(CParental_RequestPlaytime_Request& a, CParental_RequestPlaytime_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_RequestPlaytime_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_RequestPlaytime_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_RequestPlaytime_Request* New() const final {
    return CreateMaybeMessage<CParental_RequestPlaytime_Request>(nullptr);
  }

  CParental_RequestPlaytime_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_RequestPlaytime_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_RequestPlaytime_Request& from);
  void MergeFrom(const CParental_RequestPlaytime_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_RequestPlaytime_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_RequestPlaytime_Request";
  }
  protected:
  explicit CParental_RequestPlaytime_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurrentPlaytimeRestrictionsFieldNumber = 2,
    kTimeExpiresFieldNumber = 1,
    kSteamidFieldNumber = 10,
  };
  // optional .ParentalPlaytimeDay current_playtime_restrictions = 2;
  bool has_current_playtime_restrictions() const;
  private:
  bool _internal_has_current_playtime_restrictions() const;
  public:
  void clear_current_playtime_restrictions();
  const ::ParentalPlaytimeDay& current_playtime_restrictions() const;
  ::ParentalPlaytimeDay* release_current_playtime_restrictions();
  ::ParentalPlaytimeDay* mutable_current_playtime_restrictions();
  void set_allocated_current_playtime_restrictions(::ParentalPlaytimeDay* current_playtime_restrictions);
  private:
  const ::ParentalPlaytimeDay& _internal_current_playtime_restrictions() const;
  ::ParentalPlaytimeDay* _internal_mutable_current_playtime_restrictions();
  public:
  void unsafe_arena_set_allocated_current_playtime_restrictions(
      ::ParentalPlaytimeDay* current_playtime_restrictions);
  ::ParentalPlaytimeDay* unsafe_arena_release_current_playtime_restrictions();

  // optional uint32 time_expires = 1;
  bool has_time_expires() const;
  private:
  bool _internal_has_time_expires() const;
  public:
  void clear_time_expires();
  ::PROTOBUF_NAMESPACE_ID::uint32 time_expires() const;
  void set_time_expires(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_time_expires() const;
  void _internal_set_time_expires(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed64 steamid = 10;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CParental_RequestPlaytime_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::ParentalPlaytimeDay* current_playtime_restrictions_;
  ::PROTOBUF_NAMESPACE_ID::uint32 time_expires_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_RequestPlaytime_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_RequestPlaytime_Response) */ {
 public:
  inline CParental_RequestPlaytime_Response() : CParental_RequestPlaytime_Response(nullptr) {}
  virtual ~CParental_RequestPlaytime_Response();
  explicit constexpr CParental_RequestPlaytime_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_RequestPlaytime_Response(const CParental_RequestPlaytime_Response& from);
  CParental_RequestPlaytime_Response(CParental_RequestPlaytime_Response&& from) noexcept
    : CParental_RequestPlaytime_Response() {
    *this = ::std::move(from);
  }

  inline CParental_RequestPlaytime_Response& operator=(const CParental_RequestPlaytime_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_RequestPlaytime_Response& operator=(CParental_RequestPlaytime_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_RequestPlaytime_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_RequestPlaytime_Response* internal_default_instance() {
    return reinterpret_cast<const CParental_RequestPlaytime_Response*>(
               &_CParental_RequestPlaytime_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(CParental_RequestPlaytime_Response& a, CParental_RequestPlaytime_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_RequestPlaytime_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_RequestPlaytime_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_RequestPlaytime_Response* New() const final {
    return CreateMaybeMessage<CParental_RequestPlaytime_Response>(nullptr);
  }

  CParental_RequestPlaytime_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_RequestPlaytime_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_RequestPlaytime_Response& from);
  void MergeFrom(const CParental_RequestPlaytime_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_RequestPlaytime_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_RequestPlaytime_Response";
  }
  protected:
  explicit CParental_RequestPlaytime_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequestidFieldNumber = 1,
  };
  // optional fixed64 requestid = 1;
  bool has_requestid() const;
  private:
  bool _internal_has_requestid() const;
  public:
  void clear_requestid();
  ::PROTOBUF_NAMESPACE_ID::uint64 requestid() const;
  void set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_requestid() const;
  void _internal_set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CParental_RequestPlaytime_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 requestid_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_ApprovePlaytime_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_ApprovePlaytime_Request) */ {
 public:
  inline CParental_ApprovePlaytime_Request() : CParental_ApprovePlaytime_Request(nullptr) {}
  virtual ~CParental_ApprovePlaytime_Request();
  explicit constexpr CParental_ApprovePlaytime_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_ApprovePlaytime_Request(const CParental_ApprovePlaytime_Request& from);
  CParental_ApprovePlaytime_Request(CParental_ApprovePlaytime_Request&& from) noexcept
    : CParental_ApprovePlaytime_Request() {
    *this = ::std::move(from);
  }

  inline CParental_ApprovePlaytime_Request& operator=(const CParental_ApprovePlaytime_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_ApprovePlaytime_Request& operator=(CParental_ApprovePlaytime_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_ApprovePlaytime_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_ApprovePlaytime_Request* internal_default_instance() {
    return reinterpret_cast<const CParental_ApprovePlaytime_Request*>(
               &_CParental_ApprovePlaytime_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(CParental_ApprovePlaytime_Request& a, CParental_ApprovePlaytime_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_ApprovePlaytime_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_ApprovePlaytime_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_ApprovePlaytime_Request* New() const final {
    return CreateMaybeMessage<CParental_ApprovePlaytime_Request>(nullptr);
  }

  CParental_ApprovePlaytime_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_ApprovePlaytime_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_ApprovePlaytime_Request& from);
  void MergeFrom(const CParental_ApprovePlaytime_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_ApprovePlaytime_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_ApprovePlaytime_Request";
  }
  protected:
  explicit CParental_ApprovePlaytime_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRestrictionsApprovedFieldNumber = 3,
    kRequestidFieldNumber = 2,
    kApproveFieldNumber = 1,
    kSteamidFieldNumber = 10,
  };
  // optional .ParentalTemporaryPlaytimeRestrictions restrictions_approved = 3;
  bool has_restrictions_approved() const;
  private:
  bool _internal_has_restrictions_approved() const;
  public:
  void clear_restrictions_approved();
  const ::ParentalTemporaryPlaytimeRestrictions& restrictions_approved() const;
  ::ParentalTemporaryPlaytimeRestrictions* release_restrictions_approved();
  ::ParentalTemporaryPlaytimeRestrictions* mutable_restrictions_approved();
  void set_allocated_restrictions_approved(::ParentalTemporaryPlaytimeRestrictions* restrictions_approved);
  private:
  const ::ParentalTemporaryPlaytimeRestrictions& _internal_restrictions_approved() const;
  ::ParentalTemporaryPlaytimeRestrictions* _internal_mutable_restrictions_approved();
  public:
  void unsafe_arena_set_allocated_restrictions_approved(
      ::ParentalTemporaryPlaytimeRestrictions* restrictions_approved);
  ::ParentalTemporaryPlaytimeRestrictions* unsafe_arena_release_restrictions_approved();

  // optional fixed64 requestid = 2;
  bool has_requestid() const;
  private:
  bool _internal_has_requestid() const;
  public:
  void clear_requestid();
  ::PROTOBUF_NAMESPACE_ID::uint64 requestid() const;
  void set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_requestid() const;
  void _internal_set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool approve = 1;
  bool has_approve() const;
  private:
  bool _internal_has_approve() const;
  public:
  void clear_approve();
  bool approve() const;
  void set_approve(bool value);
  private:
  bool _internal_approve() const;
  void _internal_set_approve(bool value);
  public:

  // optional fixed64 steamid = 10;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CParental_ApprovePlaytime_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::ParentalTemporaryPlaytimeRestrictions* restrictions_approved_;
  ::PROTOBUF_NAMESPACE_ID::uint64 requestid_;
  bool approve_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_ApprovePlaytime_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_ApprovePlaytime_Response) */ {
 public:
  inline CParental_ApprovePlaytime_Response() : CParental_ApprovePlaytime_Response(nullptr) {}
  virtual ~CParental_ApprovePlaytime_Response();
  explicit constexpr CParental_ApprovePlaytime_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_ApprovePlaytime_Response(const CParental_ApprovePlaytime_Response& from);
  CParental_ApprovePlaytime_Response(CParental_ApprovePlaytime_Response&& from) noexcept
    : CParental_ApprovePlaytime_Response() {
    *this = ::std::move(from);
  }

  inline CParental_ApprovePlaytime_Response& operator=(const CParental_ApprovePlaytime_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_ApprovePlaytime_Response& operator=(CParental_ApprovePlaytime_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_ApprovePlaytime_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_ApprovePlaytime_Response* internal_default_instance() {
    return reinterpret_cast<const CParental_ApprovePlaytime_Response*>(
               &_CParental_ApprovePlaytime_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(CParental_ApprovePlaytime_Response& a, CParental_ApprovePlaytime_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_ApprovePlaytime_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_ApprovePlaytime_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_ApprovePlaytime_Response* New() const final {
    return CreateMaybeMessage<CParental_ApprovePlaytime_Response>(nullptr);
  }

  CParental_ApprovePlaytime_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_ApprovePlaytime_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_ApprovePlaytime_Response& from);
  void MergeFrom(const CParental_ApprovePlaytime_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_ApprovePlaytime_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_ApprovePlaytime_Response";
  }
  protected:
  explicit CParental_ApprovePlaytime_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CParental_ApprovePlaytime_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_GetRequests_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_GetRequests_Request) */ {
 public:
  inline CParental_GetRequests_Request() : CParental_GetRequests_Request(nullptr) {}
  virtual ~CParental_GetRequests_Request();
  explicit constexpr CParental_GetRequests_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_GetRequests_Request(const CParental_GetRequests_Request& from);
  CParental_GetRequests_Request(CParental_GetRequests_Request&& from) noexcept
    : CParental_GetRequests_Request() {
    *this = ::std::move(from);
  }

  inline CParental_GetRequests_Request& operator=(const CParental_GetRequests_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_GetRequests_Request& operator=(CParental_GetRequests_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_GetRequests_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_GetRequests_Request* internal_default_instance() {
    return reinterpret_cast<const CParental_GetRequests_Request*>(
               &_CParental_GetRequests_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(CParental_GetRequests_Request& a, CParental_GetRequests_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_GetRequests_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_GetRequests_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_GetRequests_Request* New() const final {
    return CreateMaybeMessage<CParental_GetRequests_Request>(nullptr);
  }

  CParental_GetRequests_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_GetRequests_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_GetRequests_Request& from);
  void MergeFrom(const CParental_GetRequests_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_GetRequests_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_GetRequests_Request";
  }
  protected:
  explicit CParental_GetRequests_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRtIncludeCompletedSinceFieldNumber = 1,
    kSteamidFieldNumber = 10,
  };
  // optional uint32 rt_include_completed_since = 1;
  bool has_rt_include_completed_since() const;
  private:
  bool _internal_has_rt_include_completed_since() const;
  public:
  void clear_rt_include_completed_since();
  ::PROTOBUF_NAMESPACE_ID::uint32 rt_include_completed_since() const;
  void set_rt_include_completed_since(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rt_include_completed_since() const;
  void _internal_set_rt_include_completed_since(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed64 steamid = 10;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CParental_GetRequests_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rt_include_completed_since_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class ParentalFeatureRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ParentalFeatureRequest) */ {
 public:
  inline ParentalFeatureRequest() : ParentalFeatureRequest(nullptr) {}
  virtual ~ParentalFeatureRequest();
  explicit constexpr ParentalFeatureRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParentalFeatureRequest(const ParentalFeatureRequest& from);
  ParentalFeatureRequest(ParentalFeatureRequest&& from) noexcept
    : ParentalFeatureRequest() {
    *this = ::std::move(from);
  }

  inline ParentalFeatureRequest& operator=(const ParentalFeatureRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParentalFeatureRequest& operator=(ParentalFeatureRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ParentalFeatureRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParentalFeatureRequest* internal_default_instance() {
    return reinterpret_cast<const ParentalFeatureRequest*>(
               &_ParentalFeatureRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(ParentalFeatureRequest& a, ParentalFeatureRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ParentalFeatureRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParentalFeatureRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParentalFeatureRequest* New() const final {
    return CreateMaybeMessage<ParentalFeatureRequest>(nullptr);
  }

  ParentalFeatureRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParentalFeatureRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParentalFeatureRequest& from);
  void MergeFrom(const ParentalFeatureRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParentalFeatureRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ParentalFeatureRequest";
  }
  protected:
  explicit ParentalFeatureRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequestidFieldNumber = 1,
    kFamilyGroupidFieldNumber = 2,
    kSteamidFieldNumber = 3,
    kFeaturesFieldNumber = 4,
    kTimeRequestedFieldNumber = 5,
    kSteamidResponderFieldNumber = 7,
    kApprovedFieldNumber = 6,
    kTimeRespondedFieldNumber = 8,
  };
  // optional fixed64 requestid = 1;
  bool has_requestid() const;
  private:
  bool _internal_has_requestid() const;
  public:
  void clear_requestid();
  ::PROTOBUF_NAMESPACE_ID::uint64 requestid() const;
  void set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_requestid() const;
  void _internal_set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 family_groupid = 2;
  bool has_family_groupid() const;
  private:
  bool _internal_has_family_groupid() const;
  public:
  void clear_family_groupid();
  ::PROTOBUF_NAMESPACE_ID::uint64 family_groupid() const;
  void set_family_groupid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_family_groupid() const;
  void _internal_set_family_groupid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 steamid = 3;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 features = 4;
  bool has_features() const;
  private:
  bool _internal_has_features() const;
  public:
  void clear_features();
  ::PROTOBUF_NAMESPACE_ID::uint32 features() const;
  void set_features(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_features() const;
  void _internal_set_features(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 time_requested = 5;
  bool has_time_requested() const;
  private:
  bool _internal_has_time_requested() const;
  public:
  void clear_time_requested();
  ::PROTOBUF_NAMESPACE_ID::uint32 time_requested() const;
  void set_time_requested(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_time_requested() const;
  void _internal_set_time_requested(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed64 steamid_responder = 7;
  bool has_steamid_responder() const;
  private:
  bool _internal_has_steamid_responder() const;
  public:
  void clear_steamid_responder();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_responder() const;
  void set_steamid_responder(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid_responder() const;
  void _internal_set_steamid_responder(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool approved = 6;
  bool has_approved() const;
  private:
  bool _internal_has_approved() const;
  public:
  void clear_approved();
  bool approved() const;
  void set_approved(bool value);
  private:
  bool _internal_approved() const;
  void _internal_set_approved(bool value);
  public:

  // optional uint32 time_responded = 8;
  bool has_time_responded() const;
  private:
  bool _internal_has_time_responded() const;
  public:
  void clear_time_responded();
  ::PROTOBUF_NAMESPACE_ID::uint32 time_responded() const;
  void set_time_responded(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_time_responded() const;
  void _internal_set_time_responded(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ParentalFeatureRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 requestid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 family_groupid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 features_;
  ::PROTOBUF_NAMESPACE_ID::uint32 time_requested_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_responder_;
  bool approved_;
  ::PROTOBUF_NAMESPACE_ID::uint32 time_responded_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class ParentalPlaytimeRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ParentalPlaytimeRequest) */ {
 public:
  inline ParentalPlaytimeRequest() : ParentalPlaytimeRequest(nullptr) {}
  virtual ~ParentalPlaytimeRequest();
  explicit constexpr ParentalPlaytimeRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParentalPlaytimeRequest(const ParentalPlaytimeRequest& from);
  ParentalPlaytimeRequest(ParentalPlaytimeRequest&& from) noexcept
    : ParentalPlaytimeRequest() {
    *this = ::std::move(from);
  }

  inline ParentalPlaytimeRequest& operator=(const ParentalPlaytimeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParentalPlaytimeRequest& operator=(ParentalPlaytimeRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ParentalPlaytimeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParentalPlaytimeRequest* internal_default_instance() {
    return reinterpret_cast<const ParentalPlaytimeRequest*>(
               &_ParentalPlaytimeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(ParentalPlaytimeRequest& a, ParentalPlaytimeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ParentalPlaytimeRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParentalPlaytimeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ParentalPlaytimeRequest* New() const final {
    return CreateMaybeMessage<ParentalPlaytimeRequest>(nullptr);
  }

  ParentalPlaytimeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ParentalPlaytimeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ParentalPlaytimeRequest& from);
  void MergeFrom(const ParentalPlaytimeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParentalPlaytimeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ParentalPlaytimeRequest";
  }
  protected:
  explicit ParentalPlaytimeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurrentPlaytimeRestrictionsFieldNumber = 4,
    kRestrictionsApprovedFieldNumber = 10,
    kRequestidFieldNumber = 1,
    kFamilyGroupidFieldNumber = 2,
    kSteamidFieldNumber = 3,
    kTimeExpiresFieldNumber = 5,
    kTimeRequestedFieldNumber = 6,
    kSteamidResponderFieldNumber = 8,
    kApprovedFieldNumber = 7,
    kTimeRespondedFieldNumber = 9,
  };
  // optional .ParentalPlaytimeDay current_playtime_restrictions = 4;
  bool has_current_playtime_restrictions() const;
  private:
  bool _internal_has_current_playtime_restrictions() const;
  public:
  void clear_current_playtime_restrictions();
  const ::ParentalPlaytimeDay& current_playtime_restrictions() const;
  ::ParentalPlaytimeDay* release_current_playtime_restrictions();
  ::ParentalPlaytimeDay* mutable_current_playtime_restrictions();
  void set_allocated_current_playtime_restrictions(::ParentalPlaytimeDay* current_playtime_restrictions);
  private:
  const ::ParentalPlaytimeDay& _internal_current_playtime_restrictions() const;
  ::ParentalPlaytimeDay* _internal_mutable_current_playtime_restrictions();
  public:
  void unsafe_arena_set_allocated_current_playtime_restrictions(
      ::ParentalPlaytimeDay* current_playtime_restrictions);
  ::ParentalPlaytimeDay* unsafe_arena_release_current_playtime_restrictions();

  // optional .ParentalTemporaryPlaytimeRestrictions restrictions_approved = 10;
  bool has_restrictions_approved() const;
  private:
  bool _internal_has_restrictions_approved() const;
  public:
  void clear_restrictions_approved();
  const ::ParentalTemporaryPlaytimeRestrictions& restrictions_approved() const;
  ::ParentalTemporaryPlaytimeRestrictions* release_restrictions_approved();
  ::ParentalTemporaryPlaytimeRestrictions* mutable_restrictions_approved();
  void set_allocated_restrictions_approved(::ParentalTemporaryPlaytimeRestrictions* restrictions_approved);
  private:
  const ::ParentalTemporaryPlaytimeRestrictions& _internal_restrictions_approved() const;
  ::ParentalTemporaryPlaytimeRestrictions* _internal_mutable_restrictions_approved();
  public:
  void unsafe_arena_set_allocated_restrictions_approved(
      ::ParentalTemporaryPlaytimeRestrictions* restrictions_approved);
  ::ParentalTemporaryPlaytimeRestrictions* unsafe_arena_release_restrictions_approved();

  // optional fixed64 requestid = 1;
  bool has_requestid() const;
  private:
  bool _internal_has_requestid() const;
  public:
  void clear_requestid();
  ::PROTOBUF_NAMESPACE_ID::uint64 requestid() const;
  void set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_requestid() const;
  void _internal_set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 family_groupid = 2;
  bool has_family_groupid() const;
  private:
  bool _internal_has_family_groupid() const;
  public:
  void clear_family_groupid();
  ::PROTOBUF_NAMESPACE_ID::uint64 family_groupid() const;
  void set_family_groupid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_family_groupid() const;
  void _internal_set_family_groupid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 steamid = 3;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 time_expires = 5;
  bool has_time_expires() const;
  private:
  bool _internal_has_time_expires() const;
  public:
  void clear_time_expires();
  ::PROTOBUF_NAMESPACE_ID::uint32 time_expires() const;
  void set_time_expires(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_time_expires() const;
  void _internal_set_time_expires(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 time_requested = 6;
  bool has_time_requested() const;
  private:
  bool _internal_has_time_requested() const;
  public:
  void clear_time_requested();
  ::PROTOBUF_NAMESPACE_ID::uint32 time_requested() const;
  void set_time_requested(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_time_requested() const;
  void _internal_set_time_requested(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed64 steamid_responder = 8;
  bool has_steamid_responder() const;
  private:
  bool _internal_has_steamid_responder() const;
  public:
  void clear_steamid_responder();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_responder() const;
  void set_steamid_responder(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid_responder() const;
  void _internal_set_steamid_responder(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool approved = 7;
  bool has_approved() const;
  private:
  bool _internal_has_approved() const;
  public:
  void clear_approved();
  bool approved() const;
  void set_approved(bool value);
  private:
  bool _internal_approved() const;
  void _internal_set_approved(bool value);
  public:

  // optional uint32 time_responded = 9;
  bool has_time_responded() const;
  private:
  bool _internal_has_time_responded() const;
  public:
  void clear_time_responded();
  ::PROTOBUF_NAMESPACE_ID::uint32 time_responded() const;
  void set_time_responded(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_time_responded() const;
  void _internal_set_time_responded(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ParentalPlaytimeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::ParentalPlaytimeDay* current_playtime_restrictions_;
  ::ParentalTemporaryPlaytimeRestrictions* restrictions_approved_;
  ::PROTOBUF_NAMESPACE_ID::uint64 requestid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 family_groupid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 time_expires_;
  ::PROTOBUF_NAMESPACE_ID::uint32 time_requested_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_responder_;
  bool approved_;
  ::PROTOBUF_NAMESPACE_ID::uint32 time_responded_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_GetRequests_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_GetRequests_Response) */ {
 public:
  inline CParental_GetRequests_Response() : CParental_GetRequests_Response(nullptr) {}
  virtual ~CParental_GetRequests_Response();
  explicit constexpr CParental_GetRequests_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_GetRequests_Response(const CParental_GetRequests_Response& from);
  CParental_GetRequests_Response(CParental_GetRequests_Response&& from) noexcept
    : CParental_GetRequests_Response() {
    *this = ::std::move(from);
  }

  inline CParental_GetRequests_Response& operator=(const CParental_GetRequests_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_GetRequests_Response& operator=(CParental_GetRequests_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_GetRequests_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_GetRequests_Response* internal_default_instance() {
    return reinterpret_cast<const CParental_GetRequests_Response*>(
               &_CParental_GetRequests_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(CParental_GetRequests_Response& a, CParental_GetRequests_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_GetRequests_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_GetRequests_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_GetRequests_Response* New() const final {
    return CreateMaybeMessage<CParental_GetRequests_Response>(nullptr);
  }

  CParental_GetRequests_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_GetRequests_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_GetRequests_Response& from);
  void MergeFrom(const CParental_GetRequests_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_GetRequests_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_GetRequests_Response";
  }
  protected:
  explicit CParental_GetRequests_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFeatureRequestsFieldNumber = 1,
    kPlaytimeRequestsFieldNumber = 2,
  };
  // repeated .ParentalFeatureRequest feature_requests = 1;
  int feature_requests_size() const;
  private:
  int _internal_feature_requests_size() const;
  public:
  void clear_feature_requests();
  ::ParentalFeatureRequest* mutable_feature_requests(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalFeatureRequest >*
      mutable_feature_requests();
  private:
  const ::ParentalFeatureRequest& _internal_feature_requests(int index) const;
  ::ParentalFeatureRequest* _internal_add_feature_requests();
  public:
  const ::ParentalFeatureRequest& feature_requests(int index) const;
  ::ParentalFeatureRequest* add_feature_requests();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalFeatureRequest >&
      feature_requests() const;

  // repeated .ParentalPlaytimeRequest playtime_requests = 2;
  int playtime_requests_size() const;
  private:
  int _internal_playtime_requests_size() const;
  public:
  void clear_playtime_requests();
  ::ParentalPlaytimeRequest* mutable_playtime_requests(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalPlaytimeRequest >*
      mutable_playtime_requests();
  private:
  const ::ParentalPlaytimeRequest& _internal_playtime_requests(int index) const;
  ::ParentalPlaytimeRequest* _internal_add_playtime_requests();
  public:
  const ::ParentalPlaytimeRequest& playtime_requests(int index) const;
  ::ParentalPlaytimeRequest* add_playtime_requests();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalPlaytimeRequest >&
      playtime_requests() const;

  // @@protoc_insertion_point(class_scope:CParental_GetRequests_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalFeatureRequest > feature_requests_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalPlaytimeRequest > playtime_requests_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_ReportPlaytimeAndNotify_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_ReportPlaytimeAndNotify_Request) */ {
 public:
  inline CParental_ReportPlaytimeAndNotify_Request() : CParental_ReportPlaytimeAndNotify_Request(nullptr) {}
  virtual ~CParental_ReportPlaytimeAndNotify_Request();
  explicit constexpr CParental_ReportPlaytimeAndNotify_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_ReportPlaytimeAndNotify_Request(const CParental_ReportPlaytimeAndNotify_Request& from);
  CParental_ReportPlaytimeAndNotify_Request(CParental_ReportPlaytimeAndNotify_Request&& from) noexcept
    : CParental_ReportPlaytimeAndNotify_Request() {
    *this = ::std::move(from);
  }

  inline CParental_ReportPlaytimeAndNotify_Request& operator=(const CParental_ReportPlaytimeAndNotify_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_ReportPlaytimeAndNotify_Request& operator=(CParental_ReportPlaytimeAndNotify_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_ReportPlaytimeAndNotify_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_ReportPlaytimeAndNotify_Request* internal_default_instance() {
    return reinterpret_cast<const CParental_ReportPlaytimeAndNotify_Request*>(
               &_CParental_ReportPlaytimeAndNotify_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(CParental_ReportPlaytimeAndNotify_Request& a, CParental_ReportPlaytimeAndNotify_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_ReportPlaytimeAndNotify_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_ReportPlaytimeAndNotify_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_ReportPlaytimeAndNotify_Request* New() const final {
    return CreateMaybeMessage<CParental_ReportPlaytimeAndNotify_Request>(nullptr);
  }

  CParental_ReportPlaytimeAndNotify_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_ReportPlaytimeAndNotify_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_ReportPlaytimeAndNotify_Request& from);
  void MergeFrom(const CParental_ReportPlaytimeAndNotify_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_ReportPlaytimeAndNotify_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_ReportPlaytimeAndNotify_Request";
  }
  protected:
  explicit CParental_ReportPlaytimeAndNotify_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDayOfWeekFieldNumber = 1,
    kMinutesUsedFieldNumber = 2,
    kSteamidFieldNumber = 10,
  };
  // optional uint32 day_of_week = 1;
  bool has_day_of_week() const;
  private:
  bool _internal_has_day_of_week() const;
  public:
  void clear_day_of_week();
  ::PROTOBUF_NAMESPACE_ID::uint32 day_of_week() const;
  void set_day_of_week(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_day_of_week() const;
  void _internal_set_day_of_week(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 minutes_used = 2;
  bool has_minutes_used() const;
  private:
  bool _internal_has_minutes_used() const;
  public:
  void clear_minutes_used();
  ::PROTOBUF_NAMESPACE_ID::uint32 minutes_used() const;
  void set_minutes_used(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_minutes_used() const;
  void _internal_set_minutes_used(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed64 steamid = 10;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CParental_ReportPlaytimeAndNotify_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 day_of_week_;
  ::PROTOBUF_NAMESPACE_ID::uint32 minutes_used_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_ReportPlaytimeAndNotify_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_ReportPlaytimeAndNotify_Response) */ {
 public:
  inline CParental_ReportPlaytimeAndNotify_Response() : CParental_ReportPlaytimeAndNotify_Response(nullptr) {}
  virtual ~CParental_ReportPlaytimeAndNotify_Response();
  explicit constexpr CParental_ReportPlaytimeAndNotify_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_ReportPlaytimeAndNotify_Response(const CParental_ReportPlaytimeAndNotify_Response& from);
  CParental_ReportPlaytimeAndNotify_Response(CParental_ReportPlaytimeAndNotify_Response&& from) noexcept
    : CParental_ReportPlaytimeAndNotify_Response() {
    *this = ::std::move(from);
  }

  inline CParental_ReportPlaytimeAndNotify_Response& operator=(const CParental_ReportPlaytimeAndNotify_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_ReportPlaytimeAndNotify_Response& operator=(CParental_ReportPlaytimeAndNotify_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_ReportPlaytimeAndNotify_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_ReportPlaytimeAndNotify_Response* internal_default_instance() {
    return reinterpret_cast<const CParental_ReportPlaytimeAndNotify_Response*>(
               &_CParental_ReportPlaytimeAndNotify_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(CParental_ReportPlaytimeAndNotify_Response& a, CParental_ReportPlaytimeAndNotify_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_ReportPlaytimeAndNotify_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_ReportPlaytimeAndNotify_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_ReportPlaytimeAndNotify_Response* New() const final {
    return CreateMaybeMessage<CParental_ReportPlaytimeAndNotify_Response>(nullptr);
  }

  CParental_ReportPlaytimeAndNotify_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_ReportPlaytimeAndNotify_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_ReportPlaytimeAndNotify_Response& from);
  void MergeFrom(const CParental_ReportPlaytimeAndNotify_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_ReportPlaytimeAndNotify_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_ReportPlaytimeAndNotify_Response";
  }
  protected:
  explicit CParental_ReportPlaytimeAndNotify_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CParental_ReportPlaytimeAndNotify_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_ParentalSettingsChange_Notification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_ParentalSettingsChange_Notification) */ {
 public:
  inline CParental_ParentalSettingsChange_Notification() : CParental_ParentalSettingsChange_Notification(nullptr) {}
  virtual ~CParental_ParentalSettingsChange_Notification();
  explicit constexpr CParental_ParentalSettingsChange_Notification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_ParentalSettingsChange_Notification(const CParental_ParentalSettingsChange_Notification& from);
  CParental_ParentalSettingsChange_Notification(CParental_ParentalSettingsChange_Notification&& from) noexcept
    : CParental_ParentalSettingsChange_Notification() {
    *this = ::std::move(from);
  }

  inline CParental_ParentalSettingsChange_Notification& operator=(const CParental_ParentalSettingsChange_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_ParentalSettingsChange_Notification& operator=(CParental_ParentalSettingsChange_Notification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_ParentalSettingsChange_Notification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_ParentalSettingsChange_Notification* internal_default_instance() {
    return reinterpret_cast<const CParental_ParentalSettingsChange_Notification*>(
               &_CParental_ParentalSettingsChange_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(CParental_ParentalSettingsChange_Notification& a, CParental_ParentalSettingsChange_Notification& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_ParentalSettingsChange_Notification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_ParentalSettingsChange_Notification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_ParentalSettingsChange_Notification* New() const final {
    return CreateMaybeMessage<CParental_ParentalSettingsChange_Notification>(nullptr);
  }

  CParental_ParentalSettingsChange_Notification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_ParentalSettingsChange_Notification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_ParentalSettingsChange_Notification& from);
  void MergeFrom(const CParental_ParentalSettingsChange_Notification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_ParentalSettingsChange_Notification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_ParentalSettingsChange_Notification";
  }
  protected:
  explicit CParental_ParentalSettingsChange_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSerializedSettingsFieldNumber = 1,
    kSignatureFieldNumber = 2,
    kPasswordFieldNumber = 3,
    kSessionidFieldNumber = 4,
  };
  // optional bytes serialized_settings = 1;
  bool has_serialized_settings() const;
  private:
  bool _internal_has_serialized_settings() const;
  public:
  void clear_serialized_settings();
  const std::string& serialized_settings() const;
  void set_serialized_settings(const std::string& value);
  void set_serialized_settings(std::string&& value);
  void set_serialized_settings(const char* value);
  void set_serialized_settings(const void* value, size_t size);
  std::string* mutable_serialized_settings();
  std::string* release_serialized_settings();
  void set_allocated_serialized_settings(std::string* serialized_settings);
  private:
  const std::string& _internal_serialized_settings() const;
  void _internal_set_serialized_settings(const std::string& value);
  std::string* _internal_mutable_serialized_settings();
  public:

  // optional bytes signature = 2;
  bool has_signature() const;
  private:
  bool _internal_has_signature() const;
  public:
  void clear_signature();
  const std::string& signature() const;
  void set_signature(const std::string& value);
  void set_signature(std::string&& value);
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  std::string* mutable_signature();
  std::string* release_signature();
  void set_allocated_signature(std::string* signature);
  private:
  const std::string& _internal_signature() const;
  void _internal_set_signature(const std::string& value);
  std::string* _internal_mutable_signature();
  public:

  // optional string password = 3;
  bool has_password() const;
  private:
  bool _internal_has_password() const;
  public:
  void clear_password();
  const std::string& password() const;
  void set_password(const std::string& value);
  void set_password(std::string&& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  std::string* mutable_password();
  std::string* release_password();
  void set_allocated_password(std::string* password);
  private:
  const std::string& _internal_password() const;
  void _internal_set_password(const std::string& value);
  std::string* _internal_mutable_password();
  public:

  // optional string sessionid = 4;
  bool has_sessionid() const;
  private:
  bool _internal_has_sessionid() const;
  public:
  void clear_sessionid();
  const std::string& sessionid() const;
  void set_sessionid(const std::string& value);
  void set_sessionid(std::string&& value);
  void set_sessionid(const char* value);
  void set_sessionid(const char* value, size_t size);
  std::string* mutable_sessionid();
  std::string* release_sessionid();
  void set_allocated_sessionid(std::string* sessionid);
  private:
  const std::string& _internal_sessionid() const;
  void _internal_set_sessionid(const std::string& value);
  std::string* _internal_mutable_sessionid();
  public:

  // @@protoc_insertion_point(class_scope:CParental_ParentalSettingsChange_Notification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr serialized_settings_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr signature_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sessionid_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_ParentalUnlocNotification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_ParentalUnlocNotification) */ {
 public:
  inline CParental_ParentalUnlocNotification() : CParental_ParentalUnlocNotification(nullptr) {}
  virtual ~CParental_ParentalUnlocNotification();
  explicit constexpr CParental_ParentalUnlocNotification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_ParentalUnlocNotification(const CParental_ParentalUnlocNotification& from);
  CParental_ParentalUnlocNotification(CParental_ParentalUnlocNotification&& from) noexcept
    : CParental_ParentalUnlocNotification() {
    *this = ::std::move(from);
  }

  inline CParental_ParentalUnlocNotification& operator=(const CParental_ParentalUnlocNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_ParentalUnlocNotification& operator=(CParental_ParentalUnlocNotification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_ParentalUnlocNotification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_ParentalUnlocNotification* internal_default_instance() {
    return reinterpret_cast<const CParental_ParentalUnlocNotification*>(
               &_CParental_ParentalUnlocNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(CParental_ParentalUnlocNotification& a, CParental_ParentalUnlocNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_ParentalUnlocNotification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_ParentalUnlocNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_ParentalUnlocNotification* New() const final {
    return CreateMaybeMessage<CParental_ParentalUnlocNotification>(nullptr);
  }

  CParental_ParentalUnlocNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_ParentalUnlocNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_ParentalUnlocNotification& from);
  void MergeFrom(const CParental_ParentalUnlocNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_ParentalUnlocNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_ParentalUnlocNotification";
  }
  protected:
  explicit CParental_ParentalUnlocNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPasswordFieldNumber = 1,
    kSessionidFieldNumber = 2,
  };
  // optional string password = 1;
  bool has_password() const;
  private:
  bool _internal_has_password() const;
  public:
  void clear_password();
  const std::string& password() const;
  void set_password(const std::string& value);
  void set_password(std::string&& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  std::string* mutable_password();
  std::string* release_password();
  void set_allocated_password(std::string* password);
  private:
  const std::string& _internal_password() const;
  void _internal_set_password(const std::string& value);
  std::string* _internal_mutable_password();
  public:

  // optional string sessionid = 2;
  bool has_sessionid() const;
  private:
  bool _internal_has_sessionid() const;
  public:
  void clear_sessionid();
  const std::string& sessionid() const;
  void set_sessionid(const std::string& value);
  void set_sessionid(std::string&& value);
  void set_sessionid(const char* value);
  void set_sessionid(const char* value, size_t size);
  std::string* mutable_sessionid();
  std::string* release_sessionid();
  void set_allocated_sessionid(std::string* sessionid);
  private:
  const std::string& _internal_sessionid() const;
  void _internal_set_sessionid(const std::string& value);
  std::string* _internal_mutable_sessionid();
  public:

  // @@protoc_insertion_point(class_scope:CParental_ParentalUnlocNotification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr password_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sessionid_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_ParentalLocNotification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_ParentalLocNotification) */ {
 public:
  inline CParental_ParentalLocNotification() : CParental_ParentalLocNotification(nullptr) {}
  virtual ~CParental_ParentalLocNotification();
  explicit constexpr CParental_ParentalLocNotification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_ParentalLocNotification(const CParental_ParentalLocNotification& from);
  CParental_ParentalLocNotification(CParental_ParentalLocNotification&& from) noexcept
    : CParental_ParentalLocNotification() {
    *this = ::std::move(from);
  }

  inline CParental_ParentalLocNotification& operator=(const CParental_ParentalLocNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_ParentalLocNotification& operator=(CParental_ParentalLocNotification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_ParentalLocNotification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_ParentalLocNotification* internal_default_instance() {
    return reinterpret_cast<const CParental_ParentalLocNotification*>(
               &_CParental_ParentalLocNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(CParental_ParentalLocNotification& a, CParental_ParentalLocNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_ParentalLocNotification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_ParentalLocNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_ParentalLocNotification* New() const final {
    return CreateMaybeMessage<CParental_ParentalLocNotification>(nullptr);
  }

  CParental_ParentalLocNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_ParentalLocNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_ParentalLocNotification& from);
  void MergeFrom(const CParental_ParentalLocNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_ParentalLocNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_ParentalLocNotification";
  }
  protected:
  explicit CParental_ParentalLocNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSessionidFieldNumber = 1,
  };
  // optional string sessionid = 1;
  bool has_sessionid() const;
  private:
  bool _internal_has_sessionid() const;
  public:
  void clear_sessionid();
  const std::string& sessionid() const;
  void set_sessionid(const std::string& value);
  void set_sessionid(std::string&& value);
  void set_sessionid(const char* value);
  void set_sessionid(const char* value, size_t size);
  std::string* mutable_sessionid();
  std::string* release_sessionid();
  void set_allocated_sessionid(std::string* sessionid);
  private:
  const std::string& _internal_sessionid() const;
  void _internal_set_sessionid(const std::string& value);
  std::string* _internal_mutable_sessionid();
  public:

  // @@protoc_insertion_point(class_scope:CParental_ParentalLocNotification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sessionid_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CParental_PlaytimeUsed_Notification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CParental_PlaytimeUsed_Notification) */ {
 public:
  inline CParental_PlaytimeUsed_Notification() : CParental_PlaytimeUsed_Notification(nullptr) {}
  virtual ~CParental_PlaytimeUsed_Notification();
  explicit constexpr CParental_PlaytimeUsed_Notification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CParental_PlaytimeUsed_Notification(const CParental_PlaytimeUsed_Notification& from);
  CParental_PlaytimeUsed_Notification(CParental_PlaytimeUsed_Notification&& from) noexcept
    : CParental_PlaytimeUsed_Notification() {
    *this = ::std::move(from);
  }

  inline CParental_PlaytimeUsed_Notification& operator=(const CParental_PlaytimeUsed_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CParental_PlaytimeUsed_Notification& operator=(CParental_PlaytimeUsed_Notification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CParental_PlaytimeUsed_Notification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CParental_PlaytimeUsed_Notification* internal_default_instance() {
    return reinterpret_cast<const CParental_PlaytimeUsed_Notification*>(
               &_CParental_PlaytimeUsed_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(CParental_PlaytimeUsed_Notification& a, CParental_PlaytimeUsed_Notification& b) {
    a.Swap(&b);
  }
  inline void Swap(CParental_PlaytimeUsed_Notification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CParental_PlaytimeUsed_Notification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CParental_PlaytimeUsed_Notification* New() const final {
    return CreateMaybeMessage<CParental_PlaytimeUsed_Notification>(nullptr);
  }

  CParental_PlaytimeUsed_Notification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CParental_PlaytimeUsed_Notification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CParental_PlaytimeUsed_Notification& from);
  void MergeFrom(const CParental_PlaytimeUsed_Notification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CParental_PlaytimeUsed_Notification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CParental_PlaytimeUsed_Notification";
  }
  protected:
  explicit CParental_PlaytimeUsed_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fparental_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDayOfWeekFieldNumber = 1,
    kMinutesUsedFieldNumber = 2,
  };
  // optional uint32 day_of_week = 1;
  bool has_day_of_week() const;
  private:
  bool _internal_has_day_of_week() const;
  public:
  void clear_day_of_week();
  ::PROTOBUF_NAMESPACE_ID::uint32 day_of_week() const;
  void set_day_of_week(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_day_of_week() const;
  void _internal_set_day_of_week(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 minutes_used = 2;
  bool has_minutes_used() const;
  private:
  bool _internal_has_minutes_used() const;
  public:
  void clear_minutes_used();
  ::PROTOBUF_NAMESPACE_ID::uint32 minutes_used() const;
  void set_minutes_used(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_minutes_used() const;
  void _internal_set_minutes_used(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CParental_PlaytimeUsed_Notification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 day_of_week_;
  ::PROTOBUF_NAMESPACE_ID::uint32 minutes_used_;
  friend struct ::TableStruct_steammessages_5fparental_2esteamclient_2eproto;
};
// ===================================================================

class Parental_Stub;

class Parental : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Parental() {};
 public:
  virtual ~Parental();

  typedef Parental_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void EnableParentalSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_EnableParentalSettings_Request* request,
                       ::CParental_EnableParentalSettings_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void DisableParentalSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_DisableParentalSettings_Request* request,
                       ::CParental_DisableParentalSettings_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetParentalSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_GetParentalSettings_Request* request,
                       ::CParental_GetParentalSettings_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetSignedParentalSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_GetSignedParentalSettings_Request* request,
                       ::CParental_GetSignedParentalSettings_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SetParentalSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_SetParentalSettings_Request* request,
                       ::CParental_SetParentalSettings_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ValidateToken(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_ValidateToken_Request* request,
                       ::CParental_ValidateToken_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ValidatePassword(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_ValidatePassword_Request* request,
                       ::CParental_ValidatePassword_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void LockClient(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_LockClient_Request* request,
                       ::CParental_LockClient_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void RequestRecoveryCode(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_RequestRecoveryCode_Request* request,
                       ::CParental_RequestRecoveryCode_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void DisableWithRecoveryCode(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_DisableWithRecoveryCode_Request* request,
                       ::CParental_DisableWithRecoveryCode_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void RequestFeatureAccess(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_RequestFeatureAccess_Request* request,
                       ::CParental_RequestFeatureAccess_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ApproveFeatureAccess(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_ApproveFeatureAccess_Request* request,
                       ::CParental_ApproveFeatureAccess_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void RequestPlaytime(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_RequestPlaytime_Request* request,
                       ::CParental_RequestPlaytime_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ApprovePlaytime(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_ApprovePlaytime_Request* request,
                       ::CParental_ApprovePlaytime_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetRequests(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_GetRequests_Request* request,
                       ::CParental_GetRequests_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ReportPlaytimeAndNotify(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_ReportPlaytimeAndNotify_Request* request,
                       ::CParental_ReportPlaytimeAndNotify_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Parental);
};

class Parental_Stub : public Parental {
 public:
  Parental_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  Parental_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~Parental_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements Parental ------------------------------------------

  void EnableParentalSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_EnableParentalSettings_Request* request,
                       ::CParental_EnableParentalSettings_Response* response,
                       ::google::protobuf::Closure* done);
  void DisableParentalSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_DisableParentalSettings_Request* request,
                       ::CParental_DisableParentalSettings_Response* response,
                       ::google::protobuf::Closure* done);
  void GetParentalSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_GetParentalSettings_Request* request,
                       ::CParental_GetParentalSettings_Response* response,
                       ::google::protobuf::Closure* done);
  void GetSignedParentalSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_GetSignedParentalSettings_Request* request,
                       ::CParental_GetSignedParentalSettings_Response* response,
                       ::google::protobuf::Closure* done);
  void SetParentalSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_SetParentalSettings_Request* request,
                       ::CParental_SetParentalSettings_Response* response,
                       ::google::protobuf::Closure* done);
  void ValidateToken(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_ValidateToken_Request* request,
                       ::CParental_ValidateToken_Response* response,
                       ::google::protobuf::Closure* done);
  void ValidatePassword(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_ValidatePassword_Request* request,
                       ::CParental_ValidatePassword_Response* response,
                       ::google::protobuf::Closure* done);
  void LockClient(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_LockClient_Request* request,
                       ::CParental_LockClient_Response* response,
                       ::google::protobuf::Closure* done);
  void RequestRecoveryCode(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_RequestRecoveryCode_Request* request,
                       ::CParental_RequestRecoveryCode_Response* response,
                       ::google::protobuf::Closure* done);
  void DisableWithRecoveryCode(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_DisableWithRecoveryCode_Request* request,
                       ::CParental_DisableWithRecoveryCode_Response* response,
                       ::google::protobuf::Closure* done);
  void RequestFeatureAccess(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_RequestFeatureAccess_Request* request,
                       ::CParental_RequestFeatureAccess_Response* response,
                       ::google::protobuf::Closure* done);
  void ApproveFeatureAccess(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_ApproveFeatureAccess_Request* request,
                       ::CParental_ApproveFeatureAccess_Response* response,
                       ::google::protobuf::Closure* done);
  void RequestPlaytime(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_RequestPlaytime_Request* request,
                       ::CParental_RequestPlaytime_Response* response,
                       ::google::protobuf::Closure* done);
  void ApprovePlaytime(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_ApprovePlaytime_Request* request,
                       ::CParental_ApprovePlaytime_Response* response,
                       ::google::protobuf::Closure* done);
  void GetRequests(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_GetRequests_Request* request,
                       ::CParental_GetRequests_Response* response,
                       ::google::protobuf::Closure* done);
  void ReportPlaytimeAndNotify(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_ReportPlaytimeAndNotify_Request* request,
                       ::CParental_ReportPlaytimeAndNotify_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Parental_Stub);
};


// -------------------------------------------------------------------

class ParentalClient_Stub;

class ParentalClient : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline ParentalClient() {};
 public:
  virtual ~ParentalClient();

  typedef ParentalClient_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void NotifySettingsChange(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_ParentalSettingsChange_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyUnlock(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_ParentalUnlocNotification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyLock(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_ParentalLocNotification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void NotifyPlaytimeUsed(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_PlaytimeUsed_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ParentalClient);
};

class ParentalClient_Stub : public ParentalClient {
 public:
  ParentalClient_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  ParentalClient_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~ParentalClient_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements ParentalClient ------------------------------------------

  void NotifySettingsChange(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_ParentalSettingsChange_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void NotifyUnlock(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_ParentalUnlocNotification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void NotifyLock(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_ParentalLocNotification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void NotifyPlaytimeUsed(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CParental_PlaytimeUsed_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(ParentalClient_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ParentalApp

// optional uint32 appid = 1;
inline bool ParentalApp::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ParentalApp::has_appid() const {
  return _internal_has_appid();
}
inline void ParentalApp::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalApp::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalApp::appid() const {
  // @@protoc_insertion_point(field_get:ParentalApp.appid)
  return _internal_appid();
}
inline void ParentalApp::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
}
inline void ParentalApp::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:ParentalApp.appid)
}

// optional bool is_allowed = 2;
inline bool ParentalApp::_internal_has_is_allowed() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ParentalApp::has_is_allowed() const {
  return _internal_has_is_allowed();
}
inline void ParentalApp::clear_is_allowed() {
  is_allowed_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool ParentalApp::_internal_is_allowed() const {
  return is_allowed_;
}
inline bool ParentalApp::is_allowed() const {
  // @@protoc_insertion_point(field_get:ParentalApp.is_allowed)
  return _internal_is_allowed();
}
inline void ParentalApp::_internal_set_is_allowed(bool value) {
  _has_bits_[0] |= 0x00000002u;
  is_allowed_ = value;
}
inline void ParentalApp::set_is_allowed(bool value) {
  _internal_set_is_allowed(value);
  // @@protoc_insertion_point(field_set:ParentalApp.is_allowed)
}

// -------------------------------------------------------------------

// ParentalPlaytimeDay

// optional uint64 allowed_time_windows = 1;
inline bool ParentalPlaytimeDay::_internal_has_allowed_time_windows() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ParentalPlaytimeDay::has_allowed_time_windows() const {
  return _internal_has_allowed_time_windows();
}
inline void ParentalPlaytimeDay::clear_allowed_time_windows() {
  allowed_time_windows_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ParentalPlaytimeDay::_internal_allowed_time_windows() const {
  return allowed_time_windows_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ParentalPlaytimeDay::allowed_time_windows() const {
  // @@protoc_insertion_point(field_get:ParentalPlaytimeDay.allowed_time_windows)
  return _internal_allowed_time_windows();
}
inline void ParentalPlaytimeDay::_internal_set_allowed_time_windows(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  allowed_time_windows_ = value;
}
inline void ParentalPlaytimeDay::set_allowed_time_windows(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_allowed_time_windows(value);
  // @@protoc_insertion_point(field_set:ParentalPlaytimeDay.allowed_time_windows)
}

// optional uint32 allowed_daily_minutes = 2;
inline bool ParentalPlaytimeDay::_internal_has_allowed_daily_minutes() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ParentalPlaytimeDay::has_allowed_daily_minutes() const {
  return _internal_has_allowed_daily_minutes();
}
inline void ParentalPlaytimeDay::clear_allowed_daily_minutes() {
  allowed_daily_minutes_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalPlaytimeDay::_internal_allowed_daily_minutes() const {
  return allowed_daily_minutes_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalPlaytimeDay::allowed_daily_minutes() const {
  // @@protoc_insertion_point(field_get:ParentalPlaytimeDay.allowed_daily_minutes)
  return _internal_allowed_daily_minutes();
}
inline void ParentalPlaytimeDay::_internal_set_allowed_daily_minutes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  allowed_daily_minutes_ = value;
}
inline void ParentalPlaytimeDay::set_allowed_daily_minutes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_allowed_daily_minutes(value);
  // @@protoc_insertion_point(field_set:ParentalPlaytimeDay.allowed_daily_minutes)
}

// -------------------------------------------------------------------

// ParentalPlaytimeRestrictions

// optional bool apply_playtime_restrictions = 2;
inline bool ParentalPlaytimeRestrictions::_internal_has_apply_playtime_restrictions() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ParentalPlaytimeRestrictions::has_apply_playtime_restrictions() const {
  return _internal_has_apply_playtime_restrictions();
}
inline void ParentalPlaytimeRestrictions::clear_apply_playtime_restrictions() {
  apply_playtime_restrictions_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool ParentalPlaytimeRestrictions::_internal_apply_playtime_restrictions() const {
  return apply_playtime_restrictions_;
}
inline bool ParentalPlaytimeRestrictions::apply_playtime_restrictions() const {
  // @@protoc_insertion_point(field_get:ParentalPlaytimeRestrictions.apply_playtime_restrictions)
  return _internal_apply_playtime_restrictions();
}
inline void ParentalPlaytimeRestrictions::_internal_set_apply_playtime_restrictions(bool value) {
  _has_bits_[0] |= 0x00000001u;
  apply_playtime_restrictions_ = value;
}
inline void ParentalPlaytimeRestrictions::set_apply_playtime_restrictions(bool value) {
  _internal_set_apply_playtime_restrictions(value);
  // @@protoc_insertion_point(field_set:ParentalPlaytimeRestrictions.apply_playtime_restrictions)
}

// repeated .ParentalPlaytimeDay playtime_days = 15;
inline int ParentalPlaytimeRestrictions::_internal_playtime_days_size() const {
  return playtime_days_.size();
}
inline int ParentalPlaytimeRestrictions::playtime_days_size() const {
  return _internal_playtime_days_size();
}
inline void ParentalPlaytimeRestrictions::clear_playtime_days() {
  playtime_days_.Clear();
}
inline ::ParentalPlaytimeDay* ParentalPlaytimeRestrictions::mutable_playtime_days(int index) {
  // @@protoc_insertion_point(field_mutable:ParentalPlaytimeRestrictions.playtime_days)
  return playtime_days_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalPlaytimeDay >*
ParentalPlaytimeRestrictions::mutable_playtime_days() {
  // @@protoc_insertion_point(field_mutable_list:ParentalPlaytimeRestrictions.playtime_days)
  return &playtime_days_;
}
inline const ::ParentalPlaytimeDay& ParentalPlaytimeRestrictions::_internal_playtime_days(int index) const {
  return playtime_days_.Get(index);
}
inline const ::ParentalPlaytimeDay& ParentalPlaytimeRestrictions::playtime_days(int index) const {
  // @@protoc_insertion_point(field_get:ParentalPlaytimeRestrictions.playtime_days)
  return _internal_playtime_days(index);
}
inline ::ParentalPlaytimeDay* ParentalPlaytimeRestrictions::_internal_add_playtime_days() {
  return playtime_days_.Add();
}
inline ::ParentalPlaytimeDay* ParentalPlaytimeRestrictions::add_playtime_days() {
  // @@protoc_insertion_point(field_add:ParentalPlaytimeRestrictions.playtime_days)
  return _internal_add_playtime_days();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalPlaytimeDay >&
ParentalPlaytimeRestrictions::playtime_days() const {
  // @@protoc_insertion_point(field_list:ParentalPlaytimeRestrictions.playtime_days)
  return playtime_days_;
}

// -------------------------------------------------------------------

// ParentalTemporaryPlaytimeRestrictions

// optional .ParentalPlaytimeDay restrictions = 1;
inline bool ParentalTemporaryPlaytimeRestrictions::_internal_has_restrictions() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || restrictions_ != nullptr);
  return value;
}
inline bool ParentalTemporaryPlaytimeRestrictions::has_restrictions() const {
  return _internal_has_restrictions();
}
inline void ParentalTemporaryPlaytimeRestrictions::clear_restrictions() {
  if (restrictions_ != nullptr) restrictions_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::ParentalPlaytimeDay& ParentalTemporaryPlaytimeRestrictions::_internal_restrictions() const {
  const ::ParentalPlaytimeDay* p = restrictions_;
  return p != nullptr ? *p : reinterpret_cast<const ::ParentalPlaytimeDay&>(
      ::_ParentalPlaytimeDay_default_instance_);
}
inline const ::ParentalPlaytimeDay& ParentalTemporaryPlaytimeRestrictions::restrictions() const {
  // @@protoc_insertion_point(field_get:ParentalTemporaryPlaytimeRestrictions.restrictions)
  return _internal_restrictions();
}
inline void ParentalTemporaryPlaytimeRestrictions::unsafe_arena_set_allocated_restrictions(
    ::ParentalPlaytimeDay* restrictions) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(restrictions_);
  }
  restrictions_ = restrictions;
  if (restrictions) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ParentalTemporaryPlaytimeRestrictions.restrictions)
}
inline ::ParentalPlaytimeDay* ParentalTemporaryPlaytimeRestrictions::release_restrictions() {
  _has_bits_[0] &= ~0x00000001u;
  ::ParentalPlaytimeDay* temp = restrictions_;
  restrictions_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::ParentalPlaytimeDay* ParentalTemporaryPlaytimeRestrictions::unsafe_arena_release_restrictions() {
  // @@protoc_insertion_point(field_release:ParentalTemporaryPlaytimeRestrictions.restrictions)
  _has_bits_[0] &= ~0x00000001u;
  ::ParentalPlaytimeDay* temp = restrictions_;
  restrictions_ = nullptr;
  return temp;
}
inline ::ParentalPlaytimeDay* ParentalTemporaryPlaytimeRestrictions::_internal_mutable_restrictions() {
  _has_bits_[0] |= 0x00000001u;
  if (restrictions_ == nullptr) {
    auto* p = CreateMaybeMessage<::ParentalPlaytimeDay>(GetArena());
    restrictions_ = p;
  }
  return restrictions_;
}
inline ::ParentalPlaytimeDay* ParentalTemporaryPlaytimeRestrictions::mutable_restrictions() {
  // @@protoc_insertion_point(field_mutable:ParentalTemporaryPlaytimeRestrictions.restrictions)
  return _internal_mutable_restrictions();
}
inline void ParentalTemporaryPlaytimeRestrictions::set_allocated_restrictions(::ParentalPlaytimeDay* restrictions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete restrictions_;
  }
  if (restrictions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(restrictions);
    if (message_arena != submessage_arena) {
      restrictions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, restrictions, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  restrictions_ = restrictions;
  // @@protoc_insertion_point(field_set_allocated:ParentalTemporaryPlaytimeRestrictions.restrictions)
}

// optional uint32 rtime_expires = 2;
inline bool ParentalTemporaryPlaytimeRestrictions::_internal_has_rtime_expires() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ParentalTemporaryPlaytimeRestrictions::has_rtime_expires() const {
  return _internal_has_rtime_expires();
}
inline void ParentalTemporaryPlaytimeRestrictions::clear_rtime_expires() {
  rtime_expires_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalTemporaryPlaytimeRestrictions::_internal_rtime_expires() const {
  return rtime_expires_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalTemporaryPlaytimeRestrictions::rtime_expires() const {
  // @@protoc_insertion_point(field_get:ParentalTemporaryPlaytimeRestrictions.rtime_expires)
  return _internal_rtime_expires();
}
inline void ParentalTemporaryPlaytimeRestrictions::_internal_set_rtime_expires(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  rtime_expires_ = value;
}
inline void ParentalTemporaryPlaytimeRestrictions::set_rtime_expires(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rtime_expires(value);
  // @@protoc_insertion_point(field_set:ParentalTemporaryPlaytimeRestrictions.rtime_expires)
}

// -------------------------------------------------------------------

// ParentalSettings

// optional fixed64 steamid = 1;
inline bool ParentalSettings::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool ParentalSettings::has_steamid() const {
  return _internal_has_steamid();
}
inline void ParentalSettings::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ParentalSettings::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ParentalSettings::steamid() const {
  // @@protoc_insertion_point(field_get:ParentalSettings.steamid)
  return _internal_steamid();
}
inline void ParentalSettings::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  steamid_ = value;
}
inline void ParentalSettings::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:ParentalSettings.steamid)
}

// optional uint32 applist_base_id = 2;
inline bool ParentalSettings::_internal_has_applist_base_id() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool ParentalSettings::has_applist_base_id() const {
  return _internal_has_applist_base_id();
}
inline void ParentalSettings::clear_applist_base_id() {
  applist_base_id_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalSettings::_internal_applist_base_id() const {
  return applist_base_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalSettings::applist_base_id() const {
  // @@protoc_insertion_point(field_get:ParentalSettings.applist_base_id)
  return _internal_applist_base_id();
}
inline void ParentalSettings::_internal_set_applist_base_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  applist_base_id_ = value;
}
inline void ParentalSettings::set_applist_base_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_applist_base_id(value);
  // @@protoc_insertion_point(field_set:ParentalSettings.applist_base_id)
}

// optional string applist_base_description = 3;
inline bool ParentalSettings::_internal_has_applist_base_description() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ParentalSettings::has_applist_base_description() const {
  return _internal_has_applist_base_description();
}
inline void ParentalSettings::clear_applist_base_description() {
  applist_base_description_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ParentalSettings::applist_base_description() const {
  // @@protoc_insertion_point(field_get:ParentalSettings.applist_base_description)
  return _internal_applist_base_description();
}
inline void ParentalSettings::set_applist_base_description(const std::string& value) {
  _internal_set_applist_base_description(value);
  // @@protoc_insertion_point(field_set:ParentalSettings.applist_base_description)
}
inline std::string* ParentalSettings::mutable_applist_base_description() {
  // @@protoc_insertion_point(field_mutable:ParentalSettings.applist_base_description)
  return _internal_mutable_applist_base_description();
}
inline const std::string& ParentalSettings::_internal_applist_base_description() const {
  return applist_base_description_.Get();
}
inline void ParentalSettings::_internal_set_applist_base_description(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  applist_base_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ParentalSettings::set_applist_base_description(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  applist_base_description_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ParentalSettings.applist_base_description)
}
inline void ParentalSettings::set_applist_base_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  applist_base_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ParentalSettings.applist_base_description)
}
inline void ParentalSettings::set_applist_base_description(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  applist_base_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ParentalSettings.applist_base_description)
}
inline std::string* ParentalSettings::_internal_mutable_applist_base_description() {
  _has_bits_[0] |= 0x00000001u;
  return applist_base_description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ParentalSettings::release_applist_base_description() {
  // @@protoc_insertion_point(field_release:ParentalSettings.applist_base_description)
  if (!_internal_has_applist_base_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return applist_base_description_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ParentalSettings::set_allocated_applist_base_description(std::string* applist_base_description) {
  if (applist_base_description != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  applist_base_description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), applist_base_description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ParentalSettings.applist_base_description)
}

// repeated .ParentalApp applist_base = 4;
inline int ParentalSettings::_internal_applist_base_size() const {
  return applist_base_.size();
}
inline int ParentalSettings::applist_base_size() const {
  return _internal_applist_base_size();
}
inline void ParentalSettings::clear_applist_base() {
  applist_base_.Clear();
}
inline ::ParentalApp* ParentalSettings::mutable_applist_base(int index) {
  // @@protoc_insertion_point(field_mutable:ParentalSettings.applist_base)
  return applist_base_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalApp >*
ParentalSettings::mutable_applist_base() {
  // @@protoc_insertion_point(field_mutable_list:ParentalSettings.applist_base)
  return &applist_base_;
}
inline const ::ParentalApp& ParentalSettings::_internal_applist_base(int index) const {
  return applist_base_.Get(index);
}
inline const ::ParentalApp& ParentalSettings::applist_base(int index) const {
  // @@protoc_insertion_point(field_get:ParentalSettings.applist_base)
  return _internal_applist_base(index);
}
inline ::ParentalApp* ParentalSettings::_internal_add_applist_base() {
  return applist_base_.Add();
}
inline ::ParentalApp* ParentalSettings::add_applist_base() {
  // @@protoc_insertion_point(field_add:ParentalSettings.applist_base)
  return _internal_add_applist_base();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalApp >&
ParentalSettings::applist_base() const {
  // @@protoc_insertion_point(field_list:ParentalSettings.applist_base)
  return applist_base_;
}

// repeated .ParentalApp applist_custom = 5;
inline int ParentalSettings::_internal_applist_custom_size() const {
  return applist_custom_.size();
}
inline int ParentalSettings::applist_custom_size() const {
  return _internal_applist_custom_size();
}
inline void ParentalSettings::clear_applist_custom() {
  applist_custom_.Clear();
}
inline ::ParentalApp* ParentalSettings::mutable_applist_custom(int index) {
  // @@protoc_insertion_point(field_mutable:ParentalSettings.applist_custom)
  return applist_custom_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalApp >*
ParentalSettings::mutable_applist_custom() {
  // @@protoc_insertion_point(field_mutable_list:ParentalSettings.applist_custom)
  return &applist_custom_;
}
inline const ::ParentalApp& ParentalSettings::_internal_applist_custom(int index) const {
  return applist_custom_.Get(index);
}
inline const ::ParentalApp& ParentalSettings::applist_custom(int index) const {
  // @@protoc_insertion_point(field_get:ParentalSettings.applist_custom)
  return _internal_applist_custom(index);
}
inline ::ParentalApp* ParentalSettings::_internal_add_applist_custom() {
  return applist_custom_.Add();
}
inline ::ParentalApp* ParentalSettings::add_applist_custom() {
  // @@protoc_insertion_point(field_add:ParentalSettings.applist_custom)
  return _internal_add_applist_custom();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalApp >&
ParentalSettings::applist_custom() const {
  // @@protoc_insertion_point(field_list:ParentalSettings.applist_custom)
  return applist_custom_;
}

// optional uint32 passwordhashtype = 6;
inline bool ParentalSettings::_internal_has_passwordhashtype() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool ParentalSettings::has_passwordhashtype() const {
  return _internal_has_passwordhashtype();
}
inline void ParentalSettings::clear_passwordhashtype() {
  passwordhashtype_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalSettings::_internal_passwordhashtype() const {
  return passwordhashtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalSettings::passwordhashtype() const {
  // @@protoc_insertion_point(field_get:ParentalSettings.passwordhashtype)
  return _internal_passwordhashtype();
}
inline void ParentalSettings::_internal_set_passwordhashtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  passwordhashtype_ = value;
}
inline void ParentalSettings::set_passwordhashtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_passwordhashtype(value);
  // @@protoc_insertion_point(field_set:ParentalSettings.passwordhashtype)
}

// optional bytes salt = 7;
inline bool ParentalSettings::_internal_has_salt() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ParentalSettings::has_salt() const {
  return _internal_has_salt();
}
inline void ParentalSettings::clear_salt() {
  salt_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ParentalSettings::salt() const {
  // @@protoc_insertion_point(field_get:ParentalSettings.salt)
  return _internal_salt();
}
inline void ParentalSettings::set_salt(const std::string& value) {
  _internal_set_salt(value);
  // @@protoc_insertion_point(field_set:ParentalSettings.salt)
}
inline std::string* ParentalSettings::mutable_salt() {
  // @@protoc_insertion_point(field_mutable:ParentalSettings.salt)
  return _internal_mutable_salt();
}
inline const std::string& ParentalSettings::_internal_salt() const {
  return salt_.Get();
}
inline void ParentalSettings::_internal_set_salt(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  salt_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ParentalSettings::set_salt(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  salt_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ParentalSettings.salt)
}
inline void ParentalSettings::set_salt(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  salt_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ParentalSettings.salt)
}
inline void ParentalSettings::set_salt(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  salt_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ParentalSettings.salt)
}
inline std::string* ParentalSettings::_internal_mutable_salt() {
  _has_bits_[0] |= 0x00000002u;
  return salt_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ParentalSettings::release_salt() {
  // @@protoc_insertion_point(field_release:ParentalSettings.salt)
  if (!_internal_has_salt()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return salt_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ParentalSettings::set_allocated_salt(std::string* salt) {
  if (salt != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  salt_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), salt,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ParentalSettings.salt)
}

// optional bytes passwordhash = 8;
inline bool ParentalSettings::_internal_has_passwordhash() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ParentalSettings::has_passwordhash() const {
  return _internal_has_passwordhash();
}
inline void ParentalSettings::clear_passwordhash() {
  passwordhash_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& ParentalSettings::passwordhash() const {
  // @@protoc_insertion_point(field_get:ParentalSettings.passwordhash)
  return _internal_passwordhash();
}
inline void ParentalSettings::set_passwordhash(const std::string& value) {
  _internal_set_passwordhash(value);
  // @@protoc_insertion_point(field_set:ParentalSettings.passwordhash)
}
inline std::string* ParentalSettings::mutable_passwordhash() {
  // @@protoc_insertion_point(field_mutable:ParentalSettings.passwordhash)
  return _internal_mutable_passwordhash();
}
inline const std::string& ParentalSettings::_internal_passwordhash() const {
  return passwordhash_.Get();
}
inline void ParentalSettings::_internal_set_passwordhash(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  passwordhash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ParentalSettings::set_passwordhash(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  passwordhash_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ParentalSettings.passwordhash)
}
inline void ParentalSettings::set_passwordhash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  passwordhash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ParentalSettings.passwordhash)
}
inline void ParentalSettings::set_passwordhash(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  passwordhash_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ParentalSettings.passwordhash)
}
inline std::string* ParentalSettings::_internal_mutable_passwordhash() {
  _has_bits_[0] |= 0x00000004u;
  return passwordhash_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ParentalSettings::release_passwordhash() {
  // @@protoc_insertion_point(field_release:ParentalSettings.passwordhash)
  if (!_internal_has_passwordhash()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return passwordhash_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ParentalSettings::set_allocated_passwordhash(std::string* passwordhash) {
  if (passwordhash != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  passwordhash_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), passwordhash,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ParentalSettings.passwordhash)
}

// optional bool is_enabled = 9;
inline bool ParentalSettings::_internal_has_is_enabled() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool ParentalSettings::has_is_enabled() const {
  return _internal_has_is_enabled();
}
inline void ParentalSettings::clear_is_enabled() {
  is_enabled_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool ParentalSettings::_internal_is_enabled() const {
  return is_enabled_;
}
inline bool ParentalSettings::is_enabled() const {
  // @@protoc_insertion_point(field_get:ParentalSettings.is_enabled)
  return _internal_is_enabled();
}
inline void ParentalSettings::_internal_set_is_enabled(bool value) {
  _has_bits_[0] |= 0x00000400u;
  is_enabled_ = value;
}
inline void ParentalSettings::set_is_enabled(bool value) {
  _internal_set_is_enabled(value);
  // @@protoc_insertion_point(field_set:ParentalSettings.is_enabled)
}

// optional uint32 enabled_features = 10;
inline bool ParentalSettings::_internal_has_enabled_features() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool ParentalSettings::has_enabled_features() const {
  return _internal_has_enabled_features();
}
inline void ParentalSettings::clear_enabled_features() {
  enabled_features_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalSettings::_internal_enabled_features() const {
  return enabled_features_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalSettings::enabled_features() const {
  // @@protoc_insertion_point(field_get:ParentalSettings.enabled_features)
  return _internal_enabled_features();
}
inline void ParentalSettings::_internal_set_enabled_features(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  enabled_features_ = value;
}
inline void ParentalSettings::set_enabled_features(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_enabled_features(value);
  // @@protoc_insertion_point(field_set:ParentalSettings.enabled_features)
}

// optional string recovery_email = 11;
inline bool ParentalSettings::_internal_has_recovery_email() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ParentalSettings::has_recovery_email() const {
  return _internal_has_recovery_email();
}
inline void ParentalSettings::clear_recovery_email() {
  recovery_email_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& ParentalSettings::recovery_email() const {
  // @@protoc_insertion_point(field_get:ParentalSettings.recovery_email)
  return _internal_recovery_email();
}
inline void ParentalSettings::set_recovery_email(const std::string& value) {
  _internal_set_recovery_email(value);
  // @@protoc_insertion_point(field_set:ParentalSettings.recovery_email)
}
inline std::string* ParentalSettings::mutable_recovery_email() {
  // @@protoc_insertion_point(field_mutable:ParentalSettings.recovery_email)
  return _internal_mutable_recovery_email();
}
inline const std::string& ParentalSettings::_internal_recovery_email() const {
  return recovery_email_.Get();
}
inline void ParentalSettings::_internal_set_recovery_email(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  recovery_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ParentalSettings::set_recovery_email(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  recovery_email_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ParentalSettings.recovery_email)
}
inline void ParentalSettings::set_recovery_email(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  recovery_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ParentalSettings.recovery_email)
}
inline void ParentalSettings::set_recovery_email(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  recovery_email_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ParentalSettings.recovery_email)
}
inline std::string* ParentalSettings::_internal_mutable_recovery_email() {
  _has_bits_[0] |= 0x00000008u;
  return recovery_email_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ParentalSettings::release_recovery_email() {
  // @@protoc_insertion_point(field_release:ParentalSettings.recovery_email)
  if (!_internal_has_recovery_email()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return recovery_email_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ParentalSettings::set_allocated_recovery_email(std::string* recovery_email) {
  if (recovery_email != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  recovery_email_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), recovery_email,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ParentalSettings.recovery_email)
}

// optional bool is_site_license_lock = 12;
inline bool ParentalSettings::_internal_has_is_site_license_lock() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool ParentalSettings::has_is_site_license_lock() const {
  return _internal_has_is_site_license_lock();
}
inline void ParentalSettings::clear_is_site_license_lock() {
  is_site_license_lock_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool ParentalSettings::_internal_is_site_license_lock() const {
  return is_site_license_lock_;
}
inline bool ParentalSettings::is_site_license_lock() const {
  // @@protoc_insertion_point(field_get:ParentalSettings.is_site_license_lock)
  return _internal_is_site_license_lock();
}
inline void ParentalSettings::_internal_set_is_site_license_lock(bool value) {
  _has_bits_[0] |= 0x00000800u;
  is_site_license_lock_ = value;
}
inline void ParentalSettings::set_is_site_license_lock(bool value) {
  _internal_set_is_site_license_lock(value);
  // @@protoc_insertion_point(field_set:ParentalSettings.is_site_license_lock)
}

// optional uint32 temporary_enabled_features = 13;
inline bool ParentalSettings::_internal_has_temporary_enabled_features() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool ParentalSettings::has_temporary_enabled_features() const {
  return _internal_has_temporary_enabled_features();
}
inline void ParentalSettings::clear_temporary_enabled_features() {
  temporary_enabled_features_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalSettings::_internal_temporary_enabled_features() const {
  return temporary_enabled_features_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalSettings::temporary_enabled_features() const {
  // @@protoc_insertion_point(field_get:ParentalSettings.temporary_enabled_features)
  return _internal_temporary_enabled_features();
}
inline void ParentalSettings::_internal_set_temporary_enabled_features(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  temporary_enabled_features_ = value;
}
inline void ParentalSettings::set_temporary_enabled_features(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_temporary_enabled_features(value);
  // @@protoc_insertion_point(field_set:ParentalSettings.temporary_enabled_features)
}

// optional uint32 rtime_temporary_feature_expiration = 14;
inline bool ParentalSettings::_internal_has_rtime_temporary_feature_expiration() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool ParentalSettings::has_rtime_temporary_feature_expiration() const {
  return _internal_has_rtime_temporary_feature_expiration();
}
inline void ParentalSettings::clear_rtime_temporary_feature_expiration() {
  rtime_temporary_feature_expiration_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalSettings::_internal_rtime_temporary_feature_expiration() const {
  return rtime_temporary_feature_expiration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalSettings::rtime_temporary_feature_expiration() const {
  // @@protoc_insertion_point(field_get:ParentalSettings.rtime_temporary_feature_expiration)
  return _internal_rtime_temporary_feature_expiration();
}
inline void ParentalSettings::_internal_set_rtime_temporary_feature_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  rtime_temporary_feature_expiration_ = value;
}
inline void ParentalSettings::set_rtime_temporary_feature_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rtime_temporary_feature_expiration(value);
  // @@protoc_insertion_point(field_set:ParentalSettings.rtime_temporary_feature_expiration)
}

// optional .ParentalPlaytimeRestrictions playtime_restrictions = 15;
inline bool ParentalSettings::_internal_has_playtime_restrictions() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || playtime_restrictions_ != nullptr);
  return value;
}
inline bool ParentalSettings::has_playtime_restrictions() const {
  return _internal_has_playtime_restrictions();
}
inline void ParentalSettings::clear_playtime_restrictions() {
  if (playtime_restrictions_ != nullptr) playtime_restrictions_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::ParentalPlaytimeRestrictions& ParentalSettings::_internal_playtime_restrictions() const {
  const ::ParentalPlaytimeRestrictions* p = playtime_restrictions_;
  return p != nullptr ? *p : reinterpret_cast<const ::ParentalPlaytimeRestrictions&>(
      ::_ParentalPlaytimeRestrictions_default_instance_);
}
inline const ::ParentalPlaytimeRestrictions& ParentalSettings::playtime_restrictions() const {
  // @@protoc_insertion_point(field_get:ParentalSettings.playtime_restrictions)
  return _internal_playtime_restrictions();
}
inline void ParentalSettings::unsafe_arena_set_allocated_playtime_restrictions(
    ::ParentalPlaytimeRestrictions* playtime_restrictions) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(playtime_restrictions_);
  }
  playtime_restrictions_ = playtime_restrictions;
  if (playtime_restrictions) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ParentalSettings.playtime_restrictions)
}
inline ::ParentalPlaytimeRestrictions* ParentalSettings::release_playtime_restrictions() {
  _has_bits_[0] &= ~0x00000010u;
  ::ParentalPlaytimeRestrictions* temp = playtime_restrictions_;
  playtime_restrictions_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::ParentalPlaytimeRestrictions* ParentalSettings::unsafe_arena_release_playtime_restrictions() {
  // @@protoc_insertion_point(field_release:ParentalSettings.playtime_restrictions)
  _has_bits_[0] &= ~0x00000010u;
  ::ParentalPlaytimeRestrictions* temp = playtime_restrictions_;
  playtime_restrictions_ = nullptr;
  return temp;
}
inline ::ParentalPlaytimeRestrictions* ParentalSettings::_internal_mutable_playtime_restrictions() {
  _has_bits_[0] |= 0x00000010u;
  if (playtime_restrictions_ == nullptr) {
    auto* p = CreateMaybeMessage<::ParentalPlaytimeRestrictions>(GetArena());
    playtime_restrictions_ = p;
  }
  return playtime_restrictions_;
}
inline ::ParentalPlaytimeRestrictions* ParentalSettings::mutable_playtime_restrictions() {
  // @@protoc_insertion_point(field_mutable:ParentalSettings.playtime_restrictions)
  return _internal_mutable_playtime_restrictions();
}
inline void ParentalSettings::set_allocated_playtime_restrictions(::ParentalPlaytimeRestrictions* playtime_restrictions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete playtime_restrictions_;
  }
  if (playtime_restrictions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(playtime_restrictions);
    if (message_arena != submessage_arena) {
      playtime_restrictions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, playtime_restrictions, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  playtime_restrictions_ = playtime_restrictions;
  // @@protoc_insertion_point(field_set_allocated:ParentalSettings.playtime_restrictions)
}

// optional .ParentalTemporaryPlaytimeRestrictions temporary_playtime_restrictions = 16;
inline bool ParentalSettings::_internal_has_temporary_playtime_restrictions() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || temporary_playtime_restrictions_ != nullptr);
  return value;
}
inline bool ParentalSettings::has_temporary_playtime_restrictions() const {
  return _internal_has_temporary_playtime_restrictions();
}
inline void ParentalSettings::clear_temporary_playtime_restrictions() {
  if (temporary_playtime_restrictions_ != nullptr) temporary_playtime_restrictions_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::ParentalTemporaryPlaytimeRestrictions& ParentalSettings::_internal_temporary_playtime_restrictions() const {
  const ::ParentalTemporaryPlaytimeRestrictions* p = temporary_playtime_restrictions_;
  return p != nullptr ? *p : reinterpret_cast<const ::ParentalTemporaryPlaytimeRestrictions&>(
      ::_ParentalTemporaryPlaytimeRestrictions_default_instance_);
}
inline const ::ParentalTemporaryPlaytimeRestrictions& ParentalSettings::temporary_playtime_restrictions() const {
  // @@protoc_insertion_point(field_get:ParentalSettings.temporary_playtime_restrictions)
  return _internal_temporary_playtime_restrictions();
}
inline void ParentalSettings::unsafe_arena_set_allocated_temporary_playtime_restrictions(
    ::ParentalTemporaryPlaytimeRestrictions* temporary_playtime_restrictions) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temporary_playtime_restrictions_);
  }
  temporary_playtime_restrictions_ = temporary_playtime_restrictions;
  if (temporary_playtime_restrictions) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ParentalSettings.temporary_playtime_restrictions)
}
inline ::ParentalTemporaryPlaytimeRestrictions* ParentalSettings::release_temporary_playtime_restrictions() {
  _has_bits_[0] &= ~0x00000020u;
  ::ParentalTemporaryPlaytimeRestrictions* temp = temporary_playtime_restrictions_;
  temporary_playtime_restrictions_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::ParentalTemporaryPlaytimeRestrictions* ParentalSettings::unsafe_arena_release_temporary_playtime_restrictions() {
  // @@protoc_insertion_point(field_release:ParentalSettings.temporary_playtime_restrictions)
  _has_bits_[0] &= ~0x00000020u;
  ::ParentalTemporaryPlaytimeRestrictions* temp = temporary_playtime_restrictions_;
  temporary_playtime_restrictions_ = nullptr;
  return temp;
}
inline ::ParentalTemporaryPlaytimeRestrictions* ParentalSettings::_internal_mutable_temporary_playtime_restrictions() {
  _has_bits_[0] |= 0x00000020u;
  if (temporary_playtime_restrictions_ == nullptr) {
    auto* p = CreateMaybeMessage<::ParentalTemporaryPlaytimeRestrictions>(GetArena());
    temporary_playtime_restrictions_ = p;
  }
  return temporary_playtime_restrictions_;
}
inline ::ParentalTemporaryPlaytimeRestrictions* ParentalSettings::mutable_temporary_playtime_restrictions() {
  // @@protoc_insertion_point(field_mutable:ParentalSettings.temporary_playtime_restrictions)
  return _internal_mutable_temporary_playtime_restrictions();
}
inline void ParentalSettings::set_allocated_temporary_playtime_restrictions(::ParentalTemporaryPlaytimeRestrictions* temporary_playtime_restrictions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete temporary_playtime_restrictions_;
  }
  if (temporary_playtime_restrictions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(temporary_playtime_restrictions);
    if (message_arena != submessage_arena) {
      temporary_playtime_restrictions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, temporary_playtime_restrictions, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  temporary_playtime_restrictions_ = temporary_playtime_restrictions;
  // @@protoc_insertion_point(field_set_allocated:ParentalSettings.temporary_playtime_restrictions)
}

// -------------------------------------------------------------------

// CParental_EnableParentalSettings_Request

// optional string password = 1;
inline bool CParental_EnableParentalSettings_Request::_internal_has_password() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_EnableParentalSettings_Request::has_password() const {
  return _internal_has_password();
}
inline void CParental_EnableParentalSettings_Request::clear_password() {
  password_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CParental_EnableParentalSettings_Request::password() const {
  // @@protoc_insertion_point(field_get:CParental_EnableParentalSettings_Request.password)
  return _internal_password();
}
inline void CParental_EnableParentalSettings_Request::set_password(const std::string& value) {
  _internal_set_password(value);
  // @@protoc_insertion_point(field_set:CParental_EnableParentalSettings_Request.password)
}
inline std::string* CParental_EnableParentalSettings_Request::mutable_password() {
  // @@protoc_insertion_point(field_mutable:CParental_EnableParentalSettings_Request.password)
  return _internal_mutable_password();
}
inline const std::string& CParental_EnableParentalSettings_Request::_internal_password() const {
  return password_.Get();
}
inline void CParental_EnableParentalSettings_Request::_internal_set_password(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CParental_EnableParentalSettings_Request::set_password(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  password_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CParental_EnableParentalSettings_Request.password)
}
inline void CParental_EnableParentalSettings_Request::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CParental_EnableParentalSettings_Request.password)
}
inline void CParental_EnableParentalSettings_Request::set_password(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CParental_EnableParentalSettings_Request.password)
}
inline std::string* CParental_EnableParentalSettings_Request::_internal_mutable_password() {
  _has_bits_[0] |= 0x00000001u;
  return password_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CParental_EnableParentalSettings_Request::release_password() {
  // @@protoc_insertion_point(field_release:CParental_EnableParentalSettings_Request.password)
  if (!_internal_has_password()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return password_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CParental_EnableParentalSettings_Request::set_allocated_password(std::string* password) {
  if (password != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  password_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), password,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CParental_EnableParentalSettings_Request.password)
}

// optional .ParentalSettings settings = 2;
inline bool CParental_EnableParentalSettings_Request::_internal_has_settings() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || settings_ != nullptr);
  return value;
}
inline bool CParental_EnableParentalSettings_Request::has_settings() const {
  return _internal_has_settings();
}
inline void CParental_EnableParentalSettings_Request::clear_settings() {
  if (settings_ != nullptr) settings_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::ParentalSettings& CParental_EnableParentalSettings_Request::_internal_settings() const {
  const ::ParentalSettings* p = settings_;
  return p != nullptr ? *p : reinterpret_cast<const ::ParentalSettings&>(
      ::_ParentalSettings_default_instance_);
}
inline const ::ParentalSettings& CParental_EnableParentalSettings_Request::settings() const {
  // @@protoc_insertion_point(field_get:CParental_EnableParentalSettings_Request.settings)
  return _internal_settings();
}
inline void CParental_EnableParentalSettings_Request::unsafe_arena_set_allocated_settings(
    ::ParentalSettings* settings) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(settings_);
  }
  settings_ = settings;
  if (settings) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CParental_EnableParentalSettings_Request.settings)
}
inline ::ParentalSettings* CParental_EnableParentalSettings_Request::release_settings() {
  _has_bits_[0] &= ~0x00000004u;
  ::ParentalSettings* temp = settings_;
  settings_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::ParentalSettings* CParental_EnableParentalSettings_Request::unsafe_arena_release_settings() {
  // @@protoc_insertion_point(field_release:CParental_EnableParentalSettings_Request.settings)
  _has_bits_[0] &= ~0x00000004u;
  ::ParentalSettings* temp = settings_;
  settings_ = nullptr;
  return temp;
}
inline ::ParentalSettings* CParental_EnableParentalSettings_Request::_internal_mutable_settings() {
  _has_bits_[0] |= 0x00000004u;
  if (settings_ == nullptr) {
    auto* p = CreateMaybeMessage<::ParentalSettings>(GetArena());
    settings_ = p;
  }
  return settings_;
}
inline ::ParentalSettings* CParental_EnableParentalSettings_Request::mutable_settings() {
  // @@protoc_insertion_point(field_mutable:CParental_EnableParentalSettings_Request.settings)
  return _internal_mutable_settings();
}
inline void CParental_EnableParentalSettings_Request::set_allocated_settings(::ParentalSettings* settings) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete settings_;
  }
  if (settings) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(settings);
    if (message_arena != submessage_arena) {
      settings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, settings, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  settings_ = settings;
  // @@protoc_insertion_point(field_set_allocated:CParental_EnableParentalSettings_Request.settings)
}

// optional string sessionid = 3;
inline bool CParental_EnableParentalSettings_Request::_internal_has_sessionid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CParental_EnableParentalSettings_Request::has_sessionid() const {
  return _internal_has_sessionid();
}
inline void CParental_EnableParentalSettings_Request::clear_sessionid() {
  sessionid_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CParental_EnableParentalSettings_Request::sessionid() const {
  // @@protoc_insertion_point(field_get:CParental_EnableParentalSettings_Request.sessionid)
  return _internal_sessionid();
}
inline void CParental_EnableParentalSettings_Request::set_sessionid(const std::string& value) {
  _internal_set_sessionid(value);
  // @@protoc_insertion_point(field_set:CParental_EnableParentalSettings_Request.sessionid)
}
inline std::string* CParental_EnableParentalSettings_Request::mutable_sessionid() {
  // @@protoc_insertion_point(field_mutable:CParental_EnableParentalSettings_Request.sessionid)
  return _internal_mutable_sessionid();
}
inline const std::string& CParental_EnableParentalSettings_Request::_internal_sessionid() const {
  return sessionid_.Get();
}
inline void CParental_EnableParentalSettings_Request::_internal_set_sessionid(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CParental_EnableParentalSettings_Request::set_sessionid(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  sessionid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CParental_EnableParentalSettings_Request.sessionid)
}
inline void CParental_EnableParentalSettings_Request::set_sessionid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CParental_EnableParentalSettings_Request.sessionid)
}
inline void CParental_EnableParentalSettings_Request::set_sessionid(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CParental_EnableParentalSettings_Request.sessionid)
}
inline std::string* CParental_EnableParentalSettings_Request::_internal_mutable_sessionid() {
  _has_bits_[0] |= 0x00000002u;
  return sessionid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CParental_EnableParentalSettings_Request::release_sessionid() {
  // @@protoc_insertion_point(field_release:CParental_EnableParentalSettings_Request.sessionid)
  if (!_internal_has_sessionid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return sessionid_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CParental_EnableParentalSettings_Request::set_allocated_sessionid(std::string* sessionid) {
  if (sessionid != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sessionid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sessionid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CParental_EnableParentalSettings_Request.sessionid)
}

// optional uint32 enablecode = 4;
inline bool CParental_EnableParentalSettings_Request::_internal_has_enablecode() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CParental_EnableParentalSettings_Request::has_enablecode() const {
  return _internal_has_enablecode();
}
inline void CParental_EnableParentalSettings_Request::clear_enablecode() {
  enablecode_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_EnableParentalSettings_Request::_internal_enablecode() const {
  return enablecode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_EnableParentalSettings_Request::enablecode() const {
  // @@protoc_insertion_point(field_get:CParental_EnableParentalSettings_Request.enablecode)
  return _internal_enablecode();
}
inline void CParental_EnableParentalSettings_Request::_internal_set_enablecode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  enablecode_ = value;
}
inline void CParental_EnableParentalSettings_Request::set_enablecode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_enablecode(value);
  // @@protoc_insertion_point(field_set:CParental_EnableParentalSettings_Request.enablecode)
}

// optional fixed64 steamid = 10;
inline bool CParental_EnableParentalSettings_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CParental_EnableParentalSettings_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CParental_EnableParentalSettings_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_EnableParentalSettings_Request::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_EnableParentalSettings_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CParental_EnableParentalSettings_Request.steamid)
  return _internal_steamid();
}
inline void CParental_EnableParentalSettings_Request::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  steamid_ = value;
}
inline void CParental_EnableParentalSettings_Request::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CParental_EnableParentalSettings_Request.steamid)
}

// -------------------------------------------------------------------

// CParental_EnableParentalSettings_Response

// -------------------------------------------------------------------

// CParental_DisableParentalSettings_Request

// optional string password = 1;
inline bool CParental_DisableParentalSettings_Request::_internal_has_password() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_DisableParentalSettings_Request::has_password() const {
  return _internal_has_password();
}
inline void CParental_DisableParentalSettings_Request::clear_password() {
  password_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CParental_DisableParentalSettings_Request::password() const {
  // @@protoc_insertion_point(field_get:CParental_DisableParentalSettings_Request.password)
  return _internal_password();
}
inline void CParental_DisableParentalSettings_Request::set_password(const std::string& value) {
  _internal_set_password(value);
  // @@protoc_insertion_point(field_set:CParental_DisableParentalSettings_Request.password)
}
inline std::string* CParental_DisableParentalSettings_Request::mutable_password() {
  // @@protoc_insertion_point(field_mutable:CParental_DisableParentalSettings_Request.password)
  return _internal_mutable_password();
}
inline const std::string& CParental_DisableParentalSettings_Request::_internal_password() const {
  return password_.Get();
}
inline void CParental_DisableParentalSettings_Request::_internal_set_password(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CParental_DisableParentalSettings_Request::set_password(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  password_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CParental_DisableParentalSettings_Request.password)
}
inline void CParental_DisableParentalSettings_Request::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CParental_DisableParentalSettings_Request.password)
}
inline void CParental_DisableParentalSettings_Request::set_password(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CParental_DisableParentalSettings_Request.password)
}
inline std::string* CParental_DisableParentalSettings_Request::_internal_mutable_password() {
  _has_bits_[0] |= 0x00000001u;
  return password_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CParental_DisableParentalSettings_Request::release_password() {
  // @@protoc_insertion_point(field_release:CParental_DisableParentalSettings_Request.password)
  if (!_internal_has_password()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return password_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CParental_DisableParentalSettings_Request::set_allocated_password(std::string* password) {
  if (password != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  password_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), password,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CParental_DisableParentalSettings_Request.password)
}

// optional fixed64 steamid = 10;
inline bool CParental_DisableParentalSettings_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CParental_DisableParentalSettings_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CParental_DisableParentalSettings_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_DisableParentalSettings_Request::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_DisableParentalSettings_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CParental_DisableParentalSettings_Request.steamid)
  return _internal_steamid();
}
inline void CParental_DisableParentalSettings_Request::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
}
inline void CParental_DisableParentalSettings_Request::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CParental_DisableParentalSettings_Request.steamid)
}

// -------------------------------------------------------------------

// CParental_DisableParentalSettings_Response

// -------------------------------------------------------------------

// CParental_GetParentalSettings_Request

// optional fixed64 steamid = 10;
inline bool CParental_GetParentalSettings_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_GetParentalSettings_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CParental_GetParentalSettings_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_GetParentalSettings_Request::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_GetParentalSettings_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CParental_GetParentalSettings_Request.steamid)
  return _internal_steamid();
}
inline void CParental_GetParentalSettings_Request::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
}
inline void CParental_GetParentalSettings_Request::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CParental_GetParentalSettings_Request.steamid)
}

// -------------------------------------------------------------------

// CParental_GetParentalSettings_Response

// optional .ParentalSettings settings = 1;
inline bool CParental_GetParentalSettings_Response::_internal_has_settings() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || settings_ != nullptr);
  return value;
}
inline bool CParental_GetParentalSettings_Response::has_settings() const {
  return _internal_has_settings();
}
inline void CParental_GetParentalSettings_Response::clear_settings() {
  if (settings_ != nullptr) settings_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::ParentalSettings& CParental_GetParentalSettings_Response::_internal_settings() const {
  const ::ParentalSettings* p = settings_;
  return p != nullptr ? *p : reinterpret_cast<const ::ParentalSettings&>(
      ::_ParentalSettings_default_instance_);
}
inline const ::ParentalSettings& CParental_GetParentalSettings_Response::settings() const {
  // @@protoc_insertion_point(field_get:CParental_GetParentalSettings_Response.settings)
  return _internal_settings();
}
inline void CParental_GetParentalSettings_Response::unsafe_arena_set_allocated_settings(
    ::ParentalSettings* settings) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(settings_);
  }
  settings_ = settings;
  if (settings) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CParental_GetParentalSettings_Response.settings)
}
inline ::ParentalSettings* CParental_GetParentalSettings_Response::release_settings() {
  _has_bits_[0] &= ~0x00000001u;
  ::ParentalSettings* temp = settings_;
  settings_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::ParentalSettings* CParental_GetParentalSettings_Response::unsafe_arena_release_settings() {
  // @@protoc_insertion_point(field_release:CParental_GetParentalSettings_Response.settings)
  _has_bits_[0] &= ~0x00000001u;
  ::ParentalSettings* temp = settings_;
  settings_ = nullptr;
  return temp;
}
inline ::ParentalSettings* CParental_GetParentalSettings_Response::_internal_mutable_settings() {
  _has_bits_[0] |= 0x00000001u;
  if (settings_ == nullptr) {
    auto* p = CreateMaybeMessage<::ParentalSettings>(GetArena());
    settings_ = p;
  }
  return settings_;
}
inline ::ParentalSettings* CParental_GetParentalSettings_Response::mutable_settings() {
  // @@protoc_insertion_point(field_mutable:CParental_GetParentalSettings_Response.settings)
  return _internal_mutable_settings();
}
inline void CParental_GetParentalSettings_Response::set_allocated_settings(::ParentalSettings* settings) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete settings_;
  }
  if (settings) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(settings);
    if (message_arena != submessage_arena) {
      settings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, settings, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  settings_ = settings;
  // @@protoc_insertion_point(field_set_allocated:CParental_GetParentalSettings_Response.settings)
}

// -------------------------------------------------------------------

// CParental_GetSignedParentalSettings_Request

// optional uint32 priority = 1;
inline bool CParental_GetSignedParentalSettings_Request::_internal_has_priority() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_GetSignedParentalSettings_Request::has_priority() const {
  return _internal_has_priority();
}
inline void CParental_GetSignedParentalSettings_Request::clear_priority() {
  priority_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_GetSignedParentalSettings_Request::_internal_priority() const {
  return priority_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_GetSignedParentalSettings_Request::priority() const {
  // @@protoc_insertion_point(field_get:CParental_GetSignedParentalSettings_Request.priority)
  return _internal_priority();
}
inline void CParental_GetSignedParentalSettings_Request::_internal_set_priority(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  priority_ = value;
}
inline void CParental_GetSignedParentalSettings_Request::set_priority(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:CParental_GetSignedParentalSettings_Request.priority)
}

// -------------------------------------------------------------------

// CParental_GetSignedParentalSettings_Response

// optional bytes serialized_settings = 1;
inline bool CParental_GetSignedParentalSettings_Response::_internal_has_serialized_settings() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_GetSignedParentalSettings_Response::has_serialized_settings() const {
  return _internal_has_serialized_settings();
}
inline void CParental_GetSignedParentalSettings_Response::clear_serialized_settings() {
  serialized_settings_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CParental_GetSignedParentalSettings_Response::serialized_settings() const {
  // @@protoc_insertion_point(field_get:CParental_GetSignedParentalSettings_Response.serialized_settings)
  return _internal_serialized_settings();
}
inline void CParental_GetSignedParentalSettings_Response::set_serialized_settings(const std::string& value) {
  _internal_set_serialized_settings(value);
  // @@protoc_insertion_point(field_set:CParental_GetSignedParentalSettings_Response.serialized_settings)
}
inline std::string* CParental_GetSignedParentalSettings_Response::mutable_serialized_settings() {
  // @@protoc_insertion_point(field_mutable:CParental_GetSignedParentalSettings_Response.serialized_settings)
  return _internal_mutable_serialized_settings();
}
inline const std::string& CParental_GetSignedParentalSettings_Response::_internal_serialized_settings() const {
  return serialized_settings_.Get();
}
inline void CParental_GetSignedParentalSettings_Response::_internal_set_serialized_settings(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  serialized_settings_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CParental_GetSignedParentalSettings_Response::set_serialized_settings(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  serialized_settings_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CParental_GetSignedParentalSettings_Response.serialized_settings)
}
inline void CParental_GetSignedParentalSettings_Response::set_serialized_settings(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  serialized_settings_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CParental_GetSignedParentalSettings_Response.serialized_settings)
}
inline void CParental_GetSignedParentalSettings_Response::set_serialized_settings(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  serialized_settings_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CParental_GetSignedParentalSettings_Response.serialized_settings)
}
inline std::string* CParental_GetSignedParentalSettings_Response::_internal_mutable_serialized_settings() {
  _has_bits_[0] |= 0x00000001u;
  return serialized_settings_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CParental_GetSignedParentalSettings_Response::release_serialized_settings() {
  // @@protoc_insertion_point(field_release:CParental_GetSignedParentalSettings_Response.serialized_settings)
  if (!_internal_has_serialized_settings()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return serialized_settings_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CParental_GetSignedParentalSettings_Response::set_allocated_serialized_settings(std::string* serialized_settings) {
  if (serialized_settings != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  serialized_settings_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), serialized_settings,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CParental_GetSignedParentalSettings_Response.serialized_settings)
}

// optional bytes signature = 2;
inline bool CParental_GetSignedParentalSettings_Response::_internal_has_signature() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CParental_GetSignedParentalSettings_Response::has_signature() const {
  return _internal_has_signature();
}
inline void CParental_GetSignedParentalSettings_Response::clear_signature() {
  signature_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CParental_GetSignedParentalSettings_Response::signature() const {
  // @@protoc_insertion_point(field_get:CParental_GetSignedParentalSettings_Response.signature)
  return _internal_signature();
}
inline void CParental_GetSignedParentalSettings_Response::set_signature(const std::string& value) {
  _internal_set_signature(value);
  // @@protoc_insertion_point(field_set:CParental_GetSignedParentalSettings_Response.signature)
}
inline std::string* CParental_GetSignedParentalSettings_Response::mutable_signature() {
  // @@protoc_insertion_point(field_mutable:CParental_GetSignedParentalSettings_Response.signature)
  return _internal_mutable_signature();
}
inline const std::string& CParental_GetSignedParentalSettings_Response::_internal_signature() const {
  return signature_.Get();
}
inline void CParental_GetSignedParentalSettings_Response::_internal_set_signature(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CParental_GetSignedParentalSettings_Response::set_signature(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  signature_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CParental_GetSignedParentalSettings_Response.signature)
}
inline void CParental_GetSignedParentalSettings_Response::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CParental_GetSignedParentalSettings_Response.signature)
}
inline void CParental_GetSignedParentalSettings_Response::set_signature(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CParental_GetSignedParentalSettings_Response.signature)
}
inline std::string* CParental_GetSignedParentalSettings_Response::_internal_mutable_signature() {
  _has_bits_[0] |= 0x00000002u;
  return signature_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CParental_GetSignedParentalSettings_Response::release_signature() {
  // @@protoc_insertion_point(field_release:CParental_GetSignedParentalSettings_Response.signature)
  if (!_internal_has_signature()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return signature_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CParental_GetSignedParentalSettings_Response::set_allocated_signature(std::string* signature) {
  if (signature != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  signature_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), signature,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CParental_GetSignedParentalSettings_Response.signature)
}

// -------------------------------------------------------------------

// CParental_SetParentalSettings_Request

// optional string password = 1;
inline bool CParental_SetParentalSettings_Request::_internal_has_password() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_SetParentalSettings_Request::has_password() const {
  return _internal_has_password();
}
inline void CParental_SetParentalSettings_Request::clear_password() {
  password_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CParental_SetParentalSettings_Request::password() const {
  // @@protoc_insertion_point(field_get:CParental_SetParentalSettings_Request.password)
  return _internal_password();
}
inline void CParental_SetParentalSettings_Request::set_password(const std::string& value) {
  _internal_set_password(value);
  // @@protoc_insertion_point(field_set:CParental_SetParentalSettings_Request.password)
}
inline std::string* CParental_SetParentalSettings_Request::mutable_password() {
  // @@protoc_insertion_point(field_mutable:CParental_SetParentalSettings_Request.password)
  return _internal_mutable_password();
}
inline const std::string& CParental_SetParentalSettings_Request::_internal_password() const {
  return password_.Get();
}
inline void CParental_SetParentalSettings_Request::_internal_set_password(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CParental_SetParentalSettings_Request::set_password(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  password_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CParental_SetParentalSettings_Request.password)
}
inline void CParental_SetParentalSettings_Request::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CParental_SetParentalSettings_Request.password)
}
inline void CParental_SetParentalSettings_Request::set_password(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CParental_SetParentalSettings_Request.password)
}
inline std::string* CParental_SetParentalSettings_Request::_internal_mutable_password() {
  _has_bits_[0] |= 0x00000001u;
  return password_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CParental_SetParentalSettings_Request::release_password() {
  // @@protoc_insertion_point(field_release:CParental_SetParentalSettings_Request.password)
  if (!_internal_has_password()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return password_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CParental_SetParentalSettings_Request::set_allocated_password(std::string* password) {
  if (password != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  password_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), password,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CParental_SetParentalSettings_Request.password)
}

// optional .ParentalSettings settings = 2;
inline bool CParental_SetParentalSettings_Request::_internal_has_settings() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || settings_ != nullptr);
  return value;
}
inline bool CParental_SetParentalSettings_Request::has_settings() const {
  return _internal_has_settings();
}
inline void CParental_SetParentalSettings_Request::clear_settings() {
  if (settings_ != nullptr) settings_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::ParentalSettings& CParental_SetParentalSettings_Request::_internal_settings() const {
  const ::ParentalSettings* p = settings_;
  return p != nullptr ? *p : reinterpret_cast<const ::ParentalSettings&>(
      ::_ParentalSettings_default_instance_);
}
inline const ::ParentalSettings& CParental_SetParentalSettings_Request::settings() const {
  // @@protoc_insertion_point(field_get:CParental_SetParentalSettings_Request.settings)
  return _internal_settings();
}
inline void CParental_SetParentalSettings_Request::unsafe_arena_set_allocated_settings(
    ::ParentalSettings* settings) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(settings_);
  }
  settings_ = settings;
  if (settings) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CParental_SetParentalSettings_Request.settings)
}
inline ::ParentalSettings* CParental_SetParentalSettings_Request::release_settings() {
  _has_bits_[0] &= ~0x00000008u;
  ::ParentalSettings* temp = settings_;
  settings_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::ParentalSettings* CParental_SetParentalSettings_Request::unsafe_arena_release_settings() {
  // @@protoc_insertion_point(field_release:CParental_SetParentalSettings_Request.settings)
  _has_bits_[0] &= ~0x00000008u;
  ::ParentalSettings* temp = settings_;
  settings_ = nullptr;
  return temp;
}
inline ::ParentalSettings* CParental_SetParentalSettings_Request::_internal_mutable_settings() {
  _has_bits_[0] |= 0x00000008u;
  if (settings_ == nullptr) {
    auto* p = CreateMaybeMessage<::ParentalSettings>(GetArena());
    settings_ = p;
  }
  return settings_;
}
inline ::ParentalSettings* CParental_SetParentalSettings_Request::mutable_settings() {
  // @@protoc_insertion_point(field_mutable:CParental_SetParentalSettings_Request.settings)
  return _internal_mutable_settings();
}
inline void CParental_SetParentalSettings_Request::set_allocated_settings(::ParentalSettings* settings) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete settings_;
  }
  if (settings) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(settings);
    if (message_arena != submessage_arena) {
      settings = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, settings, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  settings_ = settings;
  // @@protoc_insertion_point(field_set_allocated:CParental_SetParentalSettings_Request.settings)
}

// optional string new_password = 3;
inline bool CParental_SetParentalSettings_Request::_internal_has_new_password() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CParental_SetParentalSettings_Request::has_new_password() const {
  return _internal_has_new_password();
}
inline void CParental_SetParentalSettings_Request::clear_new_password() {
  new_password_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CParental_SetParentalSettings_Request::new_password() const {
  // @@protoc_insertion_point(field_get:CParental_SetParentalSettings_Request.new_password)
  return _internal_new_password();
}
inline void CParental_SetParentalSettings_Request::set_new_password(const std::string& value) {
  _internal_set_new_password(value);
  // @@protoc_insertion_point(field_set:CParental_SetParentalSettings_Request.new_password)
}
inline std::string* CParental_SetParentalSettings_Request::mutable_new_password() {
  // @@protoc_insertion_point(field_mutable:CParental_SetParentalSettings_Request.new_password)
  return _internal_mutable_new_password();
}
inline const std::string& CParental_SetParentalSettings_Request::_internal_new_password() const {
  return new_password_.Get();
}
inline void CParental_SetParentalSettings_Request::_internal_set_new_password(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  new_password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CParental_SetParentalSettings_Request::set_new_password(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  new_password_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CParental_SetParentalSettings_Request.new_password)
}
inline void CParental_SetParentalSettings_Request::set_new_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  new_password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CParental_SetParentalSettings_Request.new_password)
}
inline void CParental_SetParentalSettings_Request::set_new_password(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  new_password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CParental_SetParentalSettings_Request.new_password)
}
inline std::string* CParental_SetParentalSettings_Request::_internal_mutable_new_password() {
  _has_bits_[0] |= 0x00000002u;
  return new_password_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CParental_SetParentalSettings_Request::release_new_password() {
  // @@protoc_insertion_point(field_release:CParental_SetParentalSettings_Request.new_password)
  if (!_internal_has_new_password()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return new_password_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CParental_SetParentalSettings_Request::set_allocated_new_password(std::string* new_password) {
  if (new_password != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  new_password_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), new_password,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CParental_SetParentalSettings_Request.new_password)
}

// optional string sessionid = 4;
inline bool CParental_SetParentalSettings_Request::_internal_has_sessionid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CParental_SetParentalSettings_Request::has_sessionid() const {
  return _internal_has_sessionid();
}
inline void CParental_SetParentalSettings_Request::clear_sessionid() {
  sessionid_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CParental_SetParentalSettings_Request::sessionid() const {
  // @@protoc_insertion_point(field_get:CParental_SetParentalSettings_Request.sessionid)
  return _internal_sessionid();
}
inline void CParental_SetParentalSettings_Request::set_sessionid(const std::string& value) {
  _internal_set_sessionid(value);
  // @@protoc_insertion_point(field_set:CParental_SetParentalSettings_Request.sessionid)
}
inline std::string* CParental_SetParentalSettings_Request::mutable_sessionid() {
  // @@protoc_insertion_point(field_mutable:CParental_SetParentalSettings_Request.sessionid)
  return _internal_mutable_sessionid();
}
inline const std::string& CParental_SetParentalSettings_Request::_internal_sessionid() const {
  return sessionid_.Get();
}
inline void CParental_SetParentalSettings_Request::_internal_set_sessionid(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CParental_SetParentalSettings_Request::set_sessionid(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  sessionid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CParental_SetParentalSettings_Request.sessionid)
}
inline void CParental_SetParentalSettings_Request::set_sessionid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CParental_SetParentalSettings_Request.sessionid)
}
inline void CParental_SetParentalSettings_Request::set_sessionid(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CParental_SetParentalSettings_Request.sessionid)
}
inline std::string* CParental_SetParentalSettings_Request::_internal_mutable_sessionid() {
  _has_bits_[0] |= 0x00000004u;
  return sessionid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CParental_SetParentalSettings_Request::release_sessionid() {
  // @@protoc_insertion_point(field_release:CParental_SetParentalSettings_Request.sessionid)
  if (!_internal_has_sessionid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return sessionid_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CParental_SetParentalSettings_Request::set_allocated_sessionid(std::string* sessionid) {
  if (sessionid != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  sessionid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sessionid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CParental_SetParentalSettings_Request.sessionid)
}

// optional fixed64 steamid = 10;
inline bool CParental_SetParentalSettings_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CParental_SetParentalSettings_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CParental_SetParentalSettings_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_SetParentalSettings_Request::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_SetParentalSettings_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CParental_SetParentalSettings_Request.steamid)
  return _internal_steamid();
}
inline void CParental_SetParentalSettings_Request::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  steamid_ = value;
}
inline void CParental_SetParentalSettings_Request::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CParental_SetParentalSettings_Request.steamid)
}

// -------------------------------------------------------------------

// CParental_SetParentalSettings_Response

// -------------------------------------------------------------------

// CParental_ValidateToken_Request

// optional string unloctoken = 1;
inline bool CParental_ValidateToken_Request::_internal_has_unloctoken() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_ValidateToken_Request::has_unloctoken() const {
  return _internal_has_unloctoken();
}
inline void CParental_ValidateToken_Request::clear_unloctoken() {
  unloctoken_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CParental_ValidateToken_Request::unloctoken() const {
  // @@protoc_insertion_point(field_get:CParental_ValidateToken_Request.unloctoken)
  return _internal_unloctoken();
}
inline void CParental_ValidateToken_Request::set_unloctoken(const std::string& value) {
  _internal_set_unloctoken(value);
  // @@protoc_insertion_point(field_set:CParental_ValidateToken_Request.unloctoken)
}
inline std::string* CParental_ValidateToken_Request::mutable_unloctoken() {
  // @@protoc_insertion_point(field_mutable:CParental_ValidateToken_Request.unloctoken)
  return _internal_mutable_unloctoken();
}
inline const std::string& CParental_ValidateToken_Request::_internal_unloctoken() const {
  return unloctoken_.Get();
}
inline void CParental_ValidateToken_Request::_internal_set_unloctoken(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  unloctoken_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CParental_ValidateToken_Request::set_unloctoken(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  unloctoken_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CParental_ValidateToken_Request.unloctoken)
}
inline void CParental_ValidateToken_Request::set_unloctoken(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  unloctoken_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CParental_ValidateToken_Request.unloctoken)
}
inline void CParental_ValidateToken_Request::set_unloctoken(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  unloctoken_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CParental_ValidateToken_Request.unloctoken)
}
inline std::string* CParental_ValidateToken_Request::_internal_mutable_unloctoken() {
  _has_bits_[0] |= 0x00000001u;
  return unloctoken_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CParental_ValidateToken_Request::release_unloctoken() {
  // @@protoc_insertion_point(field_release:CParental_ValidateToken_Request.unloctoken)
  if (!_internal_has_unloctoken()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return unloctoken_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CParental_ValidateToken_Request::set_allocated_unloctoken(std::string* unloctoken) {
  if (unloctoken != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  unloctoken_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), unloctoken,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CParental_ValidateToken_Request.unloctoken)
}

// -------------------------------------------------------------------

// CParental_ValidateToken_Response

// -------------------------------------------------------------------

// CParental_ValidatePassword_Request

// optional string password = 1;
inline bool CParental_ValidatePassword_Request::_internal_has_password() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_ValidatePassword_Request::has_password() const {
  return _internal_has_password();
}
inline void CParental_ValidatePassword_Request::clear_password() {
  password_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CParental_ValidatePassword_Request::password() const {
  // @@protoc_insertion_point(field_get:CParental_ValidatePassword_Request.password)
  return _internal_password();
}
inline void CParental_ValidatePassword_Request::set_password(const std::string& value) {
  _internal_set_password(value);
  // @@protoc_insertion_point(field_set:CParental_ValidatePassword_Request.password)
}
inline std::string* CParental_ValidatePassword_Request::mutable_password() {
  // @@protoc_insertion_point(field_mutable:CParental_ValidatePassword_Request.password)
  return _internal_mutable_password();
}
inline const std::string& CParental_ValidatePassword_Request::_internal_password() const {
  return password_.Get();
}
inline void CParental_ValidatePassword_Request::_internal_set_password(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CParental_ValidatePassword_Request::set_password(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  password_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CParental_ValidatePassword_Request.password)
}
inline void CParental_ValidatePassword_Request::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CParental_ValidatePassword_Request.password)
}
inline void CParental_ValidatePassword_Request::set_password(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CParental_ValidatePassword_Request.password)
}
inline std::string* CParental_ValidatePassword_Request::_internal_mutable_password() {
  _has_bits_[0] |= 0x00000001u;
  return password_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CParental_ValidatePassword_Request::release_password() {
  // @@protoc_insertion_point(field_release:CParental_ValidatePassword_Request.password)
  if (!_internal_has_password()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return password_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CParental_ValidatePassword_Request::set_allocated_password(std::string* password) {
  if (password != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  password_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), password,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CParental_ValidatePassword_Request.password)
}

// optional string session = 2;
inline bool CParental_ValidatePassword_Request::_internal_has_session() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CParental_ValidatePassword_Request::has_session() const {
  return _internal_has_session();
}
inline void CParental_ValidatePassword_Request::clear_session() {
  session_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CParental_ValidatePassword_Request::session() const {
  // @@protoc_insertion_point(field_get:CParental_ValidatePassword_Request.session)
  return _internal_session();
}
inline void CParental_ValidatePassword_Request::set_session(const std::string& value) {
  _internal_set_session(value);
  // @@protoc_insertion_point(field_set:CParental_ValidatePassword_Request.session)
}
inline std::string* CParental_ValidatePassword_Request::mutable_session() {
  // @@protoc_insertion_point(field_mutable:CParental_ValidatePassword_Request.session)
  return _internal_mutable_session();
}
inline const std::string& CParental_ValidatePassword_Request::_internal_session() const {
  return session_.Get();
}
inline void CParental_ValidatePassword_Request::_internal_set_session(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  session_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CParental_ValidatePassword_Request::set_session(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  session_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CParental_ValidatePassword_Request.session)
}
inline void CParental_ValidatePassword_Request::set_session(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  session_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CParental_ValidatePassword_Request.session)
}
inline void CParental_ValidatePassword_Request::set_session(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  session_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CParental_ValidatePassword_Request.session)
}
inline std::string* CParental_ValidatePassword_Request::_internal_mutable_session() {
  _has_bits_[0] |= 0x00000002u;
  return session_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CParental_ValidatePassword_Request::release_session() {
  // @@protoc_insertion_point(field_release:CParental_ValidatePassword_Request.session)
  if (!_internal_has_session()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return session_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CParental_ValidatePassword_Request::set_allocated_session(std::string* session) {
  if (session != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  session_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), session,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CParental_ValidatePassword_Request.session)
}

// optional bool send_unlocon_success = 3;
inline bool CParental_ValidatePassword_Request::_internal_has_send_unlocon_success() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CParental_ValidatePassword_Request::has_send_unlocon_success() const {
  return _internal_has_send_unlocon_success();
}
inline void CParental_ValidatePassword_Request::clear_send_unlocon_success() {
  send_unlocon_success_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CParental_ValidatePassword_Request::_internal_send_unlocon_success() const {
  return send_unlocon_success_;
}
inline bool CParental_ValidatePassword_Request::send_unlocon_success() const {
  // @@protoc_insertion_point(field_get:CParental_ValidatePassword_Request.send_unlocon_success)
  return _internal_send_unlocon_success();
}
inline void CParental_ValidatePassword_Request::_internal_set_send_unlocon_success(bool value) {
  _has_bits_[0] |= 0x00000004u;
  send_unlocon_success_ = value;
}
inline void CParental_ValidatePassword_Request::set_send_unlocon_success(bool value) {
  _internal_set_send_unlocon_success(value);
  // @@protoc_insertion_point(field_set:CParental_ValidatePassword_Request.send_unlocon_success)
}

// -------------------------------------------------------------------

// CParental_ValidatePassword_Response

// optional string token = 1;
inline bool CParental_ValidatePassword_Response::_internal_has_token() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_ValidatePassword_Response::has_token() const {
  return _internal_has_token();
}
inline void CParental_ValidatePassword_Response::clear_token() {
  token_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CParental_ValidatePassword_Response::token() const {
  // @@protoc_insertion_point(field_get:CParental_ValidatePassword_Response.token)
  return _internal_token();
}
inline void CParental_ValidatePassword_Response::set_token(const std::string& value) {
  _internal_set_token(value);
  // @@protoc_insertion_point(field_set:CParental_ValidatePassword_Response.token)
}
inline std::string* CParental_ValidatePassword_Response::mutable_token() {
  // @@protoc_insertion_point(field_mutable:CParental_ValidatePassword_Response.token)
  return _internal_mutable_token();
}
inline const std::string& CParental_ValidatePassword_Response::_internal_token() const {
  return token_.Get();
}
inline void CParental_ValidatePassword_Response::_internal_set_token(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CParental_ValidatePassword_Response::set_token(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  token_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CParental_ValidatePassword_Response.token)
}
inline void CParental_ValidatePassword_Response::set_token(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CParental_ValidatePassword_Response.token)
}
inline void CParental_ValidatePassword_Response::set_token(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CParental_ValidatePassword_Response.token)
}
inline std::string* CParental_ValidatePassword_Response::_internal_mutable_token() {
  _has_bits_[0] |= 0x00000001u;
  return token_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CParental_ValidatePassword_Response::release_token() {
  // @@protoc_insertion_point(field_release:CParental_ValidatePassword_Response.token)
  if (!_internal_has_token()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return token_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CParental_ValidatePassword_Response::set_allocated_token(std::string* token) {
  if (token != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  token_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), token,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CParental_ValidatePassword_Response.token)
}

// -------------------------------------------------------------------

// CParental_LockClient_Request

// optional string session = 1;
inline bool CParental_LockClient_Request::_internal_has_session() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_LockClient_Request::has_session() const {
  return _internal_has_session();
}
inline void CParental_LockClient_Request::clear_session() {
  session_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CParental_LockClient_Request::session() const {
  // @@protoc_insertion_point(field_get:CParental_LockClient_Request.session)
  return _internal_session();
}
inline void CParental_LockClient_Request::set_session(const std::string& value) {
  _internal_set_session(value);
  // @@protoc_insertion_point(field_set:CParental_LockClient_Request.session)
}
inline std::string* CParental_LockClient_Request::mutable_session() {
  // @@protoc_insertion_point(field_mutable:CParental_LockClient_Request.session)
  return _internal_mutable_session();
}
inline const std::string& CParental_LockClient_Request::_internal_session() const {
  return session_.Get();
}
inline void CParental_LockClient_Request::_internal_set_session(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  session_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CParental_LockClient_Request::set_session(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  session_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CParental_LockClient_Request.session)
}
inline void CParental_LockClient_Request::set_session(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  session_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CParental_LockClient_Request.session)
}
inline void CParental_LockClient_Request::set_session(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  session_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CParental_LockClient_Request.session)
}
inline std::string* CParental_LockClient_Request::_internal_mutable_session() {
  _has_bits_[0] |= 0x00000001u;
  return session_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CParental_LockClient_Request::release_session() {
  // @@protoc_insertion_point(field_release:CParental_LockClient_Request.session)
  if (!_internal_has_session()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return session_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CParental_LockClient_Request::set_allocated_session(std::string* session) {
  if (session != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  session_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), session,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CParental_LockClient_Request.session)
}

// -------------------------------------------------------------------

// CParental_LockClient_Response

// -------------------------------------------------------------------

// CParental_RequestRecoveryCode_Request

// -------------------------------------------------------------------

// CParental_RequestRecoveryCode_Response

// -------------------------------------------------------------------

// CParental_DisableWithRecoveryCode_Request

// optional uint32 recovery_code = 1;
inline bool CParental_DisableWithRecoveryCode_Request::_internal_has_recovery_code() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_DisableWithRecoveryCode_Request::has_recovery_code() const {
  return _internal_has_recovery_code();
}
inline void CParental_DisableWithRecoveryCode_Request::clear_recovery_code() {
  recovery_code_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_DisableWithRecoveryCode_Request::_internal_recovery_code() const {
  return recovery_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_DisableWithRecoveryCode_Request::recovery_code() const {
  // @@protoc_insertion_point(field_get:CParental_DisableWithRecoveryCode_Request.recovery_code)
  return _internal_recovery_code();
}
inline void CParental_DisableWithRecoveryCode_Request::_internal_set_recovery_code(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  recovery_code_ = value;
}
inline void CParental_DisableWithRecoveryCode_Request::set_recovery_code(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_recovery_code(value);
  // @@protoc_insertion_point(field_set:CParental_DisableWithRecoveryCode_Request.recovery_code)
}

// optional fixed64 steamid = 10;
inline bool CParental_DisableWithRecoveryCode_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CParental_DisableWithRecoveryCode_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CParental_DisableWithRecoveryCode_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_DisableWithRecoveryCode_Request::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_DisableWithRecoveryCode_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CParental_DisableWithRecoveryCode_Request.steamid)
  return _internal_steamid();
}
inline void CParental_DisableWithRecoveryCode_Request::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
}
inline void CParental_DisableWithRecoveryCode_Request::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CParental_DisableWithRecoveryCode_Request.steamid)
}

// -------------------------------------------------------------------

// CParental_DisableWithRecoveryCode_Response

// -------------------------------------------------------------------

// CParental_RequestFeatureAccess_Request

// optional uint32 features = 1;
inline bool CParental_RequestFeatureAccess_Request::_internal_has_features() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_RequestFeatureAccess_Request::has_features() const {
  return _internal_has_features();
}
inline void CParental_RequestFeatureAccess_Request::clear_features() {
  features_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_RequestFeatureAccess_Request::_internal_features() const {
  return features_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_RequestFeatureAccess_Request::features() const {
  // @@protoc_insertion_point(field_get:CParental_RequestFeatureAccess_Request.features)
  return _internal_features();
}
inline void CParental_RequestFeatureAccess_Request::_internal_set_features(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  features_ = value;
}
inline void CParental_RequestFeatureAccess_Request::set_features(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_features(value);
  // @@protoc_insertion_point(field_set:CParental_RequestFeatureAccess_Request.features)
}

// optional fixed64 steamid = 10;
inline bool CParental_RequestFeatureAccess_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CParental_RequestFeatureAccess_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CParental_RequestFeatureAccess_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_RequestFeatureAccess_Request::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_RequestFeatureAccess_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CParental_RequestFeatureAccess_Request.steamid)
  return _internal_steamid();
}
inline void CParental_RequestFeatureAccess_Request::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
}
inline void CParental_RequestFeatureAccess_Request::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CParental_RequestFeatureAccess_Request.steamid)
}

// -------------------------------------------------------------------

// CParental_RequestFeatureAccess_Response

// optional fixed64 requestid = 1;
inline bool CParental_RequestFeatureAccess_Response::_internal_has_requestid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_RequestFeatureAccess_Response::has_requestid() const {
  return _internal_has_requestid();
}
inline void CParental_RequestFeatureAccess_Response::clear_requestid() {
  requestid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_RequestFeatureAccess_Response::_internal_requestid() const {
  return requestid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_RequestFeatureAccess_Response::requestid() const {
  // @@protoc_insertion_point(field_get:CParental_RequestFeatureAccess_Response.requestid)
  return _internal_requestid();
}
inline void CParental_RequestFeatureAccess_Response::_internal_set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  requestid_ = value;
}
inline void CParental_RequestFeatureAccess_Response::set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_requestid(value);
  // @@protoc_insertion_point(field_set:CParental_RequestFeatureAccess_Response.requestid)
}

// -------------------------------------------------------------------

// CParental_ApproveFeatureAccess_Request

// optional bool approve = 1;
inline bool CParental_ApproveFeatureAccess_Request::_internal_has_approve() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CParental_ApproveFeatureAccess_Request::has_approve() const {
  return _internal_has_approve();
}
inline void CParental_ApproveFeatureAccess_Request::clear_approve() {
  approve_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CParental_ApproveFeatureAccess_Request::_internal_approve() const {
  return approve_;
}
inline bool CParental_ApproveFeatureAccess_Request::approve() const {
  // @@protoc_insertion_point(field_get:CParental_ApproveFeatureAccess_Request.approve)
  return _internal_approve();
}
inline void CParental_ApproveFeatureAccess_Request::_internal_set_approve(bool value) {
  _has_bits_[0] |= 0x00000002u;
  approve_ = value;
}
inline void CParental_ApproveFeatureAccess_Request::set_approve(bool value) {
  _internal_set_approve(value);
  // @@protoc_insertion_point(field_set:CParental_ApproveFeatureAccess_Request.approve)
}

// optional fixed64 requestid = 2;
inline bool CParental_ApproveFeatureAccess_Request::_internal_has_requestid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_ApproveFeatureAccess_Request::has_requestid() const {
  return _internal_has_requestid();
}
inline void CParental_ApproveFeatureAccess_Request::clear_requestid() {
  requestid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_ApproveFeatureAccess_Request::_internal_requestid() const {
  return requestid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_ApproveFeatureAccess_Request::requestid() const {
  // @@protoc_insertion_point(field_get:CParental_ApproveFeatureAccess_Request.requestid)
  return _internal_requestid();
}
inline void CParental_ApproveFeatureAccess_Request::_internal_set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  requestid_ = value;
}
inline void CParental_ApproveFeatureAccess_Request::set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_requestid(value);
  // @@protoc_insertion_point(field_set:CParental_ApproveFeatureAccess_Request.requestid)
}

// optional uint32 features = 3;
inline bool CParental_ApproveFeatureAccess_Request::_internal_has_features() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CParental_ApproveFeatureAccess_Request::has_features() const {
  return _internal_has_features();
}
inline void CParental_ApproveFeatureAccess_Request::clear_features() {
  features_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_ApproveFeatureAccess_Request::_internal_features() const {
  return features_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_ApproveFeatureAccess_Request::features() const {
  // @@protoc_insertion_point(field_get:CParental_ApproveFeatureAccess_Request.features)
  return _internal_features();
}
inline void CParental_ApproveFeatureAccess_Request::_internal_set_features(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  features_ = value;
}
inline void CParental_ApproveFeatureAccess_Request::set_features(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_features(value);
  // @@protoc_insertion_point(field_set:CParental_ApproveFeatureAccess_Request.features)
}

// optional uint32 duration = 4;
inline bool CParental_ApproveFeatureAccess_Request::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CParental_ApproveFeatureAccess_Request::has_duration() const {
  return _internal_has_duration();
}
inline void CParental_ApproveFeatureAccess_Request::clear_duration() {
  duration_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_ApproveFeatureAccess_Request::_internal_duration() const {
  return duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_ApproveFeatureAccess_Request::duration() const {
  // @@protoc_insertion_point(field_get:CParental_ApproveFeatureAccess_Request.duration)
  return _internal_duration();
}
inline void CParental_ApproveFeatureAccess_Request::_internal_set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  duration_ = value;
}
inline void CParental_ApproveFeatureAccess_Request::set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CParental_ApproveFeatureAccess_Request.duration)
}

// optional fixed64 steamid = 10;
inline bool CParental_ApproveFeatureAccess_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CParental_ApproveFeatureAccess_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CParental_ApproveFeatureAccess_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_ApproveFeatureAccess_Request::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_ApproveFeatureAccess_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CParental_ApproveFeatureAccess_Request.steamid)
  return _internal_steamid();
}
inline void CParental_ApproveFeatureAccess_Request::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  steamid_ = value;
}
inline void CParental_ApproveFeatureAccess_Request::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CParental_ApproveFeatureAccess_Request.steamid)
}

// -------------------------------------------------------------------

// CParental_ApproveFeatureAccess_Response

// -------------------------------------------------------------------

// CParental_RequestPlaytime_Request

// optional uint32 time_expires = 1;
inline bool CParental_RequestPlaytime_Request::_internal_has_time_expires() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CParental_RequestPlaytime_Request::has_time_expires() const {
  return _internal_has_time_expires();
}
inline void CParental_RequestPlaytime_Request::clear_time_expires() {
  time_expires_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_RequestPlaytime_Request::_internal_time_expires() const {
  return time_expires_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_RequestPlaytime_Request::time_expires() const {
  // @@protoc_insertion_point(field_get:CParental_RequestPlaytime_Request.time_expires)
  return _internal_time_expires();
}
inline void CParental_RequestPlaytime_Request::_internal_set_time_expires(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  time_expires_ = value;
}
inline void CParental_RequestPlaytime_Request::set_time_expires(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_time_expires(value);
  // @@protoc_insertion_point(field_set:CParental_RequestPlaytime_Request.time_expires)
}

// optional .ParentalPlaytimeDay current_playtime_restrictions = 2;
inline bool CParental_RequestPlaytime_Request::_internal_has_current_playtime_restrictions() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || current_playtime_restrictions_ != nullptr);
  return value;
}
inline bool CParental_RequestPlaytime_Request::has_current_playtime_restrictions() const {
  return _internal_has_current_playtime_restrictions();
}
inline void CParental_RequestPlaytime_Request::clear_current_playtime_restrictions() {
  if (current_playtime_restrictions_ != nullptr) current_playtime_restrictions_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::ParentalPlaytimeDay& CParental_RequestPlaytime_Request::_internal_current_playtime_restrictions() const {
  const ::ParentalPlaytimeDay* p = current_playtime_restrictions_;
  return p != nullptr ? *p : reinterpret_cast<const ::ParentalPlaytimeDay&>(
      ::_ParentalPlaytimeDay_default_instance_);
}
inline const ::ParentalPlaytimeDay& CParental_RequestPlaytime_Request::current_playtime_restrictions() const {
  // @@protoc_insertion_point(field_get:CParental_RequestPlaytime_Request.current_playtime_restrictions)
  return _internal_current_playtime_restrictions();
}
inline void CParental_RequestPlaytime_Request::unsafe_arena_set_allocated_current_playtime_restrictions(
    ::ParentalPlaytimeDay* current_playtime_restrictions) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(current_playtime_restrictions_);
  }
  current_playtime_restrictions_ = current_playtime_restrictions;
  if (current_playtime_restrictions) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CParental_RequestPlaytime_Request.current_playtime_restrictions)
}
inline ::ParentalPlaytimeDay* CParental_RequestPlaytime_Request::release_current_playtime_restrictions() {
  _has_bits_[0] &= ~0x00000001u;
  ::ParentalPlaytimeDay* temp = current_playtime_restrictions_;
  current_playtime_restrictions_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::ParentalPlaytimeDay* CParental_RequestPlaytime_Request::unsafe_arena_release_current_playtime_restrictions() {
  // @@protoc_insertion_point(field_release:CParental_RequestPlaytime_Request.current_playtime_restrictions)
  _has_bits_[0] &= ~0x00000001u;
  ::ParentalPlaytimeDay* temp = current_playtime_restrictions_;
  current_playtime_restrictions_ = nullptr;
  return temp;
}
inline ::ParentalPlaytimeDay* CParental_RequestPlaytime_Request::_internal_mutable_current_playtime_restrictions() {
  _has_bits_[0] |= 0x00000001u;
  if (current_playtime_restrictions_ == nullptr) {
    auto* p = CreateMaybeMessage<::ParentalPlaytimeDay>(GetArena());
    current_playtime_restrictions_ = p;
  }
  return current_playtime_restrictions_;
}
inline ::ParentalPlaytimeDay* CParental_RequestPlaytime_Request::mutable_current_playtime_restrictions() {
  // @@protoc_insertion_point(field_mutable:CParental_RequestPlaytime_Request.current_playtime_restrictions)
  return _internal_mutable_current_playtime_restrictions();
}
inline void CParental_RequestPlaytime_Request::set_allocated_current_playtime_restrictions(::ParentalPlaytimeDay* current_playtime_restrictions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete current_playtime_restrictions_;
  }
  if (current_playtime_restrictions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(current_playtime_restrictions);
    if (message_arena != submessage_arena) {
      current_playtime_restrictions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, current_playtime_restrictions, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  current_playtime_restrictions_ = current_playtime_restrictions;
  // @@protoc_insertion_point(field_set_allocated:CParental_RequestPlaytime_Request.current_playtime_restrictions)
}

// optional fixed64 steamid = 10;
inline bool CParental_RequestPlaytime_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CParental_RequestPlaytime_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CParental_RequestPlaytime_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_RequestPlaytime_Request::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_RequestPlaytime_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CParental_RequestPlaytime_Request.steamid)
  return _internal_steamid();
}
inline void CParental_RequestPlaytime_Request::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  steamid_ = value;
}
inline void CParental_RequestPlaytime_Request::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CParental_RequestPlaytime_Request.steamid)
}

// -------------------------------------------------------------------

// CParental_RequestPlaytime_Response

// optional fixed64 requestid = 1;
inline bool CParental_RequestPlaytime_Response::_internal_has_requestid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_RequestPlaytime_Response::has_requestid() const {
  return _internal_has_requestid();
}
inline void CParental_RequestPlaytime_Response::clear_requestid() {
  requestid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_RequestPlaytime_Response::_internal_requestid() const {
  return requestid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_RequestPlaytime_Response::requestid() const {
  // @@protoc_insertion_point(field_get:CParental_RequestPlaytime_Response.requestid)
  return _internal_requestid();
}
inline void CParental_RequestPlaytime_Response::_internal_set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  requestid_ = value;
}
inline void CParental_RequestPlaytime_Response::set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_requestid(value);
  // @@protoc_insertion_point(field_set:CParental_RequestPlaytime_Response.requestid)
}

// -------------------------------------------------------------------

// CParental_ApprovePlaytime_Request

// optional bool approve = 1;
inline bool CParental_ApprovePlaytime_Request::_internal_has_approve() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CParental_ApprovePlaytime_Request::has_approve() const {
  return _internal_has_approve();
}
inline void CParental_ApprovePlaytime_Request::clear_approve() {
  approve_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CParental_ApprovePlaytime_Request::_internal_approve() const {
  return approve_;
}
inline bool CParental_ApprovePlaytime_Request::approve() const {
  // @@protoc_insertion_point(field_get:CParental_ApprovePlaytime_Request.approve)
  return _internal_approve();
}
inline void CParental_ApprovePlaytime_Request::_internal_set_approve(bool value) {
  _has_bits_[0] |= 0x00000004u;
  approve_ = value;
}
inline void CParental_ApprovePlaytime_Request::set_approve(bool value) {
  _internal_set_approve(value);
  // @@protoc_insertion_point(field_set:CParental_ApprovePlaytime_Request.approve)
}

// optional fixed64 requestid = 2;
inline bool CParental_ApprovePlaytime_Request::_internal_has_requestid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CParental_ApprovePlaytime_Request::has_requestid() const {
  return _internal_has_requestid();
}
inline void CParental_ApprovePlaytime_Request::clear_requestid() {
  requestid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_ApprovePlaytime_Request::_internal_requestid() const {
  return requestid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_ApprovePlaytime_Request::requestid() const {
  // @@protoc_insertion_point(field_get:CParental_ApprovePlaytime_Request.requestid)
  return _internal_requestid();
}
inline void CParental_ApprovePlaytime_Request::_internal_set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  requestid_ = value;
}
inline void CParental_ApprovePlaytime_Request::set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_requestid(value);
  // @@protoc_insertion_point(field_set:CParental_ApprovePlaytime_Request.requestid)
}

// optional .ParentalTemporaryPlaytimeRestrictions restrictions_approved = 3;
inline bool CParental_ApprovePlaytime_Request::_internal_has_restrictions_approved() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || restrictions_approved_ != nullptr);
  return value;
}
inline bool CParental_ApprovePlaytime_Request::has_restrictions_approved() const {
  return _internal_has_restrictions_approved();
}
inline void CParental_ApprovePlaytime_Request::clear_restrictions_approved() {
  if (restrictions_approved_ != nullptr) restrictions_approved_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::ParentalTemporaryPlaytimeRestrictions& CParental_ApprovePlaytime_Request::_internal_restrictions_approved() const {
  const ::ParentalTemporaryPlaytimeRestrictions* p = restrictions_approved_;
  return p != nullptr ? *p : reinterpret_cast<const ::ParentalTemporaryPlaytimeRestrictions&>(
      ::_ParentalTemporaryPlaytimeRestrictions_default_instance_);
}
inline const ::ParentalTemporaryPlaytimeRestrictions& CParental_ApprovePlaytime_Request::restrictions_approved() const {
  // @@protoc_insertion_point(field_get:CParental_ApprovePlaytime_Request.restrictions_approved)
  return _internal_restrictions_approved();
}
inline void CParental_ApprovePlaytime_Request::unsafe_arena_set_allocated_restrictions_approved(
    ::ParentalTemporaryPlaytimeRestrictions* restrictions_approved) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(restrictions_approved_);
  }
  restrictions_approved_ = restrictions_approved;
  if (restrictions_approved) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CParental_ApprovePlaytime_Request.restrictions_approved)
}
inline ::ParentalTemporaryPlaytimeRestrictions* CParental_ApprovePlaytime_Request::release_restrictions_approved() {
  _has_bits_[0] &= ~0x00000001u;
  ::ParentalTemporaryPlaytimeRestrictions* temp = restrictions_approved_;
  restrictions_approved_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::ParentalTemporaryPlaytimeRestrictions* CParental_ApprovePlaytime_Request::unsafe_arena_release_restrictions_approved() {
  // @@protoc_insertion_point(field_release:CParental_ApprovePlaytime_Request.restrictions_approved)
  _has_bits_[0] &= ~0x00000001u;
  ::ParentalTemporaryPlaytimeRestrictions* temp = restrictions_approved_;
  restrictions_approved_ = nullptr;
  return temp;
}
inline ::ParentalTemporaryPlaytimeRestrictions* CParental_ApprovePlaytime_Request::_internal_mutable_restrictions_approved() {
  _has_bits_[0] |= 0x00000001u;
  if (restrictions_approved_ == nullptr) {
    auto* p = CreateMaybeMessage<::ParentalTemporaryPlaytimeRestrictions>(GetArena());
    restrictions_approved_ = p;
  }
  return restrictions_approved_;
}
inline ::ParentalTemporaryPlaytimeRestrictions* CParental_ApprovePlaytime_Request::mutable_restrictions_approved() {
  // @@protoc_insertion_point(field_mutable:CParental_ApprovePlaytime_Request.restrictions_approved)
  return _internal_mutable_restrictions_approved();
}
inline void CParental_ApprovePlaytime_Request::set_allocated_restrictions_approved(::ParentalTemporaryPlaytimeRestrictions* restrictions_approved) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete restrictions_approved_;
  }
  if (restrictions_approved) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(restrictions_approved);
    if (message_arena != submessage_arena) {
      restrictions_approved = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, restrictions_approved, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  restrictions_approved_ = restrictions_approved;
  // @@protoc_insertion_point(field_set_allocated:CParental_ApprovePlaytime_Request.restrictions_approved)
}

// optional fixed64 steamid = 10;
inline bool CParental_ApprovePlaytime_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CParental_ApprovePlaytime_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CParental_ApprovePlaytime_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_ApprovePlaytime_Request::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_ApprovePlaytime_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CParental_ApprovePlaytime_Request.steamid)
  return _internal_steamid();
}
inline void CParental_ApprovePlaytime_Request::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  steamid_ = value;
}
inline void CParental_ApprovePlaytime_Request::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CParental_ApprovePlaytime_Request.steamid)
}

// -------------------------------------------------------------------

// CParental_ApprovePlaytime_Response

// -------------------------------------------------------------------

// CParental_GetRequests_Request

// optional uint32 rt_include_completed_since = 1;
inline bool CParental_GetRequests_Request::_internal_has_rt_include_completed_since() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_GetRequests_Request::has_rt_include_completed_since() const {
  return _internal_has_rt_include_completed_since();
}
inline void CParental_GetRequests_Request::clear_rt_include_completed_since() {
  rt_include_completed_since_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_GetRequests_Request::_internal_rt_include_completed_since() const {
  return rt_include_completed_since_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_GetRequests_Request::rt_include_completed_since() const {
  // @@protoc_insertion_point(field_get:CParental_GetRequests_Request.rt_include_completed_since)
  return _internal_rt_include_completed_since();
}
inline void CParental_GetRequests_Request::_internal_set_rt_include_completed_since(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  rt_include_completed_since_ = value;
}
inline void CParental_GetRequests_Request::set_rt_include_completed_since(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rt_include_completed_since(value);
  // @@protoc_insertion_point(field_set:CParental_GetRequests_Request.rt_include_completed_since)
}

// optional fixed64 steamid = 10;
inline bool CParental_GetRequests_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CParental_GetRequests_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CParental_GetRequests_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_GetRequests_Request::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_GetRequests_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CParental_GetRequests_Request.steamid)
  return _internal_steamid();
}
inline void CParental_GetRequests_Request::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
}
inline void CParental_GetRequests_Request::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CParental_GetRequests_Request.steamid)
}

// -------------------------------------------------------------------

// ParentalFeatureRequest

// optional fixed64 requestid = 1;
inline bool ParentalFeatureRequest::_internal_has_requestid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ParentalFeatureRequest::has_requestid() const {
  return _internal_has_requestid();
}
inline void ParentalFeatureRequest::clear_requestid() {
  requestid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ParentalFeatureRequest::_internal_requestid() const {
  return requestid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ParentalFeatureRequest::requestid() const {
  // @@protoc_insertion_point(field_get:ParentalFeatureRequest.requestid)
  return _internal_requestid();
}
inline void ParentalFeatureRequest::_internal_set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  requestid_ = value;
}
inline void ParentalFeatureRequest::set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_requestid(value);
  // @@protoc_insertion_point(field_set:ParentalFeatureRequest.requestid)
}

// optional fixed64 family_groupid = 2;
inline bool ParentalFeatureRequest::_internal_has_family_groupid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ParentalFeatureRequest::has_family_groupid() const {
  return _internal_has_family_groupid();
}
inline void ParentalFeatureRequest::clear_family_groupid() {
  family_groupid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ParentalFeatureRequest::_internal_family_groupid() const {
  return family_groupid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ParentalFeatureRequest::family_groupid() const {
  // @@protoc_insertion_point(field_get:ParentalFeatureRequest.family_groupid)
  return _internal_family_groupid();
}
inline void ParentalFeatureRequest::_internal_set_family_groupid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  family_groupid_ = value;
}
inline void ParentalFeatureRequest::set_family_groupid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_family_groupid(value);
  // @@protoc_insertion_point(field_set:ParentalFeatureRequest.family_groupid)
}

// optional fixed64 steamid = 3;
inline bool ParentalFeatureRequest::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ParentalFeatureRequest::has_steamid() const {
  return _internal_has_steamid();
}
inline void ParentalFeatureRequest::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ParentalFeatureRequest::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ParentalFeatureRequest::steamid() const {
  // @@protoc_insertion_point(field_get:ParentalFeatureRequest.steamid)
  return _internal_steamid();
}
inline void ParentalFeatureRequest::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  steamid_ = value;
}
inline void ParentalFeatureRequest::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:ParentalFeatureRequest.steamid)
}

// optional uint32 features = 4;
inline bool ParentalFeatureRequest::_internal_has_features() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ParentalFeatureRequest::has_features() const {
  return _internal_has_features();
}
inline void ParentalFeatureRequest::clear_features() {
  features_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalFeatureRequest::_internal_features() const {
  return features_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalFeatureRequest::features() const {
  // @@protoc_insertion_point(field_get:ParentalFeatureRequest.features)
  return _internal_features();
}
inline void ParentalFeatureRequest::_internal_set_features(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  features_ = value;
}
inline void ParentalFeatureRequest::set_features(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_features(value);
  // @@protoc_insertion_point(field_set:ParentalFeatureRequest.features)
}

// optional uint32 time_requested = 5;
inline bool ParentalFeatureRequest::_internal_has_time_requested() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ParentalFeatureRequest::has_time_requested() const {
  return _internal_has_time_requested();
}
inline void ParentalFeatureRequest::clear_time_requested() {
  time_requested_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalFeatureRequest::_internal_time_requested() const {
  return time_requested_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalFeatureRequest::time_requested() const {
  // @@protoc_insertion_point(field_get:ParentalFeatureRequest.time_requested)
  return _internal_time_requested();
}
inline void ParentalFeatureRequest::_internal_set_time_requested(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  time_requested_ = value;
}
inline void ParentalFeatureRequest::set_time_requested(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_time_requested(value);
  // @@protoc_insertion_point(field_set:ParentalFeatureRequest.time_requested)
}

// optional bool approved = 6;
inline bool ParentalFeatureRequest::_internal_has_approved() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool ParentalFeatureRequest::has_approved() const {
  return _internal_has_approved();
}
inline void ParentalFeatureRequest::clear_approved() {
  approved_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool ParentalFeatureRequest::_internal_approved() const {
  return approved_;
}
inline bool ParentalFeatureRequest::approved() const {
  // @@protoc_insertion_point(field_get:ParentalFeatureRequest.approved)
  return _internal_approved();
}
inline void ParentalFeatureRequest::_internal_set_approved(bool value) {
  _has_bits_[0] |= 0x00000040u;
  approved_ = value;
}
inline void ParentalFeatureRequest::set_approved(bool value) {
  _internal_set_approved(value);
  // @@protoc_insertion_point(field_set:ParentalFeatureRequest.approved)
}

// optional fixed64 steamid_responder = 7;
inline bool ParentalFeatureRequest::_internal_has_steamid_responder() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool ParentalFeatureRequest::has_steamid_responder() const {
  return _internal_has_steamid_responder();
}
inline void ParentalFeatureRequest::clear_steamid_responder() {
  steamid_responder_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ParentalFeatureRequest::_internal_steamid_responder() const {
  return steamid_responder_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ParentalFeatureRequest::steamid_responder() const {
  // @@protoc_insertion_point(field_get:ParentalFeatureRequest.steamid_responder)
  return _internal_steamid_responder();
}
inline void ParentalFeatureRequest::_internal_set_steamid_responder(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000020u;
  steamid_responder_ = value;
}
inline void ParentalFeatureRequest::set_steamid_responder(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid_responder(value);
  // @@protoc_insertion_point(field_set:ParentalFeatureRequest.steamid_responder)
}

// optional uint32 time_responded = 8;
inline bool ParentalFeatureRequest::_internal_has_time_responded() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool ParentalFeatureRequest::has_time_responded() const {
  return _internal_has_time_responded();
}
inline void ParentalFeatureRequest::clear_time_responded() {
  time_responded_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalFeatureRequest::_internal_time_responded() const {
  return time_responded_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalFeatureRequest::time_responded() const {
  // @@protoc_insertion_point(field_get:ParentalFeatureRequest.time_responded)
  return _internal_time_responded();
}
inline void ParentalFeatureRequest::_internal_set_time_responded(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  time_responded_ = value;
}
inline void ParentalFeatureRequest::set_time_responded(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_time_responded(value);
  // @@protoc_insertion_point(field_set:ParentalFeatureRequest.time_responded)
}

// -------------------------------------------------------------------

// ParentalPlaytimeRequest

// optional fixed64 requestid = 1;
inline bool ParentalPlaytimeRequest::_internal_has_requestid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ParentalPlaytimeRequest::has_requestid() const {
  return _internal_has_requestid();
}
inline void ParentalPlaytimeRequest::clear_requestid() {
  requestid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ParentalPlaytimeRequest::_internal_requestid() const {
  return requestid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ParentalPlaytimeRequest::requestid() const {
  // @@protoc_insertion_point(field_get:ParentalPlaytimeRequest.requestid)
  return _internal_requestid();
}
inline void ParentalPlaytimeRequest::_internal_set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  requestid_ = value;
}
inline void ParentalPlaytimeRequest::set_requestid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_requestid(value);
  // @@protoc_insertion_point(field_set:ParentalPlaytimeRequest.requestid)
}

// optional fixed64 family_groupid = 2;
inline bool ParentalPlaytimeRequest::_internal_has_family_groupid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ParentalPlaytimeRequest::has_family_groupid() const {
  return _internal_has_family_groupid();
}
inline void ParentalPlaytimeRequest::clear_family_groupid() {
  family_groupid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ParentalPlaytimeRequest::_internal_family_groupid() const {
  return family_groupid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ParentalPlaytimeRequest::family_groupid() const {
  // @@protoc_insertion_point(field_get:ParentalPlaytimeRequest.family_groupid)
  return _internal_family_groupid();
}
inline void ParentalPlaytimeRequest::_internal_set_family_groupid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  family_groupid_ = value;
}
inline void ParentalPlaytimeRequest::set_family_groupid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_family_groupid(value);
  // @@protoc_insertion_point(field_set:ParentalPlaytimeRequest.family_groupid)
}

// optional fixed64 steamid = 3;
inline bool ParentalPlaytimeRequest::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ParentalPlaytimeRequest::has_steamid() const {
  return _internal_has_steamid();
}
inline void ParentalPlaytimeRequest::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ParentalPlaytimeRequest::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ParentalPlaytimeRequest::steamid() const {
  // @@protoc_insertion_point(field_get:ParentalPlaytimeRequest.steamid)
  return _internal_steamid();
}
inline void ParentalPlaytimeRequest::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  steamid_ = value;
}
inline void ParentalPlaytimeRequest::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:ParentalPlaytimeRequest.steamid)
}

// optional .ParentalPlaytimeDay current_playtime_restrictions = 4;
inline bool ParentalPlaytimeRequest::_internal_has_current_playtime_restrictions() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || current_playtime_restrictions_ != nullptr);
  return value;
}
inline bool ParentalPlaytimeRequest::has_current_playtime_restrictions() const {
  return _internal_has_current_playtime_restrictions();
}
inline void ParentalPlaytimeRequest::clear_current_playtime_restrictions() {
  if (current_playtime_restrictions_ != nullptr) current_playtime_restrictions_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::ParentalPlaytimeDay& ParentalPlaytimeRequest::_internal_current_playtime_restrictions() const {
  const ::ParentalPlaytimeDay* p = current_playtime_restrictions_;
  return p != nullptr ? *p : reinterpret_cast<const ::ParentalPlaytimeDay&>(
      ::_ParentalPlaytimeDay_default_instance_);
}
inline const ::ParentalPlaytimeDay& ParentalPlaytimeRequest::current_playtime_restrictions() const {
  // @@protoc_insertion_point(field_get:ParentalPlaytimeRequest.current_playtime_restrictions)
  return _internal_current_playtime_restrictions();
}
inline void ParentalPlaytimeRequest::unsafe_arena_set_allocated_current_playtime_restrictions(
    ::ParentalPlaytimeDay* current_playtime_restrictions) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(current_playtime_restrictions_);
  }
  current_playtime_restrictions_ = current_playtime_restrictions;
  if (current_playtime_restrictions) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ParentalPlaytimeRequest.current_playtime_restrictions)
}
inline ::ParentalPlaytimeDay* ParentalPlaytimeRequest::release_current_playtime_restrictions() {
  _has_bits_[0] &= ~0x00000001u;
  ::ParentalPlaytimeDay* temp = current_playtime_restrictions_;
  current_playtime_restrictions_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::ParentalPlaytimeDay* ParentalPlaytimeRequest::unsafe_arena_release_current_playtime_restrictions() {
  // @@protoc_insertion_point(field_release:ParentalPlaytimeRequest.current_playtime_restrictions)
  _has_bits_[0] &= ~0x00000001u;
  ::ParentalPlaytimeDay* temp = current_playtime_restrictions_;
  current_playtime_restrictions_ = nullptr;
  return temp;
}
inline ::ParentalPlaytimeDay* ParentalPlaytimeRequest::_internal_mutable_current_playtime_restrictions() {
  _has_bits_[0] |= 0x00000001u;
  if (current_playtime_restrictions_ == nullptr) {
    auto* p = CreateMaybeMessage<::ParentalPlaytimeDay>(GetArena());
    current_playtime_restrictions_ = p;
  }
  return current_playtime_restrictions_;
}
inline ::ParentalPlaytimeDay* ParentalPlaytimeRequest::mutable_current_playtime_restrictions() {
  // @@protoc_insertion_point(field_mutable:ParentalPlaytimeRequest.current_playtime_restrictions)
  return _internal_mutable_current_playtime_restrictions();
}
inline void ParentalPlaytimeRequest::set_allocated_current_playtime_restrictions(::ParentalPlaytimeDay* current_playtime_restrictions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete current_playtime_restrictions_;
  }
  if (current_playtime_restrictions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(current_playtime_restrictions);
    if (message_arena != submessage_arena) {
      current_playtime_restrictions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, current_playtime_restrictions, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  current_playtime_restrictions_ = current_playtime_restrictions;
  // @@protoc_insertion_point(field_set_allocated:ParentalPlaytimeRequest.current_playtime_restrictions)
}

// optional uint32 time_expires = 5;
inline bool ParentalPlaytimeRequest::_internal_has_time_expires() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool ParentalPlaytimeRequest::has_time_expires() const {
  return _internal_has_time_expires();
}
inline void ParentalPlaytimeRequest::clear_time_expires() {
  time_expires_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalPlaytimeRequest::_internal_time_expires() const {
  return time_expires_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalPlaytimeRequest::time_expires() const {
  // @@protoc_insertion_point(field_get:ParentalPlaytimeRequest.time_expires)
  return _internal_time_expires();
}
inline void ParentalPlaytimeRequest::_internal_set_time_expires(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  time_expires_ = value;
}
inline void ParentalPlaytimeRequest::set_time_expires(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_time_expires(value);
  // @@protoc_insertion_point(field_set:ParentalPlaytimeRequest.time_expires)
}

// optional uint32 time_requested = 6;
inline bool ParentalPlaytimeRequest::_internal_has_time_requested() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool ParentalPlaytimeRequest::has_time_requested() const {
  return _internal_has_time_requested();
}
inline void ParentalPlaytimeRequest::clear_time_requested() {
  time_requested_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalPlaytimeRequest::_internal_time_requested() const {
  return time_requested_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalPlaytimeRequest::time_requested() const {
  // @@protoc_insertion_point(field_get:ParentalPlaytimeRequest.time_requested)
  return _internal_time_requested();
}
inline void ParentalPlaytimeRequest::_internal_set_time_requested(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  time_requested_ = value;
}
inline void ParentalPlaytimeRequest::set_time_requested(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_time_requested(value);
  // @@protoc_insertion_point(field_set:ParentalPlaytimeRequest.time_requested)
}

// optional bool approved = 7;
inline bool ParentalPlaytimeRequest::_internal_has_approved() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool ParentalPlaytimeRequest::has_approved() const {
  return _internal_has_approved();
}
inline void ParentalPlaytimeRequest::clear_approved() {
  approved_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool ParentalPlaytimeRequest::_internal_approved() const {
  return approved_;
}
inline bool ParentalPlaytimeRequest::approved() const {
  // @@protoc_insertion_point(field_get:ParentalPlaytimeRequest.approved)
  return _internal_approved();
}
inline void ParentalPlaytimeRequest::_internal_set_approved(bool value) {
  _has_bits_[0] |= 0x00000100u;
  approved_ = value;
}
inline void ParentalPlaytimeRequest::set_approved(bool value) {
  _internal_set_approved(value);
  // @@protoc_insertion_point(field_set:ParentalPlaytimeRequest.approved)
}

// optional fixed64 steamid_responder = 8;
inline bool ParentalPlaytimeRequest::_internal_has_steamid_responder() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool ParentalPlaytimeRequest::has_steamid_responder() const {
  return _internal_has_steamid_responder();
}
inline void ParentalPlaytimeRequest::clear_steamid_responder() {
  steamid_responder_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ParentalPlaytimeRequest::_internal_steamid_responder() const {
  return steamid_responder_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ParentalPlaytimeRequest::steamid_responder() const {
  // @@protoc_insertion_point(field_get:ParentalPlaytimeRequest.steamid_responder)
  return _internal_steamid_responder();
}
inline void ParentalPlaytimeRequest::_internal_set_steamid_responder(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000080u;
  steamid_responder_ = value;
}
inline void ParentalPlaytimeRequest::set_steamid_responder(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid_responder(value);
  // @@protoc_insertion_point(field_set:ParentalPlaytimeRequest.steamid_responder)
}

// optional uint32 time_responded = 9;
inline bool ParentalPlaytimeRequest::_internal_has_time_responded() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool ParentalPlaytimeRequest::has_time_responded() const {
  return _internal_has_time_responded();
}
inline void ParentalPlaytimeRequest::clear_time_responded() {
  time_responded_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalPlaytimeRequest::_internal_time_responded() const {
  return time_responded_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ParentalPlaytimeRequest::time_responded() const {
  // @@protoc_insertion_point(field_get:ParentalPlaytimeRequest.time_responded)
  return _internal_time_responded();
}
inline void ParentalPlaytimeRequest::_internal_set_time_responded(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  time_responded_ = value;
}
inline void ParentalPlaytimeRequest::set_time_responded(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_time_responded(value);
  // @@protoc_insertion_point(field_set:ParentalPlaytimeRequest.time_responded)
}

// optional .ParentalTemporaryPlaytimeRestrictions restrictions_approved = 10;
inline bool ParentalPlaytimeRequest::_internal_has_restrictions_approved() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || restrictions_approved_ != nullptr);
  return value;
}
inline bool ParentalPlaytimeRequest::has_restrictions_approved() const {
  return _internal_has_restrictions_approved();
}
inline void ParentalPlaytimeRequest::clear_restrictions_approved() {
  if (restrictions_approved_ != nullptr) restrictions_approved_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::ParentalTemporaryPlaytimeRestrictions& ParentalPlaytimeRequest::_internal_restrictions_approved() const {
  const ::ParentalTemporaryPlaytimeRestrictions* p = restrictions_approved_;
  return p != nullptr ? *p : reinterpret_cast<const ::ParentalTemporaryPlaytimeRestrictions&>(
      ::_ParentalTemporaryPlaytimeRestrictions_default_instance_);
}
inline const ::ParentalTemporaryPlaytimeRestrictions& ParentalPlaytimeRequest::restrictions_approved() const {
  // @@protoc_insertion_point(field_get:ParentalPlaytimeRequest.restrictions_approved)
  return _internal_restrictions_approved();
}
inline void ParentalPlaytimeRequest::unsafe_arena_set_allocated_restrictions_approved(
    ::ParentalTemporaryPlaytimeRestrictions* restrictions_approved) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(restrictions_approved_);
  }
  restrictions_approved_ = restrictions_approved;
  if (restrictions_approved) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ParentalPlaytimeRequest.restrictions_approved)
}
inline ::ParentalTemporaryPlaytimeRestrictions* ParentalPlaytimeRequest::release_restrictions_approved() {
  _has_bits_[0] &= ~0x00000002u;
  ::ParentalTemporaryPlaytimeRestrictions* temp = restrictions_approved_;
  restrictions_approved_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::ParentalTemporaryPlaytimeRestrictions* ParentalPlaytimeRequest::unsafe_arena_release_restrictions_approved() {
  // @@protoc_insertion_point(field_release:ParentalPlaytimeRequest.restrictions_approved)
  _has_bits_[0] &= ~0x00000002u;
  ::ParentalTemporaryPlaytimeRestrictions* temp = restrictions_approved_;
  restrictions_approved_ = nullptr;
  return temp;
}
inline ::ParentalTemporaryPlaytimeRestrictions* ParentalPlaytimeRequest::_internal_mutable_restrictions_approved() {
  _has_bits_[0] |= 0x00000002u;
  if (restrictions_approved_ == nullptr) {
    auto* p = CreateMaybeMessage<::ParentalTemporaryPlaytimeRestrictions>(GetArena());
    restrictions_approved_ = p;
  }
  return restrictions_approved_;
}
inline ::ParentalTemporaryPlaytimeRestrictions* ParentalPlaytimeRequest::mutable_restrictions_approved() {
  // @@protoc_insertion_point(field_mutable:ParentalPlaytimeRequest.restrictions_approved)
  return _internal_mutable_restrictions_approved();
}
inline void ParentalPlaytimeRequest::set_allocated_restrictions_approved(::ParentalTemporaryPlaytimeRestrictions* restrictions_approved) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete restrictions_approved_;
  }
  if (restrictions_approved) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(restrictions_approved);
    if (message_arena != submessage_arena) {
      restrictions_approved = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, restrictions_approved, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  restrictions_approved_ = restrictions_approved;
  // @@protoc_insertion_point(field_set_allocated:ParentalPlaytimeRequest.restrictions_approved)
}

// -------------------------------------------------------------------

// CParental_GetRequests_Response

// repeated .ParentalFeatureRequest feature_requests = 1;
inline int CParental_GetRequests_Response::_internal_feature_requests_size() const {
  return feature_requests_.size();
}
inline int CParental_GetRequests_Response::feature_requests_size() const {
  return _internal_feature_requests_size();
}
inline void CParental_GetRequests_Response::clear_feature_requests() {
  feature_requests_.Clear();
}
inline ::ParentalFeatureRequest* CParental_GetRequests_Response::mutable_feature_requests(int index) {
  // @@protoc_insertion_point(field_mutable:CParental_GetRequests_Response.feature_requests)
  return feature_requests_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalFeatureRequest >*
CParental_GetRequests_Response::mutable_feature_requests() {
  // @@protoc_insertion_point(field_mutable_list:CParental_GetRequests_Response.feature_requests)
  return &feature_requests_;
}
inline const ::ParentalFeatureRequest& CParental_GetRequests_Response::_internal_feature_requests(int index) const {
  return feature_requests_.Get(index);
}
inline const ::ParentalFeatureRequest& CParental_GetRequests_Response::feature_requests(int index) const {
  // @@protoc_insertion_point(field_get:CParental_GetRequests_Response.feature_requests)
  return _internal_feature_requests(index);
}
inline ::ParentalFeatureRequest* CParental_GetRequests_Response::_internal_add_feature_requests() {
  return feature_requests_.Add();
}
inline ::ParentalFeatureRequest* CParental_GetRequests_Response::add_feature_requests() {
  // @@protoc_insertion_point(field_add:CParental_GetRequests_Response.feature_requests)
  return _internal_add_feature_requests();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalFeatureRequest >&
CParental_GetRequests_Response::feature_requests() const {
  // @@protoc_insertion_point(field_list:CParental_GetRequests_Response.feature_requests)
  return feature_requests_;
}

// repeated .ParentalPlaytimeRequest playtime_requests = 2;
inline int CParental_GetRequests_Response::_internal_playtime_requests_size() const {
  return playtime_requests_.size();
}
inline int CParental_GetRequests_Response::playtime_requests_size() const {
  return _internal_playtime_requests_size();
}
inline void CParental_GetRequests_Response::clear_playtime_requests() {
  playtime_requests_.Clear();
}
inline ::ParentalPlaytimeRequest* CParental_GetRequests_Response::mutable_playtime_requests(int index) {
  // @@protoc_insertion_point(field_mutable:CParental_GetRequests_Response.playtime_requests)
  return playtime_requests_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalPlaytimeRequest >*
CParental_GetRequests_Response::mutable_playtime_requests() {
  // @@protoc_insertion_point(field_mutable_list:CParental_GetRequests_Response.playtime_requests)
  return &playtime_requests_;
}
inline const ::ParentalPlaytimeRequest& CParental_GetRequests_Response::_internal_playtime_requests(int index) const {
  return playtime_requests_.Get(index);
}
inline const ::ParentalPlaytimeRequest& CParental_GetRequests_Response::playtime_requests(int index) const {
  // @@protoc_insertion_point(field_get:CParental_GetRequests_Response.playtime_requests)
  return _internal_playtime_requests(index);
}
inline ::ParentalPlaytimeRequest* CParental_GetRequests_Response::_internal_add_playtime_requests() {
  return playtime_requests_.Add();
}
inline ::ParentalPlaytimeRequest* CParental_GetRequests_Response::add_playtime_requests() {
  // @@protoc_insertion_point(field_add:CParental_GetRequests_Response.playtime_requests)
  return _internal_add_playtime_requests();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ParentalPlaytimeRequest >&
CParental_GetRequests_Response::playtime_requests() const {
  // @@protoc_insertion_point(field_list:CParental_GetRequests_Response.playtime_requests)
  return playtime_requests_;
}

// -------------------------------------------------------------------

// CParental_ReportPlaytimeAndNotify_Request

// optional uint32 day_of_week = 1;
inline bool CParental_ReportPlaytimeAndNotify_Request::_internal_has_day_of_week() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_ReportPlaytimeAndNotify_Request::has_day_of_week() const {
  return _internal_has_day_of_week();
}
inline void CParental_ReportPlaytimeAndNotify_Request::clear_day_of_week() {
  day_of_week_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_ReportPlaytimeAndNotify_Request::_internal_day_of_week() const {
  return day_of_week_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_ReportPlaytimeAndNotify_Request::day_of_week() const {
  // @@protoc_insertion_point(field_get:CParental_ReportPlaytimeAndNotify_Request.day_of_week)
  return _internal_day_of_week();
}
inline void CParental_ReportPlaytimeAndNotify_Request::_internal_set_day_of_week(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  day_of_week_ = value;
}
inline void CParental_ReportPlaytimeAndNotify_Request::set_day_of_week(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_day_of_week(value);
  // @@protoc_insertion_point(field_set:CParental_ReportPlaytimeAndNotify_Request.day_of_week)
}

// optional uint32 minutes_used = 2;
inline bool CParental_ReportPlaytimeAndNotify_Request::_internal_has_minutes_used() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CParental_ReportPlaytimeAndNotify_Request::has_minutes_used() const {
  return _internal_has_minutes_used();
}
inline void CParental_ReportPlaytimeAndNotify_Request::clear_minutes_used() {
  minutes_used_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_ReportPlaytimeAndNotify_Request::_internal_minutes_used() const {
  return minutes_used_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_ReportPlaytimeAndNotify_Request::minutes_used() const {
  // @@protoc_insertion_point(field_get:CParental_ReportPlaytimeAndNotify_Request.minutes_used)
  return _internal_minutes_used();
}
inline void CParental_ReportPlaytimeAndNotify_Request::_internal_set_minutes_used(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  minutes_used_ = value;
}
inline void CParental_ReportPlaytimeAndNotify_Request::set_minutes_used(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_minutes_used(value);
  // @@protoc_insertion_point(field_set:CParental_ReportPlaytimeAndNotify_Request.minutes_used)
}

// optional fixed64 steamid = 10;
inline bool CParental_ReportPlaytimeAndNotify_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CParental_ReportPlaytimeAndNotify_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CParental_ReportPlaytimeAndNotify_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_ReportPlaytimeAndNotify_Request::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CParental_ReportPlaytimeAndNotify_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CParental_ReportPlaytimeAndNotify_Request.steamid)
  return _internal_steamid();
}
inline void CParental_ReportPlaytimeAndNotify_Request::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  steamid_ = value;
}
inline void CParental_ReportPlaytimeAndNotify_Request::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CParental_ReportPlaytimeAndNotify_Request.steamid)
}

// -------------------------------------------------------------------

// CParental_ReportPlaytimeAndNotify_Response

// -------------------------------------------------------------------

// CParental_ParentalSettingsChange_Notification

// optional bytes serialized_settings = 1;
inline bool CParental_ParentalSettingsChange_Notification::_internal_has_serialized_settings() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_ParentalSettingsChange_Notification::has_serialized_settings() const {
  return _internal_has_serialized_settings();
}
inline void CParental_ParentalSettingsChange_Notification::clear_serialized_settings() {
  serialized_settings_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CParental_ParentalSettingsChange_Notification::serialized_settings() const {
  // @@protoc_insertion_point(field_get:CParental_ParentalSettingsChange_Notification.serialized_settings)
  return _internal_serialized_settings();
}
inline void CParental_ParentalSettingsChange_Notification::set_serialized_settings(const std::string& value) {
  _internal_set_serialized_settings(value);
  // @@protoc_insertion_point(field_set:CParental_ParentalSettingsChange_Notification.serialized_settings)
}
inline std::string* CParental_ParentalSettingsChange_Notification::mutable_serialized_settings() {
  // @@protoc_insertion_point(field_mutable:CParental_ParentalSettingsChange_Notification.serialized_settings)
  return _internal_mutable_serialized_settings();
}
inline const std::string& CParental_ParentalSettingsChange_Notification::_internal_serialized_settings() const {
  return serialized_settings_.Get();
}
inline void CParental_ParentalSettingsChange_Notification::_internal_set_serialized_settings(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  serialized_settings_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CParental_ParentalSettingsChange_Notification::set_serialized_settings(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  serialized_settings_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CParental_ParentalSettingsChange_Notification.serialized_settings)
}
inline void CParental_ParentalSettingsChange_Notification::set_serialized_settings(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  serialized_settings_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CParental_ParentalSettingsChange_Notification.serialized_settings)
}
inline void CParental_ParentalSettingsChange_Notification::set_serialized_settings(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  serialized_settings_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CParental_ParentalSettingsChange_Notification.serialized_settings)
}
inline std::string* CParental_ParentalSettingsChange_Notification::_internal_mutable_serialized_settings() {
  _has_bits_[0] |= 0x00000001u;
  return serialized_settings_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CParental_ParentalSettingsChange_Notification::release_serialized_settings() {
  // @@protoc_insertion_point(field_release:CParental_ParentalSettingsChange_Notification.serialized_settings)
  if (!_internal_has_serialized_settings()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return serialized_settings_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CParental_ParentalSettingsChange_Notification::set_allocated_serialized_settings(std::string* serialized_settings) {
  if (serialized_settings != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  serialized_settings_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), serialized_settings,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CParental_ParentalSettingsChange_Notification.serialized_settings)
}

// optional bytes signature = 2;
inline bool CParental_ParentalSettingsChange_Notification::_internal_has_signature() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CParental_ParentalSettingsChange_Notification::has_signature() const {
  return _internal_has_signature();
}
inline void CParental_ParentalSettingsChange_Notification::clear_signature() {
  signature_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CParental_ParentalSettingsChange_Notification::signature() const {
  // @@protoc_insertion_point(field_get:CParental_ParentalSettingsChange_Notification.signature)
  return _internal_signature();
}
inline void CParental_ParentalSettingsChange_Notification::set_signature(const std::string& value) {
  _internal_set_signature(value);
  // @@protoc_insertion_point(field_set:CParental_ParentalSettingsChange_Notification.signature)
}
inline std::string* CParental_ParentalSettingsChange_Notification::mutable_signature() {
  // @@protoc_insertion_point(field_mutable:CParental_ParentalSettingsChange_Notification.signature)
  return _internal_mutable_signature();
}
inline const std::string& CParental_ParentalSettingsChange_Notification::_internal_signature() const {
  return signature_.Get();
}
inline void CParental_ParentalSettingsChange_Notification::_internal_set_signature(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CParental_ParentalSettingsChange_Notification::set_signature(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  signature_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CParental_ParentalSettingsChange_Notification.signature)
}
inline void CParental_ParentalSettingsChange_Notification::set_signature(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CParental_ParentalSettingsChange_Notification.signature)
}
inline void CParental_ParentalSettingsChange_Notification::set_signature(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  signature_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CParental_ParentalSettingsChange_Notification.signature)
}
inline std::string* CParental_ParentalSettingsChange_Notification::_internal_mutable_signature() {
  _has_bits_[0] |= 0x00000002u;
  return signature_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CParental_ParentalSettingsChange_Notification::release_signature() {
  // @@protoc_insertion_point(field_release:CParental_ParentalSettingsChange_Notification.signature)
  if (!_internal_has_signature()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return signature_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CParental_ParentalSettingsChange_Notification::set_allocated_signature(std::string* signature) {
  if (signature != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  signature_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), signature,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CParental_ParentalSettingsChange_Notification.signature)
}

// optional string password = 3;
inline bool CParental_ParentalSettingsChange_Notification::_internal_has_password() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CParental_ParentalSettingsChange_Notification::has_password() const {
  return _internal_has_password();
}
inline void CParental_ParentalSettingsChange_Notification::clear_password() {
  password_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CParental_ParentalSettingsChange_Notification::password() const {
  // @@protoc_insertion_point(field_get:CParental_ParentalSettingsChange_Notification.password)
  return _internal_password();
}
inline void CParental_ParentalSettingsChange_Notification::set_password(const std::string& value) {
  _internal_set_password(value);
  // @@protoc_insertion_point(field_set:CParental_ParentalSettingsChange_Notification.password)
}
inline std::string* CParental_ParentalSettingsChange_Notification::mutable_password() {
  // @@protoc_insertion_point(field_mutable:CParental_ParentalSettingsChange_Notification.password)
  return _internal_mutable_password();
}
inline const std::string& CParental_ParentalSettingsChange_Notification::_internal_password() const {
  return password_.Get();
}
inline void CParental_ParentalSettingsChange_Notification::_internal_set_password(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CParental_ParentalSettingsChange_Notification::set_password(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  password_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CParental_ParentalSettingsChange_Notification.password)
}
inline void CParental_ParentalSettingsChange_Notification::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CParental_ParentalSettingsChange_Notification.password)
}
inline void CParental_ParentalSettingsChange_Notification::set_password(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CParental_ParentalSettingsChange_Notification.password)
}
inline std::string* CParental_ParentalSettingsChange_Notification::_internal_mutable_password() {
  _has_bits_[0] |= 0x00000004u;
  return password_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CParental_ParentalSettingsChange_Notification::release_password() {
  // @@protoc_insertion_point(field_release:CParental_ParentalSettingsChange_Notification.password)
  if (!_internal_has_password()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return password_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CParental_ParentalSettingsChange_Notification::set_allocated_password(std::string* password) {
  if (password != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  password_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), password,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CParental_ParentalSettingsChange_Notification.password)
}

// optional string sessionid = 4;
inline bool CParental_ParentalSettingsChange_Notification::_internal_has_sessionid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CParental_ParentalSettingsChange_Notification::has_sessionid() const {
  return _internal_has_sessionid();
}
inline void CParental_ParentalSettingsChange_Notification::clear_sessionid() {
  sessionid_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CParental_ParentalSettingsChange_Notification::sessionid() const {
  // @@protoc_insertion_point(field_get:CParental_ParentalSettingsChange_Notification.sessionid)
  return _internal_sessionid();
}
inline void CParental_ParentalSettingsChange_Notification::set_sessionid(const std::string& value) {
  _internal_set_sessionid(value);
  // @@protoc_insertion_point(field_set:CParental_ParentalSettingsChange_Notification.sessionid)
}
inline std::string* CParental_ParentalSettingsChange_Notification::mutable_sessionid() {
  // @@protoc_insertion_point(field_mutable:CParental_ParentalSettingsChange_Notification.sessionid)
  return _internal_mutable_sessionid();
}
inline const std::string& CParental_ParentalSettingsChange_Notification::_internal_sessionid() const {
  return sessionid_.Get();
}
inline void CParental_ParentalSettingsChange_Notification::_internal_set_sessionid(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CParental_ParentalSettingsChange_Notification::set_sessionid(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  sessionid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CParental_ParentalSettingsChange_Notification.sessionid)
}
inline void CParental_ParentalSettingsChange_Notification::set_sessionid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CParental_ParentalSettingsChange_Notification.sessionid)
}
inline void CParental_ParentalSettingsChange_Notification::set_sessionid(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CParental_ParentalSettingsChange_Notification.sessionid)
}
inline std::string* CParental_ParentalSettingsChange_Notification::_internal_mutable_sessionid() {
  _has_bits_[0] |= 0x00000008u;
  return sessionid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CParental_ParentalSettingsChange_Notification::release_sessionid() {
  // @@protoc_insertion_point(field_release:CParental_ParentalSettingsChange_Notification.sessionid)
  if (!_internal_has_sessionid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return sessionid_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CParental_ParentalSettingsChange_Notification::set_allocated_sessionid(std::string* sessionid) {
  if (sessionid != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  sessionid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sessionid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CParental_ParentalSettingsChange_Notification.sessionid)
}

// -------------------------------------------------------------------

// CParental_ParentalUnlocNotification

// optional string password = 1;
inline bool CParental_ParentalUnlocNotification::_internal_has_password() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_ParentalUnlocNotification::has_password() const {
  return _internal_has_password();
}
inline void CParental_ParentalUnlocNotification::clear_password() {
  password_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CParental_ParentalUnlocNotification::password() const {
  // @@protoc_insertion_point(field_get:CParental_ParentalUnlocNotification.password)
  return _internal_password();
}
inline void CParental_ParentalUnlocNotification::set_password(const std::string& value) {
  _internal_set_password(value);
  // @@protoc_insertion_point(field_set:CParental_ParentalUnlocNotification.password)
}
inline std::string* CParental_ParentalUnlocNotification::mutable_password() {
  // @@protoc_insertion_point(field_mutable:CParental_ParentalUnlocNotification.password)
  return _internal_mutable_password();
}
inline const std::string& CParental_ParentalUnlocNotification::_internal_password() const {
  return password_.Get();
}
inline void CParental_ParentalUnlocNotification::_internal_set_password(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CParental_ParentalUnlocNotification::set_password(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  password_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CParental_ParentalUnlocNotification.password)
}
inline void CParental_ParentalUnlocNotification::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CParental_ParentalUnlocNotification.password)
}
inline void CParental_ParentalUnlocNotification::set_password(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  password_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CParental_ParentalUnlocNotification.password)
}
inline std::string* CParental_ParentalUnlocNotification::_internal_mutable_password() {
  _has_bits_[0] |= 0x00000001u;
  return password_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CParental_ParentalUnlocNotification::release_password() {
  // @@protoc_insertion_point(field_release:CParental_ParentalUnlocNotification.password)
  if (!_internal_has_password()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return password_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CParental_ParentalUnlocNotification::set_allocated_password(std::string* password) {
  if (password != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  password_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), password,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CParental_ParentalUnlocNotification.password)
}

// optional string sessionid = 2;
inline bool CParental_ParentalUnlocNotification::_internal_has_sessionid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CParental_ParentalUnlocNotification::has_sessionid() const {
  return _internal_has_sessionid();
}
inline void CParental_ParentalUnlocNotification::clear_sessionid() {
  sessionid_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CParental_ParentalUnlocNotification::sessionid() const {
  // @@protoc_insertion_point(field_get:CParental_ParentalUnlocNotification.sessionid)
  return _internal_sessionid();
}
inline void CParental_ParentalUnlocNotification::set_sessionid(const std::string& value) {
  _internal_set_sessionid(value);
  // @@protoc_insertion_point(field_set:CParental_ParentalUnlocNotification.sessionid)
}
inline std::string* CParental_ParentalUnlocNotification::mutable_sessionid() {
  // @@protoc_insertion_point(field_mutable:CParental_ParentalUnlocNotification.sessionid)
  return _internal_mutable_sessionid();
}
inline const std::string& CParental_ParentalUnlocNotification::_internal_sessionid() const {
  return sessionid_.Get();
}
inline void CParental_ParentalUnlocNotification::_internal_set_sessionid(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CParental_ParentalUnlocNotification::set_sessionid(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  sessionid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CParental_ParentalUnlocNotification.sessionid)
}
inline void CParental_ParentalUnlocNotification::set_sessionid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CParental_ParentalUnlocNotification.sessionid)
}
inline void CParental_ParentalUnlocNotification::set_sessionid(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CParental_ParentalUnlocNotification.sessionid)
}
inline std::string* CParental_ParentalUnlocNotification::_internal_mutable_sessionid() {
  _has_bits_[0] |= 0x00000002u;
  return sessionid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CParental_ParentalUnlocNotification::release_sessionid() {
  // @@protoc_insertion_point(field_release:CParental_ParentalUnlocNotification.sessionid)
  if (!_internal_has_sessionid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return sessionid_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CParental_ParentalUnlocNotification::set_allocated_sessionid(std::string* sessionid) {
  if (sessionid != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  sessionid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sessionid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CParental_ParentalUnlocNotification.sessionid)
}

// -------------------------------------------------------------------

// CParental_ParentalLocNotification

// optional string sessionid = 1;
inline bool CParental_ParentalLocNotification::_internal_has_sessionid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_ParentalLocNotification::has_sessionid() const {
  return _internal_has_sessionid();
}
inline void CParental_ParentalLocNotification::clear_sessionid() {
  sessionid_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CParental_ParentalLocNotification::sessionid() const {
  // @@protoc_insertion_point(field_get:CParental_ParentalLocNotification.sessionid)
  return _internal_sessionid();
}
inline void CParental_ParentalLocNotification::set_sessionid(const std::string& value) {
  _internal_set_sessionid(value);
  // @@protoc_insertion_point(field_set:CParental_ParentalLocNotification.sessionid)
}
inline std::string* CParental_ParentalLocNotification::mutable_sessionid() {
  // @@protoc_insertion_point(field_mutable:CParental_ParentalLocNotification.sessionid)
  return _internal_mutable_sessionid();
}
inline const std::string& CParental_ParentalLocNotification::_internal_sessionid() const {
  return sessionid_.Get();
}
inline void CParental_ParentalLocNotification::_internal_set_sessionid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CParental_ParentalLocNotification::set_sessionid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  sessionid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CParental_ParentalLocNotification.sessionid)
}
inline void CParental_ParentalLocNotification::set_sessionid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CParental_ParentalLocNotification.sessionid)
}
inline void CParental_ParentalLocNotification::set_sessionid(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  sessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CParental_ParentalLocNotification.sessionid)
}
inline std::string* CParental_ParentalLocNotification::_internal_mutable_sessionid() {
  _has_bits_[0] |= 0x00000001u;
  return sessionid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CParental_ParentalLocNotification::release_sessionid() {
  // @@protoc_insertion_point(field_release:CParental_ParentalLocNotification.sessionid)
  if (!_internal_has_sessionid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return sessionid_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CParental_ParentalLocNotification::set_allocated_sessionid(std::string* sessionid) {
  if (sessionid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  sessionid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sessionid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CParental_ParentalLocNotification.sessionid)
}

// -------------------------------------------------------------------

// CParental_PlaytimeUsed_Notification

// optional uint32 day_of_week = 1;
inline bool CParental_PlaytimeUsed_Notification::_internal_has_day_of_week() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CParental_PlaytimeUsed_Notification::has_day_of_week() const {
  return _internal_has_day_of_week();
}
inline void CParental_PlaytimeUsed_Notification::clear_day_of_week() {
  day_of_week_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_PlaytimeUsed_Notification::_internal_day_of_week() const {
  return day_of_week_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_PlaytimeUsed_Notification::day_of_week() const {
  // @@protoc_insertion_point(field_get:CParental_PlaytimeUsed_Notification.day_of_week)
  return _internal_day_of_week();
}
inline void CParental_PlaytimeUsed_Notification::_internal_set_day_of_week(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  day_of_week_ = value;
}
inline void CParental_PlaytimeUsed_Notification::set_day_of_week(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_day_of_week(value);
  // @@protoc_insertion_point(field_set:CParental_PlaytimeUsed_Notification.day_of_week)
}

// optional uint32 minutes_used = 2;
inline bool CParental_PlaytimeUsed_Notification::_internal_has_minutes_used() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CParental_PlaytimeUsed_Notification::has_minutes_used() const {
  return _internal_has_minutes_used();
}
inline void CParental_PlaytimeUsed_Notification::clear_minutes_used() {
  minutes_used_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_PlaytimeUsed_Notification::_internal_minutes_used() const {
  return minutes_used_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CParental_PlaytimeUsed_Notification::minutes_used() const {
  // @@protoc_insertion_point(field_get:CParental_PlaytimeUsed_Notification.minutes_used)
  return _internal_minutes_used();
}
inline void CParental_PlaytimeUsed_Notification::_internal_set_minutes_used(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  minutes_used_ = value;
}
inline void CParental_PlaytimeUsed_Notification::set_minutes_used(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_minutes_used(value);
  // @@protoc_insertion_point(field_set:CParental_PlaytimeUsed_Notification.minutes_used)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_steammessages_5fparental_2esteamclient_2eproto
