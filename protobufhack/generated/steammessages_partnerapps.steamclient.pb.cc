// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_partnerapps.steamclient.proto

#include "steammessages_partnerapps.steamclient.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr CPartnerApps_RequestUploadToken_Request::CPartnerApps_RequestUploadToken_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : filename_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , appid_(0u){}
struct CPartnerApps_RequestUploadToken_RequestDefaultTypeInternal {
  constexpr CPartnerApps_RequestUploadToken_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CPartnerApps_RequestUploadToken_RequestDefaultTypeInternal() {}
  union {
    CPartnerApps_RequestUploadToken_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CPartnerApps_RequestUploadToken_RequestDefaultTypeInternal _CPartnerApps_RequestUploadToken_Request_default_instance_;
constexpr CPartnerApps_RequestUploadToken_Response::CPartnerApps_RequestUploadToken_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : location_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , upload_token_(PROTOBUF_ULONGLONG(0))
  , routing_id_(PROTOBUF_ULONGLONG(0)){}
struct CPartnerApps_RequestUploadToken_ResponseDefaultTypeInternal {
  constexpr CPartnerApps_RequestUploadToken_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CPartnerApps_RequestUploadToken_ResponseDefaultTypeInternal() {}
  union {
    CPartnerApps_RequestUploadToken_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CPartnerApps_RequestUploadToken_ResponseDefaultTypeInternal _CPartnerApps_RequestUploadToken_Response_default_instance_;
constexpr CPartnerApps_FinishUpload_Request::CPartnerApps_FinishUpload_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : upload_token_(PROTOBUF_ULONGLONG(0))
  , routing_id_(PROTOBUF_ULONGLONG(0))
  , app_id_(0u){}
struct CPartnerApps_FinishUpload_RequestDefaultTypeInternal {
  constexpr CPartnerApps_FinishUpload_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CPartnerApps_FinishUpload_RequestDefaultTypeInternal() {}
  union {
    CPartnerApps_FinishUpload_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CPartnerApps_FinishUpload_RequestDefaultTypeInternal _CPartnerApps_FinishUpload_Request_default_instance_;
constexpr CPartnerApps_FinishUploadKVSign_Response::CPartnerApps_FinishUploadKVSign_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : signed_installscript_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CPartnerApps_FinishUploadKVSign_ResponseDefaultTypeInternal {
  constexpr CPartnerApps_FinishUploadKVSign_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CPartnerApps_FinishUploadKVSign_ResponseDefaultTypeInternal() {}
  union {
    CPartnerApps_FinishUploadKVSign_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CPartnerApps_FinishUploadKVSign_ResponseDefaultTypeInternal _CPartnerApps_FinishUploadKVSign_Response_default_instance_;
constexpr CPartnerApps_FinishUploadLegacyDRM_Request::CPartnerApps_FinishUploadLegacyDRM_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tool_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , upload_token_(PROTOBUF_ULONGLONG(0))
  , routing_id_(PROTOBUF_ULONGLONG(0))
  , app_id_(0u)
  , flags_(0u)
  , use_cloud_(false){}
struct CPartnerApps_FinishUploadLegacyDRM_RequestDefaultTypeInternal {
  constexpr CPartnerApps_FinishUploadLegacyDRM_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CPartnerApps_FinishUploadLegacyDRM_RequestDefaultTypeInternal() {}
  union {
    CPartnerApps_FinishUploadLegacyDRM_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CPartnerApps_FinishUploadLegacyDRM_RequestDefaultTypeInternal _CPartnerApps_FinishUploadLegacyDRM_Request_default_instance_;
constexpr CPartnerApps_FinishUploadLegacyDRM_Response::CPartnerApps_FinishUploadLegacyDRM_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : file_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CPartnerApps_FinishUploadLegacyDRM_ResponseDefaultTypeInternal {
  constexpr CPartnerApps_FinishUploadLegacyDRM_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CPartnerApps_FinishUploadLegacyDRM_ResponseDefaultTypeInternal() {}
  union {
    CPartnerApps_FinishUploadLegacyDRM_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CPartnerApps_FinishUploadLegacyDRM_ResponseDefaultTypeInternal _CPartnerApps_FinishUploadLegacyDRM_Response_default_instance_;
constexpr CPartnerApps_FinishUpload_Response::CPartnerApps_FinishUpload_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CPartnerApps_FinishUpload_ResponseDefaultTypeInternal {
  constexpr CPartnerApps_FinishUpload_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CPartnerApps_FinishUpload_ResponseDefaultTypeInternal() {}
  union {
    CPartnerApps_FinishUpload_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CPartnerApps_FinishUpload_ResponseDefaultTypeInternal _CPartnerApps_FinishUpload_Response_default_instance_;
constexpr CPartnerApps_FinishUploadDepot_Request::CPartnerApps_FinishUploadDepot_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : upload_token_(PROTOBUF_ULONGLONG(0))
  , routing_id_(PROTOBUF_ULONGLONG(0))
  , app_id_(0u)
  , depot_id_(0u)
  , build_flags_(0u){}
struct CPartnerApps_FinishUploadDepot_RequestDefaultTypeInternal {
  constexpr CPartnerApps_FinishUploadDepot_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CPartnerApps_FinishUploadDepot_RequestDefaultTypeInternal() {}
  union {
    CPartnerApps_FinishUploadDepot_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CPartnerApps_FinishUploadDepot_RequestDefaultTypeInternal _CPartnerApps_FinishUploadDepot_Request_default_instance_;
constexpr CPartnerApps_FinishUploadDepot_Response::CPartnerApps_FinishUploadDepot_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : build_routing_id_(PROTOBUF_ULONGLONG(0)){}
struct CPartnerApps_FinishUploadDepot_ResponseDefaultTypeInternal {
  constexpr CPartnerApps_FinishUploadDepot_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CPartnerApps_FinishUploadDepot_ResponseDefaultTypeInternal() {}
  union {
    CPartnerApps_FinishUploadDepot_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CPartnerApps_FinishUploadDepot_ResponseDefaultTypeInternal _CPartnerApps_FinishUploadDepot_Response_default_instance_;
constexpr CPartnerApps_GetDepotBuildResult_Request::CPartnerApps_GetDepotBuildResult_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : upload_token_(PROTOBUF_ULONGLONG(0))
  , routing_id_(PROTOBUF_ULONGLONG(0)){}
struct CPartnerApps_GetDepotBuildResult_RequestDefaultTypeInternal {
  constexpr CPartnerApps_GetDepotBuildResult_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CPartnerApps_GetDepotBuildResult_RequestDefaultTypeInternal() {}
  union {
    CPartnerApps_GetDepotBuildResult_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CPartnerApps_GetDepotBuildResult_RequestDefaultTypeInternal _CPartnerApps_GetDepotBuildResult_Request_default_instance_;
constexpr CPartnerApps_GetDepotBuildResult_Response::CPartnerApps_GetDepotBuildResult_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , manifest_id_(PROTOBUF_ULONGLONG(0)){}
struct CPartnerApps_GetDepotBuildResult_ResponseDefaultTypeInternal {
  constexpr CPartnerApps_GetDepotBuildResult_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CPartnerApps_GetDepotBuildResult_ResponseDefaultTypeInternal() {}
  union {
    CPartnerApps_GetDepotBuildResult_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CPartnerApps_GetDepotBuildResult_ResponseDefaultTypeInternal _CPartnerApps_GetDepotBuildResult_Response_default_instance_;
constexpr CPartnerApps_FindDRMUploads_Request::CPartnerApps_FindDRMUploads_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : app_id_(0){}
struct CPartnerApps_FindDRMUploads_RequestDefaultTypeInternal {
  constexpr CPartnerApps_FindDRMUploads_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CPartnerApps_FindDRMUploads_RequestDefaultTypeInternal() {}
  union {
    CPartnerApps_FindDRMUploads_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CPartnerApps_FindDRMUploads_RequestDefaultTypeInternal _CPartnerApps_FindDRMUploads_Request_default_instance_;
constexpr CPartnerApps_ExistingDRMUpload::CPartnerApps_ExistingDRMUpload(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : file_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , supplied_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , mod_type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , orig_file_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , app_id_(0u)
  , actor_id_(0)
  , flags_(0u)
  , timestamp_(0u){}
struct CPartnerApps_ExistingDRMUploadDefaultTypeInternal {
  constexpr CPartnerApps_ExistingDRMUploadDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CPartnerApps_ExistingDRMUploadDefaultTypeInternal() {}
  union {
    CPartnerApps_ExistingDRMUpload _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CPartnerApps_ExistingDRMUploadDefaultTypeInternal _CPartnerApps_ExistingDRMUpload_default_instance_;
constexpr CPartnerApps_FindDRMUploads_Response::CPartnerApps_FindDRMUploads_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : uploads_(){}
struct CPartnerApps_FindDRMUploads_ResponseDefaultTypeInternal {
  constexpr CPartnerApps_FindDRMUploads_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CPartnerApps_FindDRMUploads_ResponseDefaultTypeInternal() {}
  union {
    CPartnerApps_FindDRMUploads_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CPartnerApps_FindDRMUploads_ResponseDefaultTypeInternal _CPartnerApps_FindDRMUploads_Response_default_instance_;
constexpr CPartnerApps_Download_Request::CPartnerApps_Download_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : file_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , app_id_(0){}
struct CPartnerApps_Download_RequestDefaultTypeInternal {
  constexpr CPartnerApps_Download_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CPartnerApps_Download_RequestDefaultTypeInternal() {}
  union {
    CPartnerApps_Download_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CPartnerApps_Download_RequestDefaultTypeInternal _CPartnerApps_Download_Request_default_instance_;
constexpr CPartnerApps_Download_Response::CPartnerApps_Download_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : download_url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , app_id_(0){}
struct CPartnerApps_Download_ResponseDefaultTypeInternal {
  constexpr CPartnerApps_Download_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CPartnerApps_Download_ResponseDefaultTypeInternal() {}
  union {
    CPartnerApps_Download_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CPartnerApps_Download_ResponseDefaultTypeInternal _CPartnerApps_Download_Response_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_steammessages_5fpartnerapps_2esteamclient_2eproto[16];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_steammessages_5fpartnerapps_2esteamclient_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* file_level_service_descriptors_steammessages_5fpartnerapps_2esteamclient_2eproto[1];

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_steammessages_5fpartnerapps_2esteamclient_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_RequestUploadToken_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_RequestUploadToken_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_RequestUploadToken_Request, filename_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_RequestUploadToken_Request, appid_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_RequestUploadToken_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_RequestUploadToken_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_RequestUploadToken_Response, upload_token_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_RequestUploadToken_Response, location_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_RequestUploadToken_Response, routing_id_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUpload_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUpload_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUpload_Request, upload_token_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUpload_Request, routing_id_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUpload_Request, app_id_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadKVSign_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadKVSign_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadKVSign_Response, signed_installscript_),
  0,
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Request, upload_token_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Request, routing_id_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Request, app_id_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Request, flags_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Request, tool_name_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Request, use_cloud_),
  1,
  2,
  3,
  4,
  0,
  5,
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadLegacyDRM_Response, file_id_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUpload_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadDepot_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadDepot_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadDepot_Request, upload_token_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadDepot_Request, routing_id_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadDepot_Request, app_id_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadDepot_Request, depot_id_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadDepot_Request, build_flags_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadDepot_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadDepot_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FinishUploadDepot_Response, build_routing_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_GetDepotBuildResult_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_GetDepotBuildResult_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_GetDepotBuildResult_Request, upload_token_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_GetDepotBuildResult_Request, routing_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_GetDepotBuildResult_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_GetDepotBuildResult_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_GetDepotBuildResult_Response, manifest_id_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_GetDepotBuildResult_Response, error_msg_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FindDRMUploads_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FindDRMUploads_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FindDRMUploads_Request, app_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_ExistingDRMUpload, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_ExistingDRMUpload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_ExistingDRMUpload, file_id_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_ExistingDRMUpload, app_id_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_ExistingDRMUpload, actor_id_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_ExistingDRMUpload, supplied_name_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_ExistingDRMUpload, flags_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_ExistingDRMUpload, mod_type_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_ExistingDRMUpload, timestamp_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_ExistingDRMUpload, orig_file_id_),
  0,
  4,
  5,
  1,
  6,
  2,
  7,
  3,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FindDRMUploads_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_FindDRMUploads_Response, uploads_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_Download_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_Download_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_Download_Request, file_id_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_Download_Request, app_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_Download_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_Download_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_Download_Response, download_url_),
  PROTOBUF_FIELD_OFFSET(::CPartnerApps_Download_Response, app_id_),
  0,
  1,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::CPartnerApps_RequestUploadToken_Request)},
  { 9, 17, sizeof(::CPartnerApps_RequestUploadToken_Response)},
  { 20, 28, sizeof(::CPartnerApps_FinishUpload_Request)},
  { 31, 37, sizeof(::CPartnerApps_FinishUploadKVSign_Response)},
  { 38, 49, sizeof(::CPartnerApps_FinishUploadLegacyDRM_Request)},
  { 55, 61, sizeof(::CPartnerApps_FinishUploadLegacyDRM_Response)},
  { 62, -1, sizeof(::CPartnerApps_FinishUpload_Response)},
  { 67, 77, sizeof(::CPartnerApps_FinishUploadDepot_Request)},
  { 82, 88, sizeof(::CPartnerApps_FinishUploadDepot_Response)},
  { 89, 96, sizeof(::CPartnerApps_GetDepotBuildResult_Request)},
  { 98, 105, sizeof(::CPartnerApps_GetDepotBuildResult_Response)},
  { 107, 113, sizeof(::CPartnerApps_FindDRMUploads_Request)},
  { 114, 127, sizeof(::CPartnerApps_ExistingDRMUpload)},
  { 135, -1, sizeof(::CPartnerApps_FindDRMUploads_Response)},
  { 141, 148, sizeof(::CPartnerApps_Download_Request)},
  { 150, 157, sizeof(::CPartnerApps_Download_Response)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CPartnerApps_RequestUploadToken_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CPartnerApps_RequestUploadToken_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CPartnerApps_FinishUpload_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CPartnerApps_FinishUploadKVSign_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CPartnerApps_FinishUploadLegacyDRM_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CPartnerApps_FinishUploadLegacyDRM_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CPartnerApps_FinishUpload_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CPartnerApps_FinishUploadDepot_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CPartnerApps_FinishUploadDepot_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CPartnerApps_GetDepotBuildResult_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CPartnerApps_GetDepotBuildResult_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CPartnerApps_FindDRMUploads_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CPartnerApps_ExistingDRMUpload_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CPartnerApps_FindDRMUploads_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CPartnerApps_Download_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CPartnerApps_Download_Response_default_instance_),
};

const char descriptor_table_protodef_steammessages_5fpartnerapps_2esteamclient_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n+steammessages_partnerapps.steamclient."
  "proto\032 google/protobuf/descriptor.proto\032"
  "\030steammessages_base.proto\032,steammessages"
  "_unified_base.steamclient.proto\"J\n\'CPart"
  "nerApps_RequestUploadToken_Request\022\020\n\010fi"
  "lename\030\001 \001(\t\022\r\n\005appid\030\002 \001(\r\"f\n(CPartnerA"
  "pps_RequestUploadToken_Response\022\024\n\014uploa"
  "d_token\030\001 \001(\004\022\020\n\010location\030\002 \001(\t\022\022\n\nrouti"
  "ng_id\030\003 \001(\004\"]\n!CPartnerApps_FinishUpload"
  "_Request\022\024\n\014upload_token\030\001 \001(\004\022\022\n\nroutin"
  "g_id\030\002 \001(\004\022\016\n\006app_id\030\003 \001(\r\"H\n(CPartnerAp"
  "ps_FinishUploadKVSign_Response\022\034\n\024signed"
  "_installscript\030\001 \001(\t\"\242\001\n*CPartnerApps_Fi"
  "nishUploadLegacyDRM_Request\022\024\n\014upload_to"
  "ken\030\001 \001(\004\022\022\n\nrouting_id\030\002 \001(\004\022\016\n\006app_id\030"
  "\003 \001(\r\022\r\n\005flags\030\004 \001(\r\022\021\n\ttool_name\030\005 \001(\t\022"
  "\030\n\tuse_cloud\030\006 \001(\010:\005false\">\n+CPartnerApp"
  "s_FinishUploadLegacyDRM_Response\022\017\n\007file"
  "_id\030\001 \001(\t\"$\n\"CPartnerApps_FinishUpload_R"
  "esponse\"\211\001\n&CPartnerApps_FinishUploadDep"
  "ot_Request\022\024\n\014upload_token\030\001 \001(\004\022\022\n\nrout"
  "ing_id\030\002 \001(\004\022\016\n\006app_id\030\003 \001(\r\022\020\n\010depot_id"
  "\030\004 \001(\r\022\023\n\013build_flags\030\005 \001(\r\"C\n\'CPartnerA"
  "pps_FinishUploadDepot_Response\022\030\n\020build_"
  "routing_id\030\001 \001(\004\"T\n(CPartnerApps_GetDepo"
  "tBuildResult_Request\022\024\n\014upload_token\030\001 \001"
  "(\004\022\022\n\nrouting_id\030\002 \001(\004\"S\n)CPartnerApps_G"
  "etDepotBuildResult_Response\022\023\n\013manifest_"
  "id\030\001 \001(\004\022\021\n\terror_msg\030\002 \001(\t\"5\n#CPartnerA"
  "pps_FindDRMUploads_Request\022\016\n\006app_id\030\001 \001"
  "(\005\"\264\001\n\036CPartnerApps_ExistingDRMUpload\022\017\n"
  "\007file_id\030\001 \001(\t\022\016\n\006app_id\030\002 \001(\r\022\020\n\010actor_"
  "id\030\003 \001(\005\022\025\n\rsupplied_name\030\005 \001(\t\022\r\n\005flags"
  "\030\006 \001(\r\022\020\n\010mod_type\030\007 \001(\t\022\021\n\ttimestamp\030\010 "
  "\001(\007\022\024\n\014orig_file_id\030\t \001(\t\"X\n$CPartnerApp"
  "s_FindDRMUploads_Response\0220\n\007uploads\030\001 \003"
  "(\0132\037.CPartnerApps_ExistingDRMUpload\"@\n\035C"
  "PartnerApps_Download_Request\022\017\n\007file_id\030"
  "\001 \001(\t\022\016\n\006app_id\030\002 \001(\005\"F\n\036CPartnerApps_Do"
  "wnload_Response\022\024\n\014download_url\030\001 \001(\t\022\016\n"
  "\006app_id\030\002 \001(\0052\215\t\n\013PartnerApps\022o\n\030Request"
  "KVSignUploadToken\022(.CPartnerApps_Request"
  "UploadToken_Request\032).CPartnerApps_Reque"
  "stUploadToken_Response\022l\n\025RequestDRMUplo"
  "adToken\022(.CPartnerApps_RequestUploadToke"
  "n_Request\032).CPartnerApps_RequestUploadTo"
  "ken_Response\022l\n\025RequestCEGUploadToken\022(."
  "CPartnerApps_RequestUploadToken_Request\032"
  ").CPartnerApps_RequestUploadToken_Respon"
  "se\022n\n\027RequestDepotUploadToken\022(.CPartner"
  "Apps_RequestUploadToken_Request\032).CPartn"
  "erApps_RequestUploadToken_Response\022c\n\022Fi"
  "nishUploadKVSign\022\".CPartnerApps_FinishUp"
  "load_Request\032).CPartnerApps_FinishUpload"
  "KVSign_Response\022r\n\025FinishUploadDRMUpload"
  "\022+.CPartnerApps_FinishUploadLegacyDRM_Re"
  "quest\032,.CPartnerApps_FinishUploadLegacyD"
  "RM_Response\022`\n\025FinishUploadCEGUpload\022\".C"
  "PartnerApps_FinishUpload_Request\032#.CPart"
  "nerApps_FinishUpload_Response\022l\n\027FinishU"
  "ploadDepotUpload\022\'.CPartnerApps_FinishUp"
  "loadDepot_Request\032(.CPartnerApps_FinishU"
  "ploadDepot_Response\022l\n\023GetDepotBuildResu"
  "lt\022).CPartnerApps_GetDepotBuildResult_Re"
  "quest\032*.CPartnerApps_GetDepotBuildResult"
  "_Response\022]\n\016FindDRMUploads\022$.CPartnerAp"
  "ps_FindDRMUploads_Request\032%.CPartnerApps"
  "_FindDRMUploads_Response\022K\n\010Download\022\036.C"
  "PartnerApps_Download_Request\032\037.CPartnerA"
  "pps_Download_ResponseB\035\200\001\001\252\002\027OpenSteamwo"
  "rks.Protobuf"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_steammessages_5fpartnerapps_2esteamclient_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
  &::descriptor_table_steammessages_5fbase_2eproto,
  &::descriptor_table_steammessages_5funified_5fbase_2esteamclient_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_steammessages_5fpartnerapps_2esteamclient_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_steammessages_5fpartnerapps_2esteamclient_2eproto = {
  false, false, 2812, descriptor_table_protodef_steammessages_5fpartnerapps_2esteamclient_2eproto, "steammessages_partnerapps.steamclient.proto", 
  &descriptor_table_steammessages_5fpartnerapps_2esteamclient_2eproto_once, descriptor_table_steammessages_5fpartnerapps_2esteamclient_2eproto_deps, 3, 16,
  schemas, file_default_instances, TableStruct_steammessages_5fpartnerapps_2esteamclient_2eproto::offsets,
  file_level_metadata_steammessages_5fpartnerapps_2esteamclient_2eproto, file_level_enum_descriptors_steammessages_5fpartnerapps_2esteamclient_2eproto, file_level_service_descriptors_steammessages_5fpartnerapps_2esteamclient_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_steammessages_5fpartnerapps_2esteamclient_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_steammessages_5fpartnerapps_2esteamclient_2eproto);
  return descriptor_table_steammessages_5fpartnerapps_2esteamclient_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_steammessages_5fpartnerapps_2esteamclient_2eproto(&descriptor_table_steammessages_5fpartnerapps_2esteamclient_2eproto);

// ===================================================================

class CPartnerApps_RequestUploadToken_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CPartnerApps_RequestUploadToken_Request>()._has_bits_);
  static void set_has_filename(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CPartnerApps_RequestUploadToken_Request::CPartnerApps_RequestUploadToken_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CPartnerApps_RequestUploadToken_Request)
}
CPartnerApps_RequestUploadToken_Request::CPartnerApps_RequestUploadToken_Request(const CPartnerApps_RequestUploadToken_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_filename()) {
    filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_filename(), 
      GetArena());
  }
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_RequestUploadToken_Request)
}

void CPartnerApps_RequestUploadToken_Request::SharedCtor() {
filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
appid_ = 0u;
}

CPartnerApps_RequestUploadToken_Request::~CPartnerApps_RequestUploadToken_Request() {
  // @@protoc_insertion_point(destructor:CPartnerApps_RequestUploadToken_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CPartnerApps_RequestUploadToken_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  filename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CPartnerApps_RequestUploadToken_Request::ArenaDtor(void* object) {
  CPartnerApps_RequestUploadToken_Request* _this = reinterpret_cast< CPartnerApps_RequestUploadToken_Request* >(object);
  (void)_this;
}
void CPartnerApps_RequestUploadToken_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CPartnerApps_RequestUploadToken_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CPartnerApps_RequestUploadToken_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_RequestUploadToken_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    filename_.ClearNonDefaultToEmpty();
  }
  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CPartnerApps_RequestUploadToken_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string filename = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_filename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CPartnerApps_RequestUploadToken_Request.filename");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 appid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_appid(&has_bits);
          appid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CPartnerApps_RequestUploadToken_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_RequestUploadToken_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_filename().data(), static_cast<int>(this->_internal_filename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CPartnerApps_RequestUploadToken_Request.filename");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_filename(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_appid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_RequestUploadToken_Request)
  return target;
}

size_t CPartnerApps_RequestUploadToken_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_RequestUploadToken_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string filename = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_filename());
    }

    // optional uint32 appid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_appid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_RequestUploadToken_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_RequestUploadToken_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_RequestUploadToken_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CPartnerApps_RequestUploadToken_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_RequestUploadToken_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_RequestUploadToken_Request)
    MergeFrom(*source);
  }
}

void CPartnerApps_RequestUploadToken_Request::MergeFrom(const CPartnerApps_RequestUploadToken_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_RequestUploadToken_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_filename(from._internal_filename());
    }
    if (cached_has_bits & 0x00000002u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPartnerApps_RequestUploadToken_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_RequestUploadToken_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_RequestUploadToken_Request::CopyFrom(const CPartnerApps_RequestUploadToken_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_RequestUploadToken_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_RequestUploadToken_Request::IsInitialized() const {
  return true;
}

void CPartnerApps_RequestUploadToken_Request::InternalSwap(CPartnerApps_RequestUploadToken_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  filename_.Swap(&other->filename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(appid_, other->appid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CPartnerApps_RequestUploadToken_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CPartnerApps_RequestUploadToken_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CPartnerApps_RequestUploadToken_Response>()._has_bits_);
  static void set_has_upload_token(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_location(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_routing_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CPartnerApps_RequestUploadToken_Response::CPartnerApps_RequestUploadToken_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CPartnerApps_RequestUploadToken_Response)
}
CPartnerApps_RequestUploadToken_Response::CPartnerApps_RequestUploadToken_Response(const CPartnerApps_RequestUploadToken_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_location()) {
    location_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_location(), 
      GetArena());
  }
  ::memcpy(&upload_token_, &from.upload_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&routing_id_) -
    reinterpret_cast<char*>(&upload_token_)) + sizeof(routing_id_));
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_RequestUploadToken_Response)
}

void CPartnerApps_RequestUploadToken_Response::SharedCtor() {
location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&upload_token_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&routing_id_) -
    reinterpret_cast<char*>(&upload_token_)) + sizeof(routing_id_));
}

CPartnerApps_RequestUploadToken_Response::~CPartnerApps_RequestUploadToken_Response() {
  // @@protoc_insertion_point(destructor:CPartnerApps_RequestUploadToken_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CPartnerApps_RequestUploadToken_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  location_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CPartnerApps_RequestUploadToken_Response::ArenaDtor(void* object) {
  CPartnerApps_RequestUploadToken_Response* _this = reinterpret_cast< CPartnerApps_RequestUploadToken_Response* >(object);
  (void)_this;
}
void CPartnerApps_RequestUploadToken_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CPartnerApps_RequestUploadToken_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CPartnerApps_RequestUploadToken_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_RequestUploadToken_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    location_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&upload_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&routing_id_) -
        reinterpret_cast<char*>(&upload_token_)) + sizeof(routing_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CPartnerApps_RequestUploadToken_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 upload_token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_upload_token(&has_bits);
          upload_token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string location = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_location();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CPartnerApps_RequestUploadToken_Response.location");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 routing_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_routing_id(&has_bits);
          routing_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CPartnerApps_RequestUploadToken_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_RequestUploadToken_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 upload_token = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_upload_token(), target);
  }

  // optional string location = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CPartnerApps_RequestUploadToken_Response.location");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_location(), target);
  }

  // optional uint64 routing_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_routing_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_RequestUploadToken_Response)
  return target;
}

size_t CPartnerApps_RequestUploadToken_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_RequestUploadToken_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string location = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_location());
    }

    // optional uint64 upload_token = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_upload_token());
    }

    // optional uint64 routing_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_routing_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_RequestUploadToken_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_RequestUploadToken_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_RequestUploadToken_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CPartnerApps_RequestUploadToken_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_RequestUploadToken_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_RequestUploadToken_Response)
    MergeFrom(*source);
  }
}

void CPartnerApps_RequestUploadToken_Response::MergeFrom(const CPartnerApps_RequestUploadToken_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_RequestUploadToken_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_location(from._internal_location());
    }
    if (cached_has_bits & 0x00000002u) {
      upload_token_ = from.upload_token_;
    }
    if (cached_has_bits & 0x00000004u) {
      routing_id_ = from.routing_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPartnerApps_RequestUploadToken_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_RequestUploadToken_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_RequestUploadToken_Response::CopyFrom(const CPartnerApps_RequestUploadToken_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_RequestUploadToken_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_RequestUploadToken_Response::IsInitialized() const {
  return true;
}

void CPartnerApps_RequestUploadToken_Response::InternalSwap(CPartnerApps_RequestUploadToken_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  location_.Swap(&other->location_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CPartnerApps_RequestUploadToken_Response, routing_id_)
      + sizeof(CPartnerApps_RequestUploadToken_Response::routing_id_)
      - PROTOBUF_FIELD_OFFSET(CPartnerApps_RequestUploadToken_Response, upload_token_)>(
          reinterpret_cast<char*>(&upload_token_),
          reinterpret_cast<char*>(&other->upload_token_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CPartnerApps_RequestUploadToken_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CPartnerApps_FinishUpload_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CPartnerApps_FinishUpload_Request>()._has_bits_);
  static void set_has_upload_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_routing_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CPartnerApps_FinishUpload_Request::CPartnerApps_FinishUpload_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CPartnerApps_FinishUpload_Request)
}
CPartnerApps_FinishUpload_Request::CPartnerApps_FinishUpload_Request(const CPartnerApps_FinishUpload_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&upload_token_, &from.upload_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&upload_token_)) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_FinishUpload_Request)
}

void CPartnerApps_FinishUpload_Request::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&upload_token_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&upload_token_)) + sizeof(app_id_));
}

CPartnerApps_FinishUpload_Request::~CPartnerApps_FinishUpload_Request() {
  // @@protoc_insertion_point(destructor:CPartnerApps_FinishUpload_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CPartnerApps_FinishUpload_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CPartnerApps_FinishUpload_Request::ArenaDtor(void* object) {
  CPartnerApps_FinishUpload_Request* _this = reinterpret_cast< CPartnerApps_FinishUpload_Request* >(object);
  (void)_this;
}
void CPartnerApps_FinishUpload_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CPartnerApps_FinishUpload_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CPartnerApps_FinishUpload_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_FinishUpload_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&upload_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&app_id_) -
        reinterpret_cast<char*>(&upload_token_)) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CPartnerApps_FinishUpload_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 upload_token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_upload_token(&has_bits);
          upload_token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 routing_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_routing_id(&has_bits);
          routing_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 app_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_app_id(&has_bits);
          app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CPartnerApps_FinishUpload_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_FinishUpload_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 upload_token = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_upload_token(), target);
  }

  // optional uint64 routing_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_routing_id(), target);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_app_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_FinishUpload_Request)
  return target;
}

size_t CPartnerApps_FinishUpload_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_FinishUpload_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 upload_token = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_upload_token());
    }

    // optional uint64 routing_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_routing_id());
    }

    // optional uint32 app_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_app_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_FinishUpload_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_FinishUpload_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_FinishUpload_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CPartnerApps_FinishUpload_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_FinishUpload_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_FinishUpload_Request)
    MergeFrom(*source);
  }
}

void CPartnerApps_FinishUpload_Request::MergeFrom(const CPartnerApps_FinishUpload_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_FinishUpload_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      upload_token_ = from.upload_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      routing_id_ = from.routing_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPartnerApps_FinishUpload_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_FinishUpload_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_FinishUpload_Request::CopyFrom(const CPartnerApps_FinishUpload_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_FinishUpload_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_FinishUpload_Request::IsInitialized() const {
  return true;
}

void CPartnerApps_FinishUpload_Request::InternalSwap(CPartnerApps_FinishUpload_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CPartnerApps_FinishUpload_Request, app_id_)
      + sizeof(CPartnerApps_FinishUpload_Request::app_id_)
      - PROTOBUF_FIELD_OFFSET(CPartnerApps_FinishUpload_Request, upload_token_)>(
          reinterpret_cast<char*>(&upload_token_),
          reinterpret_cast<char*>(&other->upload_token_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CPartnerApps_FinishUpload_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CPartnerApps_FinishUploadKVSign_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CPartnerApps_FinishUploadKVSign_Response>()._has_bits_);
  static void set_has_signed_installscript(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CPartnerApps_FinishUploadKVSign_Response::CPartnerApps_FinishUploadKVSign_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CPartnerApps_FinishUploadKVSign_Response)
}
CPartnerApps_FinishUploadKVSign_Response::CPartnerApps_FinishUploadKVSign_Response(const CPartnerApps_FinishUploadKVSign_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  signed_installscript_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_signed_installscript()) {
    signed_installscript_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_signed_installscript(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_FinishUploadKVSign_Response)
}

void CPartnerApps_FinishUploadKVSign_Response::SharedCtor() {
signed_installscript_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CPartnerApps_FinishUploadKVSign_Response::~CPartnerApps_FinishUploadKVSign_Response() {
  // @@protoc_insertion_point(destructor:CPartnerApps_FinishUploadKVSign_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CPartnerApps_FinishUploadKVSign_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  signed_installscript_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CPartnerApps_FinishUploadKVSign_Response::ArenaDtor(void* object) {
  CPartnerApps_FinishUploadKVSign_Response* _this = reinterpret_cast< CPartnerApps_FinishUploadKVSign_Response* >(object);
  (void)_this;
}
void CPartnerApps_FinishUploadKVSign_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CPartnerApps_FinishUploadKVSign_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CPartnerApps_FinishUploadKVSign_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_FinishUploadKVSign_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    signed_installscript_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CPartnerApps_FinishUploadKVSign_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string signed_installscript = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_signed_installscript();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CPartnerApps_FinishUploadKVSign_Response.signed_installscript");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CPartnerApps_FinishUploadKVSign_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_FinishUploadKVSign_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string signed_installscript = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_signed_installscript().data(), static_cast<int>(this->_internal_signed_installscript().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CPartnerApps_FinishUploadKVSign_Response.signed_installscript");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_signed_installscript(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_FinishUploadKVSign_Response)
  return target;
}

size_t CPartnerApps_FinishUploadKVSign_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_FinishUploadKVSign_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string signed_installscript = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_signed_installscript());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_FinishUploadKVSign_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_FinishUploadKVSign_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_FinishUploadKVSign_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CPartnerApps_FinishUploadKVSign_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_FinishUploadKVSign_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_FinishUploadKVSign_Response)
    MergeFrom(*source);
  }
}

void CPartnerApps_FinishUploadKVSign_Response::MergeFrom(const CPartnerApps_FinishUploadKVSign_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_FinishUploadKVSign_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_signed_installscript()) {
    _internal_set_signed_installscript(from._internal_signed_installscript());
  }
}

void CPartnerApps_FinishUploadKVSign_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_FinishUploadKVSign_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_FinishUploadKVSign_Response::CopyFrom(const CPartnerApps_FinishUploadKVSign_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_FinishUploadKVSign_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_FinishUploadKVSign_Response::IsInitialized() const {
  return true;
}

void CPartnerApps_FinishUploadKVSign_Response::InternalSwap(CPartnerApps_FinishUploadKVSign_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  signed_installscript_.Swap(&other->signed_installscript_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CPartnerApps_FinishUploadKVSign_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CPartnerApps_FinishUploadLegacyDRM_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CPartnerApps_FinishUploadLegacyDRM_Request>()._has_bits_);
  static void set_has_upload_token(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_routing_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_tool_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_use_cloud(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

CPartnerApps_FinishUploadLegacyDRM_Request::CPartnerApps_FinishUploadLegacyDRM_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CPartnerApps_FinishUploadLegacyDRM_Request)
}
CPartnerApps_FinishUploadLegacyDRM_Request::CPartnerApps_FinishUploadLegacyDRM_Request(const CPartnerApps_FinishUploadLegacyDRM_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tool_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_tool_name()) {
    tool_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tool_name(), 
      GetArena());
  }
  ::memcpy(&upload_token_, &from.upload_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&use_cloud_) -
    reinterpret_cast<char*>(&upload_token_)) + sizeof(use_cloud_));
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_FinishUploadLegacyDRM_Request)
}

void CPartnerApps_FinishUploadLegacyDRM_Request::SharedCtor() {
tool_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&upload_token_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&use_cloud_) -
    reinterpret_cast<char*>(&upload_token_)) + sizeof(use_cloud_));
}

CPartnerApps_FinishUploadLegacyDRM_Request::~CPartnerApps_FinishUploadLegacyDRM_Request() {
  // @@protoc_insertion_point(destructor:CPartnerApps_FinishUploadLegacyDRM_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CPartnerApps_FinishUploadLegacyDRM_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  tool_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CPartnerApps_FinishUploadLegacyDRM_Request::ArenaDtor(void* object) {
  CPartnerApps_FinishUploadLegacyDRM_Request* _this = reinterpret_cast< CPartnerApps_FinishUploadLegacyDRM_Request* >(object);
  (void)_this;
}
void CPartnerApps_FinishUploadLegacyDRM_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CPartnerApps_FinishUploadLegacyDRM_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CPartnerApps_FinishUploadLegacyDRM_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_FinishUploadLegacyDRM_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    tool_name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000003eu) {
    ::memset(&upload_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&use_cloud_) -
        reinterpret_cast<char*>(&upload_token_)) + sizeof(use_cloud_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CPartnerApps_FinishUploadLegacyDRM_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 upload_token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_upload_token(&has_bits);
          upload_token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 routing_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_routing_id(&has_bits);
          routing_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 app_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_app_id(&has_bits);
          app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 flags = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_flags(&has_bits);
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string tool_name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_tool_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CPartnerApps_FinishUploadLegacyDRM_Request.tool_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool use_cloud = 6 [default = false];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_use_cloud(&has_bits);
          use_cloud_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CPartnerApps_FinishUploadLegacyDRM_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_FinishUploadLegacyDRM_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 upload_token = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_upload_token(), target);
  }

  // optional uint64 routing_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_routing_id(), target);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_app_id(), target);
  }

  // optional uint32 flags = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_flags(), target);
  }

  // optional string tool_name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_tool_name().data(), static_cast<int>(this->_internal_tool_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CPartnerApps_FinishUploadLegacyDRM_Request.tool_name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_tool_name(), target);
  }

  // optional bool use_cloud = 6 [default = false];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_use_cloud(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_FinishUploadLegacyDRM_Request)
  return target;
}

size_t CPartnerApps_FinishUploadLegacyDRM_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_FinishUploadLegacyDRM_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string tool_name = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_tool_name());
    }

    // optional uint64 upload_token = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_upload_token());
    }

    // optional uint64 routing_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_routing_id());
    }

    // optional uint32 app_id = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_app_id());
    }

    // optional uint32 flags = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_flags());
    }

    // optional bool use_cloud = 6 [default = false];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_FinishUploadLegacyDRM_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_FinishUploadLegacyDRM_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_FinishUploadLegacyDRM_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CPartnerApps_FinishUploadLegacyDRM_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_FinishUploadLegacyDRM_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_FinishUploadLegacyDRM_Request)
    MergeFrom(*source);
  }
}

void CPartnerApps_FinishUploadLegacyDRM_Request::MergeFrom(const CPartnerApps_FinishUploadLegacyDRM_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_FinishUploadLegacyDRM_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_tool_name(from._internal_tool_name());
    }
    if (cached_has_bits & 0x00000002u) {
      upload_token_ = from.upload_token_;
    }
    if (cached_has_bits & 0x00000004u) {
      routing_id_ = from.routing_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000020u) {
      use_cloud_ = from.use_cloud_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPartnerApps_FinishUploadLegacyDRM_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_FinishUploadLegacyDRM_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_FinishUploadLegacyDRM_Request::CopyFrom(const CPartnerApps_FinishUploadLegacyDRM_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_FinishUploadLegacyDRM_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_FinishUploadLegacyDRM_Request::IsInitialized() const {
  return true;
}

void CPartnerApps_FinishUploadLegacyDRM_Request::InternalSwap(CPartnerApps_FinishUploadLegacyDRM_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  tool_name_.Swap(&other->tool_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CPartnerApps_FinishUploadLegacyDRM_Request, use_cloud_)
      + sizeof(CPartnerApps_FinishUploadLegacyDRM_Request::use_cloud_)
      - PROTOBUF_FIELD_OFFSET(CPartnerApps_FinishUploadLegacyDRM_Request, upload_token_)>(
          reinterpret_cast<char*>(&upload_token_),
          reinterpret_cast<char*>(&other->upload_token_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CPartnerApps_FinishUploadLegacyDRM_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CPartnerApps_FinishUploadLegacyDRM_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CPartnerApps_FinishUploadLegacyDRM_Response>()._has_bits_);
  static void set_has_file_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CPartnerApps_FinishUploadLegacyDRM_Response::CPartnerApps_FinishUploadLegacyDRM_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CPartnerApps_FinishUploadLegacyDRM_Response)
}
CPartnerApps_FinishUploadLegacyDRM_Response::CPartnerApps_FinishUploadLegacyDRM_Response(const CPartnerApps_FinishUploadLegacyDRM_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  file_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_file_id()) {
    file_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_file_id(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_FinishUploadLegacyDRM_Response)
}

void CPartnerApps_FinishUploadLegacyDRM_Response::SharedCtor() {
file_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CPartnerApps_FinishUploadLegacyDRM_Response::~CPartnerApps_FinishUploadLegacyDRM_Response() {
  // @@protoc_insertion_point(destructor:CPartnerApps_FinishUploadLegacyDRM_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CPartnerApps_FinishUploadLegacyDRM_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  file_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CPartnerApps_FinishUploadLegacyDRM_Response::ArenaDtor(void* object) {
  CPartnerApps_FinishUploadLegacyDRM_Response* _this = reinterpret_cast< CPartnerApps_FinishUploadLegacyDRM_Response* >(object);
  (void)_this;
}
void CPartnerApps_FinishUploadLegacyDRM_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CPartnerApps_FinishUploadLegacyDRM_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CPartnerApps_FinishUploadLegacyDRM_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_FinishUploadLegacyDRM_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    file_id_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CPartnerApps_FinishUploadLegacyDRM_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string file_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_file_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CPartnerApps_FinishUploadLegacyDRM_Response.file_id");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CPartnerApps_FinishUploadLegacyDRM_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_FinishUploadLegacyDRM_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_file_id().data(), static_cast<int>(this->_internal_file_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CPartnerApps_FinishUploadLegacyDRM_Response.file_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_FinishUploadLegacyDRM_Response)
  return target;
}

size_t CPartnerApps_FinishUploadLegacyDRM_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_FinishUploadLegacyDRM_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string file_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_FinishUploadLegacyDRM_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_FinishUploadLegacyDRM_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_FinishUploadLegacyDRM_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CPartnerApps_FinishUploadLegacyDRM_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_FinishUploadLegacyDRM_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_FinishUploadLegacyDRM_Response)
    MergeFrom(*source);
  }
}

void CPartnerApps_FinishUploadLegacyDRM_Response::MergeFrom(const CPartnerApps_FinishUploadLegacyDRM_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_FinishUploadLegacyDRM_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_file_id()) {
    _internal_set_file_id(from._internal_file_id());
  }
}

void CPartnerApps_FinishUploadLegacyDRM_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_FinishUploadLegacyDRM_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_FinishUploadLegacyDRM_Response::CopyFrom(const CPartnerApps_FinishUploadLegacyDRM_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_FinishUploadLegacyDRM_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_FinishUploadLegacyDRM_Response::IsInitialized() const {
  return true;
}

void CPartnerApps_FinishUploadLegacyDRM_Response::InternalSwap(CPartnerApps_FinishUploadLegacyDRM_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  file_id_.Swap(&other->file_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CPartnerApps_FinishUploadLegacyDRM_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CPartnerApps_FinishUpload_Response::_Internal {
 public:
};

CPartnerApps_FinishUpload_Response::CPartnerApps_FinishUpload_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CPartnerApps_FinishUpload_Response)
}
CPartnerApps_FinishUpload_Response::CPartnerApps_FinishUpload_Response(const CPartnerApps_FinishUpload_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_FinishUpload_Response)
}

void CPartnerApps_FinishUpload_Response::SharedCtor() {
}

CPartnerApps_FinishUpload_Response::~CPartnerApps_FinishUpload_Response() {
  // @@protoc_insertion_point(destructor:CPartnerApps_FinishUpload_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CPartnerApps_FinishUpload_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CPartnerApps_FinishUpload_Response::ArenaDtor(void* object) {
  CPartnerApps_FinishUpload_Response* _this = reinterpret_cast< CPartnerApps_FinishUpload_Response* >(object);
  (void)_this;
}
void CPartnerApps_FinishUpload_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CPartnerApps_FinishUpload_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CPartnerApps_FinishUpload_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_FinishUpload_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CPartnerApps_FinishUpload_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CPartnerApps_FinishUpload_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_FinishUpload_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_FinishUpload_Response)
  return target;
}

size_t CPartnerApps_FinishUpload_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_FinishUpload_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_FinishUpload_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_FinishUpload_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_FinishUpload_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CPartnerApps_FinishUpload_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_FinishUpload_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_FinishUpload_Response)
    MergeFrom(*source);
  }
}

void CPartnerApps_FinishUpload_Response::MergeFrom(const CPartnerApps_FinishUpload_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_FinishUpload_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CPartnerApps_FinishUpload_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_FinishUpload_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_FinishUpload_Response::CopyFrom(const CPartnerApps_FinishUpload_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_FinishUpload_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_FinishUpload_Response::IsInitialized() const {
  return true;
}

void CPartnerApps_FinishUpload_Response::InternalSwap(CPartnerApps_FinishUpload_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CPartnerApps_FinishUpload_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CPartnerApps_FinishUploadDepot_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CPartnerApps_FinishUploadDepot_Request>()._has_bits_);
  static void set_has_upload_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_routing_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_depot_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_build_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

CPartnerApps_FinishUploadDepot_Request::CPartnerApps_FinishUploadDepot_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CPartnerApps_FinishUploadDepot_Request)
}
CPartnerApps_FinishUploadDepot_Request::CPartnerApps_FinishUploadDepot_Request(const CPartnerApps_FinishUploadDepot_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&upload_token_, &from.upload_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&build_flags_) -
    reinterpret_cast<char*>(&upload_token_)) + sizeof(build_flags_));
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_FinishUploadDepot_Request)
}

void CPartnerApps_FinishUploadDepot_Request::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&upload_token_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&build_flags_) -
    reinterpret_cast<char*>(&upload_token_)) + sizeof(build_flags_));
}

CPartnerApps_FinishUploadDepot_Request::~CPartnerApps_FinishUploadDepot_Request() {
  // @@protoc_insertion_point(destructor:CPartnerApps_FinishUploadDepot_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CPartnerApps_FinishUploadDepot_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CPartnerApps_FinishUploadDepot_Request::ArenaDtor(void* object) {
  CPartnerApps_FinishUploadDepot_Request* _this = reinterpret_cast< CPartnerApps_FinishUploadDepot_Request* >(object);
  (void)_this;
}
void CPartnerApps_FinishUploadDepot_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CPartnerApps_FinishUploadDepot_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CPartnerApps_FinishUploadDepot_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_FinishUploadDepot_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&upload_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&build_flags_) -
        reinterpret_cast<char*>(&upload_token_)) + sizeof(build_flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CPartnerApps_FinishUploadDepot_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 upload_token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_upload_token(&has_bits);
          upload_token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 routing_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_routing_id(&has_bits);
          routing_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 app_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_app_id(&has_bits);
          app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 depot_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_depot_id(&has_bits);
          depot_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 build_flags = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_build_flags(&has_bits);
          build_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CPartnerApps_FinishUploadDepot_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_FinishUploadDepot_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 upload_token = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_upload_token(), target);
  }

  // optional uint64 routing_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_routing_id(), target);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_app_id(), target);
  }

  // optional uint32 depot_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_depot_id(), target);
  }

  // optional uint32 build_flags = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_build_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_FinishUploadDepot_Request)
  return target;
}

size_t CPartnerApps_FinishUploadDepot_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_FinishUploadDepot_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional uint64 upload_token = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_upload_token());
    }

    // optional uint64 routing_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_routing_id());
    }

    // optional uint32 app_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_app_id());
    }

    // optional uint32 depot_id = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_depot_id());
    }

    // optional uint32 build_flags = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_build_flags());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_FinishUploadDepot_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_FinishUploadDepot_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_FinishUploadDepot_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CPartnerApps_FinishUploadDepot_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_FinishUploadDepot_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_FinishUploadDepot_Request)
    MergeFrom(*source);
  }
}

void CPartnerApps_FinishUploadDepot_Request::MergeFrom(const CPartnerApps_FinishUploadDepot_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_FinishUploadDepot_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      upload_token_ = from.upload_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      routing_id_ = from.routing_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      depot_id_ = from.depot_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      build_flags_ = from.build_flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPartnerApps_FinishUploadDepot_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_FinishUploadDepot_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_FinishUploadDepot_Request::CopyFrom(const CPartnerApps_FinishUploadDepot_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_FinishUploadDepot_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_FinishUploadDepot_Request::IsInitialized() const {
  return true;
}

void CPartnerApps_FinishUploadDepot_Request::InternalSwap(CPartnerApps_FinishUploadDepot_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CPartnerApps_FinishUploadDepot_Request, build_flags_)
      + sizeof(CPartnerApps_FinishUploadDepot_Request::build_flags_)
      - PROTOBUF_FIELD_OFFSET(CPartnerApps_FinishUploadDepot_Request, upload_token_)>(
          reinterpret_cast<char*>(&upload_token_),
          reinterpret_cast<char*>(&other->upload_token_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CPartnerApps_FinishUploadDepot_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CPartnerApps_FinishUploadDepot_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CPartnerApps_FinishUploadDepot_Response>()._has_bits_);
  static void set_has_build_routing_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CPartnerApps_FinishUploadDepot_Response::CPartnerApps_FinishUploadDepot_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CPartnerApps_FinishUploadDepot_Response)
}
CPartnerApps_FinishUploadDepot_Response::CPartnerApps_FinishUploadDepot_Response(const CPartnerApps_FinishUploadDepot_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  build_routing_id_ = from.build_routing_id_;
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_FinishUploadDepot_Response)
}

void CPartnerApps_FinishUploadDepot_Response::SharedCtor() {
build_routing_id_ = PROTOBUF_ULONGLONG(0);
}

CPartnerApps_FinishUploadDepot_Response::~CPartnerApps_FinishUploadDepot_Response() {
  // @@protoc_insertion_point(destructor:CPartnerApps_FinishUploadDepot_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CPartnerApps_FinishUploadDepot_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CPartnerApps_FinishUploadDepot_Response::ArenaDtor(void* object) {
  CPartnerApps_FinishUploadDepot_Response* _this = reinterpret_cast< CPartnerApps_FinishUploadDepot_Response* >(object);
  (void)_this;
}
void CPartnerApps_FinishUploadDepot_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CPartnerApps_FinishUploadDepot_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CPartnerApps_FinishUploadDepot_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_FinishUploadDepot_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  build_routing_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CPartnerApps_FinishUploadDepot_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 build_routing_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_build_routing_id(&has_bits);
          build_routing_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CPartnerApps_FinishUploadDepot_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_FinishUploadDepot_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 build_routing_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_build_routing_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_FinishUploadDepot_Response)
  return target;
}

size_t CPartnerApps_FinishUploadDepot_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_FinishUploadDepot_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 build_routing_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_build_routing_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_FinishUploadDepot_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_FinishUploadDepot_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_FinishUploadDepot_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CPartnerApps_FinishUploadDepot_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_FinishUploadDepot_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_FinishUploadDepot_Response)
    MergeFrom(*source);
  }
}

void CPartnerApps_FinishUploadDepot_Response::MergeFrom(const CPartnerApps_FinishUploadDepot_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_FinishUploadDepot_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_build_routing_id()) {
    _internal_set_build_routing_id(from._internal_build_routing_id());
  }
}

void CPartnerApps_FinishUploadDepot_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_FinishUploadDepot_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_FinishUploadDepot_Response::CopyFrom(const CPartnerApps_FinishUploadDepot_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_FinishUploadDepot_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_FinishUploadDepot_Response::IsInitialized() const {
  return true;
}

void CPartnerApps_FinishUploadDepot_Response::InternalSwap(CPartnerApps_FinishUploadDepot_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(build_routing_id_, other->build_routing_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CPartnerApps_FinishUploadDepot_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CPartnerApps_GetDepotBuildResult_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CPartnerApps_GetDepotBuildResult_Request>()._has_bits_);
  static void set_has_upload_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_routing_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CPartnerApps_GetDepotBuildResult_Request::CPartnerApps_GetDepotBuildResult_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CPartnerApps_GetDepotBuildResult_Request)
}
CPartnerApps_GetDepotBuildResult_Request::CPartnerApps_GetDepotBuildResult_Request(const CPartnerApps_GetDepotBuildResult_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&upload_token_, &from.upload_token_,
    static_cast<size_t>(reinterpret_cast<char*>(&routing_id_) -
    reinterpret_cast<char*>(&upload_token_)) + sizeof(routing_id_));
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_GetDepotBuildResult_Request)
}

void CPartnerApps_GetDepotBuildResult_Request::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&upload_token_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&routing_id_) -
    reinterpret_cast<char*>(&upload_token_)) + sizeof(routing_id_));
}

CPartnerApps_GetDepotBuildResult_Request::~CPartnerApps_GetDepotBuildResult_Request() {
  // @@protoc_insertion_point(destructor:CPartnerApps_GetDepotBuildResult_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CPartnerApps_GetDepotBuildResult_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CPartnerApps_GetDepotBuildResult_Request::ArenaDtor(void* object) {
  CPartnerApps_GetDepotBuildResult_Request* _this = reinterpret_cast< CPartnerApps_GetDepotBuildResult_Request* >(object);
  (void)_this;
}
void CPartnerApps_GetDepotBuildResult_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CPartnerApps_GetDepotBuildResult_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CPartnerApps_GetDepotBuildResult_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_GetDepotBuildResult_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&upload_token_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&routing_id_) -
        reinterpret_cast<char*>(&upload_token_)) + sizeof(routing_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CPartnerApps_GetDepotBuildResult_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 upload_token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_upload_token(&has_bits);
          upload_token_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 routing_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_routing_id(&has_bits);
          routing_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CPartnerApps_GetDepotBuildResult_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_GetDepotBuildResult_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 upload_token = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_upload_token(), target);
  }

  // optional uint64 routing_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_routing_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_GetDepotBuildResult_Request)
  return target;
}

size_t CPartnerApps_GetDepotBuildResult_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_GetDepotBuildResult_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 upload_token = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_upload_token());
    }

    // optional uint64 routing_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_routing_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_GetDepotBuildResult_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_GetDepotBuildResult_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_GetDepotBuildResult_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CPartnerApps_GetDepotBuildResult_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_GetDepotBuildResult_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_GetDepotBuildResult_Request)
    MergeFrom(*source);
  }
}

void CPartnerApps_GetDepotBuildResult_Request::MergeFrom(const CPartnerApps_GetDepotBuildResult_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_GetDepotBuildResult_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      upload_token_ = from.upload_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      routing_id_ = from.routing_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPartnerApps_GetDepotBuildResult_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_GetDepotBuildResult_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_GetDepotBuildResult_Request::CopyFrom(const CPartnerApps_GetDepotBuildResult_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_GetDepotBuildResult_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_GetDepotBuildResult_Request::IsInitialized() const {
  return true;
}

void CPartnerApps_GetDepotBuildResult_Request::InternalSwap(CPartnerApps_GetDepotBuildResult_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CPartnerApps_GetDepotBuildResult_Request, routing_id_)
      + sizeof(CPartnerApps_GetDepotBuildResult_Request::routing_id_)
      - PROTOBUF_FIELD_OFFSET(CPartnerApps_GetDepotBuildResult_Request, upload_token_)>(
          reinterpret_cast<char*>(&upload_token_),
          reinterpret_cast<char*>(&other->upload_token_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CPartnerApps_GetDepotBuildResult_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CPartnerApps_GetDepotBuildResult_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CPartnerApps_GetDepotBuildResult_Response>()._has_bits_);
  static void set_has_manifest_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_error_msg(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CPartnerApps_GetDepotBuildResult_Response::CPartnerApps_GetDepotBuildResult_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CPartnerApps_GetDepotBuildResult_Response)
}
CPartnerApps_GetDepotBuildResult_Response::CPartnerApps_GetDepotBuildResult_Response(const CPartnerApps_GetDepotBuildResult_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_error_msg()) {
    error_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_error_msg(), 
      GetArena());
  }
  manifest_id_ = from.manifest_id_;
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_GetDepotBuildResult_Response)
}

void CPartnerApps_GetDepotBuildResult_Response::SharedCtor() {
error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
manifest_id_ = PROTOBUF_ULONGLONG(0);
}

CPartnerApps_GetDepotBuildResult_Response::~CPartnerApps_GetDepotBuildResult_Response() {
  // @@protoc_insertion_point(destructor:CPartnerApps_GetDepotBuildResult_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CPartnerApps_GetDepotBuildResult_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  error_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CPartnerApps_GetDepotBuildResult_Response::ArenaDtor(void* object) {
  CPartnerApps_GetDepotBuildResult_Response* _this = reinterpret_cast< CPartnerApps_GetDepotBuildResult_Response* >(object);
  (void)_this;
}
void CPartnerApps_GetDepotBuildResult_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CPartnerApps_GetDepotBuildResult_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CPartnerApps_GetDepotBuildResult_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_GetDepotBuildResult_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    error_msg_.ClearNonDefaultToEmpty();
  }
  manifest_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CPartnerApps_GetDepotBuildResult_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 manifest_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_manifest_id(&has_bits);
          manifest_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string error_msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_error_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CPartnerApps_GetDepotBuildResult_Response.error_msg");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CPartnerApps_GetDepotBuildResult_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_GetDepotBuildResult_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 manifest_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_manifest_id(), target);
  }

  // optional string error_msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_error_msg().data(), static_cast<int>(this->_internal_error_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CPartnerApps_GetDepotBuildResult_Response.error_msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_GetDepotBuildResult_Response)
  return target;
}

size_t CPartnerApps_GetDepotBuildResult_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_GetDepotBuildResult_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string error_msg = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_error_msg());
    }

    // optional uint64 manifest_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_manifest_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_GetDepotBuildResult_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_GetDepotBuildResult_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_GetDepotBuildResult_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CPartnerApps_GetDepotBuildResult_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_GetDepotBuildResult_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_GetDepotBuildResult_Response)
    MergeFrom(*source);
  }
}

void CPartnerApps_GetDepotBuildResult_Response::MergeFrom(const CPartnerApps_GetDepotBuildResult_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_GetDepotBuildResult_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_error_msg(from._internal_error_msg());
    }
    if (cached_has_bits & 0x00000002u) {
      manifest_id_ = from.manifest_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPartnerApps_GetDepotBuildResult_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_GetDepotBuildResult_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_GetDepotBuildResult_Response::CopyFrom(const CPartnerApps_GetDepotBuildResult_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_GetDepotBuildResult_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_GetDepotBuildResult_Response::IsInitialized() const {
  return true;
}

void CPartnerApps_GetDepotBuildResult_Response::InternalSwap(CPartnerApps_GetDepotBuildResult_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  error_msg_.Swap(&other->error_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(manifest_id_, other->manifest_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CPartnerApps_GetDepotBuildResult_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CPartnerApps_FindDRMUploads_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CPartnerApps_FindDRMUploads_Request>()._has_bits_);
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CPartnerApps_FindDRMUploads_Request::CPartnerApps_FindDRMUploads_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CPartnerApps_FindDRMUploads_Request)
}
CPartnerApps_FindDRMUploads_Request::CPartnerApps_FindDRMUploads_Request(const CPartnerApps_FindDRMUploads_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_FindDRMUploads_Request)
}

void CPartnerApps_FindDRMUploads_Request::SharedCtor() {
app_id_ = 0;
}

CPartnerApps_FindDRMUploads_Request::~CPartnerApps_FindDRMUploads_Request() {
  // @@protoc_insertion_point(destructor:CPartnerApps_FindDRMUploads_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CPartnerApps_FindDRMUploads_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CPartnerApps_FindDRMUploads_Request::ArenaDtor(void* object) {
  CPartnerApps_FindDRMUploads_Request* _this = reinterpret_cast< CPartnerApps_FindDRMUploads_Request* >(object);
  (void)_this;
}
void CPartnerApps_FindDRMUploads_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CPartnerApps_FindDRMUploads_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CPartnerApps_FindDRMUploads_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_FindDRMUploads_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  app_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CPartnerApps_FindDRMUploads_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 app_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_app_id(&has_bits);
          app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CPartnerApps_FindDRMUploads_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_FindDRMUploads_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_app_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_FindDRMUploads_Request)
  return target;
}

size_t CPartnerApps_FindDRMUploads_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_FindDRMUploads_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 app_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_app_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_FindDRMUploads_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_FindDRMUploads_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_FindDRMUploads_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CPartnerApps_FindDRMUploads_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_FindDRMUploads_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_FindDRMUploads_Request)
    MergeFrom(*source);
  }
}

void CPartnerApps_FindDRMUploads_Request::MergeFrom(const CPartnerApps_FindDRMUploads_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_FindDRMUploads_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_app_id()) {
    _internal_set_app_id(from._internal_app_id());
  }
}

void CPartnerApps_FindDRMUploads_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_FindDRMUploads_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_FindDRMUploads_Request::CopyFrom(const CPartnerApps_FindDRMUploads_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_FindDRMUploads_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_FindDRMUploads_Request::IsInitialized() const {
  return true;
}

void CPartnerApps_FindDRMUploads_Request::InternalSwap(CPartnerApps_FindDRMUploads_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(app_id_, other->app_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CPartnerApps_FindDRMUploads_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CPartnerApps_ExistingDRMUpload::_Internal {
 public:
  using HasBits = decltype(std::declval<CPartnerApps_ExistingDRMUpload>()._has_bits_);
  static void set_has_file_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_actor_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_supplied_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_mod_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_orig_file_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CPartnerApps_ExistingDRMUpload::CPartnerApps_ExistingDRMUpload(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CPartnerApps_ExistingDRMUpload)
}
CPartnerApps_ExistingDRMUpload::CPartnerApps_ExistingDRMUpload(const CPartnerApps_ExistingDRMUpload& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  file_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_file_id()) {
    file_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_file_id(), 
      GetArena());
  }
  supplied_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_supplied_name()) {
    supplied_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_supplied_name(), 
      GetArena());
  }
  mod_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_mod_type()) {
    mod_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mod_type(), 
      GetArena());
  }
  orig_file_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_orig_file_id()) {
    orig_file_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_orig_file_id(), 
      GetArena());
  }
  ::memcpy(&app_id_, &from.app_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_ExistingDRMUpload)
}

void CPartnerApps_ExistingDRMUpload::SharedCtor() {
file_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
supplied_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
mod_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
orig_file_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&app_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&app_id_)) + sizeof(timestamp_));
}

CPartnerApps_ExistingDRMUpload::~CPartnerApps_ExistingDRMUpload() {
  // @@protoc_insertion_point(destructor:CPartnerApps_ExistingDRMUpload)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CPartnerApps_ExistingDRMUpload::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  file_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  supplied_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mod_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  orig_file_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CPartnerApps_ExistingDRMUpload::ArenaDtor(void* object) {
  CPartnerApps_ExistingDRMUpload* _this = reinterpret_cast< CPartnerApps_ExistingDRMUpload* >(object);
  (void)_this;
}
void CPartnerApps_ExistingDRMUpload::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CPartnerApps_ExistingDRMUpload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CPartnerApps_ExistingDRMUpload::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_ExistingDRMUpload)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      file_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      supplied_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      mod_type_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      orig_file_id_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&app_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timestamp_) -
        reinterpret_cast<char*>(&app_id_)) + sizeof(timestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CPartnerApps_ExistingDRMUpload::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string file_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_file_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CPartnerApps_ExistingDRMUpload.file_id");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 app_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_app_id(&has_bits);
          app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 actor_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_actor_id(&has_bits);
          actor_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string supplied_name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_supplied_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CPartnerApps_ExistingDRMUpload.supplied_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 flags = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_flags(&has_bits);
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string mod_type = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_mod_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CPartnerApps_ExistingDRMUpload.mod_type");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed32 timestamp = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          _Internal::set_has_timestamp(&has_bits);
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // optional string orig_file_id = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_orig_file_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CPartnerApps_ExistingDRMUpload.orig_file_id");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CPartnerApps_ExistingDRMUpload::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_ExistingDRMUpload)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_file_id().data(), static_cast<int>(this->_internal_file_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CPartnerApps_ExistingDRMUpload.file_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_app_id(), target);
  }

  // optional int32 actor_id = 3;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_actor_id(), target);
  }

  // optional string supplied_name = 5;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_supplied_name().data(), static_cast<int>(this->_internal_supplied_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CPartnerApps_ExistingDRMUpload.supplied_name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_supplied_name(), target);
  }

  // optional uint32 flags = 6;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_flags(), target);
  }

  // optional string mod_type = 7;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_mod_type().data(), static_cast<int>(this->_internal_mod_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CPartnerApps_ExistingDRMUpload.mod_type");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_mod_type(), target);
  }

  // optional fixed32 timestamp = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(8, this->_internal_timestamp(), target);
  }

  // optional string orig_file_id = 9;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_orig_file_id().data(), static_cast<int>(this->_internal_orig_file_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CPartnerApps_ExistingDRMUpload.orig_file_id");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_orig_file_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_ExistingDRMUpload)
  return target;
}

size_t CPartnerApps_ExistingDRMUpload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_ExistingDRMUpload)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_file_id());
    }

    // optional string supplied_name = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_supplied_name());
    }

    // optional string mod_type = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_mod_type());
    }

    // optional string orig_file_id = 9;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_orig_file_id());
    }

    // optional uint32 app_id = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_app_id());
    }

    // optional int32 actor_id = 3;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_actor_id());
    }

    // optional uint32 flags = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_flags());
    }

    // optional fixed32 timestamp = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 4;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_ExistingDRMUpload::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_ExistingDRMUpload)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_ExistingDRMUpload* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CPartnerApps_ExistingDRMUpload>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_ExistingDRMUpload)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_ExistingDRMUpload)
    MergeFrom(*source);
  }
}

void CPartnerApps_ExistingDRMUpload::MergeFrom(const CPartnerApps_ExistingDRMUpload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_ExistingDRMUpload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_file_id(from._internal_file_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_supplied_name(from._internal_supplied_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_mod_type(from._internal_mod_type());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_orig_file_id(from._internal_orig_file_id());
    }
    if (cached_has_bits & 0x00000010u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      actor_id_ = from.actor_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      flags_ = from.flags_;
    }
    if (cached_has_bits & 0x00000080u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPartnerApps_ExistingDRMUpload::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_ExistingDRMUpload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_ExistingDRMUpload::CopyFrom(const CPartnerApps_ExistingDRMUpload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_ExistingDRMUpload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_ExistingDRMUpload::IsInitialized() const {
  return true;
}

void CPartnerApps_ExistingDRMUpload::InternalSwap(CPartnerApps_ExistingDRMUpload* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  file_id_.Swap(&other->file_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  supplied_name_.Swap(&other->supplied_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mod_type_.Swap(&other->mod_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  orig_file_id_.Swap(&other->orig_file_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CPartnerApps_ExistingDRMUpload, timestamp_)
      + sizeof(CPartnerApps_ExistingDRMUpload::timestamp_)
      - PROTOBUF_FIELD_OFFSET(CPartnerApps_ExistingDRMUpload, app_id_)>(
          reinterpret_cast<char*>(&app_id_),
          reinterpret_cast<char*>(&other->app_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CPartnerApps_ExistingDRMUpload::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CPartnerApps_FindDRMUploads_Response::_Internal {
 public:
};

CPartnerApps_FindDRMUploads_Response::CPartnerApps_FindDRMUploads_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  uploads_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CPartnerApps_FindDRMUploads_Response)
}
CPartnerApps_FindDRMUploads_Response::CPartnerApps_FindDRMUploads_Response(const CPartnerApps_FindDRMUploads_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      uploads_(from.uploads_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_FindDRMUploads_Response)
}

void CPartnerApps_FindDRMUploads_Response::SharedCtor() {
}

CPartnerApps_FindDRMUploads_Response::~CPartnerApps_FindDRMUploads_Response() {
  // @@protoc_insertion_point(destructor:CPartnerApps_FindDRMUploads_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CPartnerApps_FindDRMUploads_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CPartnerApps_FindDRMUploads_Response::ArenaDtor(void* object) {
  CPartnerApps_FindDRMUploads_Response* _this = reinterpret_cast< CPartnerApps_FindDRMUploads_Response* >(object);
  (void)_this;
}
void CPartnerApps_FindDRMUploads_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CPartnerApps_FindDRMUploads_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CPartnerApps_FindDRMUploads_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_FindDRMUploads_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uploads_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CPartnerApps_FindDRMUploads_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .CPartnerApps_ExistingDRMUpload uploads = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_uploads(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CPartnerApps_FindDRMUploads_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_FindDRMUploads_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CPartnerApps_ExistingDRMUpload uploads = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_uploads_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_uploads(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_FindDRMUploads_Response)
  return target;
}

size_t CPartnerApps_FindDRMUploads_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_FindDRMUploads_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CPartnerApps_ExistingDRMUpload uploads = 1;
  total_size += 1UL * this->_internal_uploads_size();
  for (const auto& msg : this->uploads_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_FindDRMUploads_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_FindDRMUploads_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_FindDRMUploads_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CPartnerApps_FindDRMUploads_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_FindDRMUploads_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_FindDRMUploads_Response)
    MergeFrom(*source);
  }
}

void CPartnerApps_FindDRMUploads_Response::MergeFrom(const CPartnerApps_FindDRMUploads_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_FindDRMUploads_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uploads_.MergeFrom(from.uploads_);
}

void CPartnerApps_FindDRMUploads_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_FindDRMUploads_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_FindDRMUploads_Response::CopyFrom(const CPartnerApps_FindDRMUploads_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_FindDRMUploads_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_FindDRMUploads_Response::IsInitialized() const {
  return true;
}

void CPartnerApps_FindDRMUploads_Response::InternalSwap(CPartnerApps_FindDRMUploads_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  uploads_.InternalSwap(&other->uploads_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CPartnerApps_FindDRMUploads_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CPartnerApps_Download_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CPartnerApps_Download_Request>()._has_bits_);
  static void set_has_file_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CPartnerApps_Download_Request::CPartnerApps_Download_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CPartnerApps_Download_Request)
}
CPartnerApps_Download_Request::CPartnerApps_Download_Request(const CPartnerApps_Download_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  file_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_file_id()) {
    file_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_file_id(), 
      GetArena());
  }
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_Download_Request)
}

void CPartnerApps_Download_Request::SharedCtor() {
file_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
app_id_ = 0;
}

CPartnerApps_Download_Request::~CPartnerApps_Download_Request() {
  // @@protoc_insertion_point(destructor:CPartnerApps_Download_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CPartnerApps_Download_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  file_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CPartnerApps_Download_Request::ArenaDtor(void* object) {
  CPartnerApps_Download_Request* _this = reinterpret_cast< CPartnerApps_Download_Request* >(object);
  (void)_this;
}
void CPartnerApps_Download_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CPartnerApps_Download_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CPartnerApps_Download_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_Download_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    file_id_.ClearNonDefaultToEmpty();
  }
  app_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CPartnerApps_Download_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string file_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_file_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CPartnerApps_Download_Request.file_id");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 app_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_app_id(&has_bits);
          app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CPartnerApps_Download_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_Download_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_file_id().data(), static_cast<int>(this->_internal_file_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CPartnerApps_Download_Request.file_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file_id(), target);
  }

  // optional int32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_app_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_Download_Request)
  return target;
}

size_t CPartnerApps_Download_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_Download_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string file_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_file_id());
    }

    // optional int32 app_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_app_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_Download_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_Download_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_Download_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CPartnerApps_Download_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_Download_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_Download_Request)
    MergeFrom(*source);
  }
}

void CPartnerApps_Download_Request::MergeFrom(const CPartnerApps_Download_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_Download_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_file_id(from._internal_file_id());
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPartnerApps_Download_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_Download_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_Download_Request::CopyFrom(const CPartnerApps_Download_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_Download_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_Download_Request::IsInitialized() const {
  return true;
}

void CPartnerApps_Download_Request::InternalSwap(CPartnerApps_Download_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  file_id_.Swap(&other->file_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(app_id_, other->app_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CPartnerApps_Download_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CPartnerApps_Download_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CPartnerApps_Download_Response>()._has_bits_);
  static void set_has_download_url(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_app_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CPartnerApps_Download_Response::CPartnerApps_Download_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CPartnerApps_Download_Response)
}
CPartnerApps_Download_Response::CPartnerApps_Download_Response(const CPartnerApps_Download_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  download_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_download_url()) {
    download_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_download_url(), 
      GetArena());
  }
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:CPartnerApps_Download_Response)
}

void CPartnerApps_Download_Response::SharedCtor() {
download_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
app_id_ = 0;
}

CPartnerApps_Download_Response::~CPartnerApps_Download_Response() {
  // @@protoc_insertion_point(destructor:CPartnerApps_Download_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CPartnerApps_Download_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  download_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CPartnerApps_Download_Response::ArenaDtor(void* object) {
  CPartnerApps_Download_Response* _this = reinterpret_cast< CPartnerApps_Download_Response* >(object);
  (void)_this;
}
void CPartnerApps_Download_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CPartnerApps_Download_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CPartnerApps_Download_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CPartnerApps_Download_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    download_url_.ClearNonDefaultToEmpty();
  }
  app_id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CPartnerApps_Download_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string download_url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_download_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CPartnerApps_Download_Response.download_url");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 app_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_app_id(&has_bits);
          app_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CPartnerApps_Download_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CPartnerApps_Download_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string download_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_download_url().data(), static_cast<int>(this->_internal_download_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CPartnerApps_Download_Response.download_url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_download_url(), target);
  }

  // optional int32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_app_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPartnerApps_Download_Response)
  return target;
}

size_t CPartnerApps_Download_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPartnerApps_Download_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string download_url = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_download_url());
    }

    // optional int32 app_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_app_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CPartnerApps_Download_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CPartnerApps_Download_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CPartnerApps_Download_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CPartnerApps_Download_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CPartnerApps_Download_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CPartnerApps_Download_Response)
    MergeFrom(*source);
  }
}

void CPartnerApps_Download_Response::MergeFrom(const CPartnerApps_Download_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CPartnerApps_Download_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_download_url(from._internal_download_url());
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CPartnerApps_Download_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CPartnerApps_Download_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CPartnerApps_Download_Response::CopyFrom(const CPartnerApps_Download_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPartnerApps_Download_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CPartnerApps_Download_Response::IsInitialized() const {
  return true;
}

void CPartnerApps_Download_Response::InternalSwap(CPartnerApps_Download_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  download_url_.Swap(&other->download_url_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(app_id_, other->app_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CPartnerApps_Download_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

PartnerApps::~PartnerApps() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* PartnerApps::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_steammessages_5fpartnerapps_2esteamclient_2eproto);
  return file_level_service_descriptors_steammessages_5fpartnerapps_2esteamclient_2eproto[0];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* PartnerApps::GetDescriptor() {
  return descriptor();
}

void PartnerApps::RequestKVSignUploadToken(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CPartnerApps_RequestUploadToken_Request*,
                         ::CPartnerApps_RequestUploadToken_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RequestKVSignUploadToken() not implemented.");
  done->Run();
}

void PartnerApps::RequestDRMUploadToken(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CPartnerApps_RequestUploadToken_Request*,
                         ::CPartnerApps_RequestUploadToken_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RequestDRMUploadToken() not implemented.");
  done->Run();
}

void PartnerApps::RequestCEGUploadToken(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CPartnerApps_RequestUploadToken_Request*,
                         ::CPartnerApps_RequestUploadToken_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RequestCEGUploadToken() not implemented.");
  done->Run();
}

void PartnerApps::RequestDepotUploadToken(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CPartnerApps_RequestUploadToken_Request*,
                         ::CPartnerApps_RequestUploadToken_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RequestDepotUploadToken() not implemented.");
  done->Run();
}

void PartnerApps::FinishUploadKVSign(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CPartnerApps_FinishUpload_Request*,
                         ::CPartnerApps_FinishUploadKVSign_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method FinishUploadKVSign() not implemented.");
  done->Run();
}

void PartnerApps::FinishUploadDRMUpload(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CPartnerApps_FinishUploadLegacyDRM_Request*,
                         ::CPartnerApps_FinishUploadLegacyDRM_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method FinishUploadDRMUpload() not implemented.");
  done->Run();
}

void PartnerApps::FinishUploadCEGUpload(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CPartnerApps_FinishUpload_Request*,
                         ::CPartnerApps_FinishUpload_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method FinishUploadCEGUpload() not implemented.");
  done->Run();
}

void PartnerApps::FinishUploadDepotUpload(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CPartnerApps_FinishUploadDepot_Request*,
                         ::CPartnerApps_FinishUploadDepot_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method FinishUploadDepotUpload() not implemented.");
  done->Run();
}

void PartnerApps::GetDepotBuildResult(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CPartnerApps_GetDepotBuildResult_Request*,
                         ::CPartnerApps_GetDepotBuildResult_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetDepotBuildResult() not implemented.");
  done->Run();
}

void PartnerApps::FindDRMUploads(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CPartnerApps_FindDRMUploads_Request*,
                         ::CPartnerApps_FindDRMUploads_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method FindDRMUploads() not implemented.");
  done->Run();
}

void PartnerApps::Download(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CPartnerApps_Download_Request*,
                         ::CPartnerApps_Download_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Download() not implemented.");
  done->Run();
}

void PartnerApps::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_steammessages_5fpartnerapps_2esteamclient_2eproto[0]);
  switch(method->index()) {
    case 0:
      RequestKVSignUploadToken(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CPartnerApps_RequestUploadToken_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CPartnerApps_RequestUploadToken_Response*>(
                 response),
             done);
      break;
    case 1:
      RequestDRMUploadToken(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CPartnerApps_RequestUploadToken_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CPartnerApps_RequestUploadToken_Response*>(
                 response),
             done);
      break;
    case 2:
      RequestCEGUploadToken(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CPartnerApps_RequestUploadToken_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CPartnerApps_RequestUploadToken_Response*>(
                 response),
             done);
      break;
    case 3:
      RequestDepotUploadToken(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CPartnerApps_RequestUploadToken_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CPartnerApps_RequestUploadToken_Response*>(
                 response),
             done);
      break;
    case 4:
      FinishUploadKVSign(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CPartnerApps_FinishUpload_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CPartnerApps_FinishUploadKVSign_Response*>(
                 response),
             done);
      break;
    case 5:
      FinishUploadDRMUpload(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CPartnerApps_FinishUploadLegacyDRM_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CPartnerApps_FinishUploadLegacyDRM_Response*>(
                 response),
             done);
      break;
    case 6:
      FinishUploadCEGUpload(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CPartnerApps_FinishUpload_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CPartnerApps_FinishUpload_Response*>(
                 response),
             done);
      break;
    case 7:
      FinishUploadDepotUpload(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CPartnerApps_FinishUploadDepot_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CPartnerApps_FinishUploadDepot_Response*>(
                 response),
             done);
      break;
    case 8:
      GetDepotBuildResult(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CPartnerApps_GetDepotBuildResult_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CPartnerApps_GetDepotBuildResult_Response*>(
                 response),
             done);
      break;
    case 9:
      FindDRMUploads(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CPartnerApps_FindDRMUploads_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CPartnerApps_FindDRMUploads_Response*>(
                 response),
             done);
      break;
    case 10:
      Download(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CPartnerApps_Download_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CPartnerApps_Download_Response*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& PartnerApps::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CPartnerApps_RequestUploadToken_Request::default_instance();
    case 1:
      return ::CPartnerApps_RequestUploadToken_Request::default_instance();
    case 2:
      return ::CPartnerApps_RequestUploadToken_Request::default_instance();
    case 3:
      return ::CPartnerApps_RequestUploadToken_Request::default_instance();
    case 4:
      return ::CPartnerApps_FinishUpload_Request::default_instance();
    case 5:
      return ::CPartnerApps_FinishUploadLegacyDRM_Request::default_instance();
    case 6:
      return ::CPartnerApps_FinishUpload_Request::default_instance();
    case 7:
      return ::CPartnerApps_FinishUploadDepot_Request::default_instance();
    case 8:
      return ::CPartnerApps_GetDepotBuildResult_Request::default_instance();
    case 9:
      return ::CPartnerApps_FindDRMUploads_Request::default_instance();
    case 10:
      return ::CPartnerApps_Download_Request::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& PartnerApps::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CPartnerApps_RequestUploadToken_Response::default_instance();
    case 1:
      return ::CPartnerApps_RequestUploadToken_Response::default_instance();
    case 2:
      return ::CPartnerApps_RequestUploadToken_Response::default_instance();
    case 3:
      return ::CPartnerApps_RequestUploadToken_Response::default_instance();
    case 4:
      return ::CPartnerApps_FinishUploadKVSign_Response::default_instance();
    case 5:
      return ::CPartnerApps_FinishUploadLegacyDRM_Response::default_instance();
    case 6:
      return ::CPartnerApps_FinishUpload_Response::default_instance();
    case 7:
      return ::CPartnerApps_FinishUploadDepot_Response::default_instance();
    case 8:
      return ::CPartnerApps_GetDepotBuildResult_Response::default_instance();
    case 9:
      return ::CPartnerApps_FindDRMUploads_Response::default_instance();
    case 10:
      return ::CPartnerApps_Download_Response::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

PartnerApps_Stub::PartnerApps_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
PartnerApps_Stub::PartnerApps_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
PartnerApps_Stub::~PartnerApps_Stub() {
  if (owns_channel_) delete channel_;
}

void PartnerApps_Stub::RequestKVSignUploadToken(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CPartnerApps_RequestUploadToken_Request* request,
                              ::CPartnerApps_RequestUploadToken_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void PartnerApps_Stub::RequestDRMUploadToken(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CPartnerApps_RequestUploadToken_Request* request,
                              ::CPartnerApps_RequestUploadToken_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void PartnerApps_Stub::RequestCEGUploadToken(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CPartnerApps_RequestUploadToken_Request* request,
                              ::CPartnerApps_RequestUploadToken_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void PartnerApps_Stub::RequestDepotUploadToken(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CPartnerApps_RequestUploadToken_Request* request,
                              ::CPartnerApps_RequestUploadToken_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void PartnerApps_Stub::FinishUploadKVSign(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CPartnerApps_FinishUpload_Request* request,
                              ::CPartnerApps_FinishUploadKVSign_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void PartnerApps_Stub::FinishUploadDRMUpload(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CPartnerApps_FinishUploadLegacyDRM_Request* request,
                              ::CPartnerApps_FinishUploadLegacyDRM_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void PartnerApps_Stub::FinishUploadCEGUpload(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CPartnerApps_FinishUpload_Request* request,
                              ::CPartnerApps_FinishUpload_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}
void PartnerApps_Stub::FinishUploadDepotUpload(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CPartnerApps_FinishUploadDepot_Request* request,
                              ::CPartnerApps_FinishUploadDepot_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(7),
                       controller, request, response, done);
}
void PartnerApps_Stub::GetDepotBuildResult(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CPartnerApps_GetDepotBuildResult_Request* request,
                              ::CPartnerApps_GetDepotBuildResult_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(8),
                       controller, request, response, done);
}
void PartnerApps_Stub::FindDRMUploads(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CPartnerApps_FindDRMUploads_Request* request,
                              ::CPartnerApps_FindDRMUploads_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(9),
                       controller, request, response, done);
}
void PartnerApps_Stub::Download(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CPartnerApps_Download_Request* request,
                              ::CPartnerApps_Download_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(10),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CPartnerApps_RequestUploadToken_Request* Arena::CreateMaybeMessage< ::CPartnerApps_RequestUploadToken_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CPartnerApps_RequestUploadToken_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CPartnerApps_RequestUploadToken_Response* Arena::CreateMaybeMessage< ::CPartnerApps_RequestUploadToken_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CPartnerApps_RequestUploadToken_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CPartnerApps_FinishUpload_Request* Arena::CreateMaybeMessage< ::CPartnerApps_FinishUpload_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CPartnerApps_FinishUpload_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CPartnerApps_FinishUploadKVSign_Response* Arena::CreateMaybeMessage< ::CPartnerApps_FinishUploadKVSign_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CPartnerApps_FinishUploadKVSign_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CPartnerApps_FinishUploadLegacyDRM_Request* Arena::CreateMaybeMessage< ::CPartnerApps_FinishUploadLegacyDRM_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CPartnerApps_FinishUploadLegacyDRM_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CPartnerApps_FinishUploadLegacyDRM_Response* Arena::CreateMaybeMessage< ::CPartnerApps_FinishUploadLegacyDRM_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CPartnerApps_FinishUploadLegacyDRM_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CPartnerApps_FinishUpload_Response* Arena::CreateMaybeMessage< ::CPartnerApps_FinishUpload_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CPartnerApps_FinishUpload_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CPartnerApps_FinishUploadDepot_Request* Arena::CreateMaybeMessage< ::CPartnerApps_FinishUploadDepot_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CPartnerApps_FinishUploadDepot_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CPartnerApps_FinishUploadDepot_Response* Arena::CreateMaybeMessage< ::CPartnerApps_FinishUploadDepot_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CPartnerApps_FinishUploadDepot_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CPartnerApps_GetDepotBuildResult_Request* Arena::CreateMaybeMessage< ::CPartnerApps_GetDepotBuildResult_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CPartnerApps_GetDepotBuildResult_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CPartnerApps_GetDepotBuildResult_Response* Arena::CreateMaybeMessage< ::CPartnerApps_GetDepotBuildResult_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CPartnerApps_GetDepotBuildResult_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CPartnerApps_FindDRMUploads_Request* Arena::CreateMaybeMessage< ::CPartnerApps_FindDRMUploads_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CPartnerApps_FindDRMUploads_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CPartnerApps_ExistingDRMUpload* Arena::CreateMaybeMessage< ::CPartnerApps_ExistingDRMUpload >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CPartnerApps_ExistingDRMUpload >(arena);
}
template<> PROTOBUF_NOINLINE ::CPartnerApps_FindDRMUploads_Response* Arena::CreateMaybeMessage< ::CPartnerApps_FindDRMUploads_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CPartnerApps_FindDRMUploads_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CPartnerApps_Download_Request* Arena::CreateMaybeMessage< ::CPartnerApps_Download_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CPartnerApps_Download_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CPartnerApps_Download_Response* Arena::CreateMaybeMessage< ::CPartnerApps_Download_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CPartnerApps_Download_Response >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
