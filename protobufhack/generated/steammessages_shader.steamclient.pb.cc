// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_shader.steamclient.proto

#include "steammessages_shader.steamclient.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr CShader_GetShaderReportingCadence_Request::CShader_GetShaderReportingCadence_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CShader_GetShaderReportingCadence_RequestDefaultTypeInternal {
  constexpr CShader_GetShaderReportingCadence_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CShader_GetShaderReportingCadence_RequestDefaultTypeInternal() {}
  union {
    CShader_GetShaderReportingCadence_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CShader_GetShaderReportingCadence_RequestDefaultTypeInternal _CShader_GetShaderReportingCadence_Request_default_instance_;
constexpr CShader_GetShaderReportingCadence_Response::CShader_GetShaderReportingCadence_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : rereport_time_threshold_(PROTOBUF_ULONGLONG(0))
  , percent_to_rereport_(0u){}
struct CShader_GetShaderReportingCadence_ResponseDefaultTypeInternal {
  constexpr CShader_GetShaderReportingCadence_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CShader_GetShaderReportingCadence_ResponseDefaultTypeInternal() {}
  union {
    CShader_GetShaderReportingCadence_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CShader_GetShaderReportingCadence_ResponseDefaultTypeInternal _CShader_GetShaderReportingCadence_Response_default_instance_;
constexpr CShader_RegisterShader_Request_Shader::CShader_RegisterShader_Request_Shader(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : cache_key_sha_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , shader_code_sha_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CShader_RegisterShader_Request_ShaderDefaultTypeInternal {
  constexpr CShader_RegisterShader_Request_ShaderDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CShader_RegisterShader_Request_ShaderDefaultTypeInternal() {}
  union {
    CShader_RegisterShader_Request_Shader _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CShader_RegisterShader_Request_ShaderDefaultTypeInternal _CShader_RegisterShader_Request_Shader_default_instance_;
constexpr CShader_RegisterShader_Request::CShader_RegisterShader_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : shaders_()
  , gpu_desc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , driver_desc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , appid_(0u){}
struct CShader_RegisterShader_RequestDefaultTypeInternal {
  constexpr CShader_RegisterShader_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CShader_RegisterShader_RequestDefaultTypeInternal() {}
  union {
    CShader_RegisterShader_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CShader_RegisterShader_RequestDefaultTypeInternal _CShader_RegisterShader_Request_default_instance_;
constexpr CShader_RegisterShader_Response::CShader_RegisterShader_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : requested_codeids_(){}
struct CShader_RegisterShader_ResponseDefaultTypeInternal {
  constexpr CShader_RegisterShader_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CShader_RegisterShader_ResponseDefaultTypeInternal() {}
  union {
    CShader_RegisterShader_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CShader_RegisterShader_ResponseDefaultTypeInternal _CShader_RegisterShader_Response_default_instance_;
constexpr CShader_SendShader_Request_ShaderCode::CShader_SendShader_Request_ShaderCode(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : shader_code_sha_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , shader_code_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CShader_SendShader_Request_ShaderCodeDefaultTypeInternal {
  constexpr CShader_SendShader_Request_ShaderCodeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CShader_SendShader_Request_ShaderCodeDefaultTypeInternal() {}
  union {
    CShader_SendShader_Request_ShaderCode _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CShader_SendShader_Request_ShaderCodeDefaultTypeInternal _CShader_SendShader_Request_ShaderCode_default_instance_;
constexpr CShader_SendShader_Request::CShader_SendShader_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : shaders_()
  , appid_(0u){}
struct CShader_SendShader_RequestDefaultTypeInternal {
  constexpr CShader_SendShader_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CShader_SendShader_RequestDefaultTypeInternal() {}
  union {
    CShader_SendShader_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CShader_SendShader_RequestDefaultTypeInternal _CShader_SendShader_Request_default_instance_;
constexpr CShader_SendShader_Response::CShader_SendShader_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CShader_SendShader_ResponseDefaultTypeInternal {
  constexpr CShader_SendShader_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CShader_SendShader_ResponseDefaultTypeInternal() {}
  union {
    CShader_SendShader_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CShader_SendShader_ResponseDefaultTypeInternal _CShader_SendShader_Response_default_instance_;
constexpr CShader_GetBucketManifest_Request::CShader_GetBucketManifest_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : gpu_desc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , driver_desc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , appid_(0u){}
struct CShader_GetBucketManifest_RequestDefaultTypeInternal {
  constexpr CShader_GetBucketManifest_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CShader_GetBucketManifest_RequestDefaultTypeInternal() {}
  union {
    CShader_GetBucketManifest_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CShader_GetBucketManifest_RequestDefaultTypeInternal _CShader_GetBucketManifest_Request_default_instance_;
constexpr CShader_GetBucketManifest_Response::CShader_GetBucketManifest_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : manifestid_(PROTOBUF_ULONGLONG(0))
  , depotsize_(PROTOBUF_ULONGLONG(0))
  , bucketid_(PROTOBUF_ULONGLONG(0)){}
struct CShader_GetBucketManifest_ResponseDefaultTypeInternal {
  constexpr CShader_GetBucketManifest_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CShader_GetBucketManifest_ResponseDefaultTypeInternal() {}
  union {
    CShader_GetBucketManifest_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CShader_GetBucketManifest_ResponseDefaultTypeInternal _CShader_GetBucketManifest_Response_default_instance_;
constexpr CShader_GetStaleBucket_Request::CShader_GetStaleBucket_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : gpu_desc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , driver_desc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CShader_GetStaleBucket_RequestDefaultTypeInternal {
  constexpr CShader_GetStaleBucket_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CShader_GetStaleBucket_RequestDefaultTypeInternal() {}
  union {
    CShader_GetStaleBucket_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CShader_GetStaleBucket_RequestDefaultTypeInternal _CShader_GetStaleBucket_Request_default_instance_;
constexpr CShader_GetStaleBucket_Response::CShader_GetStaleBucket_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : gpu_desc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , driver_desc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , depot_encryption_key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , bucketid_(PROTOBUF_ULONGLONG(0))
  , manifestid_(PROTOBUF_ULONGLONG(0))
  , appid_(0u){}
struct CShader_GetStaleBucket_ResponseDefaultTypeInternal {
  constexpr CShader_GetStaleBucket_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CShader_GetStaleBucket_ResponseDefaultTypeInternal() {}
  union {
    CShader_GetStaleBucket_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CShader_GetStaleBucket_ResponseDefaultTypeInternal _CShader_GetStaleBucket_Response_default_instance_;
constexpr CShader_ReportExternalBuild_Request::CShader_ReportExternalBuild_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : gpu_desc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , driver_desc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , source_gpu_desc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , source_driver_desc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , manifestid_(PROTOBUF_ULONGLONG(0))
  , depotsize_(PROTOBUF_ULONGLONG(0))
  , appid_(0u){}
struct CShader_ReportExternalBuild_RequestDefaultTypeInternal {
  constexpr CShader_ReportExternalBuild_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CShader_ReportExternalBuild_RequestDefaultTypeInternal() {}
  union {
    CShader_ReportExternalBuild_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CShader_ReportExternalBuild_RequestDefaultTypeInternal _CShader_ReportExternalBuild_Request_default_instance_;
constexpr CShader_ReportExternalBuild_Response::CShader_ReportExternalBuild_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CShader_ReportExternalBuild_ResponseDefaultTypeInternal {
  constexpr CShader_ReportExternalBuild_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CShader_ReportExternalBuild_ResponseDefaultTypeInternal() {}
  union {
    CShader_ReportExternalBuild_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CShader_ReportExternalBuild_ResponseDefaultTypeInternal _CShader_ReportExternalBuild_Response_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_steammessages_5fshader_2esteamclient_2eproto[14];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_steammessages_5fshader_2esteamclient_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* file_level_service_descriptors_steammessages_5fshader_2esteamclient_2eproto[1];

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_steammessages_5fshader_2esteamclient_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CShader_GetShaderReportingCadence_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CShader_GetShaderReportingCadence_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CShader_GetShaderReportingCadence_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CShader_GetShaderReportingCadence_Response, rereport_time_threshold_),
  PROTOBUF_FIELD_OFFSET(::CShader_GetShaderReportingCadence_Response, percent_to_rereport_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CShader_RegisterShader_Request_Shader, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CShader_RegisterShader_Request_Shader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CShader_RegisterShader_Request_Shader, cache_key_sha_),
  PROTOBUF_FIELD_OFFSET(::CShader_RegisterShader_Request_Shader, shader_code_sha_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CShader_RegisterShader_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CShader_RegisterShader_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CShader_RegisterShader_Request, appid_),
  PROTOBUF_FIELD_OFFSET(::CShader_RegisterShader_Request, gpu_desc_),
  PROTOBUF_FIELD_OFFSET(::CShader_RegisterShader_Request, driver_desc_),
  PROTOBUF_FIELD_OFFSET(::CShader_RegisterShader_Request, shaders_),
  2,
  0,
  1,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CShader_RegisterShader_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CShader_RegisterShader_Response, requested_codeids_),
  PROTOBUF_FIELD_OFFSET(::CShader_SendShader_Request_ShaderCode, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CShader_SendShader_Request_ShaderCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CShader_SendShader_Request_ShaderCode, shader_code_sha_),
  PROTOBUF_FIELD_OFFSET(::CShader_SendShader_Request_ShaderCode, shader_code_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CShader_SendShader_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CShader_SendShader_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CShader_SendShader_Request, appid_),
  PROTOBUF_FIELD_OFFSET(::CShader_SendShader_Request, shaders_),
  0,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CShader_SendShader_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CShader_GetBucketManifest_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CShader_GetBucketManifest_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CShader_GetBucketManifest_Request, appid_),
  PROTOBUF_FIELD_OFFSET(::CShader_GetBucketManifest_Request, gpu_desc_),
  PROTOBUF_FIELD_OFFSET(::CShader_GetBucketManifest_Request, driver_desc_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CShader_GetBucketManifest_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CShader_GetBucketManifest_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CShader_GetBucketManifest_Response, manifestid_),
  PROTOBUF_FIELD_OFFSET(::CShader_GetBucketManifest_Response, depotsize_),
  PROTOBUF_FIELD_OFFSET(::CShader_GetBucketManifest_Response, bucketid_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CShader_GetStaleBucket_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CShader_GetStaleBucket_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CShader_GetStaleBucket_Request, gpu_desc_),
  PROTOBUF_FIELD_OFFSET(::CShader_GetStaleBucket_Request, driver_desc_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CShader_GetStaleBucket_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CShader_GetStaleBucket_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CShader_GetStaleBucket_Response, bucketid_),
  PROTOBUF_FIELD_OFFSET(::CShader_GetStaleBucket_Response, appid_),
  PROTOBUF_FIELD_OFFSET(::CShader_GetStaleBucket_Response, manifestid_),
  PROTOBUF_FIELD_OFFSET(::CShader_GetStaleBucket_Response, gpu_desc_),
  PROTOBUF_FIELD_OFFSET(::CShader_GetStaleBucket_Response, driver_desc_),
  PROTOBUF_FIELD_OFFSET(::CShader_GetStaleBucket_Response, depot_encryption_key_),
  3,
  5,
  4,
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CShader_ReportExternalBuild_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CShader_ReportExternalBuild_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CShader_ReportExternalBuild_Request, appid_),
  PROTOBUF_FIELD_OFFSET(::CShader_ReportExternalBuild_Request, gpu_desc_),
  PROTOBUF_FIELD_OFFSET(::CShader_ReportExternalBuild_Request, driver_desc_),
  PROTOBUF_FIELD_OFFSET(::CShader_ReportExternalBuild_Request, manifestid_),
  PROTOBUF_FIELD_OFFSET(::CShader_ReportExternalBuild_Request, source_gpu_desc_),
  PROTOBUF_FIELD_OFFSET(::CShader_ReportExternalBuild_Request, source_driver_desc_),
  PROTOBUF_FIELD_OFFSET(::CShader_ReportExternalBuild_Request, depotsize_),
  6,
  0,
  1,
  4,
  2,
  3,
  5,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CShader_ReportExternalBuild_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::CShader_GetShaderReportingCadence_Request)},
  { 5, 12, sizeof(::CShader_GetShaderReportingCadence_Response)},
  { 14, 21, sizeof(::CShader_RegisterShader_Request_Shader)},
  { 23, 32, sizeof(::CShader_RegisterShader_Request)},
  { 36, -1, sizeof(::CShader_RegisterShader_Response)},
  { 42, 49, sizeof(::CShader_SendShader_Request_ShaderCode)},
  { 51, 58, sizeof(::CShader_SendShader_Request)},
  { 60, -1, sizeof(::CShader_SendShader_Response)},
  { 65, 73, sizeof(::CShader_GetBucketManifest_Request)},
  { 76, 84, sizeof(::CShader_GetBucketManifest_Response)},
  { 87, 94, sizeof(::CShader_GetStaleBucket_Request)},
  { 96, 107, sizeof(::CShader_GetStaleBucket_Response)},
  { 113, 125, sizeof(::CShader_ReportExternalBuild_Request)},
  { 132, -1, sizeof(::CShader_ReportExternalBuild_Response)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CShader_GetShaderReportingCadence_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CShader_GetShaderReportingCadence_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CShader_RegisterShader_Request_Shader_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CShader_RegisterShader_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CShader_RegisterShader_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CShader_SendShader_Request_ShaderCode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CShader_SendShader_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CShader_SendShader_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CShader_GetBucketManifest_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CShader_GetBucketManifest_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CShader_GetStaleBucket_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CShader_GetStaleBucket_Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CShader_ReportExternalBuild_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CShader_ReportExternalBuild_Response_default_instance_),
};

const char descriptor_table_protodef_steammessages_5fshader_2esteamclient_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n&steammessages_shader.steamclient.proto"
  "\032 google/protobuf/descriptor.proto\032\030stea"
  "mmessages_base.proto\032,steammessages_unif"
  "ied_base.steamclient.proto\"+\n)CShader_Ge"
  "tShaderReportingCadence_Request\"j\n*CShad"
  "er_GetShaderReportingCadence_Response\022\037\n"
  "\027rereport_time_threshold\030\001 \001(\004\022\033\n\023percen"
  "t_to_rereport\030\002 \001(\r\"\311\001\n\036CShader_Register"
  "Shader_Request\022\r\n\005appid\030\001 \001(\r\022\020\n\010gpu_des"
  "c\030\002 \001(\t\022\023\n\013driver_desc\030\003 \001(\t\0227\n\007shaders\030"
  "\004 \003(\0132&.CShader_RegisterShader_Request.S"
  "hader\0328\n\006Shader\022\025\n\rcache_key_sha\030\001 \001(\014\022\027"
  "\n\017shader_code_sha\030\002 \001(\014\"<\n\037CShader_Regis"
  "terShader_Response\022\031\n\021requested_codeids\030"
  "\001 \003(\r\"\240\001\n\032CShader_SendShader_Request\022\r\n\005"
  "appid\030\001 \001(\r\0227\n\007shaders\030\002 \003(\0132&.CShader_S"
  "endShader_Request.ShaderCode\032:\n\nShaderCo"
  "de\022\027\n\017shader_code_sha\030\001 \001(\014\022\023\n\013shader_co"
  "de\030\002 \001(\014\"\035\n\033CShader_SendShader_Response\""
  "Y\n!CShader_GetBucketManifest_Request\022\r\n\005"
  "appid\030\001 \001(\r\022\020\n\010gpu_desc\030\002 \001(\t\022\023\n\013driver_"
  "desc\030\003 \001(\t\"]\n\"CShader_GetBucketManifest_"
  "Response\022\022\n\nmanifestid\030\001 \001(\004\022\021\n\tdepotsiz"
  "e\030\002 \001(\004\022\020\n\010bucketid\030\003 \001(\004\"G\n\036CShader_Get"
  "StaleBucket_Request\022\020\n\010gpu_desc\030\001 \001(\t\022\023\n"
  "\013driver_desc\030\002 \001(\t\"\233\001\n\037CShader_GetStaleB"
  "ucket_Response\022\020\n\010bucketid\030\001 \001(\004\022\r\n\005appi"
  "d\030\002 \001(\r\022\022\n\nmanifestid\030\003 \001(\004\022\020\n\010gpu_desc\030"
  "\004 \001(\t\022\023\n\013driver_desc\030\005 \001(\t\022\034\n\024depot_encr"
  "yption_key\030\006 \001(\014\"\267\001\n#CShader_ReportExter"
  "nalBuild_Request\022\r\n\005appid\030\001 \001(\r\022\020\n\010gpu_d"
  "esc\030\002 \001(\t\022\023\n\013driver_desc\030\003 \001(\t\022\022\n\nmanife"
  "stid\030\004 \001(\004\022\027\n\017source_gpu_desc\030\005 \001(\t\022\032\n\022s"
  "ource_driver_desc\030\006 \001(\t\022\021\n\tdepotsize\030\007 \001"
  "(\004\"&\n$CShader_ReportExternalBuild_Respon"
  "se2\263\004\n\006Shader\022t\n\031GetShaderReportingCaden"
  "ce\022*.CShader_GetShaderReportingCadence_R"
  "equest\032+.CShader_GetShaderReportingCaden"
  "ce_Response\022S\n\016RegisterShader\022\037.CShader_"
  "RegisterShader_Request\032 .CShader_Registe"
  "rShader_Response\022G\n\nSendShader\022\033.CShader"
  "_SendShader_Request\032\034.CShader_SendShader"
  "_Response\022\\\n\021GetBucketManifest\022\".CShader"
  "_GetBucketManifest_Request\032#.CShader_Get"
  "BucketManifest_Response\022S\n\016GetStaleBucke"
  "t\022\037.CShader_GetStaleBucket_Request\032 .CSh"
  "ader_GetStaleBucket_Response\022b\n\023ReportEx"
  "ternalBuild\022$.CShader_ReportExternalBuil"
  "d_Request\032%.CShader_ReportExternalBuild_"
  "ResponseB\035\200\001\001\252\002\027OpenSteamworks.Protobuf"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_steammessages_5fshader_2esteamclient_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
  &::descriptor_table_steammessages_5fbase_2eproto,
  &::descriptor_table_steammessages_5funified_5fbase_2esteamclient_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_steammessages_5fshader_2esteamclient_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_steammessages_5fshader_2esteamclient_2eproto = {
  false, false, 1999, descriptor_table_protodef_steammessages_5fshader_2esteamclient_2eproto, "steammessages_shader.steamclient.proto", 
  &descriptor_table_steammessages_5fshader_2esteamclient_2eproto_once, descriptor_table_steammessages_5fshader_2esteamclient_2eproto_deps, 3, 14,
  schemas, file_default_instances, TableStruct_steammessages_5fshader_2esteamclient_2eproto::offsets,
  file_level_metadata_steammessages_5fshader_2esteamclient_2eproto, file_level_enum_descriptors_steammessages_5fshader_2esteamclient_2eproto, file_level_service_descriptors_steammessages_5fshader_2esteamclient_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_steammessages_5fshader_2esteamclient_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_steammessages_5fshader_2esteamclient_2eproto);
  return descriptor_table_steammessages_5fshader_2esteamclient_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_steammessages_5fshader_2esteamclient_2eproto(&descriptor_table_steammessages_5fshader_2esteamclient_2eproto);

// ===================================================================

class CShader_GetShaderReportingCadence_Request::_Internal {
 public:
};

CShader_GetShaderReportingCadence_Request::CShader_GetShaderReportingCadence_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CShader_GetShaderReportingCadence_Request)
}
CShader_GetShaderReportingCadence_Request::CShader_GetShaderReportingCadence_Request(const CShader_GetShaderReportingCadence_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CShader_GetShaderReportingCadence_Request)
}

void CShader_GetShaderReportingCadence_Request::SharedCtor() {
}

CShader_GetShaderReportingCadence_Request::~CShader_GetShaderReportingCadence_Request() {
  // @@protoc_insertion_point(destructor:CShader_GetShaderReportingCadence_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CShader_GetShaderReportingCadence_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CShader_GetShaderReportingCadence_Request::ArenaDtor(void* object) {
  CShader_GetShaderReportingCadence_Request* _this = reinterpret_cast< CShader_GetShaderReportingCadence_Request* >(object);
  (void)_this;
}
void CShader_GetShaderReportingCadence_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CShader_GetShaderReportingCadence_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CShader_GetShaderReportingCadence_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_GetShaderReportingCadence_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CShader_GetShaderReportingCadence_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CShader_GetShaderReportingCadence_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CShader_GetShaderReportingCadence_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_GetShaderReportingCadence_Request)
  return target;
}

size_t CShader_GetShaderReportingCadence_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_GetShaderReportingCadence_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_GetShaderReportingCadence_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_GetShaderReportingCadence_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_GetShaderReportingCadence_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CShader_GetShaderReportingCadence_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_GetShaderReportingCadence_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_GetShaderReportingCadence_Request)
    MergeFrom(*source);
  }
}

void CShader_GetShaderReportingCadence_Request::MergeFrom(const CShader_GetShaderReportingCadence_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_GetShaderReportingCadence_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CShader_GetShaderReportingCadence_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_GetShaderReportingCadence_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_GetShaderReportingCadence_Request::CopyFrom(const CShader_GetShaderReportingCadence_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_GetShaderReportingCadence_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_GetShaderReportingCadence_Request::IsInitialized() const {
  return true;
}

void CShader_GetShaderReportingCadence_Request::InternalSwap(CShader_GetShaderReportingCadence_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CShader_GetShaderReportingCadence_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CShader_GetShaderReportingCadence_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CShader_GetShaderReportingCadence_Response>()._has_bits_);
  static void set_has_rereport_time_threshold(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_percent_to_rereport(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CShader_GetShaderReportingCadence_Response::CShader_GetShaderReportingCadence_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CShader_GetShaderReportingCadence_Response)
}
CShader_GetShaderReportingCadence_Response::CShader_GetShaderReportingCadence_Response(const CShader_GetShaderReportingCadence_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&rereport_time_threshold_, &from.rereport_time_threshold_,
    static_cast<size_t>(reinterpret_cast<char*>(&percent_to_rereport_) -
    reinterpret_cast<char*>(&rereport_time_threshold_)) + sizeof(percent_to_rereport_));
  // @@protoc_insertion_point(copy_constructor:CShader_GetShaderReportingCadence_Response)
}

void CShader_GetShaderReportingCadence_Response::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&rereport_time_threshold_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&percent_to_rereport_) -
    reinterpret_cast<char*>(&rereport_time_threshold_)) + sizeof(percent_to_rereport_));
}

CShader_GetShaderReportingCadence_Response::~CShader_GetShaderReportingCadence_Response() {
  // @@protoc_insertion_point(destructor:CShader_GetShaderReportingCadence_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CShader_GetShaderReportingCadence_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CShader_GetShaderReportingCadence_Response::ArenaDtor(void* object) {
  CShader_GetShaderReportingCadence_Response* _this = reinterpret_cast< CShader_GetShaderReportingCadence_Response* >(object);
  (void)_this;
}
void CShader_GetShaderReportingCadence_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CShader_GetShaderReportingCadence_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CShader_GetShaderReportingCadence_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_GetShaderReportingCadence_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&rereport_time_threshold_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&percent_to_rereport_) -
        reinterpret_cast<char*>(&rereport_time_threshold_)) + sizeof(percent_to_rereport_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CShader_GetShaderReportingCadence_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 rereport_time_threshold = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_rereport_time_threshold(&has_bits);
          rereport_time_threshold_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 percent_to_rereport = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_percent_to_rereport(&has_bits);
          percent_to_rereport_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CShader_GetShaderReportingCadence_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CShader_GetShaderReportingCadence_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 rereport_time_threshold = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_rereport_time_threshold(), target);
  }

  // optional uint32 percent_to_rereport = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_percent_to_rereport(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_GetShaderReportingCadence_Response)
  return target;
}

size_t CShader_GetShaderReportingCadence_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_GetShaderReportingCadence_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 rereport_time_threshold = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_rereport_time_threshold());
    }

    // optional uint32 percent_to_rereport = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_percent_to_rereport());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_GetShaderReportingCadence_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_GetShaderReportingCadence_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_GetShaderReportingCadence_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CShader_GetShaderReportingCadence_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_GetShaderReportingCadence_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_GetShaderReportingCadence_Response)
    MergeFrom(*source);
  }
}

void CShader_GetShaderReportingCadence_Response::MergeFrom(const CShader_GetShaderReportingCadence_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_GetShaderReportingCadence_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      rereport_time_threshold_ = from.rereport_time_threshold_;
    }
    if (cached_has_bits & 0x00000002u) {
      percent_to_rereport_ = from.percent_to_rereport_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CShader_GetShaderReportingCadence_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_GetShaderReportingCadence_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_GetShaderReportingCadence_Response::CopyFrom(const CShader_GetShaderReportingCadence_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_GetShaderReportingCadence_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_GetShaderReportingCadence_Response::IsInitialized() const {
  return true;
}

void CShader_GetShaderReportingCadence_Response::InternalSwap(CShader_GetShaderReportingCadence_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CShader_GetShaderReportingCadence_Response, percent_to_rereport_)
      + sizeof(CShader_GetShaderReportingCadence_Response::percent_to_rereport_)
      - PROTOBUF_FIELD_OFFSET(CShader_GetShaderReportingCadence_Response, rereport_time_threshold_)>(
          reinterpret_cast<char*>(&rereport_time_threshold_),
          reinterpret_cast<char*>(&other->rereport_time_threshold_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CShader_GetShaderReportingCadence_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CShader_RegisterShader_Request_Shader::_Internal {
 public:
  using HasBits = decltype(std::declval<CShader_RegisterShader_Request_Shader>()._has_bits_);
  static void set_has_cache_key_sha(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_shader_code_sha(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CShader_RegisterShader_Request_Shader::CShader_RegisterShader_Request_Shader(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CShader_RegisterShader_Request.Shader)
}
CShader_RegisterShader_Request_Shader::CShader_RegisterShader_Request_Shader(const CShader_RegisterShader_Request_Shader& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  cache_key_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_cache_key_sha()) {
    cache_key_sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_cache_key_sha(), 
      GetArena());
  }
  shader_code_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_shader_code_sha()) {
    shader_code_sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_shader_code_sha(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:CShader_RegisterShader_Request.Shader)
}

void CShader_RegisterShader_Request_Shader::SharedCtor() {
cache_key_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
shader_code_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CShader_RegisterShader_Request_Shader::~CShader_RegisterShader_Request_Shader() {
  // @@protoc_insertion_point(destructor:CShader_RegisterShader_Request.Shader)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CShader_RegisterShader_Request_Shader::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  cache_key_sha_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  shader_code_sha_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CShader_RegisterShader_Request_Shader::ArenaDtor(void* object) {
  CShader_RegisterShader_Request_Shader* _this = reinterpret_cast< CShader_RegisterShader_Request_Shader* >(object);
  (void)_this;
}
void CShader_RegisterShader_Request_Shader::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CShader_RegisterShader_Request_Shader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CShader_RegisterShader_Request_Shader::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_RegisterShader_Request.Shader)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      cache_key_sha_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      shader_code_sha_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CShader_RegisterShader_Request_Shader::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes cache_key_sha = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_cache_key_sha();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes shader_code_sha = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_shader_code_sha();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CShader_RegisterShader_Request_Shader::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CShader_RegisterShader_Request.Shader)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes cache_key_sha = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_cache_key_sha(), target);
  }

  // optional bytes shader_code_sha = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_shader_code_sha(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_RegisterShader_Request.Shader)
  return target;
}

size_t CShader_RegisterShader_Request_Shader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_RegisterShader_Request.Shader)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes cache_key_sha = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_cache_key_sha());
    }

    // optional bytes shader_code_sha = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_shader_code_sha());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_RegisterShader_Request_Shader::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_RegisterShader_Request.Shader)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_RegisterShader_Request_Shader* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CShader_RegisterShader_Request_Shader>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_RegisterShader_Request.Shader)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_RegisterShader_Request.Shader)
    MergeFrom(*source);
  }
}

void CShader_RegisterShader_Request_Shader::MergeFrom(const CShader_RegisterShader_Request_Shader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_RegisterShader_Request.Shader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_cache_key_sha(from._internal_cache_key_sha());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_shader_code_sha(from._internal_shader_code_sha());
    }
  }
}

void CShader_RegisterShader_Request_Shader::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_RegisterShader_Request.Shader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_RegisterShader_Request_Shader::CopyFrom(const CShader_RegisterShader_Request_Shader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_RegisterShader_Request.Shader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_RegisterShader_Request_Shader::IsInitialized() const {
  return true;
}

void CShader_RegisterShader_Request_Shader::InternalSwap(CShader_RegisterShader_Request_Shader* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  cache_key_sha_.Swap(&other->cache_key_sha_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  shader_code_sha_.Swap(&other->shader_code_sha_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CShader_RegisterShader_Request_Shader::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CShader_RegisterShader_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CShader_RegisterShader_Request>()._has_bits_);
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_gpu_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_driver_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CShader_RegisterShader_Request::CShader_RegisterShader_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  shaders_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CShader_RegisterShader_Request)
}
CShader_RegisterShader_Request::CShader_RegisterShader_Request(const CShader_RegisterShader_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      shaders_(from.shaders_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  gpu_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_gpu_desc()) {
    gpu_desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_gpu_desc(), 
      GetArena());
  }
  driver_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_driver_desc()) {
    driver_desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_driver_desc(), 
      GetArena());
  }
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CShader_RegisterShader_Request)
}

void CShader_RegisterShader_Request::SharedCtor() {
gpu_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
driver_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
appid_ = 0u;
}

CShader_RegisterShader_Request::~CShader_RegisterShader_Request() {
  // @@protoc_insertion_point(destructor:CShader_RegisterShader_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CShader_RegisterShader_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  gpu_desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  driver_desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CShader_RegisterShader_Request::ArenaDtor(void* object) {
  CShader_RegisterShader_Request* _this = reinterpret_cast< CShader_RegisterShader_Request* >(object);
  (void)_this;
}
void CShader_RegisterShader_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CShader_RegisterShader_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CShader_RegisterShader_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_RegisterShader_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shaders_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      gpu_desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      driver_desc_.ClearNonDefaultToEmpty();
    }
  }
  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CShader_RegisterShader_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 appid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_appid(&has_bits);
          appid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string gpu_desc = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_gpu_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CShader_RegisterShader_Request.gpu_desc");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string driver_desc = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_driver_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CShader_RegisterShader_Request.driver_desc");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .CShader_RegisterShader_Request.Shader shaders = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_shaders(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CShader_RegisterShader_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CShader_RegisterShader_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_appid(), target);
  }

  // optional string gpu_desc = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_gpu_desc().data(), static_cast<int>(this->_internal_gpu_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CShader_RegisterShader_Request.gpu_desc");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_gpu_desc(), target);
  }

  // optional string driver_desc = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_driver_desc().data(), static_cast<int>(this->_internal_driver_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CShader_RegisterShader_Request.driver_desc");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_driver_desc(), target);
  }

  // repeated .CShader_RegisterShader_Request.Shader shaders = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_shaders_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_shaders(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_RegisterShader_Request)
  return target;
}

size_t CShader_RegisterShader_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_RegisterShader_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CShader_RegisterShader_Request.Shader shaders = 4;
  total_size += 1UL * this->_internal_shaders_size();
  for (const auto& msg : this->shaders_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string gpu_desc = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_gpu_desc());
    }

    // optional string driver_desc = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_driver_desc());
    }

    // optional uint32 appid = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_appid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_RegisterShader_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_RegisterShader_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_RegisterShader_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CShader_RegisterShader_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_RegisterShader_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_RegisterShader_Request)
    MergeFrom(*source);
  }
}

void CShader_RegisterShader_Request::MergeFrom(const CShader_RegisterShader_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_RegisterShader_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shaders_.MergeFrom(from.shaders_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_gpu_desc(from._internal_gpu_desc());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_driver_desc(from._internal_driver_desc());
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CShader_RegisterShader_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_RegisterShader_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_RegisterShader_Request::CopyFrom(const CShader_RegisterShader_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_RegisterShader_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_RegisterShader_Request::IsInitialized() const {
  return true;
}

void CShader_RegisterShader_Request::InternalSwap(CShader_RegisterShader_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  shaders_.InternalSwap(&other->shaders_);
  gpu_desc_.Swap(&other->gpu_desc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  driver_desc_.Swap(&other->driver_desc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(appid_, other->appid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CShader_RegisterShader_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CShader_RegisterShader_Response::_Internal {
 public:
};

CShader_RegisterShader_Response::CShader_RegisterShader_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  requested_codeids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CShader_RegisterShader_Response)
}
CShader_RegisterShader_Response::CShader_RegisterShader_Response(const CShader_RegisterShader_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      requested_codeids_(from.requested_codeids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CShader_RegisterShader_Response)
}

void CShader_RegisterShader_Response::SharedCtor() {
}

CShader_RegisterShader_Response::~CShader_RegisterShader_Response() {
  // @@protoc_insertion_point(destructor:CShader_RegisterShader_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CShader_RegisterShader_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CShader_RegisterShader_Response::ArenaDtor(void* object) {
  CShader_RegisterShader_Response* _this = reinterpret_cast< CShader_RegisterShader_Response* >(object);
  (void)_this;
}
void CShader_RegisterShader_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CShader_RegisterShader_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CShader_RegisterShader_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_RegisterShader_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requested_codeids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CShader_RegisterShader_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint32 requested_codeids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_requested_codeids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_requested_codeids(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CShader_RegisterShader_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CShader_RegisterShader_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 requested_codeids = 1;
  for (int i = 0, n = this->_internal_requested_codeids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_requested_codeids(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_RegisterShader_Response)
  return target;
}

size_t CShader_RegisterShader_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_RegisterShader_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 requested_codeids = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->requested_codeids_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_requested_codeids_size());
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_RegisterShader_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_RegisterShader_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_RegisterShader_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CShader_RegisterShader_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_RegisterShader_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_RegisterShader_Response)
    MergeFrom(*source);
  }
}

void CShader_RegisterShader_Response::MergeFrom(const CShader_RegisterShader_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_RegisterShader_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requested_codeids_.MergeFrom(from.requested_codeids_);
}

void CShader_RegisterShader_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_RegisterShader_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_RegisterShader_Response::CopyFrom(const CShader_RegisterShader_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_RegisterShader_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_RegisterShader_Response::IsInitialized() const {
  return true;
}

void CShader_RegisterShader_Response::InternalSwap(CShader_RegisterShader_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  requested_codeids_.InternalSwap(&other->requested_codeids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CShader_RegisterShader_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CShader_SendShader_Request_ShaderCode::_Internal {
 public:
  using HasBits = decltype(std::declval<CShader_SendShader_Request_ShaderCode>()._has_bits_);
  static void set_has_shader_code_sha(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_shader_code(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CShader_SendShader_Request_ShaderCode::CShader_SendShader_Request_ShaderCode(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CShader_SendShader_Request.ShaderCode)
}
CShader_SendShader_Request_ShaderCode::CShader_SendShader_Request_ShaderCode(const CShader_SendShader_Request_ShaderCode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  shader_code_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_shader_code_sha()) {
    shader_code_sha_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_shader_code_sha(), 
      GetArena());
  }
  shader_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_shader_code()) {
    shader_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_shader_code(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:CShader_SendShader_Request.ShaderCode)
}

void CShader_SendShader_Request_ShaderCode::SharedCtor() {
shader_code_sha_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
shader_code_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CShader_SendShader_Request_ShaderCode::~CShader_SendShader_Request_ShaderCode() {
  // @@protoc_insertion_point(destructor:CShader_SendShader_Request.ShaderCode)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CShader_SendShader_Request_ShaderCode::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  shader_code_sha_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  shader_code_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CShader_SendShader_Request_ShaderCode::ArenaDtor(void* object) {
  CShader_SendShader_Request_ShaderCode* _this = reinterpret_cast< CShader_SendShader_Request_ShaderCode* >(object);
  (void)_this;
}
void CShader_SendShader_Request_ShaderCode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CShader_SendShader_Request_ShaderCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CShader_SendShader_Request_ShaderCode::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_SendShader_Request.ShaderCode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      shader_code_sha_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      shader_code_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CShader_SendShader_Request_ShaderCode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional bytes shader_code_sha = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_shader_code_sha();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes shader_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_shader_code();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CShader_SendShader_Request_ShaderCode::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CShader_SendShader_Request.ShaderCode)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes shader_code_sha = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_shader_code_sha(), target);
  }

  // optional bytes shader_code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_shader_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_SendShader_Request.ShaderCode)
  return target;
}

size_t CShader_SendShader_Request_ShaderCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_SendShader_Request.ShaderCode)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes shader_code_sha = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_shader_code_sha());
    }

    // optional bytes shader_code = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_shader_code());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_SendShader_Request_ShaderCode::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_SendShader_Request.ShaderCode)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_SendShader_Request_ShaderCode* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CShader_SendShader_Request_ShaderCode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_SendShader_Request.ShaderCode)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_SendShader_Request.ShaderCode)
    MergeFrom(*source);
  }
}

void CShader_SendShader_Request_ShaderCode::MergeFrom(const CShader_SendShader_Request_ShaderCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_SendShader_Request.ShaderCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_shader_code_sha(from._internal_shader_code_sha());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_shader_code(from._internal_shader_code());
    }
  }
}

void CShader_SendShader_Request_ShaderCode::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_SendShader_Request.ShaderCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_SendShader_Request_ShaderCode::CopyFrom(const CShader_SendShader_Request_ShaderCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_SendShader_Request.ShaderCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_SendShader_Request_ShaderCode::IsInitialized() const {
  return true;
}

void CShader_SendShader_Request_ShaderCode::InternalSwap(CShader_SendShader_Request_ShaderCode* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  shader_code_sha_.Swap(&other->shader_code_sha_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  shader_code_.Swap(&other->shader_code_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CShader_SendShader_Request_ShaderCode::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CShader_SendShader_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CShader_SendShader_Request>()._has_bits_);
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CShader_SendShader_Request::CShader_SendShader_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  shaders_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CShader_SendShader_Request)
}
CShader_SendShader_Request::CShader_SendShader_Request(const CShader_SendShader_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      shaders_(from.shaders_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CShader_SendShader_Request)
}

void CShader_SendShader_Request::SharedCtor() {
appid_ = 0u;
}

CShader_SendShader_Request::~CShader_SendShader_Request() {
  // @@protoc_insertion_point(destructor:CShader_SendShader_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CShader_SendShader_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CShader_SendShader_Request::ArenaDtor(void* object) {
  CShader_SendShader_Request* _this = reinterpret_cast< CShader_SendShader_Request* >(object);
  (void)_this;
}
void CShader_SendShader_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CShader_SendShader_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CShader_SendShader_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_SendShader_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shaders_.Clear();
  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CShader_SendShader_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 appid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_appid(&has_bits);
          appid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .CShader_SendShader_Request.ShaderCode shaders = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_shaders(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CShader_SendShader_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CShader_SendShader_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_appid(), target);
  }

  // repeated .CShader_SendShader_Request.ShaderCode shaders = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_shaders_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_shaders(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_SendShader_Request)
  return target;
}

size_t CShader_SendShader_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_SendShader_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CShader_SendShader_Request.ShaderCode shaders = 2;
  total_size += 1UL * this->_internal_shaders_size();
  for (const auto& msg : this->shaders_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional uint32 appid = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_appid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_SendShader_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_SendShader_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_SendShader_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CShader_SendShader_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_SendShader_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_SendShader_Request)
    MergeFrom(*source);
  }
}

void CShader_SendShader_Request::MergeFrom(const CShader_SendShader_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_SendShader_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shaders_.MergeFrom(from.shaders_);
  if (from._internal_has_appid()) {
    _internal_set_appid(from._internal_appid());
  }
}

void CShader_SendShader_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_SendShader_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_SendShader_Request::CopyFrom(const CShader_SendShader_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_SendShader_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_SendShader_Request::IsInitialized() const {
  return true;
}

void CShader_SendShader_Request::InternalSwap(CShader_SendShader_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  shaders_.InternalSwap(&other->shaders_);
  swap(appid_, other->appid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CShader_SendShader_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CShader_SendShader_Response::_Internal {
 public:
};

CShader_SendShader_Response::CShader_SendShader_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CShader_SendShader_Response)
}
CShader_SendShader_Response::CShader_SendShader_Response(const CShader_SendShader_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CShader_SendShader_Response)
}

void CShader_SendShader_Response::SharedCtor() {
}

CShader_SendShader_Response::~CShader_SendShader_Response() {
  // @@protoc_insertion_point(destructor:CShader_SendShader_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CShader_SendShader_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CShader_SendShader_Response::ArenaDtor(void* object) {
  CShader_SendShader_Response* _this = reinterpret_cast< CShader_SendShader_Response* >(object);
  (void)_this;
}
void CShader_SendShader_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CShader_SendShader_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CShader_SendShader_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_SendShader_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CShader_SendShader_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CShader_SendShader_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CShader_SendShader_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_SendShader_Response)
  return target;
}

size_t CShader_SendShader_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_SendShader_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_SendShader_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_SendShader_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_SendShader_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CShader_SendShader_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_SendShader_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_SendShader_Response)
    MergeFrom(*source);
  }
}

void CShader_SendShader_Response::MergeFrom(const CShader_SendShader_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_SendShader_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CShader_SendShader_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_SendShader_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_SendShader_Response::CopyFrom(const CShader_SendShader_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_SendShader_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_SendShader_Response::IsInitialized() const {
  return true;
}

void CShader_SendShader_Response::InternalSwap(CShader_SendShader_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CShader_SendShader_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CShader_GetBucketManifest_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CShader_GetBucketManifest_Request>()._has_bits_);
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_gpu_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_driver_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CShader_GetBucketManifest_Request::CShader_GetBucketManifest_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CShader_GetBucketManifest_Request)
}
CShader_GetBucketManifest_Request::CShader_GetBucketManifest_Request(const CShader_GetBucketManifest_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  gpu_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_gpu_desc()) {
    gpu_desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_gpu_desc(), 
      GetArena());
  }
  driver_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_driver_desc()) {
    driver_desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_driver_desc(), 
      GetArena());
  }
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CShader_GetBucketManifest_Request)
}

void CShader_GetBucketManifest_Request::SharedCtor() {
gpu_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
driver_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
appid_ = 0u;
}

CShader_GetBucketManifest_Request::~CShader_GetBucketManifest_Request() {
  // @@protoc_insertion_point(destructor:CShader_GetBucketManifest_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CShader_GetBucketManifest_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  gpu_desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  driver_desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CShader_GetBucketManifest_Request::ArenaDtor(void* object) {
  CShader_GetBucketManifest_Request* _this = reinterpret_cast< CShader_GetBucketManifest_Request* >(object);
  (void)_this;
}
void CShader_GetBucketManifest_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CShader_GetBucketManifest_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CShader_GetBucketManifest_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_GetBucketManifest_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      gpu_desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      driver_desc_.ClearNonDefaultToEmpty();
    }
  }
  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CShader_GetBucketManifest_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 appid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_appid(&has_bits);
          appid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string gpu_desc = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_gpu_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CShader_GetBucketManifest_Request.gpu_desc");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string driver_desc = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_driver_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CShader_GetBucketManifest_Request.driver_desc");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CShader_GetBucketManifest_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CShader_GetBucketManifest_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_appid(), target);
  }

  // optional string gpu_desc = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_gpu_desc().data(), static_cast<int>(this->_internal_gpu_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CShader_GetBucketManifest_Request.gpu_desc");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_gpu_desc(), target);
  }

  // optional string driver_desc = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_driver_desc().data(), static_cast<int>(this->_internal_driver_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CShader_GetBucketManifest_Request.driver_desc");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_driver_desc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_GetBucketManifest_Request)
  return target;
}

size_t CShader_GetBucketManifest_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_GetBucketManifest_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string gpu_desc = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_gpu_desc());
    }

    // optional string driver_desc = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_driver_desc());
    }

    // optional uint32 appid = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_appid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_GetBucketManifest_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_GetBucketManifest_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_GetBucketManifest_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CShader_GetBucketManifest_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_GetBucketManifest_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_GetBucketManifest_Request)
    MergeFrom(*source);
  }
}

void CShader_GetBucketManifest_Request::MergeFrom(const CShader_GetBucketManifest_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_GetBucketManifest_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_gpu_desc(from._internal_gpu_desc());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_driver_desc(from._internal_driver_desc());
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CShader_GetBucketManifest_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_GetBucketManifest_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_GetBucketManifest_Request::CopyFrom(const CShader_GetBucketManifest_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_GetBucketManifest_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_GetBucketManifest_Request::IsInitialized() const {
  return true;
}

void CShader_GetBucketManifest_Request::InternalSwap(CShader_GetBucketManifest_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  gpu_desc_.Swap(&other->gpu_desc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  driver_desc_.Swap(&other->driver_desc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(appid_, other->appid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CShader_GetBucketManifest_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CShader_GetBucketManifest_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CShader_GetBucketManifest_Response>()._has_bits_);
  static void set_has_manifestid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_depotsize(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_bucketid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CShader_GetBucketManifest_Response::CShader_GetBucketManifest_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CShader_GetBucketManifest_Response)
}
CShader_GetBucketManifest_Response::CShader_GetBucketManifest_Response(const CShader_GetBucketManifest_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&manifestid_, &from.manifestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&bucketid_) -
    reinterpret_cast<char*>(&manifestid_)) + sizeof(bucketid_));
  // @@protoc_insertion_point(copy_constructor:CShader_GetBucketManifest_Response)
}

void CShader_GetBucketManifest_Response::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&manifestid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&bucketid_) -
    reinterpret_cast<char*>(&manifestid_)) + sizeof(bucketid_));
}

CShader_GetBucketManifest_Response::~CShader_GetBucketManifest_Response() {
  // @@protoc_insertion_point(destructor:CShader_GetBucketManifest_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CShader_GetBucketManifest_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CShader_GetBucketManifest_Response::ArenaDtor(void* object) {
  CShader_GetBucketManifest_Response* _this = reinterpret_cast< CShader_GetBucketManifest_Response* >(object);
  (void)_this;
}
void CShader_GetBucketManifest_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CShader_GetBucketManifest_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CShader_GetBucketManifest_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_GetBucketManifest_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&manifestid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bucketid_) -
        reinterpret_cast<char*>(&manifestid_)) + sizeof(bucketid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CShader_GetBucketManifest_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 manifestid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_manifestid(&has_bits);
          manifestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 depotsize = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_depotsize(&has_bits);
          depotsize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 bucketid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_bucketid(&has_bits);
          bucketid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CShader_GetBucketManifest_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CShader_GetBucketManifest_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 manifestid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_manifestid(), target);
  }

  // optional uint64 depotsize = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_depotsize(), target);
  }

  // optional uint64 bucketid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_bucketid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_GetBucketManifest_Response)
  return target;
}

size_t CShader_GetBucketManifest_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_GetBucketManifest_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint64 manifestid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_manifestid());
    }

    // optional uint64 depotsize = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_depotsize());
    }

    // optional uint64 bucketid = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_bucketid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_GetBucketManifest_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_GetBucketManifest_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_GetBucketManifest_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CShader_GetBucketManifest_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_GetBucketManifest_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_GetBucketManifest_Response)
    MergeFrom(*source);
  }
}

void CShader_GetBucketManifest_Response::MergeFrom(const CShader_GetBucketManifest_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_GetBucketManifest_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      manifestid_ = from.manifestid_;
    }
    if (cached_has_bits & 0x00000002u) {
      depotsize_ = from.depotsize_;
    }
    if (cached_has_bits & 0x00000004u) {
      bucketid_ = from.bucketid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CShader_GetBucketManifest_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_GetBucketManifest_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_GetBucketManifest_Response::CopyFrom(const CShader_GetBucketManifest_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_GetBucketManifest_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_GetBucketManifest_Response::IsInitialized() const {
  return true;
}

void CShader_GetBucketManifest_Response::InternalSwap(CShader_GetBucketManifest_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CShader_GetBucketManifest_Response, bucketid_)
      + sizeof(CShader_GetBucketManifest_Response::bucketid_)
      - PROTOBUF_FIELD_OFFSET(CShader_GetBucketManifest_Response, manifestid_)>(
          reinterpret_cast<char*>(&manifestid_),
          reinterpret_cast<char*>(&other->manifestid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CShader_GetBucketManifest_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CShader_GetStaleBucket_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CShader_GetStaleBucket_Request>()._has_bits_);
  static void set_has_gpu_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_driver_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CShader_GetStaleBucket_Request::CShader_GetStaleBucket_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CShader_GetStaleBucket_Request)
}
CShader_GetStaleBucket_Request::CShader_GetStaleBucket_Request(const CShader_GetStaleBucket_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  gpu_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_gpu_desc()) {
    gpu_desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_gpu_desc(), 
      GetArena());
  }
  driver_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_driver_desc()) {
    driver_desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_driver_desc(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:CShader_GetStaleBucket_Request)
}

void CShader_GetStaleBucket_Request::SharedCtor() {
gpu_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
driver_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CShader_GetStaleBucket_Request::~CShader_GetStaleBucket_Request() {
  // @@protoc_insertion_point(destructor:CShader_GetStaleBucket_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CShader_GetStaleBucket_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  gpu_desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  driver_desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CShader_GetStaleBucket_Request::ArenaDtor(void* object) {
  CShader_GetStaleBucket_Request* _this = reinterpret_cast< CShader_GetStaleBucket_Request* >(object);
  (void)_this;
}
void CShader_GetStaleBucket_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CShader_GetStaleBucket_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CShader_GetStaleBucket_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_GetStaleBucket_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      gpu_desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      driver_desc_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CShader_GetStaleBucket_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string gpu_desc = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_gpu_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CShader_GetStaleBucket_Request.gpu_desc");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string driver_desc = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_driver_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CShader_GetStaleBucket_Request.driver_desc");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CShader_GetStaleBucket_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CShader_GetStaleBucket_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string gpu_desc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_gpu_desc().data(), static_cast<int>(this->_internal_gpu_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CShader_GetStaleBucket_Request.gpu_desc");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_gpu_desc(), target);
  }

  // optional string driver_desc = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_driver_desc().data(), static_cast<int>(this->_internal_driver_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CShader_GetStaleBucket_Request.driver_desc");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_driver_desc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_GetStaleBucket_Request)
  return target;
}

size_t CShader_GetStaleBucket_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_GetStaleBucket_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string gpu_desc = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_gpu_desc());
    }

    // optional string driver_desc = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_driver_desc());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_GetStaleBucket_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_GetStaleBucket_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_GetStaleBucket_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CShader_GetStaleBucket_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_GetStaleBucket_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_GetStaleBucket_Request)
    MergeFrom(*source);
  }
}

void CShader_GetStaleBucket_Request::MergeFrom(const CShader_GetStaleBucket_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_GetStaleBucket_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_gpu_desc(from._internal_gpu_desc());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_driver_desc(from._internal_driver_desc());
    }
  }
}

void CShader_GetStaleBucket_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_GetStaleBucket_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_GetStaleBucket_Request::CopyFrom(const CShader_GetStaleBucket_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_GetStaleBucket_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_GetStaleBucket_Request::IsInitialized() const {
  return true;
}

void CShader_GetStaleBucket_Request::InternalSwap(CShader_GetStaleBucket_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  gpu_desc_.Swap(&other->gpu_desc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  driver_desc_.Swap(&other->driver_desc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CShader_GetStaleBucket_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CShader_GetStaleBucket_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CShader_GetStaleBucket_Response>()._has_bits_);
  static void set_has_bucketid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_manifestid(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_gpu_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_driver_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_depot_encryption_key(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CShader_GetStaleBucket_Response::CShader_GetStaleBucket_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CShader_GetStaleBucket_Response)
}
CShader_GetStaleBucket_Response::CShader_GetStaleBucket_Response(const CShader_GetStaleBucket_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  gpu_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_gpu_desc()) {
    gpu_desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_gpu_desc(), 
      GetArena());
  }
  driver_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_driver_desc()) {
    driver_desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_driver_desc(), 
      GetArena());
  }
  depot_encryption_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_depot_encryption_key()) {
    depot_encryption_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_depot_encryption_key(), 
      GetArena());
  }
  ::memcpy(&bucketid_, &from.bucketid_,
    static_cast<size_t>(reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&bucketid_)) + sizeof(appid_));
  // @@protoc_insertion_point(copy_constructor:CShader_GetStaleBucket_Response)
}

void CShader_GetStaleBucket_Response::SharedCtor() {
gpu_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
driver_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
depot_encryption_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&bucketid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&bucketid_)) + sizeof(appid_));
}

CShader_GetStaleBucket_Response::~CShader_GetStaleBucket_Response() {
  // @@protoc_insertion_point(destructor:CShader_GetStaleBucket_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CShader_GetStaleBucket_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  gpu_desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  driver_desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  depot_encryption_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CShader_GetStaleBucket_Response::ArenaDtor(void* object) {
  CShader_GetStaleBucket_Response* _this = reinterpret_cast< CShader_GetStaleBucket_Response* >(object);
  (void)_this;
}
void CShader_GetStaleBucket_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CShader_GetStaleBucket_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CShader_GetStaleBucket_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_GetStaleBucket_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      gpu_desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      driver_desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      depot_encryption_key_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000038u) {
    ::memset(&bucketid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&appid_) -
        reinterpret_cast<char*>(&bucketid_)) + sizeof(appid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CShader_GetStaleBucket_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 bucketid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_bucketid(&has_bits);
          bucketid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 appid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_appid(&has_bits);
          appid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 manifestid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_manifestid(&has_bits);
          manifestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string gpu_desc = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_gpu_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CShader_GetStaleBucket_Response.gpu_desc");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string driver_desc = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_driver_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CShader_GetStaleBucket_Response.driver_desc");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes depot_encryption_key = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_depot_encryption_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CShader_GetStaleBucket_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CShader_GetStaleBucket_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 bucketid = 1;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_bucketid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_appid(), target);
  }

  // optional uint64 manifestid = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_manifestid(), target);
  }

  // optional string gpu_desc = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_gpu_desc().data(), static_cast<int>(this->_internal_gpu_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CShader_GetStaleBucket_Response.gpu_desc");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_gpu_desc(), target);
  }

  // optional string driver_desc = 5;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_driver_desc().data(), static_cast<int>(this->_internal_driver_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CShader_GetStaleBucket_Response.driver_desc");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_driver_desc(), target);
  }

  // optional bytes depot_encryption_key = 6;
  if (cached_has_bits & 0x00000004u) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_depot_encryption_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_GetStaleBucket_Response)
  return target;
}

size_t CShader_GetStaleBucket_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_GetStaleBucket_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string gpu_desc = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_gpu_desc());
    }

    // optional string driver_desc = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_driver_desc());
    }

    // optional bytes depot_encryption_key = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_depot_encryption_key());
    }

    // optional uint64 bucketid = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_bucketid());
    }

    // optional uint64 manifestid = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_manifestid());
    }

    // optional uint32 appid = 2;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_appid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_GetStaleBucket_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_GetStaleBucket_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_GetStaleBucket_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CShader_GetStaleBucket_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_GetStaleBucket_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_GetStaleBucket_Response)
    MergeFrom(*source);
  }
}

void CShader_GetStaleBucket_Response::MergeFrom(const CShader_GetStaleBucket_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_GetStaleBucket_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_gpu_desc(from._internal_gpu_desc());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_driver_desc(from._internal_driver_desc());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_depot_encryption_key(from._internal_depot_encryption_key());
    }
    if (cached_has_bits & 0x00000008u) {
      bucketid_ = from.bucketid_;
    }
    if (cached_has_bits & 0x00000010u) {
      manifestid_ = from.manifestid_;
    }
    if (cached_has_bits & 0x00000020u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CShader_GetStaleBucket_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_GetStaleBucket_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_GetStaleBucket_Response::CopyFrom(const CShader_GetStaleBucket_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_GetStaleBucket_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_GetStaleBucket_Response::IsInitialized() const {
  return true;
}

void CShader_GetStaleBucket_Response::InternalSwap(CShader_GetStaleBucket_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  gpu_desc_.Swap(&other->gpu_desc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  driver_desc_.Swap(&other->driver_desc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  depot_encryption_key_.Swap(&other->depot_encryption_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CShader_GetStaleBucket_Response, appid_)
      + sizeof(CShader_GetStaleBucket_Response::appid_)
      - PROTOBUF_FIELD_OFFSET(CShader_GetStaleBucket_Response, bucketid_)>(
          reinterpret_cast<char*>(&bucketid_),
          reinterpret_cast<char*>(&other->bucketid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CShader_GetStaleBucket_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CShader_ReportExternalBuild_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CShader_ReportExternalBuild_Request>()._has_bits_);
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_gpu_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_driver_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_manifestid(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_source_gpu_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_source_driver_desc(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_depotsize(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

CShader_ReportExternalBuild_Request::CShader_ReportExternalBuild_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CShader_ReportExternalBuild_Request)
}
CShader_ReportExternalBuild_Request::CShader_ReportExternalBuild_Request(const CShader_ReportExternalBuild_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  gpu_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_gpu_desc()) {
    gpu_desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_gpu_desc(), 
      GetArena());
  }
  driver_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_driver_desc()) {
    driver_desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_driver_desc(), 
      GetArena());
  }
  source_gpu_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_source_gpu_desc()) {
    source_gpu_desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_source_gpu_desc(), 
      GetArena());
  }
  source_driver_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_source_driver_desc()) {
    source_driver_desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_source_driver_desc(), 
      GetArena());
  }
  ::memcpy(&manifestid_, &from.manifestid_,
    static_cast<size_t>(reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&manifestid_)) + sizeof(appid_));
  // @@protoc_insertion_point(copy_constructor:CShader_ReportExternalBuild_Request)
}

void CShader_ReportExternalBuild_Request::SharedCtor() {
gpu_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
driver_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
source_gpu_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
source_driver_desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&manifestid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&manifestid_)) + sizeof(appid_));
}

CShader_ReportExternalBuild_Request::~CShader_ReportExternalBuild_Request() {
  // @@protoc_insertion_point(destructor:CShader_ReportExternalBuild_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CShader_ReportExternalBuild_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  gpu_desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  driver_desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_gpu_desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_driver_desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CShader_ReportExternalBuild_Request::ArenaDtor(void* object) {
  CShader_ReportExternalBuild_Request* _this = reinterpret_cast< CShader_ReportExternalBuild_Request* >(object);
  (void)_this;
}
void CShader_ReportExternalBuild_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CShader_ReportExternalBuild_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CShader_ReportExternalBuild_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_ReportExternalBuild_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      gpu_desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      driver_desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      source_gpu_desc_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      source_driver_desc_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000070u) {
    ::memset(&manifestid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&appid_) -
        reinterpret_cast<char*>(&manifestid_)) + sizeof(appid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CShader_ReportExternalBuild_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 appid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_appid(&has_bits);
          appid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string gpu_desc = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_gpu_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CShader_ReportExternalBuild_Request.gpu_desc");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string driver_desc = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_driver_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CShader_ReportExternalBuild_Request.driver_desc");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 manifestid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_manifestid(&has_bits);
          manifestid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string source_gpu_desc = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_source_gpu_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CShader_ReportExternalBuild_Request.source_gpu_desc");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string source_driver_desc = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_source_driver_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CShader_ReportExternalBuild_Request.source_driver_desc");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 depotsize = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_depotsize(&has_bits);
          depotsize_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CShader_ReportExternalBuild_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CShader_ReportExternalBuild_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_appid(), target);
  }

  // optional string gpu_desc = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_gpu_desc().data(), static_cast<int>(this->_internal_gpu_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CShader_ReportExternalBuild_Request.gpu_desc");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_gpu_desc(), target);
  }

  // optional string driver_desc = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_driver_desc().data(), static_cast<int>(this->_internal_driver_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CShader_ReportExternalBuild_Request.driver_desc");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_driver_desc(), target);
  }

  // optional uint64 manifestid = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_manifestid(), target);
  }

  // optional string source_gpu_desc = 5;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_source_gpu_desc().data(), static_cast<int>(this->_internal_source_gpu_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CShader_ReportExternalBuild_Request.source_gpu_desc");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_source_gpu_desc(), target);
  }

  // optional string source_driver_desc = 6;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_source_driver_desc().data(), static_cast<int>(this->_internal_source_driver_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CShader_ReportExternalBuild_Request.source_driver_desc");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_source_driver_desc(), target);
  }

  // optional uint64 depotsize = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_depotsize(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_ReportExternalBuild_Request)
  return target;
}

size_t CShader_ReportExternalBuild_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_ReportExternalBuild_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional string gpu_desc = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_gpu_desc());
    }

    // optional string driver_desc = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_driver_desc());
    }

    // optional string source_gpu_desc = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_source_gpu_desc());
    }

    // optional string source_driver_desc = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_source_driver_desc());
    }

    // optional uint64 manifestid = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_manifestid());
    }

    // optional uint64 depotsize = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_depotsize());
    }

    // optional uint32 appid = 1;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_appid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_ReportExternalBuild_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_ReportExternalBuild_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_ReportExternalBuild_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CShader_ReportExternalBuild_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_ReportExternalBuild_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_ReportExternalBuild_Request)
    MergeFrom(*source);
  }
}

void CShader_ReportExternalBuild_Request::MergeFrom(const CShader_ReportExternalBuild_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_ReportExternalBuild_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_gpu_desc(from._internal_gpu_desc());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_driver_desc(from._internal_driver_desc());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_source_gpu_desc(from._internal_source_gpu_desc());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_source_driver_desc(from._internal_source_driver_desc());
    }
    if (cached_has_bits & 0x00000010u) {
      manifestid_ = from.manifestid_;
    }
    if (cached_has_bits & 0x00000020u) {
      depotsize_ = from.depotsize_;
    }
    if (cached_has_bits & 0x00000040u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CShader_ReportExternalBuild_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_ReportExternalBuild_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_ReportExternalBuild_Request::CopyFrom(const CShader_ReportExternalBuild_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_ReportExternalBuild_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_ReportExternalBuild_Request::IsInitialized() const {
  return true;
}

void CShader_ReportExternalBuild_Request::InternalSwap(CShader_ReportExternalBuild_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  gpu_desc_.Swap(&other->gpu_desc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  driver_desc_.Swap(&other->driver_desc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_gpu_desc_.Swap(&other->source_gpu_desc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  source_driver_desc_.Swap(&other->source_driver_desc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CShader_ReportExternalBuild_Request, appid_)
      + sizeof(CShader_ReportExternalBuild_Request::appid_)
      - PROTOBUF_FIELD_OFFSET(CShader_ReportExternalBuild_Request, manifestid_)>(
          reinterpret_cast<char*>(&manifestid_),
          reinterpret_cast<char*>(&other->manifestid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CShader_ReportExternalBuild_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CShader_ReportExternalBuild_Response::_Internal {
 public:
};

CShader_ReportExternalBuild_Response::CShader_ReportExternalBuild_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CShader_ReportExternalBuild_Response)
}
CShader_ReportExternalBuild_Response::CShader_ReportExternalBuild_Response(const CShader_ReportExternalBuild_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CShader_ReportExternalBuild_Response)
}

void CShader_ReportExternalBuild_Response::SharedCtor() {
}

CShader_ReportExternalBuild_Response::~CShader_ReportExternalBuild_Response() {
  // @@protoc_insertion_point(destructor:CShader_ReportExternalBuild_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CShader_ReportExternalBuild_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CShader_ReportExternalBuild_Response::ArenaDtor(void* object) {
  CShader_ReportExternalBuild_Response* _this = reinterpret_cast< CShader_ReportExternalBuild_Response* >(object);
  (void)_this;
}
void CShader_ReportExternalBuild_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CShader_ReportExternalBuild_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CShader_ReportExternalBuild_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CShader_ReportExternalBuild_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CShader_ReportExternalBuild_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CShader_ReportExternalBuild_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CShader_ReportExternalBuild_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CShader_ReportExternalBuild_Response)
  return target;
}

size_t CShader_ReportExternalBuild_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CShader_ReportExternalBuild_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CShader_ReportExternalBuild_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CShader_ReportExternalBuild_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CShader_ReportExternalBuild_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CShader_ReportExternalBuild_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CShader_ReportExternalBuild_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CShader_ReportExternalBuild_Response)
    MergeFrom(*source);
  }
}

void CShader_ReportExternalBuild_Response::MergeFrom(const CShader_ReportExternalBuild_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CShader_ReportExternalBuild_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CShader_ReportExternalBuild_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CShader_ReportExternalBuild_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CShader_ReportExternalBuild_Response::CopyFrom(const CShader_ReportExternalBuild_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CShader_ReportExternalBuild_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CShader_ReportExternalBuild_Response::IsInitialized() const {
  return true;
}

void CShader_ReportExternalBuild_Response::InternalSwap(CShader_ReportExternalBuild_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CShader_ReportExternalBuild_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

Shader::~Shader() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* Shader::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_steammessages_5fshader_2esteamclient_2eproto);
  return file_level_service_descriptors_steammessages_5fshader_2esteamclient_2eproto[0];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* Shader::GetDescriptor() {
  return descriptor();
}

void Shader::GetShaderReportingCadence(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CShader_GetShaderReportingCadence_Request*,
                         ::CShader_GetShaderReportingCadence_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetShaderReportingCadence() not implemented.");
  done->Run();
}

void Shader::RegisterShader(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CShader_RegisterShader_Request*,
                         ::CShader_RegisterShader_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RegisterShader() not implemented.");
  done->Run();
}

void Shader::SendShader(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CShader_SendShader_Request*,
                         ::CShader_SendShader_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SendShader() not implemented.");
  done->Run();
}

void Shader::GetBucketManifest(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CShader_GetBucketManifest_Request*,
                         ::CShader_GetBucketManifest_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetBucketManifest() not implemented.");
  done->Run();
}

void Shader::GetStaleBucket(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CShader_GetStaleBucket_Request*,
                         ::CShader_GetStaleBucket_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetStaleBucket() not implemented.");
  done->Run();
}

void Shader::ReportExternalBuild(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CShader_ReportExternalBuild_Request*,
                         ::CShader_ReportExternalBuild_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ReportExternalBuild() not implemented.");
  done->Run();
}

void Shader::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_steammessages_5fshader_2esteamclient_2eproto[0]);
  switch(method->index()) {
    case 0:
      GetShaderReportingCadence(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CShader_GetShaderReportingCadence_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CShader_GetShaderReportingCadence_Response*>(
                 response),
             done);
      break;
    case 1:
      RegisterShader(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CShader_RegisterShader_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CShader_RegisterShader_Response*>(
                 response),
             done);
      break;
    case 2:
      SendShader(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CShader_SendShader_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CShader_SendShader_Response*>(
                 response),
             done);
      break;
    case 3:
      GetBucketManifest(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CShader_GetBucketManifest_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CShader_GetBucketManifest_Response*>(
                 response),
             done);
      break;
    case 4:
      GetStaleBucket(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CShader_GetStaleBucket_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CShader_GetStaleBucket_Response*>(
                 response),
             done);
      break;
    case 5:
      ReportExternalBuild(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CShader_ReportExternalBuild_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CShader_ReportExternalBuild_Response*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& Shader::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CShader_GetShaderReportingCadence_Request::default_instance();
    case 1:
      return ::CShader_RegisterShader_Request::default_instance();
    case 2:
      return ::CShader_SendShader_Request::default_instance();
    case 3:
      return ::CShader_GetBucketManifest_Request::default_instance();
    case 4:
      return ::CShader_GetStaleBucket_Request::default_instance();
    case 5:
      return ::CShader_ReportExternalBuild_Request::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& Shader::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CShader_GetShaderReportingCadence_Response::default_instance();
    case 1:
      return ::CShader_RegisterShader_Response::default_instance();
    case 2:
      return ::CShader_SendShader_Response::default_instance();
    case 3:
      return ::CShader_GetBucketManifest_Response::default_instance();
    case 4:
      return ::CShader_GetStaleBucket_Response::default_instance();
    case 5:
      return ::CShader_ReportExternalBuild_Response::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

Shader_Stub::Shader_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
Shader_Stub::Shader_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
Shader_Stub::~Shader_Stub() {
  if (owns_channel_) delete channel_;
}

void Shader_Stub::GetShaderReportingCadence(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CShader_GetShaderReportingCadence_Request* request,
                              ::CShader_GetShaderReportingCadence_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void Shader_Stub::RegisterShader(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CShader_RegisterShader_Request* request,
                              ::CShader_RegisterShader_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void Shader_Stub::SendShader(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CShader_SendShader_Request* request,
                              ::CShader_SendShader_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void Shader_Stub::GetBucketManifest(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CShader_GetBucketManifest_Request* request,
                              ::CShader_GetBucketManifest_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void Shader_Stub::GetStaleBucket(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CShader_GetStaleBucket_Request* request,
                              ::CShader_GetStaleBucket_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void Shader_Stub::ReportExternalBuild(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CShader_ReportExternalBuild_Request* request,
                              ::CShader_ReportExternalBuild_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CShader_GetShaderReportingCadence_Request* Arena::CreateMaybeMessage< ::CShader_GetShaderReportingCadence_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CShader_GetShaderReportingCadence_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CShader_GetShaderReportingCadence_Response* Arena::CreateMaybeMessage< ::CShader_GetShaderReportingCadence_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CShader_GetShaderReportingCadence_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CShader_RegisterShader_Request_Shader* Arena::CreateMaybeMessage< ::CShader_RegisterShader_Request_Shader >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CShader_RegisterShader_Request_Shader >(arena);
}
template<> PROTOBUF_NOINLINE ::CShader_RegisterShader_Request* Arena::CreateMaybeMessage< ::CShader_RegisterShader_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CShader_RegisterShader_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CShader_RegisterShader_Response* Arena::CreateMaybeMessage< ::CShader_RegisterShader_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CShader_RegisterShader_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CShader_SendShader_Request_ShaderCode* Arena::CreateMaybeMessage< ::CShader_SendShader_Request_ShaderCode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CShader_SendShader_Request_ShaderCode >(arena);
}
template<> PROTOBUF_NOINLINE ::CShader_SendShader_Request* Arena::CreateMaybeMessage< ::CShader_SendShader_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CShader_SendShader_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CShader_SendShader_Response* Arena::CreateMaybeMessage< ::CShader_SendShader_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CShader_SendShader_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CShader_GetBucketManifest_Request* Arena::CreateMaybeMessage< ::CShader_GetBucketManifest_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CShader_GetBucketManifest_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CShader_GetBucketManifest_Response* Arena::CreateMaybeMessage< ::CShader_GetBucketManifest_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CShader_GetBucketManifest_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CShader_GetStaleBucket_Request* Arena::CreateMaybeMessage< ::CShader_GetStaleBucket_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CShader_GetStaleBucket_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CShader_GetStaleBucket_Response* Arena::CreateMaybeMessage< ::CShader_GetStaleBucket_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CShader_GetStaleBucket_Response >(arena);
}
template<> PROTOBUF_NOINLINE ::CShader_ReportExternalBuild_Request* Arena::CreateMaybeMessage< ::CShader_ReportExternalBuild_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CShader_ReportExternalBuild_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CShader_ReportExternalBuild_Response* Arena::CreateMaybeMessage< ::CShader_ReportExternalBuild_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CShader_ReportExternalBuild_Response >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
