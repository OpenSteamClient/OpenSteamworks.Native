// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_video.steamclient.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_steammessages_5fvideo_2esteamclient_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_steammessages_5fvideo_2esteamclient_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
#include "steammessages_base.pb.h"
#include "steammessages_unified_base.steamclient.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fvideo_2esteamclient_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fvideo_2esteamclient_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_steammessages_5fvideo_2esteamclient_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_steammessages_5fvideo_2esteamclient_2eproto_metadata_getter(int index);
class CFovasVideo_ClientGetOPFSettings_Request;
struct CFovasVideo_ClientGetOPFSettings_RequestDefaultTypeInternal;
extern CFovasVideo_ClientGetOPFSettings_RequestDefaultTypeInternal _CFovasVideo_ClientGetOPFSettings_Request_default_instance_;
class CFovasVideo_ClientGetOPFSettings_Response;
struct CFovasVideo_ClientGetOPFSettings_ResponseDefaultTypeInternal;
extern CFovasVideo_ClientGetOPFSettings_ResponseDefaultTypeInternal _CFovasVideo_ClientGetOPFSettings_Response_default_instance_;
class CVideo_ClientGetVideoURL_Request;
struct CVideo_ClientGetVideoURL_RequestDefaultTypeInternal;
extern CVideo_ClientGetVideoURL_RequestDefaultTypeInternal _CVideo_ClientGetVideoURL_Request_default_instance_;
class CVideo_ClientGetVideoURL_Response;
struct CVideo_ClientGetVideoURL_ResponseDefaultTypeInternal;
extern CVideo_ClientGetVideoURL_ResponseDefaultTypeInternal _CVideo_ClientGetVideoURL_Response_default_instance_;
class CVideo_GetVideoBookmarks_Request;
struct CVideo_GetVideoBookmarks_RequestDefaultTypeInternal;
extern CVideo_GetVideoBookmarks_RequestDefaultTypeInternal _CVideo_GetVideoBookmarks_Request_default_instance_;
class CVideo_GetVideoBookmarks_Response;
struct CVideo_GetVideoBookmarks_ResponseDefaultTypeInternal;
extern CVideo_GetVideoBookmarks_ResponseDefaultTypeInternal _CVideo_GetVideoBookmarks_Response_default_instance_;
class CVideo_SetVideoBookmarNotification;
struct CVideo_SetVideoBookmarNotificationDefaultTypeInternal;
extern CVideo_SetVideoBookmarNotificationDefaultTypeInternal _CVideo_SetVideoBookmarNotification_default_instance_;
class CVideo_UnlockedH264_Notification;
struct CVideo_UnlockedH264_NotificationDefaultTypeInternal;
extern CVideo_UnlockedH264_NotificationDefaultTypeInternal _CVideo_UnlockedH264_Notification_default_instance_;
class VideoBookmark;
struct VideoBookmarkDefaultTypeInternal;
extern VideoBookmarkDefaultTypeInternal _VideoBookmark_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CFovasVideo_ClientGetOPFSettings_Request* Arena::CreateMaybeMessage<::CFovasVideo_ClientGetOPFSettings_Request>(Arena*);
template<> ::CFovasVideo_ClientGetOPFSettings_Response* Arena::CreateMaybeMessage<::CFovasVideo_ClientGetOPFSettings_Response>(Arena*);
template<> ::CVideo_ClientGetVideoURL_Request* Arena::CreateMaybeMessage<::CVideo_ClientGetVideoURL_Request>(Arena*);
template<> ::CVideo_ClientGetVideoURL_Response* Arena::CreateMaybeMessage<::CVideo_ClientGetVideoURL_Response>(Arena*);
template<> ::CVideo_GetVideoBookmarks_Request* Arena::CreateMaybeMessage<::CVideo_GetVideoBookmarks_Request>(Arena*);
template<> ::CVideo_GetVideoBookmarks_Response* Arena::CreateMaybeMessage<::CVideo_GetVideoBookmarks_Response>(Arena*);
template<> ::CVideo_SetVideoBookmarNotification* Arena::CreateMaybeMessage<::CVideo_SetVideoBookmarNotification>(Arena*);
template<> ::CVideo_UnlockedH264_Notification* Arena::CreateMaybeMessage<::CVideo_UnlockedH264_Notification>(Arena*);
template<> ::VideoBookmark* Arena::CreateMaybeMessage<::VideoBookmark>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class CVideo_ClientGetVideoURL_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CVideo_ClientGetVideoURL_Request) */ {
 public:
  inline CVideo_ClientGetVideoURL_Request() : CVideo_ClientGetVideoURL_Request(nullptr) {}
  virtual ~CVideo_ClientGetVideoURL_Request();
  explicit constexpr CVideo_ClientGetVideoURL_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CVideo_ClientGetVideoURL_Request(const CVideo_ClientGetVideoURL_Request& from);
  CVideo_ClientGetVideoURL_Request(CVideo_ClientGetVideoURL_Request&& from) noexcept
    : CVideo_ClientGetVideoURL_Request() {
    *this = ::std::move(from);
  }

  inline CVideo_ClientGetVideoURL_Request& operator=(const CVideo_ClientGetVideoURL_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CVideo_ClientGetVideoURL_Request& operator=(CVideo_ClientGetVideoURL_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CVideo_ClientGetVideoURL_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CVideo_ClientGetVideoURL_Request* internal_default_instance() {
    return reinterpret_cast<const CVideo_ClientGetVideoURL_Request*>(
               &_CVideo_ClientGetVideoURL_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CVideo_ClientGetVideoURL_Request& a, CVideo_ClientGetVideoURL_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CVideo_ClientGetVideoURL_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CVideo_ClientGetVideoURL_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CVideo_ClientGetVideoURL_Request* New() const final {
    return CreateMaybeMessage<CVideo_ClientGetVideoURL_Request>(nullptr);
  }

  CVideo_ClientGetVideoURL_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CVideo_ClientGetVideoURL_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CVideo_ClientGetVideoURL_Request& from);
  void MergeFrom(const CVideo_ClientGetVideoURL_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CVideo_ClientGetVideoURL_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CVideo_ClientGetVideoURL_Request";
  }
  protected:
  explicit CVideo_ClientGetVideoURL_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fvideo_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVideoIdFieldNumber = 1,
    kClientCellidFieldNumber = 2,
  };
  // optional uint64 video_id = 1;
  bool has_video_id() const;
  private:
  bool _internal_has_video_id() const;
  public:
  void clear_video_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 video_id() const;
  void set_video_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_video_id() const;
  void _internal_set_video_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 client_cellid = 2;
  bool has_client_cellid() const;
  private:
  bool _internal_has_client_cellid() const;
  public:
  void clear_client_cellid();
  ::PROTOBUF_NAMESPACE_ID::uint32 client_cellid() const;
  void set_client_cellid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_client_cellid() const;
  void _internal_set_client_cellid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CVideo_ClientGetVideoURL_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 video_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 client_cellid_;
  friend struct ::TableStruct_steammessages_5fvideo_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CVideo_ClientGetVideoURL_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CVideo_ClientGetVideoURL_Response) */ {
 public:
  inline CVideo_ClientGetVideoURL_Response() : CVideo_ClientGetVideoURL_Response(nullptr) {}
  virtual ~CVideo_ClientGetVideoURL_Response();
  explicit constexpr CVideo_ClientGetVideoURL_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CVideo_ClientGetVideoURL_Response(const CVideo_ClientGetVideoURL_Response& from);
  CVideo_ClientGetVideoURL_Response(CVideo_ClientGetVideoURL_Response&& from) noexcept
    : CVideo_ClientGetVideoURL_Response() {
    *this = ::std::move(from);
  }

  inline CVideo_ClientGetVideoURL_Response& operator=(const CVideo_ClientGetVideoURL_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CVideo_ClientGetVideoURL_Response& operator=(CVideo_ClientGetVideoURL_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CVideo_ClientGetVideoURL_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CVideo_ClientGetVideoURL_Response* internal_default_instance() {
    return reinterpret_cast<const CVideo_ClientGetVideoURL_Response*>(
               &_CVideo_ClientGetVideoURL_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CVideo_ClientGetVideoURL_Response& a, CVideo_ClientGetVideoURL_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CVideo_ClientGetVideoURL_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CVideo_ClientGetVideoURL_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CVideo_ClientGetVideoURL_Response* New() const final {
    return CreateMaybeMessage<CVideo_ClientGetVideoURL_Response>(nullptr);
  }

  CVideo_ClientGetVideoURL_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CVideo_ClientGetVideoURL_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CVideo_ClientGetVideoURL_Response& from);
  void MergeFrom(const CVideo_ClientGetVideoURL_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CVideo_ClientGetVideoURL_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CVideo_ClientGetVideoURL_Response";
  }
  protected:
  explicit CVideo_ClientGetVideoURL_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fvideo_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVideoUrlFieldNumber = 2,
    kVideoIdFieldNumber = 1,
  };
  // optional string video_url = 2;
  bool has_video_url() const;
  private:
  bool _internal_has_video_url() const;
  public:
  void clear_video_url();
  const std::string& video_url() const;
  void set_video_url(const std::string& value);
  void set_video_url(std::string&& value);
  void set_video_url(const char* value);
  void set_video_url(const char* value, size_t size);
  std::string* mutable_video_url();
  std::string* release_video_url();
  void set_allocated_video_url(std::string* video_url);
  private:
  const std::string& _internal_video_url() const;
  void _internal_set_video_url(const std::string& value);
  std::string* _internal_mutable_video_url();
  public:

  // optional uint64 video_id = 1;
  bool has_video_id() const;
  private:
  bool _internal_has_video_id() const;
  public:
  void clear_video_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 video_id() const;
  void set_video_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_video_id() const;
  void _internal_set_video_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CVideo_ClientGetVideoURL_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr video_url_;
  ::PROTOBUF_NAMESPACE_ID::uint64 video_id_;
  friend struct ::TableStruct_steammessages_5fvideo_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class VideoBookmark PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:VideoBookmark) */ {
 public:
  inline VideoBookmark() : VideoBookmark(nullptr) {}
  virtual ~VideoBookmark();
  explicit constexpr VideoBookmark(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  VideoBookmark(const VideoBookmark& from);
  VideoBookmark(VideoBookmark&& from) noexcept
    : VideoBookmark() {
    *this = ::std::move(from);
  }

  inline VideoBookmark& operator=(const VideoBookmark& from) {
    CopyFrom(from);
    return *this;
  }
  inline VideoBookmark& operator=(VideoBookmark&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VideoBookmark& default_instance() {
    return *internal_default_instance();
  }
  static inline const VideoBookmark* internal_default_instance() {
    return reinterpret_cast<const VideoBookmark*>(
               &_VideoBookmark_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(VideoBookmark& a, VideoBookmark& b) {
    a.Swap(&b);
  }
  inline void Swap(VideoBookmark* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VideoBookmark* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VideoBookmark* New() const final {
    return CreateMaybeMessage<VideoBookmark>(nullptr);
  }

  VideoBookmark* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VideoBookmark>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VideoBookmark& from);
  void MergeFrom(const VideoBookmark& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VideoBookmark* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "VideoBookmark";
  }
  protected:
  explicit VideoBookmark(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fvideo_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppIdFieldNumber = 1,
    kPlaybacpositionInSecondsFieldNumber = 2,
    kVideoTracidFieldNumber = 3,
    kAudioTracidFieldNumber = 4,
    kTimedtextTracidFieldNumber = 5,
    kLastModifiedFieldNumber = 6,
    kHideFromWatchHistoryFieldNumber = 7,
    kHideFromLibraryFieldNumber = 8,
  };
  // optional uint32 app_id = 1;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 playbacposition_in_seconds = 2;
  bool has_playbacposition_in_seconds() const;
  private:
  bool _internal_has_playbacposition_in_seconds() const;
  public:
  void clear_playbacposition_in_seconds();
  ::PROTOBUF_NAMESPACE_ID::uint32 playbacposition_in_seconds() const;
  void set_playbacposition_in_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_playbacposition_in_seconds() const;
  void _internal_set_playbacposition_in_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 video_tracid = 3;
  bool has_video_tracid() const;
  private:
  bool _internal_has_video_tracid() const;
  public:
  void clear_video_tracid();
  ::PROTOBUF_NAMESPACE_ID::uint64 video_tracid() const;
  void set_video_tracid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_video_tracid() const;
  void _internal_set_video_tracid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 audio_tracid = 4;
  bool has_audio_tracid() const;
  private:
  bool _internal_has_audio_tracid() const;
  public:
  void clear_audio_tracid();
  ::PROTOBUF_NAMESPACE_ID::uint64 audio_tracid() const;
  void set_audio_tracid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_audio_tracid() const;
  void _internal_set_audio_tracid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 timedtext_tracid = 5;
  bool has_timedtext_tracid() const;
  private:
  bool _internal_has_timedtext_tracid() const;
  public:
  void clear_timedtext_tracid();
  ::PROTOBUF_NAMESPACE_ID::uint64 timedtext_tracid() const;
  void set_timedtext_tracid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_timedtext_tracid() const;
  void _internal_set_timedtext_tracid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 last_modified = 6;
  bool has_last_modified() const;
  private:
  bool _internal_has_last_modified() const;
  public:
  void clear_last_modified();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_modified() const;
  void set_last_modified(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_modified() const;
  void _internal_set_last_modified(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool hide_from_watch_history = 7 [default = false];
  bool has_hide_from_watch_history() const;
  private:
  bool _internal_has_hide_from_watch_history() const;
  public:
  void clear_hide_from_watch_history();
  bool hide_from_watch_history() const;
  void set_hide_from_watch_history(bool value);
  private:
  bool _internal_hide_from_watch_history() const;
  void _internal_set_hide_from_watch_history(bool value);
  public:

  // optional bool hide_from_library = 8 [default = false];
  bool has_hide_from_library() const;
  private:
  bool _internal_has_hide_from_library() const;
  public:
  void clear_hide_from_library();
  bool hide_from_library() const;
  void set_hide_from_library(bool value);
  private:
  bool _internal_hide_from_library() const;
  void _internal_set_hide_from_library(bool value);
  public:

  // @@protoc_insertion_point(class_scope:VideoBookmark)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 playbacposition_in_seconds_;
  ::PROTOBUF_NAMESPACE_ID::uint64 video_tracid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 audio_tracid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 timedtext_tracid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_modified_;
  bool hide_from_watch_history_;
  bool hide_from_library_;
  friend struct ::TableStruct_steammessages_5fvideo_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CVideo_SetVideoBookmarNotification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CVideo_SetVideoBookmarNotification) */ {
 public:
  inline CVideo_SetVideoBookmarNotification() : CVideo_SetVideoBookmarNotification(nullptr) {}
  virtual ~CVideo_SetVideoBookmarNotification();
  explicit constexpr CVideo_SetVideoBookmarNotification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CVideo_SetVideoBookmarNotification(const CVideo_SetVideoBookmarNotification& from);
  CVideo_SetVideoBookmarNotification(CVideo_SetVideoBookmarNotification&& from) noexcept
    : CVideo_SetVideoBookmarNotification() {
    *this = ::std::move(from);
  }

  inline CVideo_SetVideoBookmarNotification& operator=(const CVideo_SetVideoBookmarNotification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CVideo_SetVideoBookmarNotification& operator=(CVideo_SetVideoBookmarNotification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CVideo_SetVideoBookmarNotification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CVideo_SetVideoBookmarNotification* internal_default_instance() {
    return reinterpret_cast<const CVideo_SetVideoBookmarNotification*>(
               &_CVideo_SetVideoBookmarNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CVideo_SetVideoBookmarNotification& a, CVideo_SetVideoBookmarNotification& b) {
    a.Swap(&b);
  }
  inline void Swap(CVideo_SetVideoBookmarNotification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CVideo_SetVideoBookmarNotification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CVideo_SetVideoBookmarNotification* New() const final {
    return CreateMaybeMessage<CVideo_SetVideoBookmarNotification>(nullptr);
  }

  CVideo_SetVideoBookmarNotification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CVideo_SetVideoBookmarNotification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CVideo_SetVideoBookmarNotification& from);
  void MergeFrom(const CVideo_SetVideoBookmarNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CVideo_SetVideoBookmarNotification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CVideo_SetVideoBookmarNotification";
  }
  protected:
  explicit CVideo_SetVideoBookmarNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fvideo_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBookmarksFieldNumber = 1,
  };
  // repeated .VideoBookmark bookmarks = 1;
  int bookmarks_size() const;
  private:
  int _internal_bookmarks_size() const;
  public:
  void clear_bookmarks();
  ::VideoBookmark* mutable_bookmarks(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::VideoBookmark >*
      mutable_bookmarks();
  private:
  const ::VideoBookmark& _internal_bookmarks(int index) const;
  ::VideoBookmark* _internal_add_bookmarks();
  public:
  const ::VideoBookmark& bookmarks(int index) const;
  ::VideoBookmark* add_bookmarks();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::VideoBookmark >&
      bookmarks() const;

  // @@protoc_insertion_point(class_scope:CVideo_SetVideoBookmarNotification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::VideoBookmark > bookmarks_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fvideo_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CVideo_GetVideoBookmarks_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CVideo_GetVideoBookmarks_Request) */ {
 public:
  inline CVideo_GetVideoBookmarks_Request() : CVideo_GetVideoBookmarks_Request(nullptr) {}
  virtual ~CVideo_GetVideoBookmarks_Request();
  explicit constexpr CVideo_GetVideoBookmarks_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CVideo_GetVideoBookmarks_Request(const CVideo_GetVideoBookmarks_Request& from);
  CVideo_GetVideoBookmarks_Request(CVideo_GetVideoBookmarks_Request&& from) noexcept
    : CVideo_GetVideoBookmarks_Request() {
    *this = ::std::move(from);
  }

  inline CVideo_GetVideoBookmarks_Request& operator=(const CVideo_GetVideoBookmarks_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CVideo_GetVideoBookmarks_Request& operator=(CVideo_GetVideoBookmarks_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CVideo_GetVideoBookmarks_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CVideo_GetVideoBookmarks_Request* internal_default_instance() {
    return reinterpret_cast<const CVideo_GetVideoBookmarks_Request*>(
               &_CVideo_GetVideoBookmarks_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CVideo_GetVideoBookmarks_Request& a, CVideo_GetVideoBookmarks_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CVideo_GetVideoBookmarks_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CVideo_GetVideoBookmarks_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CVideo_GetVideoBookmarks_Request* New() const final {
    return CreateMaybeMessage<CVideo_GetVideoBookmarks_Request>(nullptr);
  }

  CVideo_GetVideoBookmarks_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CVideo_GetVideoBookmarks_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CVideo_GetVideoBookmarks_Request& from);
  void MergeFrom(const CVideo_GetVideoBookmarks_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CVideo_GetVideoBookmarks_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CVideo_GetVideoBookmarks_Request";
  }
  protected:
  explicit CVideo_GetVideoBookmarks_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fvideo_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppidsFieldNumber = 1,
    kUpdatedSinceFieldNumber = 2,
  };
  // repeated uint32 appids = 1;
  int appids_size() const;
  private:
  int _internal_appids_size() const;
  public:
  void clear_appids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_appids() const;
  void _internal_add_appids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_appids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 appids(int index) const;
  void set_appids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_appids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      appids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_appids();

  // optional uint32 updated_since = 2;
  bool has_updated_since() const;
  private:
  bool _internal_has_updated_since() const;
  public:
  void clear_updated_since();
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_since() const;
  void set_updated_since(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_updated_since() const;
  void _internal_set_updated_since(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CVideo_GetVideoBookmarks_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > appids_;
  ::PROTOBUF_NAMESPACE_ID::uint32 updated_since_;
  friend struct ::TableStruct_steammessages_5fvideo_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CVideo_GetVideoBookmarks_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CVideo_GetVideoBookmarks_Response) */ {
 public:
  inline CVideo_GetVideoBookmarks_Response() : CVideo_GetVideoBookmarks_Response(nullptr) {}
  virtual ~CVideo_GetVideoBookmarks_Response();
  explicit constexpr CVideo_GetVideoBookmarks_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CVideo_GetVideoBookmarks_Response(const CVideo_GetVideoBookmarks_Response& from);
  CVideo_GetVideoBookmarks_Response(CVideo_GetVideoBookmarks_Response&& from) noexcept
    : CVideo_GetVideoBookmarks_Response() {
    *this = ::std::move(from);
  }

  inline CVideo_GetVideoBookmarks_Response& operator=(const CVideo_GetVideoBookmarks_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CVideo_GetVideoBookmarks_Response& operator=(CVideo_GetVideoBookmarks_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CVideo_GetVideoBookmarks_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CVideo_GetVideoBookmarks_Response* internal_default_instance() {
    return reinterpret_cast<const CVideo_GetVideoBookmarks_Response*>(
               &_CVideo_GetVideoBookmarks_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CVideo_GetVideoBookmarks_Response& a, CVideo_GetVideoBookmarks_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CVideo_GetVideoBookmarks_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CVideo_GetVideoBookmarks_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CVideo_GetVideoBookmarks_Response* New() const final {
    return CreateMaybeMessage<CVideo_GetVideoBookmarks_Response>(nullptr);
  }

  CVideo_GetVideoBookmarks_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CVideo_GetVideoBookmarks_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CVideo_GetVideoBookmarks_Response& from);
  void MergeFrom(const CVideo_GetVideoBookmarks_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CVideo_GetVideoBookmarks_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CVideo_GetVideoBookmarks_Response";
  }
  protected:
  explicit CVideo_GetVideoBookmarks_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fvideo_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBookmarksFieldNumber = 1,
  };
  // repeated .VideoBookmark bookmarks = 1;
  int bookmarks_size() const;
  private:
  int _internal_bookmarks_size() const;
  public:
  void clear_bookmarks();
  ::VideoBookmark* mutable_bookmarks(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::VideoBookmark >*
      mutable_bookmarks();
  private:
  const ::VideoBookmark& _internal_bookmarks(int index) const;
  ::VideoBookmark* _internal_add_bookmarks();
  public:
  const ::VideoBookmark& bookmarks(int index) const;
  ::VideoBookmark* add_bookmarks();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::VideoBookmark >&
      bookmarks() const;

  // @@protoc_insertion_point(class_scope:CVideo_GetVideoBookmarks_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::VideoBookmark > bookmarks_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_steammessages_5fvideo_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CVideo_UnlockedH264_Notification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CVideo_UnlockedH264_Notification) */ {
 public:
  inline CVideo_UnlockedH264_Notification() : CVideo_UnlockedH264_Notification(nullptr) {}
  virtual ~CVideo_UnlockedH264_Notification();
  explicit constexpr CVideo_UnlockedH264_Notification(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CVideo_UnlockedH264_Notification(const CVideo_UnlockedH264_Notification& from);
  CVideo_UnlockedH264_Notification(CVideo_UnlockedH264_Notification&& from) noexcept
    : CVideo_UnlockedH264_Notification() {
    *this = ::std::move(from);
  }

  inline CVideo_UnlockedH264_Notification& operator=(const CVideo_UnlockedH264_Notification& from) {
    CopyFrom(from);
    return *this;
  }
  inline CVideo_UnlockedH264_Notification& operator=(CVideo_UnlockedH264_Notification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CVideo_UnlockedH264_Notification& default_instance() {
    return *internal_default_instance();
  }
  static inline const CVideo_UnlockedH264_Notification* internal_default_instance() {
    return reinterpret_cast<const CVideo_UnlockedH264_Notification*>(
               &_CVideo_UnlockedH264_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CVideo_UnlockedH264_Notification& a, CVideo_UnlockedH264_Notification& b) {
    a.Swap(&b);
  }
  inline void Swap(CVideo_UnlockedH264_Notification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CVideo_UnlockedH264_Notification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CVideo_UnlockedH264_Notification* New() const final {
    return CreateMaybeMessage<CVideo_UnlockedH264_Notification>(nullptr);
  }

  CVideo_UnlockedH264_Notification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CVideo_UnlockedH264_Notification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CVideo_UnlockedH264_Notification& from);
  void MergeFrom(const CVideo_UnlockedH264_Notification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CVideo_UnlockedH264_Notification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CVideo_UnlockedH264_Notification";
  }
  protected:
  explicit CVideo_UnlockedH264_Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fvideo_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEncryptionKeyFieldNumber = 1,
  };
  // optional bytes encryption_key = 1;
  bool has_encryption_key() const;
  private:
  bool _internal_has_encryption_key() const;
  public:
  void clear_encryption_key();
  const std::string& encryption_key() const;
  void set_encryption_key(const std::string& value);
  void set_encryption_key(std::string&& value);
  void set_encryption_key(const char* value);
  void set_encryption_key(const void* value, size_t size);
  std::string* mutable_encryption_key();
  std::string* release_encryption_key();
  void set_allocated_encryption_key(std::string* encryption_key);
  private:
  const std::string& _internal_encryption_key() const;
  void _internal_set_encryption_key(const std::string& value);
  std::string* _internal_mutable_encryption_key();
  public:

  // @@protoc_insertion_point(class_scope:CVideo_UnlockedH264_Notification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr encryption_key_;
  friend struct ::TableStruct_steammessages_5fvideo_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CFovasVideo_ClientGetOPFSettings_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CFovasVideo_ClientGetOPFSettings_Request) */ {
 public:
  inline CFovasVideo_ClientGetOPFSettings_Request() : CFovasVideo_ClientGetOPFSettings_Request(nullptr) {}
  virtual ~CFovasVideo_ClientGetOPFSettings_Request();
  explicit constexpr CFovasVideo_ClientGetOPFSettings_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CFovasVideo_ClientGetOPFSettings_Request(const CFovasVideo_ClientGetOPFSettings_Request& from);
  CFovasVideo_ClientGetOPFSettings_Request(CFovasVideo_ClientGetOPFSettings_Request&& from) noexcept
    : CFovasVideo_ClientGetOPFSettings_Request() {
    *this = ::std::move(from);
  }

  inline CFovasVideo_ClientGetOPFSettings_Request& operator=(const CFovasVideo_ClientGetOPFSettings_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CFovasVideo_ClientGetOPFSettings_Request& operator=(CFovasVideo_ClientGetOPFSettings_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CFovasVideo_ClientGetOPFSettings_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CFovasVideo_ClientGetOPFSettings_Request* internal_default_instance() {
    return reinterpret_cast<const CFovasVideo_ClientGetOPFSettings_Request*>(
               &_CFovasVideo_ClientGetOPFSettings_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CFovasVideo_ClientGetOPFSettings_Request& a, CFovasVideo_ClientGetOPFSettings_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CFovasVideo_ClientGetOPFSettings_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CFovasVideo_ClientGetOPFSettings_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CFovasVideo_ClientGetOPFSettings_Request* New() const final {
    return CreateMaybeMessage<CFovasVideo_ClientGetOPFSettings_Request>(nullptr);
  }

  CFovasVideo_ClientGetOPFSettings_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CFovasVideo_ClientGetOPFSettings_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CFovasVideo_ClientGetOPFSettings_Request& from);
  void MergeFrom(const CFovasVideo_ClientGetOPFSettings_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CFovasVideo_ClientGetOPFSettings_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CFovasVideo_ClientGetOPFSettings_Request";
  }
  protected:
  explicit CFovasVideo_ClientGetOPFSettings_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fvideo_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppIdFieldNumber = 1,
    kClientCellidFieldNumber = 2,
  };
  // optional uint32 app_id = 1;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 client_cellid = 2;
  bool has_client_cellid() const;
  private:
  bool _internal_has_client_cellid() const;
  public:
  void clear_client_cellid();
  ::PROTOBUF_NAMESPACE_ID::uint32 client_cellid() const;
  void set_client_cellid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_client_cellid() const;
  void _internal_set_client_cellid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CFovasVideo_ClientGetOPFSettings_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 client_cellid_;
  friend struct ::TableStruct_steammessages_5fvideo_2esteamclient_2eproto;
};
// -------------------------------------------------------------------

class CFovasVideo_ClientGetOPFSettings_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CFovasVideo_ClientGetOPFSettings_Response) */ {
 public:
  inline CFovasVideo_ClientGetOPFSettings_Response() : CFovasVideo_ClientGetOPFSettings_Response(nullptr) {}
  virtual ~CFovasVideo_ClientGetOPFSettings_Response();
  explicit constexpr CFovasVideo_ClientGetOPFSettings_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CFovasVideo_ClientGetOPFSettings_Response(const CFovasVideo_ClientGetOPFSettings_Response& from);
  CFovasVideo_ClientGetOPFSettings_Response(CFovasVideo_ClientGetOPFSettings_Response&& from) noexcept
    : CFovasVideo_ClientGetOPFSettings_Response() {
    *this = ::std::move(from);
  }

  inline CFovasVideo_ClientGetOPFSettings_Response& operator=(const CFovasVideo_ClientGetOPFSettings_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CFovasVideo_ClientGetOPFSettings_Response& operator=(CFovasVideo_ClientGetOPFSettings_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CFovasVideo_ClientGetOPFSettings_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CFovasVideo_ClientGetOPFSettings_Response* internal_default_instance() {
    return reinterpret_cast<const CFovasVideo_ClientGetOPFSettings_Response*>(
               &_CFovasVideo_ClientGetOPFSettings_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CFovasVideo_ClientGetOPFSettings_Response& a, CFovasVideo_ClientGetOPFSettings_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CFovasVideo_ClientGetOPFSettings_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CFovasVideo_ClientGetOPFSettings_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CFovasVideo_ClientGetOPFSettings_Response* New() const final {
    return CreateMaybeMessage<CFovasVideo_ClientGetOPFSettings_Response>(nullptr);
  }

  CFovasVideo_ClientGetOPFSettings_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CFovasVideo_ClientGetOPFSettings_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CFovasVideo_ClientGetOPFSettings_Response& from);
  void MergeFrom(const CFovasVideo_ClientGetOPFSettings_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CFovasVideo_ClientGetOPFSettings_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CFovasVideo_ClientGetOPFSettings_Response";
  }
  protected:
  explicit CFovasVideo_ClientGetOPFSettings_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fvideo_2esteamclient_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpfSettingsFieldNumber = 2,
    kAppIdFieldNumber = 1,
  };
  // optional string opf_settings = 2;
  bool has_opf_settings() const;
  private:
  bool _internal_has_opf_settings() const;
  public:
  void clear_opf_settings();
  const std::string& opf_settings() const;
  void set_opf_settings(const std::string& value);
  void set_opf_settings(std::string&& value);
  void set_opf_settings(const char* value);
  void set_opf_settings(const char* value, size_t size);
  std::string* mutable_opf_settings();
  std::string* release_opf_settings();
  void set_allocated_opf_settings(std::string* opf_settings);
  private:
  const std::string& _internal_opf_settings() const;
  void _internal_set_opf_settings(const std::string& value);
  std::string* _internal_mutable_opf_settings();
  public:

  // optional uint32 app_id = 1;
  bool has_app_id() const;
  private:
  bool _internal_has_app_id() const;
  public:
  void clear_app_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id() const;
  void set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_app_id() const;
  void _internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CFovasVideo_ClientGetOPFSettings_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr opf_settings_;
  ::PROTOBUF_NAMESPACE_ID::uint32 app_id_;
  friend struct ::TableStruct_steammessages_5fvideo_2esteamclient_2eproto;
};
// ===================================================================

class Video_Stub;

class Video : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Video() {};
 public:
  virtual ~Video();

  typedef Video_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void ClientGetVideoURL(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CVideo_ClientGetVideoURL_Request* request,
                       ::CVideo_ClientGetVideoURL_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SetVideoBookmark(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CVideo_SetVideoBookmarNotification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void GetVideoBookmarks(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CVideo_GetVideoBookmarks_Request* request,
                       ::CVideo_GetVideoBookmarks_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Video);
};

class Video_Stub : public Video {
 public:
  Video_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  Video_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~Video_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements Video ------------------------------------------

  void ClientGetVideoURL(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CVideo_ClientGetVideoURL_Request* request,
                       ::CVideo_ClientGetVideoURL_Response* response,
                       ::google::protobuf::Closure* done);
  void SetVideoBookmark(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CVideo_SetVideoBookmarNotification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
  void GetVideoBookmarks(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CVideo_GetVideoBookmarks_Request* request,
                       ::CVideo_GetVideoBookmarks_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Video_Stub);
};


// -------------------------------------------------------------------

class VideoClient_Stub;

class VideoClient : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline VideoClient() {};
 public:
  virtual ~VideoClient();

  typedef VideoClient_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void NotifyUnlockedH264(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CVideo_UnlockedH264_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(VideoClient);
};

class VideoClient_Stub : public VideoClient {
 public:
  VideoClient_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  VideoClient_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~VideoClient_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements VideoClient ------------------------------------------

  void NotifyUnlockedH264(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CVideo_UnlockedH264_Notification* request,
                       ::NoResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(VideoClient_Stub);
};


// -------------------------------------------------------------------

class FovasVideo_Stub;

class FovasVideo : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline FovasVideo() {};
 public:
  virtual ~FovasVideo();

  typedef FovasVideo_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void ClientGetOPFSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CFovasVideo_ClientGetOPFSettings_Request* request,
                       ::CFovasVideo_ClientGetOPFSettings_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(FovasVideo);
};

class FovasVideo_Stub : public FovasVideo {
 public:
  FovasVideo_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  FovasVideo_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~FovasVideo_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements FovasVideo ------------------------------------------

  void ClientGetOPFSettings(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CFovasVideo_ClientGetOPFSettings_Request* request,
                       ::CFovasVideo_ClientGetOPFSettings_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(FovasVideo_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CVideo_ClientGetVideoURL_Request

// optional uint64 video_id = 1;
inline bool CVideo_ClientGetVideoURL_Request::_internal_has_video_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CVideo_ClientGetVideoURL_Request::has_video_id() const {
  return _internal_has_video_id();
}
inline void CVideo_ClientGetVideoURL_Request::clear_video_id() {
  video_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CVideo_ClientGetVideoURL_Request::_internal_video_id() const {
  return video_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CVideo_ClientGetVideoURL_Request::video_id() const {
  // @@protoc_insertion_point(field_get:CVideo_ClientGetVideoURL_Request.video_id)
  return _internal_video_id();
}
inline void CVideo_ClientGetVideoURL_Request::_internal_set_video_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  video_id_ = value;
}
inline void CVideo_ClientGetVideoURL_Request::set_video_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_video_id(value);
  // @@protoc_insertion_point(field_set:CVideo_ClientGetVideoURL_Request.video_id)
}

// optional uint32 client_cellid = 2;
inline bool CVideo_ClientGetVideoURL_Request::_internal_has_client_cellid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CVideo_ClientGetVideoURL_Request::has_client_cellid() const {
  return _internal_has_client_cellid();
}
inline void CVideo_ClientGetVideoURL_Request::clear_client_cellid() {
  client_cellid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CVideo_ClientGetVideoURL_Request::_internal_client_cellid() const {
  return client_cellid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CVideo_ClientGetVideoURL_Request::client_cellid() const {
  // @@protoc_insertion_point(field_get:CVideo_ClientGetVideoURL_Request.client_cellid)
  return _internal_client_cellid();
}
inline void CVideo_ClientGetVideoURL_Request::_internal_set_client_cellid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  client_cellid_ = value;
}
inline void CVideo_ClientGetVideoURL_Request::set_client_cellid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_client_cellid(value);
  // @@protoc_insertion_point(field_set:CVideo_ClientGetVideoURL_Request.client_cellid)
}

// -------------------------------------------------------------------

// CVideo_ClientGetVideoURL_Response

// optional uint64 video_id = 1;
inline bool CVideo_ClientGetVideoURL_Response::_internal_has_video_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CVideo_ClientGetVideoURL_Response::has_video_id() const {
  return _internal_has_video_id();
}
inline void CVideo_ClientGetVideoURL_Response::clear_video_id() {
  video_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CVideo_ClientGetVideoURL_Response::_internal_video_id() const {
  return video_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CVideo_ClientGetVideoURL_Response::video_id() const {
  // @@protoc_insertion_point(field_get:CVideo_ClientGetVideoURL_Response.video_id)
  return _internal_video_id();
}
inline void CVideo_ClientGetVideoURL_Response::_internal_set_video_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  video_id_ = value;
}
inline void CVideo_ClientGetVideoURL_Response::set_video_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_video_id(value);
  // @@protoc_insertion_point(field_set:CVideo_ClientGetVideoURL_Response.video_id)
}

// optional string video_url = 2;
inline bool CVideo_ClientGetVideoURL_Response::_internal_has_video_url() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CVideo_ClientGetVideoURL_Response::has_video_url() const {
  return _internal_has_video_url();
}
inline void CVideo_ClientGetVideoURL_Response::clear_video_url() {
  video_url_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CVideo_ClientGetVideoURL_Response::video_url() const {
  // @@protoc_insertion_point(field_get:CVideo_ClientGetVideoURL_Response.video_url)
  return _internal_video_url();
}
inline void CVideo_ClientGetVideoURL_Response::set_video_url(const std::string& value) {
  _internal_set_video_url(value);
  // @@protoc_insertion_point(field_set:CVideo_ClientGetVideoURL_Response.video_url)
}
inline std::string* CVideo_ClientGetVideoURL_Response::mutable_video_url() {
  // @@protoc_insertion_point(field_mutable:CVideo_ClientGetVideoURL_Response.video_url)
  return _internal_mutable_video_url();
}
inline const std::string& CVideo_ClientGetVideoURL_Response::_internal_video_url() const {
  return video_url_.Get();
}
inline void CVideo_ClientGetVideoURL_Response::_internal_set_video_url(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  video_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CVideo_ClientGetVideoURL_Response::set_video_url(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  video_url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CVideo_ClientGetVideoURL_Response.video_url)
}
inline void CVideo_ClientGetVideoURL_Response::set_video_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  video_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CVideo_ClientGetVideoURL_Response.video_url)
}
inline void CVideo_ClientGetVideoURL_Response::set_video_url(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  video_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CVideo_ClientGetVideoURL_Response.video_url)
}
inline std::string* CVideo_ClientGetVideoURL_Response::_internal_mutable_video_url() {
  _has_bits_[0] |= 0x00000001u;
  return video_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CVideo_ClientGetVideoURL_Response::release_video_url() {
  // @@protoc_insertion_point(field_release:CVideo_ClientGetVideoURL_Response.video_url)
  if (!_internal_has_video_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return video_url_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CVideo_ClientGetVideoURL_Response::set_allocated_video_url(std::string* video_url) {
  if (video_url != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  video_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), video_url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CVideo_ClientGetVideoURL_Response.video_url)
}

// -------------------------------------------------------------------

// VideoBookmark

// optional uint32 app_id = 1;
inline bool VideoBookmark::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool VideoBookmark::has_app_id() const {
  return _internal_has_app_id();
}
inline void VideoBookmark::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VideoBookmark::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VideoBookmark::app_id() const {
  // @@protoc_insertion_point(field_get:VideoBookmark.app_id)
  return _internal_app_id();
}
inline void VideoBookmark::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  app_id_ = value;
}
inline void VideoBookmark::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:VideoBookmark.app_id)
}

// optional uint32 playbacposition_in_seconds = 2;
inline bool VideoBookmark::_internal_has_playbacposition_in_seconds() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool VideoBookmark::has_playbacposition_in_seconds() const {
  return _internal_has_playbacposition_in_seconds();
}
inline void VideoBookmark::clear_playbacposition_in_seconds() {
  playbacposition_in_seconds_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VideoBookmark::_internal_playbacposition_in_seconds() const {
  return playbacposition_in_seconds_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VideoBookmark::playbacposition_in_seconds() const {
  // @@protoc_insertion_point(field_get:VideoBookmark.playbacposition_in_seconds)
  return _internal_playbacposition_in_seconds();
}
inline void VideoBookmark::_internal_set_playbacposition_in_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  playbacposition_in_seconds_ = value;
}
inline void VideoBookmark::set_playbacposition_in_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_playbacposition_in_seconds(value);
  // @@protoc_insertion_point(field_set:VideoBookmark.playbacposition_in_seconds)
}

// optional uint64 video_tracid = 3;
inline bool VideoBookmark::_internal_has_video_tracid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool VideoBookmark::has_video_tracid() const {
  return _internal_has_video_tracid();
}
inline void VideoBookmark::clear_video_tracid() {
  video_tracid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 VideoBookmark::_internal_video_tracid() const {
  return video_tracid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 VideoBookmark::video_tracid() const {
  // @@protoc_insertion_point(field_get:VideoBookmark.video_tracid)
  return _internal_video_tracid();
}
inline void VideoBookmark::_internal_set_video_tracid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  video_tracid_ = value;
}
inline void VideoBookmark::set_video_tracid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_video_tracid(value);
  // @@protoc_insertion_point(field_set:VideoBookmark.video_tracid)
}

// optional uint64 audio_tracid = 4;
inline bool VideoBookmark::_internal_has_audio_tracid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool VideoBookmark::has_audio_tracid() const {
  return _internal_has_audio_tracid();
}
inline void VideoBookmark::clear_audio_tracid() {
  audio_tracid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 VideoBookmark::_internal_audio_tracid() const {
  return audio_tracid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 VideoBookmark::audio_tracid() const {
  // @@protoc_insertion_point(field_get:VideoBookmark.audio_tracid)
  return _internal_audio_tracid();
}
inline void VideoBookmark::_internal_set_audio_tracid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  audio_tracid_ = value;
}
inline void VideoBookmark::set_audio_tracid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_audio_tracid(value);
  // @@protoc_insertion_point(field_set:VideoBookmark.audio_tracid)
}

// optional uint64 timedtext_tracid = 5;
inline bool VideoBookmark::_internal_has_timedtext_tracid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool VideoBookmark::has_timedtext_tracid() const {
  return _internal_has_timedtext_tracid();
}
inline void VideoBookmark::clear_timedtext_tracid() {
  timedtext_tracid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 VideoBookmark::_internal_timedtext_tracid() const {
  return timedtext_tracid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 VideoBookmark::timedtext_tracid() const {
  // @@protoc_insertion_point(field_get:VideoBookmark.timedtext_tracid)
  return _internal_timedtext_tracid();
}
inline void VideoBookmark::_internal_set_timedtext_tracid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  timedtext_tracid_ = value;
}
inline void VideoBookmark::set_timedtext_tracid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_timedtext_tracid(value);
  // @@protoc_insertion_point(field_set:VideoBookmark.timedtext_tracid)
}

// optional uint32 last_modified = 6;
inline bool VideoBookmark::_internal_has_last_modified() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool VideoBookmark::has_last_modified() const {
  return _internal_has_last_modified();
}
inline void VideoBookmark::clear_last_modified() {
  last_modified_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VideoBookmark::_internal_last_modified() const {
  return last_modified_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 VideoBookmark::last_modified() const {
  // @@protoc_insertion_point(field_get:VideoBookmark.last_modified)
  return _internal_last_modified();
}
inline void VideoBookmark::_internal_set_last_modified(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  last_modified_ = value;
}
inline void VideoBookmark::set_last_modified(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_modified(value);
  // @@protoc_insertion_point(field_set:VideoBookmark.last_modified)
}

// optional bool hide_from_watch_history = 7 [default = false];
inline bool VideoBookmark::_internal_has_hide_from_watch_history() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool VideoBookmark::has_hide_from_watch_history() const {
  return _internal_has_hide_from_watch_history();
}
inline void VideoBookmark::clear_hide_from_watch_history() {
  hide_from_watch_history_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool VideoBookmark::_internal_hide_from_watch_history() const {
  return hide_from_watch_history_;
}
inline bool VideoBookmark::hide_from_watch_history() const {
  // @@protoc_insertion_point(field_get:VideoBookmark.hide_from_watch_history)
  return _internal_hide_from_watch_history();
}
inline void VideoBookmark::_internal_set_hide_from_watch_history(bool value) {
  _has_bits_[0] |= 0x00000040u;
  hide_from_watch_history_ = value;
}
inline void VideoBookmark::set_hide_from_watch_history(bool value) {
  _internal_set_hide_from_watch_history(value);
  // @@protoc_insertion_point(field_set:VideoBookmark.hide_from_watch_history)
}

// optional bool hide_from_library = 8 [default = false];
inline bool VideoBookmark::_internal_has_hide_from_library() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool VideoBookmark::has_hide_from_library() const {
  return _internal_has_hide_from_library();
}
inline void VideoBookmark::clear_hide_from_library() {
  hide_from_library_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool VideoBookmark::_internal_hide_from_library() const {
  return hide_from_library_;
}
inline bool VideoBookmark::hide_from_library() const {
  // @@protoc_insertion_point(field_get:VideoBookmark.hide_from_library)
  return _internal_hide_from_library();
}
inline void VideoBookmark::_internal_set_hide_from_library(bool value) {
  _has_bits_[0] |= 0x00000080u;
  hide_from_library_ = value;
}
inline void VideoBookmark::set_hide_from_library(bool value) {
  _internal_set_hide_from_library(value);
  // @@protoc_insertion_point(field_set:VideoBookmark.hide_from_library)
}

// -------------------------------------------------------------------

// CVideo_SetVideoBookmarNotification

// repeated .VideoBookmark bookmarks = 1;
inline int CVideo_SetVideoBookmarNotification::_internal_bookmarks_size() const {
  return bookmarks_.size();
}
inline int CVideo_SetVideoBookmarNotification::bookmarks_size() const {
  return _internal_bookmarks_size();
}
inline void CVideo_SetVideoBookmarNotification::clear_bookmarks() {
  bookmarks_.Clear();
}
inline ::VideoBookmark* CVideo_SetVideoBookmarNotification::mutable_bookmarks(int index) {
  // @@protoc_insertion_point(field_mutable:CVideo_SetVideoBookmarNotification.bookmarks)
  return bookmarks_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::VideoBookmark >*
CVideo_SetVideoBookmarNotification::mutable_bookmarks() {
  // @@protoc_insertion_point(field_mutable_list:CVideo_SetVideoBookmarNotification.bookmarks)
  return &bookmarks_;
}
inline const ::VideoBookmark& CVideo_SetVideoBookmarNotification::_internal_bookmarks(int index) const {
  return bookmarks_.Get(index);
}
inline const ::VideoBookmark& CVideo_SetVideoBookmarNotification::bookmarks(int index) const {
  // @@protoc_insertion_point(field_get:CVideo_SetVideoBookmarNotification.bookmarks)
  return _internal_bookmarks(index);
}
inline ::VideoBookmark* CVideo_SetVideoBookmarNotification::_internal_add_bookmarks() {
  return bookmarks_.Add();
}
inline ::VideoBookmark* CVideo_SetVideoBookmarNotification::add_bookmarks() {
  // @@protoc_insertion_point(field_add:CVideo_SetVideoBookmarNotification.bookmarks)
  return _internal_add_bookmarks();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::VideoBookmark >&
CVideo_SetVideoBookmarNotification::bookmarks() const {
  // @@protoc_insertion_point(field_list:CVideo_SetVideoBookmarNotification.bookmarks)
  return bookmarks_;
}

// -------------------------------------------------------------------

// CVideo_GetVideoBookmarks_Request

// repeated uint32 appids = 1;
inline int CVideo_GetVideoBookmarks_Request::_internal_appids_size() const {
  return appids_.size();
}
inline int CVideo_GetVideoBookmarks_Request::appids_size() const {
  return _internal_appids_size();
}
inline void CVideo_GetVideoBookmarks_Request::clear_appids() {
  appids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CVideo_GetVideoBookmarks_Request::_internal_appids(int index) const {
  return appids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CVideo_GetVideoBookmarks_Request::appids(int index) const {
  // @@protoc_insertion_point(field_get:CVideo_GetVideoBookmarks_Request.appids)
  return _internal_appids(index);
}
inline void CVideo_GetVideoBookmarks_Request::set_appids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  appids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CVideo_GetVideoBookmarks_Request.appids)
}
inline void CVideo_GetVideoBookmarks_Request::_internal_add_appids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  appids_.Add(value);
}
inline void CVideo_GetVideoBookmarks_Request::add_appids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_appids(value);
  // @@protoc_insertion_point(field_add:CVideo_GetVideoBookmarks_Request.appids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CVideo_GetVideoBookmarks_Request::_internal_appids() const {
  return appids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CVideo_GetVideoBookmarks_Request::appids() const {
  // @@protoc_insertion_point(field_list:CVideo_GetVideoBookmarks_Request.appids)
  return _internal_appids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CVideo_GetVideoBookmarks_Request::_internal_mutable_appids() {
  return &appids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CVideo_GetVideoBookmarks_Request::mutable_appids() {
  // @@protoc_insertion_point(field_mutable_list:CVideo_GetVideoBookmarks_Request.appids)
  return _internal_mutable_appids();
}

// optional uint32 updated_since = 2;
inline bool CVideo_GetVideoBookmarks_Request::_internal_has_updated_since() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CVideo_GetVideoBookmarks_Request::has_updated_since() const {
  return _internal_has_updated_since();
}
inline void CVideo_GetVideoBookmarks_Request::clear_updated_since() {
  updated_since_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CVideo_GetVideoBookmarks_Request::_internal_updated_since() const {
  return updated_since_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CVideo_GetVideoBookmarks_Request::updated_since() const {
  // @@protoc_insertion_point(field_get:CVideo_GetVideoBookmarks_Request.updated_since)
  return _internal_updated_since();
}
inline void CVideo_GetVideoBookmarks_Request::_internal_set_updated_since(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  updated_since_ = value;
}
inline void CVideo_GetVideoBookmarks_Request::set_updated_since(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_updated_since(value);
  // @@protoc_insertion_point(field_set:CVideo_GetVideoBookmarks_Request.updated_since)
}

// -------------------------------------------------------------------

// CVideo_GetVideoBookmarks_Response

// repeated .VideoBookmark bookmarks = 1;
inline int CVideo_GetVideoBookmarks_Response::_internal_bookmarks_size() const {
  return bookmarks_.size();
}
inline int CVideo_GetVideoBookmarks_Response::bookmarks_size() const {
  return _internal_bookmarks_size();
}
inline void CVideo_GetVideoBookmarks_Response::clear_bookmarks() {
  bookmarks_.Clear();
}
inline ::VideoBookmark* CVideo_GetVideoBookmarks_Response::mutable_bookmarks(int index) {
  // @@protoc_insertion_point(field_mutable:CVideo_GetVideoBookmarks_Response.bookmarks)
  return bookmarks_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::VideoBookmark >*
CVideo_GetVideoBookmarks_Response::mutable_bookmarks() {
  // @@protoc_insertion_point(field_mutable_list:CVideo_GetVideoBookmarks_Response.bookmarks)
  return &bookmarks_;
}
inline const ::VideoBookmark& CVideo_GetVideoBookmarks_Response::_internal_bookmarks(int index) const {
  return bookmarks_.Get(index);
}
inline const ::VideoBookmark& CVideo_GetVideoBookmarks_Response::bookmarks(int index) const {
  // @@protoc_insertion_point(field_get:CVideo_GetVideoBookmarks_Response.bookmarks)
  return _internal_bookmarks(index);
}
inline ::VideoBookmark* CVideo_GetVideoBookmarks_Response::_internal_add_bookmarks() {
  return bookmarks_.Add();
}
inline ::VideoBookmark* CVideo_GetVideoBookmarks_Response::add_bookmarks() {
  // @@protoc_insertion_point(field_add:CVideo_GetVideoBookmarks_Response.bookmarks)
  return _internal_add_bookmarks();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::VideoBookmark >&
CVideo_GetVideoBookmarks_Response::bookmarks() const {
  // @@protoc_insertion_point(field_list:CVideo_GetVideoBookmarks_Response.bookmarks)
  return bookmarks_;
}

// -------------------------------------------------------------------

// CVideo_UnlockedH264_Notification

// optional bytes encryption_key = 1;
inline bool CVideo_UnlockedH264_Notification::_internal_has_encryption_key() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CVideo_UnlockedH264_Notification::has_encryption_key() const {
  return _internal_has_encryption_key();
}
inline void CVideo_UnlockedH264_Notification::clear_encryption_key() {
  encryption_key_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CVideo_UnlockedH264_Notification::encryption_key() const {
  // @@protoc_insertion_point(field_get:CVideo_UnlockedH264_Notification.encryption_key)
  return _internal_encryption_key();
}
inline void CVideo_UnlockedH264_Notification::set_encryption_key(const std::string& value) {
  _internal_set_encryption_key(value);
  // @@protoc_insertion_point(field_set:CVideo_UnlockedH264_Notification.encryption_key)
}
inline std::string* CVideo_UnlockedH264_Notification::mutable_encryption_key() {
  // @@protoc_insertion_point(field_mutable:CVideo_UnlockedH264_Notification.encryption_key)
  return _internal_mutable_encryption_key();
}
inline const std::string& CVideo_UnlockedH264_Notification::_internal_encryption_key() const {
  return encryption_key_.Get();
}
inline void CVideo_UnlockedH264_Notification::_internal_set_encryption_key(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  encryption_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CVideo_UnlockedH264_Notification::set_encryption_key(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  encryption_key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CVideo_UnlockedH264_Notification.encryption_key)
}
inline void CVideo_UnlockedH264_Notification::set_encryption_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  encryption_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CVideo_UnlockedH264_Notification.encryption_key)
}
inline void CVideo_UnlockedH264_Notification::set_encryption_key(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  encryption_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CVideo_UnlockedH264_Notification.encryption_key)
}
inline std::string* CVideo_UnlockedH264_Notification::_internal_mutable_encryption_key() {
  _has_bits_[0] |= 0x00000001u;
  return encryption_key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CVideo_UnlockedH264_Notification::release_encryption_key() {
  // @@protoc_insertion_point(field_release:CVideo_UnlockedH264_Notification.encryption_key)
  if (!_internal_has_encryption_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return encryption_key_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CVideo_UnlockedH264_Notification::set_allocated_encryption_key(std::string* encryption_key) {
  if (encryption_key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  encryption_key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), encryption_key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CVideo_UnlockedH264_Notification.encryption_key)
}

// -------------------------------------------------------------------

// CFovasVideo_ClientGetOPFSettings_Request

// optional uint32 app_id = 1;
inline bool CFovasVideo_ClientGetOPFSettings_Request::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CFovasVideo_ClientGetOPFSettings_Request::has_app_id() const {
  return _internal_has_app_id();
}
inline void CFovasVideo_ClientGetOPFSettings_Request::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CFovasVideo_ClientGetOPFSettings_Request::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CFovasVideo_ClientGetOPFSettings_Request::app_id() const {
  // @@protoc_insertion_point(field_get:CFovasVideo_ClientGetOPFSettings_Request.app_id)
  return _internal_app_id();
}
inline void CFovasVideo_ClientGetOPFSettings_Request::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  app_id_ = value;
}
inline void CFovasVideo_ClientGetOPFSettings_Request::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CFovasVideo_ClientGetOPFSettings_Request.app_id)
}

// optional uint32 client_cellid = 2;
inline bool CFovasVideo_ClientGetOPFSettings_Request::_internal_has_client_cellid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CFovasVideo_ClientGetOPFSettings_Request::has_client_cellid() const {
  return _internal_has_client_cellid();
}
inline void CFovasVideo_ClientGetOPFSettings_Request::clear_client_cellid() {
  client_cellid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CFovasVideo_ClientGetOPFSettings_Request::_internal_client_cellid() const {
  return client_cellid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CFovasVideo_ClientGetOPFSettings_Request::client_cellid() const {
  // @@protoc_insertion_point(field_get:CFovasVideo_ClientGetOPFSettings_Request.client_cellid)
  return _internal_client_cellid();
}
inline void CFovasVideo_ClientGetOPFSettings_Request::_internal_set_client_cellid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  client_cellid_ = value;
}
inline void CFovasVideo_ClientGetOPFSettings_Request::set_client_cellid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_client_cellid(value);
  // @@protoc_insertion_point(field_set:CFovasVideo_ClientGetOPFSettings_Request.client_cellid)
}

// -------------------------------------------------------------------

// CFovasVideo_ClientGetOPFSettings_Response

// optional uint32 app_id = 1;
inline bool CFovasVideo_ClientGetOPFSettings_Response::_internal_has_app_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CFovasVideo_ClientGetOPFSettings_Response::has_app_id() const {
  return _internal_has_app_id();
}
inline void CFovasVideo_ClientGetOPFSettings_Response::clear_app_id() {
  app_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CFovasVideo_ClientGetOPFSettings_Response::_internal_app_id() const {
  return app_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CFovasVideo_ClientGetOPFSettings_Response::app_id() const {
  // @@protoc_insertion_point(field_get:CFovasVideo_ClientGetOPFSettings_Response.app_id)
  return _internal_app_id();
}
inline void CFovasVideo_ClientGetOPFSettings_Response::_internal_set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  app_id_ = value;
}
inline void CFovasVideo_ClientGetOPFSettings_Response::set_app_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_app_id(value);
  // @@protoc_insertion_point(field_set:CFovasVideo_ClientGetOPFSettings_Response.app_id)
}

// optional string opf_settings = 2;
inline bool CFovasVideo_ClientGetOPFSettings_Response::_internal_has_opf_settings() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CFovasVideo_ClientGetOPFSettings_Response::has_opf_settings() const {
  return _internal_has_opf_settings();
}
inline void CFovasVideo_ClientGetOPFSettings_Response::clear_opf_settings() {
  opf_settings_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CFovasVideo_ClientGetOPFSettings_Response::opf_settings() const {
  // @@protoc_insertion_point(field_get:CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
  return _internal_opf_settings();
}
inline void CFovasVideo_ClientGetOPFSettings_Response::set_opf_settings(const std::string& value) {
  _internal_set_opf_settings(value);
  // @@protoc_insertion_point(field_set:CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
}
inline std::string* CFovasVideo_ClientGetOPFSettings_Response::mutable_opf_settings() {
  // @@protoc_insertion_point(field_mutable:CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
  return _internal_mutable_opf_settings();
}
inline const std::string& CFovasVideo_ClientGetOPFSettings_Response::_internal_opf_settings() const {
  return opf_settings_.Get();
}
inline void CFovasVideo_ClientGetOPFSettings_Response::_internal_set_opf_settings(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  opf_settings_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CFovasVideo_ClientGetOPFSettings_Response::set_opf_settings(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  opf_settings_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
}
inline void CFovasVideo_ClientGetOPFSettings_Response::set_opf_settings(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  opf_settings_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
}
inline void CFovasVideo_ClientGetOPFSettings_Response::set_opf_settings(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  opf_settings_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
}
inline std::string* CFovasVideo_ClientGetOPFSettings_Response::_internal_mutable_opf_settings() {
  _has_bits_[0] |= 0x00000001u;
  return opf_settings_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CFovasVideo_ClientGetOPFSettings_Response::release_opf_settings() {
  // @@protoc_insertion_point(field_release:CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
  if (!_internal_has_opf_settings()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return opf_settings_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CFovasVideo_ClientGetOPFSettings_Response::set_allocated_opf_settings(std::string* opf_settings) {
  if (opf_settings != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  opf_settings_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), opf_settings,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_steammessages_5fvideo_2esteamclient_2eproto
