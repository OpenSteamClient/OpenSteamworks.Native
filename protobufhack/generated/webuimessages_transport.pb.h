// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: webuimessages_transport.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_webuimessages_5ftransport_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_webuimessages_5ftransport_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
#include "steammessages_base.pb.h"
#include "webuimessages_base.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_webuimessages_5ftransport_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_webuimessages_5ftransport_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_webuimessages_5ftransport_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_webuimessages_5ftransport_2eproto_metadata_getter(int index);
class CTransportAuth_Authenticate_Request;
struct CTransportAuth_Authenticate_RequestDefaultTypeInternal;
extern CTransportAuth_Authenticate_RequestDefaultTypeInternal _CTransportAuth_Authenticate_Request_default_instance_;
class CTransportAuth_Authenticate_Response;
struct CTransportAuth_Authenticate_ResponseDefaultTypeInternal;
extern CTransportAuth_Authenticate_ResponseDefaultTypeInternal _CTransportAuth_Authenticate_Response_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CTransportAuth_Authenticate_Request* Arena::CreateMaybeMessage<::CTransportAuth_Authenticate_Request>(Arena*);
template<> ::CTransportAuth_Authenticate_Response* Arena::CreateMaybeMessage<::CTransportAuth_Authenticate_Response>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class CTransportAuth_Authenticate_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CTransportAuth_Authenticate_Request) */ {
 public:
  inline CTransportAuth_Authenticate_Request() : CTransportAuth_Authenticate_Request(nullptr) {}
  virtual ~CTransportAuth_Authenticate_Request();
  explicit constexpr CTransportAuth_Authenticate_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CTransportAuth_Authenticate_Request(const CTransportAuth_Authenticate_Request& from);
  CTransportAuth_Authenticate_Request(CTransportAuth_Authenticate_Request&& from) noexcept
    : CTransportAuth_Authenticate_Request() {
    *this = ::std::move(from);
  }

  inline CTransportAuth_Authenticate_Request& operator=(const CTransportAuth_Authenticate_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CTransportAuth_Authenticate_Request& operator=(CTransportAuth_Authenticate_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CTransportAuth_Authenticate_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CTransportAuth_Authenticate_Request* internal_default_instance() {
    return reinterpret_cast<const CTransportAuth_Authenticate_Request*>(
               &_CTransportAuth_Authenticate_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CTransportAuth_Authenticate_Request& a, CTransportAuth_Authenticate_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CTransportAuth_Authenticate_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CTransportAuth_Authenticate_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CTransportAuth_Authenticate_Request* New() const final {
    return CreateMaybeMessage<CTransportAuth_Authenticate_Request>(nullptr);
  }

  CTransportAuth_Authenticate_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CTransportAuth_Authenticate_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CTransportAuth_Authenticate_Request& from);
  void MergeFrom(const CTransportAuth_Authenticate_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CTransportAuth_Authenticate_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CTransportAuth_Authenticate_Request";
  }
  protected:
  explicit CTransportAuth_Authenticate_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_webuimessages_5ftransport_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuthKeyFieldNumber = 1,
  };
  // optional string auth_key = 1;
  bool has_auth_key() const;
  private:
  bool _internal_has_auth_key() const;
  public:
  void clear_auth_key();
  const std::string& auth_key() const;
  void set_auth_key(const std::string& value);
  void set_auth_key(std::string&& value);
  void set_auth_key(const char* value);
  void set_auth_key(const char* value, size_t size);
  std::string* mutable_auth_key();
  std::string* release_auth_key();
  void set_allocated_auth_key(std::string* auth_key);
  private:
  const std::string& _internal_auth_key() const;
  void _internal_set_auth_key(const std::string& value);
  std::string* _internal_mutable_auth_key();
  public:

  // @@protoc_insertion_point(class_scope:CTransportAuth_Authenticate_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr auth_key_;
  friend struct ::TableStruct_webuimessages_5ftransport_2eproto;
};
// -------------------------------------------------------------------

class CTransportAuth_Authenticate_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CTransportAuth_Authenticate_Response) */ {
 public:
  inline CTransportAuth_Authenticate_Response() : CTransportAuth_Authenticate_Response(nullptr) {}
  virtual ~CTransportAuth_Authenticate_Response();
  explicit constexpr CTransportAuth_Authenticate_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CTransportAuth_Authenticate_Response(const CTransportAuth_Authenticate_Response& from);
  CTransportAuth_Authenticate_Response(CTransportAuth_Authenticate_Response&& from) noexcept
    : CTransportAuth_Authenticate_Response() {
    *this = ::std::move(from);
  }

  inline CTransportAuth_Authenticate_Response& operator=(const CTransportAuth_Authenticate_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CTransportAuth_Authenticate_Response& operator=(CTransportAuth_Authenticate_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CTransportAuth_Authenticate_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CTransportAuth_Authenticate_Response* internal_default_instance() {
    return reinterpret_cast<const CTransportAuth_Authenticate_Response*>(
               &_CTransportAuth_Authenticate_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CTransportAuth_Authenticate_Response& a, CTransportAuth_Authenticate_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CTransportAuth_Authenticate_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CTransportAuth_Authenticate_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CTransportAuth_Authenticate_Response* New() const final {
    return CreateMaybeMessage<CTransportAuth_Authenticate_Response>(nullptr);
  }

  CTransportAuth_Authenticate_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CTransportAuth_Authenticate_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CTransportAuth_Authenticate_Response& from);
  void MergeFrom(const CTransportAuth_Authenticate_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CTransportAuth_Authenticate_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CTransportAuth_Authenticate_Response";
  }
  protected:
  explicit CTransportAuth_Authenticate_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_webuimessages_5ftransport_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CTransportAuth_Authenticate_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_webuimessages_5ftransport_2eproto;
};
// ===================================================================

class TransportAuth_Stub;

class TransportAuth : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline TransportAuth() {};
 public:
  virtual ~TransportAuth();

  typedef TransportAuth_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void Authenticate(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CTransportAuth_Authenticate_Request* request,
                       ::CTransportAuth_Authenticate_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(TransportAuth);
};

class TransportAuth_Stub : public TransportAuth {
 public:
  TransportAuth_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  TransportAuth_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~TransportAuth_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements TransportAuth ------------------------------------------

  void Authenticate(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CTransportAuth_Authenticate_Request* request,
                       ::CTransportAuth_Authenticate_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(TransportAuth_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CTransportAuth_Authenticate_Request

// optional string auth_key = 1;
inline bool CTransportAuth_Authenticate_Request::_internal_has_auth_key() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CTransportAuth_Authenticate_Request::has_auth_key() const {
  return _internal_has_auth_key();
}
inline void CTransportAuth_Authenticate_Request::clear_auth_key() {
  auth_key_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CTransportAuth_Authenticate_Request::auth_key() const {
  // @@protoc_insertion_point(field_get:CTransportAuth_Authenticate_Request.auth_key)
  return _internal_auth_key();
}
inline void CTransportAuth_Authenticate_Request::set_auth_key(const std::string& value) {
  _internal_set_auth_key(value);
  // @@protoc_insertion_point(field_set:CTransportAuth_Authenticate_Request.auth_key)
}
inline std::string* CTransportAuth_Authenticate_Request::mutable_auth_key() {
  // @@protoc_insertion_point(field_mutable:CTransportAuth_Authenticate_Request.auth_key)
  return _internal_mutable_auth_key();
}
inline const std::string& CTransportAuth_Authenticate_Request::_internal_auth_key() const {
  return auth_key_.Get();
}
inline void CTransportAuth_Authenticate_Request::_internal_set_auth_key(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  auth_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CTransportAuth_Authenticate_Request::set_auth_key(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  auth_key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CTransportAuth_Authenticate_Request.auth_key)
}
inline void CTransportAuth_Authenticate_Request::set_auth_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  auth_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CTransportAuth_Authenticate_Request.auth_key)
}
inline void CTransportAuth_Authenticate_Request::set_auth_key(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  auth_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CTransportAuth_Authenticate_Request.auth_key)
}
inline std::string* CTransportAuth_Authenticate_Request::_internal_mutable_auth_key() {
  _has_bits_[0] |= 0x00000001u;
  return auth_key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CTransportAuth_Authenticate_Request::release_auth_key() {
  // @@protoc_insertion_point(field_release:CTransportAuth_Authenticate_Request.auth_key)
  if (!_internal_has_auth_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return auth_key_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CTransportAuth_Authenticate_Request::set_allocated_auth_key(std::string* auth_key) {
  if (auth_key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  auth_key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), auth_key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CTransportAuth_Authenticate_Request.auth_key)
}

// -------------------------------------------------------------------

// CTransportAuth_Authenticate_Response

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_webuimessages_5ftransport_2eproto
